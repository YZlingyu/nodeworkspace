{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/**\n * Returns the value of object `o` at the given `path`.\n *\n * ####Example:\n *\n *     var obj = {\n *         comments: [\n *             { title: 'exciting!', _doc: { title: 'great!' }}\n *           , { title: 'number dos' }\n *         ]\n *     }\n *\n *     mpath.get('comments.0.title', o)         // 'exciting!'\n *     mpath.get('comments.0.title', o, '_doc') // 'great!'\n *     mpath.get('comments.title', o)           // ['exciting!', 'number dos']\n *\n *     // summary\n *     mpath.get(path, o)\n *     mpath.get(path, o, special)\n *     mpath.get(path, o, map)\n *     mpath.get(path, o, special, map)\n *\n * @param {String} path\n * @param {Object} o\n * @param {String} [special] When this property name is present on any object in the path, walking will continue on the value of this property.\n * @param {Function} [map] Optional function which receives each individual found value. The value returned from `map` is used in the original values place.\n */\n\nexports.get = function (path, o, special, map) {\n  var lookup;\n\n  if ('function' == typeof special) {\n    if (special.length < 2) {\n      map = special;\n      special = undefined;\n    } else {\n      lookup = special;\n      special = undefined;\n    }\n  }\n\n  map || (map = K);\n\n  var parts = 'string' == typeof path\n    ? path.split('.')\n    : path\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  var obj = o\n    , part;\n\n  for (var i = 0; i < parts.length; ++i) {\n    part = parts[i];\n\n    if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n      // reading a property from the array items\n      var paths = parts.slice(i);\n\n      return obj.map(function (item) {\n        return item\n          ? exports.get(paths, item, special || lookup, map)\n          : map(undefined);\n      });\n    }\n\n    if (lookup) {\n      obj = lookup(obj, part);\n    } else {\n      obj = special && obj[special]\n        ? obj[special][part]\n        : obj[part];\n    }\n\n    if (!obj) return map(obj);\n  }\n\n  return map(obj);\n}\n\n/**\n * Sets the `val` at the given `path` of object `o`.\n *\n * @param {String} path\n * @param {Anything} val\n * @param {Object} o\n * @param {String} [special] When this property name is present on any object in the path, walking will continue on the value of this property.\n * @param {Function} [map] Optional function which is passed each individual value before setting it. The value returned from `map` is used in the original values place.\n */\n\nexports.set = function (path, val, o, special, map, _copying) {\n  var lookup;\n\n  if ('function' == typeof special) {\n    if (special.length < 2) {\n      map = special;\n      special = undefined;\n    } else {\n      lookup = special;\n      special = undefined;\n    }\n  }\n\n  map || (map = K);\n\n  var parts = 'string' == typeof path\n    ? path.split('.')\n    : path\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  if (null == o) return;\n\n  // the existance of $ in a path tells us if the user desires\n  // the copying of an array instead of setting each value of\n  // the array to the one by one to matching positions of the\n  // current array.\n  var copy = _copying || /\\$/.test(path)\n    , obj = o\n    , part\n\n  for (var i = 0, len = parts.length - 1; i < len; ++i) {\n    part = parts[i];\n\n    if ('$' == part) {\n      if (i == len - 1) {\n        break;\n      } else {\n        continue;\n      }\n    }\n\n    if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n      var paths = parts.slice(i);\n      if (!copy && Array.isArray(val)) {\n        for (var j = 0; j < obj.length && j < val.length; ++j) {\n          // assignment of single values of array\n          exports.set(paths, val[j], obj[j], special || lookup, map, copy);\n        }\n      } else {\n        for (var j = 0; j < obj.length; ++j) {\n          // assignment of entire value\n          exports.set(paths, val, obj[j], special || lookup, map, copy);\n        }\n      }\n      return;\n    }\n\n    if (lookup) {\n      obj = lookup(obj, part);\n    } else {\n      obj = special && obj[special]\n        ? obj[special][part]\n        : obj[part];\n    }\n\n    if (!obj) return;\n  }\n\n  // process the last property of the path\n\n  part = parts[len];\n\n  // use the special property if exists\n  if (special && obj[special]) {\n    obj = obj[special];\n  }\n\n  // set the value on the last branch\n  if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n    if (!copy && Array.isArray(val)) {\n      for (var item, j = 0; j < obj.length && j < val.length; ++j) {\n        item = obj[j];\n        if (item) {\n          if (lookup) {\n            lookup(item, part, map(val[j]));\n          } else {\n            if (item[special]) item = item[special];\n            item[part] = map(val[j]);\n          }\n        }\n      }\n    } else {\n      for (var j = 0; j < obj.length; ++j) {\n        item = obj[j];\n        if (item) {\n          if (lookup) {\n            lookup(item, part, map(val));\n          } else {\n            if (item[special]) item = item[special];\n            item[part] = map(val);\n          }\n        }\n      }\n    }\n  } else {\n    if (lookup) {\n      lookup(obj, part, map(val));\n    } else {\n      obj[part] = map(val);\n    }\n  }\n}\n\n/*!\n * Returns the value passed to it.\n */\n\nfunction K (v) {\n  return v;\n}\n"]}