{"version":3,"sources":["kew.js"],"names":[],"mappings":"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","file":"kew-compiled.js","sourcesContent":["\n/**\n * An object representing a \"promise\" for a future value\n *\n * @param {?function(T, ?)=} onSuccess a function to handle successful\n *     resolution of this promise\n * @param {?function(!Error, ?)=} onFail a function to handle failed\n *     resolution of this promise\n * @constructor\n * @template T\n */\nfunction Promise(onSuccess, onFail) {\n  this.promise = this\n  this._isPromise = true\n  this._successFn = onSuccess\n  this._failFn = onFail\n  this._scope = this\n  this._boundArgs = null\n  this._hasContext = false\n  this._nextContext = undefined\n  this._currentContext = undefined\n}\n\n/**\n * @param {function()} callback\n */\nfunction nextTick (callback) {\n  callback()\n}\n\nif (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n  nextTick = process.nextTick\n}\n\n/**\n * All callback execution should go through this function.  While the\n * implementation below is simple, it can be replaced with more sophisticated\n * implementations that enforce QoS on the event loop.\n *\n * @param {Promise} defer\n * @param {Function} callback\n * @param {Object|undefined} scope\n * @param {Array} args\n */\nfunction nextTickCallback (defer, callback, scope, args) {\n  try {\n    defer.resolve(callback.apply(scope, args))\n  } catch (thrown) {\n    defer.reject(thrown)\n  }\n}\n\n/**\n * Used for accessing the nextTick function from outside the kew module.\n *\n * @return {Function}\n */\nfunction getNextTickFunction () {\n  return nextTick\n}\n\n/**\n * Used for overriding the nextTick function from outside the kew module so that\n * the user can plug and play lower level schedulers\n * @param {!Function} fn\n */\nfunction setNextTickFunction (fn) {\n  nextTick = fn\n}\n\n/**\n * Keep track of the number of promises that are rejected along side\n * the number of rejected promises we call _failFn on so we can look\n * for leaked rejections.\n * @constructor\n */\nfunction PromiseStats() {\n  /** @type {number} */\n  this.errorsEmitted = 0\n\n  /** @type {number} */\n  this.errorsHandled = 0\n}\n\nvar stats = new PromiseStats()\n\nPromise.prototype._handleError = function () {\n  if (!this._errorHandled) {\n    stats.errorsHandled++\n    this._errorHandled = true\n  }\n}\n\n/**\n * Specify that the current promise should have a specified context\n * @param  {*} context context\n * @private\n */\nPromise.prototype._useContext = function (context) {\n  this._nextContext = this._currentContext = context\n  this._hasContext = true\n  return this\n}\n\nPromise.prototype.clearContext = function () {\n  this._hasContext = false\n  this._nextContext = undefined\n  return this\n}\n\n/**\n * Set the context for all promise handlers to follow\n *\n * NOTE(dpup): This should be considered deprecated.  It does not do what most\n * people would expect.  The context will be passed as a second argument to all\n * subsequent callbacks.\n *\n * @param {*} context An arbitrary context\n */\nPromise.prototype.setContext = function (context) {\n  this._nextContext = context\n  this._hasContext = true\n  return this\n}\n\n/**\n * Get the context for a promise\n * @return {*} the context set by setContext\n */\nPromise.prototype.getContext = function () {\n  return this._nextContext\n}\n\n/**\n * Resolve this promise with a specified value\n *\n * @param {*=} data\n */\nPromise.prototype.resolve = function (data) {\n  if (this._error || this._hasData) throw new Error(\"Unable to resolve or reject the same promise twice\")\n\n  var i\n  if (data && isPromise(data)) {\n    this._child = data\n    if (this._promises) {\n      for (i = 0; i < this._promises.length; i += 1) {\n        data._chainPromise(this._promises[i])\n      }\n      delete this._promises\n    }\n\n    if (this._onComplete) {\n      for (i = 0; i < this._onComplete.length; i+= 1) {\n        data.fin(this._onComplete[i])\n      }\n      delete this._onComplete\n    }\n  } else if (data && isPromiseLike(data)) {\n    data.then(\n      function(data) { this.resolve(data) }.bind(this),\n      function(err) { this.reject(err) }.bind(this)\n    )\n  } else {\n    this._hasData = true\n    this._data = data\n\n    if (this._onComplete) {\n      for (i = 0; i < this._onComplete.length; i++) {\n        this._onComplete[i]()\n      }\n    }\n\n    if (this._promises) {\n      for (i = 0; i < this._promises.length; i += 1) {\n        this._promises[i]._useContext(this._nextContext)\n        this._promises[i]._withInput(data)\n      }\n      delete this._promises\n    }\n  }\n}\n\n/**\n * Reject this promise with an error\n *\n * @param {!Error} e\n */\nPromise.prototype.reject = function (e) {\n  if (this._error || this._hasData) throw new Error(\"Unable to resolve or reject the same promise twice\")\n\n  var i\n  this._error = e\n  stats.errorsEmitted++\n\n  if (this._ended) {\n    this._handleError()\n    process.nextTick(function onPromiseThrow() {\n      throw e\n    })\n  }\n\n  if (this._onComplete) {\n    for (i = 0; i < this._onComplete.length; i++) {\n      this._onComplete[i]()\n    }\n  }\n\n  if (this._promises) {\n    this._handleError()\n    for (i = 0; i < this._promises.length; i += 1) {\n      this._promises[i]._useContext(this._nextContext)\n      this._promises[i]._withError(e)\n    }\n    delete this._promises\n  }\n}\n\n/**\n * Provide a callback to be called whenever this promise successfully\n * resolves. Allows for an optional second callback to handle the failure\n * case.\n *\n * @param {?function(this:void, T, ?): RESULT|undefined} onSuccess\n * @param {?function(this:void, !Error, ?): RESULT=} onFail\n * @return {!Promise.<RESULT>} returns a new promise with the output of the onSuccess or\n *     onFail handler\n * @template RESULT\n */\nPromise.prototype.then = function (onSuccess, onFail) {\n  var promise = new Promise(onSuccess, onFail)\n  if (this._nextContext) promise._useContext(this._nextContext)\n\n  if (this._child) this._child._chainPromise(promise)\n  else this._chainPromise(promise)\n\n  return promise\n}\n\n/**\n * Provide a callback to be called whenever this promise successfully\n * resolves. The callback will be executed in the context of the provided scope.\n *\n * @param {function(this:SCOPE, ...): RESULT} onSuccess\n * @param {SCOPE} scope Object whose context callback will be executed in.\n * @param {...*} var_args Additional arguments to be passed to the promise callback.\n * @return {!Promise.<RESULT>} returns a new promise with the output of the onSuccess\n * @template SCOPE, RESULT\n */\nPromise.prototype.thenBound = function (onSuccess, scope, var_args) {\n  var promise = new Promise(onSuccess)\n  if (this._nextContext) promise._useContext(this._nextContext)\n\n  promise._scope = scope\n  if (arguments.length > 2) {\n    promise._boundArgs = Array.prototype.slice.call(arguments, 2)\n  }\n\n  // Chaining must happen after setting args and scope since it may fire callback.\n  if (this._child) this._child._chainPromise(promise)\n  else this._chainPromise(promise)\n\n  return promise\n}\n\n/**\n * Provide a callback to be called whenever this promise is rejected\n *\n * @param {function(this:void, !Error, ?)} onFail\n * @return {!Promise.<T>} returns a new promise with the output of the onFail handler\n */\nPromise.prototype.fail = function (onFail) {\n  return this.then(null, onFail)\n}\n\n/**\n * Provide a callback to be called whenever this promise is rejected.\n * The callback will be executed in the context of the provided scope.\n *\n * @param {function(this:SCOPE, ...)} onFail\n * @param {SCOPE} scope Object whose context callback will be executed in.\n * @param {...?} var_args\n * @return {!Promise.<T>} returns a new promise with the output of the onSuccess\n * @template SCOPE\n */\nPromise.prototype.failBound = function (onFail, scope, var_args) {\n  var promise = new Promise(null, onFail)\n  if (this._nextContext) promise._useContext(this._nextContext)\n\n  promise._scope = scope\n  if (arguments.length > 2) {\n    promise._boundArgs = Array.prototype.slice.call(arguments, 2)\n  }\n\n  // Chaining must happen after setting args and scope since it may fire callback.\n  if (this._child) this._child._chainPromise(promise)\n  else this._chainPromise(promise)\n\n  return promise\n}\n\n/**\n * Spread a promises outputs to the functions arguments.\n * @param {?function(this:void, ...): RESULT|undefined} onSuccess\n * @return {!Promise.<RESULT>} returns a new promise with the output of the onSuccess or\n *     onFail handler\n * @template RESULT\n */\nPromise.prototype.spread = function (onSuccess) {\n  return this.then(allInternal)\n  .then(function (array) {\n    return onSuccess.apply(null, array)\n  })\n}\n\n/**\n * Spread a promises outputs to the functions arguments.\n * @param {function(this:SCOPE, ...): RESULT} onSuccess\n * @param {SCOPE} scope Object whose context callback will be executed in.\n * @param {...*} var_args Additional arguments to be passed to the promise callback.\n * @return {!Promise.<RESULT>} returns a new promise with the output of the onSuccess\n * @template SCOPE, RESULT\n */\nPromise.prototype.spreadBound = function (onSuccess, scope, var_args) {\n  var args = Array.prototype.slice.call(arguments, 2)\n  return this.then(allInternal)\n  .then(function (array) {\n    return onSuccess.apply(scope, args.concat(array))\n  })\n}\n\n/**\n * Provide a callback to be called whenever this promise is either resolved\n * or rejected.\n *\n * @param {function()} onComplete\n * @return {!Promise.<T>} returns the current promise\n */\nPromise.prototype.fin = function (onComplete) {\n  if (this._hasData || this._error) {\n    onComplete()\n    return this\n  }\n\n  if (this._child) {\n    this._child.fin(onComplete)\n  } else {\n    if (!this._onComplete) this._onComplete = [onComplete]\n    else this._onComplete.push(onComplete)\n  }\n\n  return this\n}\n\n/**\n * Mark this promise as \"ended\". If the promise is rejected, this will throw an\n * error in whatever scope it happens to be in\n *\n * @return {!Promise.<T>} returns the current promise\n * @deprecated Prefer done(), because it's consistent with Q.\n */\nPromise.prototype.end = function () {\n  this._end()\n  return this\n}\n\n\n/**\n * Mark this promise as \"ended\".\n * @private\n */\nPromise.prototype._end = function () {\n  if (this._error) {\n    this._handleError()\n    throw this._error\n  }\n  this._ended = true\n  return this\n}\n\n/**\n * Close the promise. Any errors after this completes will be thrown to the global handler.\n *\n * @param {?function(this:void, T, ?)=} onSuccess a function to handle successful\n *     resolution of this promise\n * @param {?function(this:void, !Error, ?)=} onFailure a function to handle failed\n *     resolution of this promise\n * @return {void}\n */\nPromise.prototype.done = function (onSuccess, onFailure) {\n  var self = this\n  if (onSuccess || onFailure) {\n    self = self.then(onSuccess, onFailure)\n  }\n  self._end()\n}\n\n/**\n * Return a new promise that behaves the same as the current promise except\n * that it will be rejected if the current promise does not get fulfilled\n * after a certain amount of time.\n *\n * @param {number} timeoutMs The timeout threshold in msec\n * @param {string=} timeoutMsg error message\n * @return {!Promise.<T>} a new promise with timeout\n */\n Promise.prototype.timeout = function (timeoutMs, timeoutMsg) {\n  var deferred = new Promise()\n  var isTimeout = false\n\n  var timeout = setTimeout(function() {\n    deferred.reject(new Error(timeoutMsg || 'Promise timeout after ' + timeoutMs + ' ms.'))\n    isTimeout = true\n  }, timeoutMs)\n\n  this.then(function (data) {\n    if (!isTimeout) {\n      clearTimeout(timeout)\n      deferred.resolve(data)\n    }\n  },\n  function (err) {\n    if (!isTimeout) {\n      clearTimeout(timeout)\n      deferred.reject(err)\n    }\n  })\n\n  return deferred.promise\n}\n\n/**\n * Attempt to resolve this promise with the specified input\n *\n * @param {*} data the input\n */\nPromise.prototype._withInput = function (data) {\n  if (this._successFn) {\n    this._nextTick(this._successFn, [data, this._currentContext])\n  } else {\n    this.resolve(data)\n  }\n\n  // context is no longer needed\n  delete this._currentContext\n}\n\n/**\n * Attempt to reject this promise with the specified error\n *\n * @param {!Error} e\n * @private\n */\nPromise.prototype._withError = function (e) {\n  if (this._failFn) {\n    this._nextTick(this._failFn, [e, this._currentContext])\n  } else {\n    this.reject(e)\n  }\n\n  // context is no longer needed\n  delete this._currentContext\n}\n\n/**\n * Calls a function in the correct scope, and includes bound arguments.\n * @param {Function} fn\n * @param {Array} args\n * @private\n */\nPromise.prototype._nextTick = function (fn, args) {\n  if (this._boundArgs) {\n    args = this._boundArgs.concat(args)\n  }\n  nextTick(nextTickCallback.bind(null, this, fn, this._scope, args))\n}\n\n/**\n * Chain a promise to the current promise\n *\n * @param {!Promise} promise the promise to chain\n * @private\n */\nPromise.prototype._chainPromise = function (promise) {\n  var i\n  if (this._hasContext) promise._useContext(this._nextContext)\n\n  if (this._child) {\n    this._child._chainPromise(promise)\n  } else if (this._hasData) {\n    promise._withInput(this._data)\n  } else if (this._error) {\n    // We can't rely on _withError() because it's called on the chained promises\n    // and we need to use the source's _errorHandled state\n    this._handleError()\n    promise._withError(this._error)\n  } else if (!this._promises) {\n    this._promises = [promise]\n  } else {\n    this._promises.push(promise)\n  }\n}\n\n/**\n * Utility function used for creating a node-style resolver\n * for deferreds\n *\n * @param {!Promise} deferred a promise that looks like a deferred\n * @param {Error=} err an optional error\n * @param {*=} data optional data\n */\nfunction resolver(deferred, err, data) {\n  if (err) deferred.reject(err)\n  else deferred.resolve(data)\n}\n\n/**\n * Creates a node-style resolver for a deferred by wrapping\n * resolver()\n *\n * @return {function(?Error, *)} node-style callback\n */\nPromise.prototype.makeNodeResolver = function () {\n  return resolver.bind(null, this)\n}\n\n/**\n * Return true iff the given object is a promise of this library.\n *\n * Because kew's API is slightly different than other promise libraries,\n * it's important that we have a test for its promise type. If you want\n * to test for a more general A+ promise, you should do a cap test for\n * the features you want.\n *\n * @param {*} obj The object to test\n * @return {boolean} Whether the object is a promise\n */\nfunction isPromise(obj) {\n  return !!obj._isPromise\n}\n\n/**\n * Return true iff the given object is a promise-like object, e.g. appears to\n * implement Promises/A+ specification\n *\n * @param {*} obj The object to test\n * @return {boolean} Whether the object is a promise-like object\n */\nfunction isPromiseLike(obj) {\n  return (typeof obj === 'object' || typeof obj === 'function') &&\n    typeof obj.then === 'function'\n}\n\n/**\n * Static function which creates and resolves a promise immediately\n *\n * @param {T} data data to resolve the promise with\n * @return {!Promise.<T>}\n * @template T\n */\nfunction resolve(data) {\n  var promise = new Promise()\n  promise.resolve(data)\n  return promise\n}\n\n/**\n * Static function which creates and rejects a promise immediately\n *\n * @param {!Error} e error to reject the promise with\n * @return {!Promise}\n */\nfunction reject(e) {\n  var promise = new Promise()\n  promise.reject(e)\n  return promise\n}\n\n/**\n * Replace an element in an array with a new value. Used by .all() to\n * call from .then()\n *\n * @param {!Array} arr\n * @param {number} idx\n * @param {*} val\n * @return {*} the val that's being injected into the array\n */\nfunction replaceEl(arr, idx, val) {\n  arr[idx] = val\n  return val\n}\n\n/**\n * Replace an element in an array as it is resolved with its value.\n * Used by .allSettled().\n *\n * @param {!Array} arr\n * @param {number} idx\n * @param {*} value The value from a resolved promise.\n * @return {*} the data that's being passed in\n */\nfunction replaceElFulfilled(arr, idx, value) {\n  arr[idx] = {\n    state: 'fulfilled',\n    value: value\n  }\n  return value\n}\n\n/**\n * Replace an element in an array as it is rejected with the reason.\n * Used by .allSettled().\n *\n * @param {!Array} arr\n * @param {number} idx\n * @param {*} reason The reason why the original promise is rejected\n * @return {*} the data that's being passed in\n */\nfunction replaceElRejected(arr, idx, reason) {\n  arr[idx] = {\n    state: 'rejected',\n    reason: reason\n  }\n  return reason\n}\n\n/**\n * Takes in an array of promises or literals and returns a promise which returns\n * an array of values when all have resolved. If any fail, the promise fails.\n *\n * @param {!Array.<!Promise>} promises\n * @return {!Promise.<!Array>}\n */\nfunction all(promises) {\n  if (arguments.length != 1 || !Array.isArray(promises)) {\n    promises = Array.prototype.slice.call(arguments, 0)\n  }\n  return allInternal(promises)\n}\n\n/**\n * A version of all() that does not accept var_args\n *\n * @param {!Array.<!Promise>} promises\n * @return {!Promise.<!Array>}\n */\nfunction allInternal(promises) {\n  if (!promises.length) return resolve([])\n\n  var outputs = []\n  var finished = false\n  var promise = new Promise()\n  var counter = promises.length\n\n  for (var i = 0; i < promises.length; i += 1) {\n    if (!promises[i] || !isPromiseLike(promises[i])) {\n      outputs[i] = promises[i]\n      counter -= 1\n    } else {\n      promises[i].then(replaceEl.bind(null, outputs, i))\n      .then(function decrementAllCounter() {\n        counter--\n        if (!finished && counter === 0) {\n          finished = true\n          promise.resolve(outputs)\n        }\n      }, function onAllError(e) {\n        if (!finished) {\n          finished = true\n          promise.reject(e)\n        }\n      })\n    }\n  }\n\n  if (counter === 0 && !finished) {\n    finished = true\n    promise.resolve(outputs)\n  }\n\n  return promise\n}\n\n/**\n * Takes in an array of promises or values and returns a promise that is\n * fulfilled with an array of state objects when all have resolved or\n * rejected. If a promise is resolved, its corresponding state object is\n * {state: 'fulfilled', value: Object}; whereas if a promise is rejected, its\n * corresponding state object is {state: 'rejected', reason: Object}.\n *\n * @param {!Array} promises or values\n * @return {!Promise.<!Array>} Promise fulfilled with state objects for each input\n */\nfunction allSettled(promises) {\n  if (!Array.isArray(promises)) {\n    throw Error('The input to \"allSettled()\" should be an array of Promise or values')\n  }\n  if (!promises.length) return resolve([])\n\n  var outputs = []\n  var promise = new Promise()\n  var counter = promises.length\n\n  for (var i = 0; i < promises.length; i += 1) {\n    if (!promises[i] || !isPromiseLike(promises[i])) {\n      replaceElFulfilled(outputs, i, promises[i])\n      if ((--counter) === 0) promise.resolve(outputs)\n    } else {\n      promises[i]\n        .then(replaceElFulfilled.bind(null, outputs, i), replaceElRejected.bind(null, outputs, i))\n        .then(function () {\n          if ((--counter) === 0) promise.resolve(outputs)\n        })\n    }\n  }\n\n  return promise\n}\n\n/**\n * Takes an array of results and spreads them to the arguments of a function.\n * @param {!Array} array\n * @param {!Function} fn\n */\nfunction spread(array, fn) {\n  resolve(array).spread(fn)\n}\n\n/**\n * Create a new Promise which looks like a deferred\n *\n * @return {!Promise}\n */\nfunction defer() {\n  return new Promise()\n}\n\n/**\n * Return a promise which will wait a specified number of ms to resolve\n *\n * @param {*} delayMsOrVal A delay (in ms) if this takes one argument, or ther\n *     return value if it takes two.\n * @param {number=} opt_delayMs\n * @return {!Promise}\n */\nfunction delay(delayMsOrVal, opt_delayMs) {\n  var returnVal = undefined\n  var delayMs = delayMsOrVal\n  if (typeof opt_delayMs != 'undefined') {\n    delayMs = opt_delayMs\n    returnVal = delayMsOrVal\n  }\n\n  if (typeof delayMs != 'number') {\n    throw new Error('Bad delay value ' + delayMs)\n  }\n\n  var defer = new Promise()\n  setTimeout(function onDelay() {\n    defer.resolve(returnVal)\n  }, delayMs)\n  return defer\n}\n\n/**\n * Returns a promise that has the same result as `this`, but fulfilled\n * after at least ms milliseconds\n * @param {number} ms\n */\nPromise.prototype.delay = function (ms) {\n  return this.then(function (val) {\n    return delay(val, ms)\n  })\n}\n\n/**\n * Return a promise which will evaluate the function fn in a future turn with\n * the provided args\n *\n * @param {function(...)} fn\n * @param {...*} var_args a variable number of arguments\n * @return {!Promise}\n */\nfunction fcall(fn, var_args) {\n  var rootArgs = Array.prototype.slice.call(arguments, 1)\n  var defer = new Promise()\n  nextTick(nextTickCallback.bind(null, defer, fn, undefined, rootArgs))\n  return defer\n}\n\n\n/**\n * Returns a promise that will be invoked with the result of a node style\n * callback. All args to fn should be given except for the final callback arg\n *\n * @param {function(...)} fn\n * @param {...*} var_args a variable number of arguments\n * @return {!Promise}\n */\nfunction nfcall(fn, var_args) {\n  // Insert an undefined argument for scope and let bindPromise() do the work.\n  var args = Array.prototype.slice.call(arguments, 0)\n  args.splice(1, 0, undefined)\n  return ncall.apply(undefined, args)\n}\n\n\n/**\n * Like `nfcall`, but permits passing a `this` context for the call.\n *\n * @param {function(...)} fn\n * @param {Object} scope\n * @param {...*} var_args\n * @return {!Promise}\n */\nfunction ncall(fn, scope, var_args) {\n  return bindPromise.apply(null, arguments)()\n}\n\n\n/**\n * Binds a function to a scope with an optional number of curried arguments. Attaches\n * a node style callback as the last argument and returns a promise\n *\n * @param {function(...)} fn\n * @param {Object} scope\n * @param {...*} var_args a variable number of arguments\n * @return {function(...)}: !Promise}\n */\nfunction bindPromise(fn, scope, var_args) {\n  var rootArgs = Array.prototype.slice.call(arguments, 2)\n  return function onBoundPromise(var_args) {\n    var defer = new Promise()\n    try {\n      fn.apply(scope, rootArgs.concat(Array.prototype.slice.call(arguments, 0), defer.makeNodeResolver()))\n    } catch (e) {\n      defer.reject(e)\n    }\n    return defer\n  }\n}\n\nmodule.exports = {\n  all: all,\n  bindPromise: bindPromise,\n  defer: defer,\n  delay: delay,\n  fcall: fcall,\n  isPromise: isPromise,\n  isPromiseLike: isPromiseLike,\n  ncall: ncall,\n  nfcall: nfcall,\n  resolve: resolve,\n  reject: reject,\n  spread: spread,\n  stats: stats,\n  allSettled: allSettled,\n  Promise: Promise,\n  getNextTickFunction: getNextTickFunction,\n  setNextTickFunction: setNextTickFunction,\n}\n"]}