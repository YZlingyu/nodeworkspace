{"version":3,"sources":["defer.js"],"names":[],"mappings":"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","file":"defer-compiled.js","sourcesContent":["var Q = require('../kew')\n\n// create a deferred which returns a promise\nexports.testDeferredResolve = function (test) {\n  var val = \"ok\"\n  var defer = Q.defer()\n\n  defer.promise\n    .then(function (data) {\n      test.equal(data, val, \"Promise successfully returned\")\n      test.done()\n    })\n\n  setTimeout(function () {\n    defer.resolve(val)\n  }, 50)\n}\n\n// make sure a deferred can only resolve once\nexports.testDeferredResolveOnce = function (test) {\n  var defer = Q.defer()\n\n  try {\n    defer.resolve(true)\n    defer.resolve(true)\n    test.fail(\"Unable to resolve the same deferred twice\")\n  } catch (e) {\n  }\n\n  test.done()\n}\n\n// create a deferred which returns a failed promise\nexports.testDeferredReject = function (test) {\n  var err = new Error(\"hello\")\n  var defer = Q.defer()\n\n  defer.promise\n    .fail(function (e) {\n      test.equal(e, err, \"Promise successfully failed\")\n      test.done()\n    })\n\n  setTimeout(function () {\n    defer.reject(err)\n  }, 50)\n}\n\n// make sure a deferred can only reject once\nexports.testDeferredRejectOnce = function (test) {\n  var defer = Q.defer()\n\n  try {\n    defer.reject(new Error(\"nope 1\"))\n    defer.reject(new Error(\"nope 2\"))\n    test.fail(\"Unable to reject the same deferred twice\")\n  } catch (e) {\n  }\n\n  test.done()\n}\n\n// make sure a deferred can only reject once\nexports.testDeferAndRejectFail = function (test) {\n  var defer\n\n  try {\n    defer = Q.defer()\n    defer.reject(new Error(\"nope 1\"))\n    defer.resolve(true)\n    test.fail(\"Unable to reject and resolve the same deferred\")\n  } catch (e) {\n    test.ok(true, \"Unable to reject and resolve same deferred\")\n  }\n\n  try {\n    defer = Q.defer()\n    defer.resolve(true)\n    defer.reject(new Error(\"nope 1\"))\n    test.fail(\"Unable to reject and resolve the same deferred\")\n  } catch (e) {\n    test.ok(true, \"Unable to reject and resolve same deferred\")\n  }\n\n  test.done()\n}\n\n// create a deferred which resolves with a node-standard callback\nexports.testDeferredResolverSuccess = function (test) {\n  var val = \"ok\"\n  var defer = Q.defer()\n  var callback = defer.makeNodeResolver()\n\n  defer.promise\n    .then(function (data) {\n      test.equal(data, val, \"Promise successfully returned\")\n      test.done()\n    })\n\n  setTimeout(function () {\n    callback(null, val)\n  }, 50)\n}\n\n// create a deferred which rejects with a node-standard callback\nexports.testDeferredResolverSuccess = function (test) {\n  var err = new Error(\"hello\")\n  var defer = Q.defer()\n  var callback = defer.makeNodeResolver()\n\n  defer.promise\n    .fail(function (e) {\n      test.equal(e, err, \"Promise successfully failed\")\n      test.done()\n    })\n\n  setTimeout(function () {\n    callback(err)\n  }, 50)\n}"]}