{"version":3,"sources":["static.js"],"names":[],"mappings":"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","file":"static-compiled.js","sourcesContent":["var Q = require('../kew')\nvar originalQ = require('q')\n\n// create a promise from a literal\nexports.testQResolve = function (test) {\n  var val = \"ok\"\n\n  Q.resolve(val)\n    .then(function (data) {\n      test.equal(data, val, \"Promise successfully returned\")\n      test.done()\n    })\n}\n\n// create a failed promise from an error literal\nexports.testQReject = function (test) {\n  var err = new Error(\"hello\")\n\n  Q.reject(err)\n    .fail(function (e) {\n      test.equal(e, err, \"Promise successfully failed\")\n      test.done()\n    })\n}\n\n// Test Q.stats\nexports.testQStatistics = function (test) {\n  var err = new Error(\"hello\")\n\n  var errorsEmitted = Q.stats.errorsEmitted\n  var errorsHandled = Q.stats.errorsHandled\n\n  var rejected = Q.reject(err)\n  test.equal(errorsEmitted + 1, Q.stats.errorsEmitted, \"One additional error emitted\")\n  test.equal(errorsHandled, Q.stats.errorsHandled, \"Error hasn't been handled yet\")\n\n  rejected.fail(function (e) {\n    test.equal(e, err, \"Promise successfully failed\")\n    test.equal(errorsEmitted + 1, Q.stats.errorsEmitted, \"One additional error emitted\")\n    test.equal(errorsHandled + 1, Q.stats.errorsHandled, \"One additional error handled\")\n  })\n\n  rejected.fail(function (e) {\n    test.equal(e, err, \"Promise successfully failed\")\n    test.equal(errorsEmitted + 1, Q.stats.errorsEmitted, \"One additional error emitted\")\n    test.equal(errorsHandled + 1, Q.stats.errorsHandled, \"Only count error handling once\")\n  })\n  test.done()\n}\n\nexports.testQDeferredStatistics = function (test) {\n  var err = new Error(\"hello\")\n\n  var errorsEmitted = Q.stats.errorsEmitted\n  var errorsHandled = Q.stats.errorsHandled\n\n  var deferred = Q.defer()\n\n  deferred.fail(function (e) {\n    test.equal(e, err, \"Promise successfully failed\")\n    test.equal(errorsEmitted + 1, Q.stats.errorsEmitted, \"One additional error emitted\")\n    test.equal(errorsHandled + 1, Q.stats.errorsHandled, \"One additional error handled\")\n    test.done()\n  })\n\n  var rejected = deferred.reject(err)\n\n}\n\n// test Q.all with an empty array\nexports.testQEmptySuccess = function (test) {\n  var promises = []\n\n  // make sure all results come back\n  Q.all(promises)\n    .then(function (data) {\n      test.equal(data.length, 0, \"No records should be returned\")\n      test.done()\n    })\n}\n\n// test Q.all with only literals\nexports.testQAllLiteralsSuccess = function (test) {\n  var vals = [3, 2, 1]\n  var promises = []\n\n  promises.push(vals[0])\n  promises.push(vals[1])\n  promises.push(vals[2])\n\n  // make sure all results come back\n  Q.all(promises)\n    .then(function (data) {\n      test.equal(data[0], vals[0], \"First val should be returned\")\n      test.equal(data[1], vals[1], \"Second val should be returned\")\n      test.equal(data[2], vals[2], \"Third val should be returned\")\n      test.done()\n    })\n}\n\n// test Q.all with only promises\nexports.testQAllPromisesSuccess = function (test) {\n  var vals = [3, 2, 1]\n  var promises = []\n\n  promises.push(Q.resolve(vals[0]))\n  promises.push(Q.resolve(vals[1]))\n  promises.push(Q.resolve(vals[2]))\n\n  // make sure all results come back\n  Q.all(promises)\n    .then(function (data) {\n      test.equal(data[0], vals[0], \"First val should be returned\")\n      test.equal(data[1], vals[1], \"Second val should be returned\")\n      test.equal(data[2], vals[2], \"Third val should be returned\")\n      test.done()\n    })\n}\n\n// create a promise which waits for other promises\nexports.testQAllAssortedSuccess = function (test) {\n  var vals = [3, 2, 1]\n  var promises = []\n\n  // a promise that returns the value immediately\n  promises.push(Q.resolve(vals[0]))\n\n  // the value itself\n  promises.push(vals[1])\n\n  // a promise which returns in 10ms\n  var defer = Q.defer()\n  promises.push(defer.promise)\n  setTimeout(function () {\n    defer.resolve(vals[2])\n  }, 10)\n\n  // make sure all results come back\n  Q.all(promises)\n    .then(function (data) {\n      test.equal(data[0], vals[0], \"First val should be returned\")\n      test.equal(data[1], vals[1], \"Second val should be returned\")\n      test.equal(data[2], vals[2], \"Third val should be returned\")\n      test.done()\n    })\n}\n\n// test Q.all with a failing promise\nexports.testQAllError = function (test) {\n  var vals = [3, 2, 1]\n  var err = new Error(\"hello\")\n  var promises = []\n\n  promises.push(vals[0])\n  promises.push(vals[1])\n\n  var defer = Q.defer()\n  promises.push(defer.promise)\n  defer.reject(err)\n\n  // make sure all results come back\n  Q.all(promises)\n    .fail(function (e) {\n      test.equal(e, err)\n      test.done()\n    })\n}\n\n// test all var_args\nexports.testAllVarArgs = function (test) {\n  var promises = ['a', 'b']\n\n  Q.all.apply(Q, promises)\n    .then(function (results) {\n      test.equal(promises[0], results[0], \"First element should be returned\")\n      test.equal(promises[1], results[1], \"Second element should be returned\")\n      test.done()\n    })\n}\n\n// test all array\nexports.testAllArray = function (test) {\n  var promises = ['a', 'b']\n\n  Q.all(promises)\n    .then(function (results) {\n      test.equal(promises[0], results[0], \"First element should be returned\")\n      test.equal(promises[1], results[1], \"Second element should be returned\")\n      test.done()\n    })\n}\n\nexports.testAllIsPromiseLike = function(test) {\n  var promises = ['a', originalQ('b')]\n\n  Q.all(promises)\n    .then(function (results) {\n      test.equal(promises[0], 'a', \"First element should be returned\")\n      test.equal(promises[1], 'b', \"Second element should be returned\")\n      test.done()\n    })\n}\n\n// test delay\nexports.testDelay = function (test) {\n  var val = \"Hello, there\"\n  var startTime = Date.now()\n\n  Q.resolve(val)\n    .then(function (v) {\n      return Q.delay(v, 1000)\n    })\n    .then(function (returnVal) {\n      test.equal(returnVal, val, \"Val should be passed through\")\n\n      var diff = Date.now() - startTime\n\n      // clock granularity may be off by 15\n      test.equal(diff >= 1000 - 15, true, \"Should have waited a second. Actually waited \" + diff)\n      test.done()\n    })\n}\n\n// test fcall\nexports.testFcall = function (test) {\n  var calledYet = false\n  var adder = function (a, b) {\n    calledYet = true\n    return a + b\n  }\n\n  Q.fcall(adder, 2, 3)\n    .then(function (val) {\n      test.equal(val, 5, \"Val should be 2 + 3\")\n      test.done()\n    })\n  test.ok(!calledYet, \"fcall() should delay function invocation until next tick\")\n}\n\n// test fcall\nexports.testFcallError = function (test) {\n  var error = function () {\n    throw new Error('my error')\n  }\n\n  Q.fcall(error)\n    .then(function (val) {\n      test.fail('fcall should throw exception')\n    }, function (err) {\n      test.equal('my error', err.message)\n    })\n    .then(function () {\n      test.done()\n    })\n}\n\n// test fcall works when fn returns a promise\nexports.testFcallGivenPromise = function (test) {\n  var calledYet = false\n  var eventualAdd = function (a, b) {\n    calledYet = true\n    return Q.resolve(a + b)\n  }\n\n  Q.fcall(eventualAdd, 2, 3)\n    .then(function (val) {\n      test.equal(val, 5, \"Val should be 2 + 3\")\n      test.done()\n    })\n  test.ok(!calledYet, \"fcall() should delay function invocation until next tick\")\n}\n\n// test nfcall, successful case\nexports.testNfcall = function (test) {\n  var nodeStyleEventualAdder = function (a, b, callback) {\n    setTimeout(function () {\n      callback(undefined, a + b)\n    }, 2)\n  }\n\n  Q.nfcall(nodeStyleEventualAdder, 2, 3)\n    .then(function (val) {\n      test.equal(val, 5, \"Val should be 2 + 3\")\n      test.done()\n    })\n}\n\n// test nfcall, error case\nexports.testNfcallErrors = function (test) {\n  var err = new Error('fail')\n\n  var nodeStyleFailer = function (a, b, callback) {\n    setTimeout(function() {\n      callback(err)\n    }, 2)\n  }\n\n  Q.nfcall(nodeStyleFailer, 2, 3)\n    .fail(function (e) {\n      test.equal(e, err, \"Promise successfully failed\")\n      test.done()\n    })\n}\n\n// test fcall\nexports.testNFcallErrorSync = function (test) {\n  var error = function () {\n    throw new Error('my error')\n  }\n\n  Q.nfcall(error)\n    .then(function (val) {\n      test.fail('nfcall should throw exception')\n    }, function (err) {\n      test.equal('my error', err.message)\n    })\n    .then(function () {\n      test.done()\n    })\n}\n\nexports.testNcall = function (test) {\n  function TwoAdder() {\n    this.a = 2\n  }\n  TwoAdder.prototype.add = function (num, callback) {\n    setTimeout(function () {\n      callback(null, this.a + num)\n    }.bind(this), 10)\n  }\n  var adder = new TwoAdder()\n  Q.ncall(adder.add, adder, 3)\n    .then(function (val) {\n      test.equal(val, 5, \"Val should be 2 + 3\")\n      test.done()\n    })\n}\n\n// test binding a callback function with a promise\nexports.testBindPromise = function (test) {\n  var adder = function (a, b, callback) {\n    callback(null, a + b)\n  }\n\n  var boundAdder = Q.bindPromise(adder, null, 2)\n  boundAdder(3)\n    .then(function (val) {\n      test.equal(val, 5, \"Val should be 2 + 3\")\n      test.done()\n    })\n}\n\n// test checking whether something is a promise\nexports.testIsPromise = function (test) {\n  var kewPromise = Q.defer()\n  var qPromise = originalQ(10)\n  var kewLikeObject = {\n    promise: function () {\n      return 'not a promise sucka!'\n    },\n    then: function (fn) {\n      fn('like a promise, brah!')\n    }\n  }\n  test.equal(Q.isPromise(kewPromise), true, 'A Kew promise is a promise')\n  test.equal(Q.isPromise(qPromise), false, 'A Q promise is not a promise')\n  test.equal(Q.isPromise(kewLikeObject), false, 'A pretend promise is not a promise')\n  test.done()\n}\n\n// test checking whether something is a promise-like object\nexports.testIsPromiseLike = function (test) {\n  var kewPromise = Q.defer()\n  var qPromise = originalQ(10)\n  var kewLikeObject = {\n    promise: function () {\n      return 'not a promise sucka!'\n    },\n    then: function (fn) {\n      fn('like a promise, brah!')\n    }\n  }\n  var kewLikeFunction = function() {}\n  kewLikeFunction.then = function(fn) {\n    fn('like a promise, brah!')\n  }\n  test.equal(Q.isPromiseLike(kewPromise), true, 'A Kew promise is promise-like')\n  test.equal(Q.isPromiseLike(qPromise), true, 'A Q promise is promise-like')\n  test.equal(Q.isPromiseLike(kewLikeObject), true, 'A pretend promise is a promise-like')\n  test.equal(Q.isPromiseLike(kewLikeFunction), true, 'A pretend function promise is a promise-like')\n\n  test.done()\n}\n"]}