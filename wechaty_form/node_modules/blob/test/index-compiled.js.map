{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["var Blob = require('../');\nvar expect = require('expect.js');\n\ndescribe('blob', function() {\n  if (!Blob) {\n    it('should not have a blob or a blob builder in the global namespace, or blob should not be a constructor function if the module exports false', function() {\n      try {\n        var ab = (new Uint8Array(5)).buffer;\n        global.Blob([ab]);\n        expect().fail('Blob shouldn\\'t be constructable');\n      } catch (e) {}\n\n      var BlobBuilder = global.BlobBuilder\n        || global.WebKitBlobBuilder\n        || global.MSBlobBuilder\n        || global.MozBlobBuilder;\n      expect(BlobBuilder).to.be(undefined);\n    });\n  } else {\n    it('should encode a proper sized blob when given a string argument', function() {\n      var b = new Blob(['hi']);\n      expect(b.size).to.be(2);\n    });\n\n    it('should encode a blob with proper size when given two strings as arguments', function() {\n      var b = new Blob(['hi', 'hello']);\n      expect(b.size).to.be(7);\n    });\n\n    it('should encode arraybuffers with right content', function(done) {\n      var ary = new Uint8Array(5);\n      for (var i = 0; i < 5; i++) ary[i] = i;\n      var b = new Blob([ary.buffer]);\n      var fr = new FileReader();\n      fr.onload = function() {\n        var newAry = new Uint8Array(this.result);\n        for (var i = 0; i < 5; i++) expect(newAry[i]).to.be(i);\n        done();\n      };\n      fr.readAsArrayBuffer(b);\n    });\n\n    it('should encode typed arrays with right content', function(done) {\n      var ary = new Uint8Array(5);\n      for (var i = 0; i < 5; i++) ary[i] = i;\n      var b = new Blob([ary]);\n      var fr = new FileReader();\n      fr.onload = function() {\n        var newAry = new Uint8Array(this.result);\n        for (var i = 0; i < 5; i++) expect(newAry[i]).to.be(i);\n        done();\n      };\n      fr.readAsArrayBuffer(b);\n    });\n\n    it('should encode sliced typed arrays with right content', function(done) {\n      var ary = new Uint8Array(5);\n      for (var i = 0; i < 5; i++) ary[i] = i;\n      var b = new Blob([ary.subarray(2)]);\n      var fr = new FileReader();\n      fr.onload = function() {\n        var newAry = new Uint8Array(this.result);\n        for (var i = 0; i < 3; i++) expect(newAry[i]).to.be(i + 2);\n        done();\n      };\n      fr.readAsArrayBuffer(b);\n    });\n\n    it('should encode with blobs', function(done) {\n      var ary = new Uint8Array(5);\n      for (var i = 0; i < 5; i++) ary[i] = i;\n      var b = new Blob([new Blob([ary.buffer])]);\n      var fr = new FileReader();\n      fr.onload = function() {\n        var newAry = new Uint8Array(this.result);\n        for (var i = 0; i < 5; i++) expect(newAry[i]).to.be(i);\n        done();\n      };\n      fr.readAsArrayBuffer(b);\n    });\n\n    it('should enode mixed contents to right size', function() {\n      var ary = new Uint8Array(5);\n      for (var i = 0; i < 5; i++) ary[i] = i;\n      var b = new Blob([ary.buffer, 'hello']);\n      expect(b.size).to.be(10);\n    });\n\n    it('should accept mime type', function() {\n      var b = new Blob(['hi', 'hello'], { type: 'text/html' });\n      expect(b.type).to.be('text/html');\n    });\n  }\n});\n"]}