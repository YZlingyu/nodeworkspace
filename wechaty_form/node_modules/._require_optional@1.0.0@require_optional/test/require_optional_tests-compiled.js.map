{"version":3,"sources":["require_optional_tests.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,QAAR,CAAb;AAAA,IACE,mBAAmB,QAAQ,KAAR,CADrB;;AAGA,SAAS,kBAAT,EAA6B,YAAW;AACtC,WAAS,mBAAT,EAA8B,YAAW;AACvC,OAAG,qCAAH,EAA0C,YAAW;AACnD,UAAI,UAAU,iBAAiB,aAAjB,CAAd;AACA,aAAO,EAAP,CAAU,OAAV;AACD,KAHD;;AAKA,OAAG,4CAAH,EAAiD,YAAW;AAC1D,UAAI;AACF,yBAAiB,IAAjB;AACD,OAFD,CAEE,OAAM,CAAN,EAAS;AACT,eAAO,KAAP,CAAa,2BAAb,EAA0C,EAAE,IAA5C;AACA;AACD;;AAED,aAAO,EAAP,CAAU,KAAV;AACD,KATD;;AAWA,OAAG,4CAAH,EAAiD,YAAW;AAC1D,aAAO,KAAP,CAAa,SAAb,EAAwB,iBAAiB,cAAjB,CAAxB;AACD,KAFD;AAGD,GApBD;;AAsBA,WAAS,8BAAT,EAAyC,YAAW;AAClD,OAAG,qCAAH,EAA0C,YAAW;AACnD,UAAI,OAAO,iBAAiB,uBAAjB,CAAX;AACA,aAAO,EAAP,CAAU,IAAV;AACD,KAHD;AAID,GALD;;AAOA,WAAS,mBAAT,EAA8B,YAAW;AACvC,OAAG,oCAAH,EAAyC,YAAW;AAClD,aAAO,KAAP,CAAa,KAAb,EAAoB,iBAAiB,MAAjB,CAAwB,IAAxB,CAApB;AACA,aAAO,KAAP,CAAa,IAAb,EAAmB,iBAAiB,MAAjB,CAAwB,aAAxB,CAAnB;AACA,aAAO,KAAP,CAAa,IAAb,EAAmB,iBAAiB,MAAjB,CAAwB,uBAAxB,CAAnB;AACA,aAAO,KAAP,CAAa,KAAb,EAAoB,iBAAiB,MAAjB,CAAwB,cAAxB,CAApB;AACD,KALD;AAMD,GAPD;AAQD,CAtCD","file":"require_optional_tests-compiled.js","sourcesContent":["var assert = require('assert'),\n  require_optional = require('../');\n\ndescribe('Require Optional', function() {\n  describe('top level require', function() {\n    it('should correctly require co library', function() {\n      var promise = require_optional('es6-promise');\n      assert.ok(promise);\n    });\n\n    it('should fail to require es6-promise library', function() {\n      try {\n        require_optional('co');\n      } catch(e) {\n        assert.equal('OPTIONAL_MODULE_NOT_FOUND', e.code);\n        return;\n      }\n\n      assert.ok(false);\n    });\n\n    it('should ignore optional library not defined', function() {\n      assert.equal(undefined, require_optional('es6-promise2'));\n    });\n  });\n\n  describe('internal module file require', function() {\n    it('should correctly require co library', function() {\n      var Long = require_optional('bson/lib/bson/long.js');\n      assert.ok(Long);\n    });\n  });\n\n  describe('top level resolve', function() {\n    it('should correctly use exists method', function() {\n      assert.equal(false, require_optional.exists('co'));\n      assert.equal(true, require_optional.exists('es6-promise'));\n      assert.equal(true, require_optional.exists('bson/lib/bson/long.js'));\n      assert.equal(false, require_optional.exists('es6-promise2'));\n    });\n  });\n});\n"]}