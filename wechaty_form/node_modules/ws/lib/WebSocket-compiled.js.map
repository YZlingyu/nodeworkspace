{"version":3,"sources":["WebSocket.js"],"names":[],"mappings":"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","file":"WebSocket-compiled.js","sourcesContent":["/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst crypto = require('crypto');\nconst Ultron = require('ultron');\nconst https = require('https');\nconst http = require('http');\nconst url = require('url');\n\nconst PerMessageDeflate = require('./PerMessageDeflate');\nconst EventTarget = require('./EventTarget');\nconst Extensions = require('./Extensions');\nconst constants = require('./Constants');\nconst Receiver = require('./Receiver');\nconst Sender = require('./Sender');\n\nconst protocolVersions = [8, 13];\nconst closeTimeout = 30 * 1000; // Allow 30 seconds to terminate the connection cleanly.\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {String} address The URL to which to connect\n   * @param {(String|String[])} protocols The subprotocols\n   * @param {Object} options Connection options\n   */\n  constructor (address, protocols, options) {\n    super();\n\n    if (!protocols) {\n      protocols = [];\n    } else if (typeof protocols === 'string') {\n      protocols = [protocols];\n    } else if (!Array.isArray(protocols)) {\n      options = protocols;\n      protocols = [];\n    }\n\n    this.readyState = WebSocket.CONNECTING;\n    this.bytesReceived = 0;\n    this.extensions = {};\n    this.protocol = '';\n\n    this._binaryType = constants.BINARY_TYPES[0];\n    this._finalize = this.finalize.bind(this);\n    this._finalizeCalled = false;\n    this._closeMessage = null;\n    this._closeTimer = null;\n    this._closeCode = null;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n    this._ultron = null;\n\n    if (Array.isArray(address)) {\n      initAsServerClient.call(this, address[0], address[1], address[2], options);\n    } else {\n      initAsClient.call(this, address, protocols, options);\n    }\n  }\n\n  get CONNECTING () { return WebSocket.CONNECTING; }\n  get CLOSING () { return WebSocket.CLOSING; }\n  get CLOSED () { return WebSocket.CLOSED; }\n  get OPEN () { return WebSocket.OPEN; }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount () {\n    var amount = 0;\n\n    if (this._socket) {\n      amount = this._socket.bufferSize + this._sender.bufferedBytes;\n    }\n    return amount;\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the required\n   * default \"blob\" type (instead we define a custom \"nodebuffer\" type).\n   *\n   * @type {String}\n   */\n  get binaryType () {\n    return this._binaryType;\n  }\n\n  set binaryType (type) {\n    if (constants.BINARY_TYPES.indexOf(type) < 0) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver.binaryType = type;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @private\n   */\n  setSocket (socket, head) {\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    this._receiver = new Receiver(this.extensions, this.maxPayload, this.binaryType);\n    this._sender = new Sender(socket, this.extensions);\n    this._ultron = new Ultron(socket);\n    this._socket = socket;\n\n    // socket cleanup handlers\n    this._ultron.on('close', this._finalize);\n    this._ultron.on('error', this._finalize);\n    this._ultron.on('end', this._finalize);\n\n    // ensure that the head is added to the receiver\n    if (head && head.length > 0) {\n      socket.unshift(head);\n      head = null;\n    }\n\n    // subsequent packets are pushed to the receiver\n    this._ultron.on('data', (data) => {\n      this.bytesReceived += data.length;\n      this._receiver.add(data);\n    });\n\n    // receiver event handlers\n    this._receiver.onmessage = (data, flags) => this.emit('message', data, flags);\n    this._receiver.onping = (data, flags) => {\n      this.pong(data, !this._isServer, true);\n      this.emit('ping', data, flags);\n    };\n    this._receiver.onpong = (data, flags) => this.emit('pong', data, flags);\n    this._receiver.onclose = (code, reason) => {\n      this._closeMessage = reason;\n      this._closeCode = code;\n      this.close(code, reason);\n    };\n    this._receiver.onerror = (error, code) => {\n      // close the connection when the receiver reports a HyBi error code\n      this.close(code, '');\n      this.emit('error', error);\n    };\n\n    // sender event handlers\n    this._sender.onerror = (error) => {\n      this.close(1002, '');\n      this.emit('error', error);\n    };\n\n    this.readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Clean up and release internal resources.\n   *\n   * @param {(Boolean|Error)} Indicates whether or not an error occurred\n   * @private\n   */\n  finalize (error) {\n    if (this._finalizeCalled) return;\n\n    this.readyState = WebSocket.CLOSING;\n    this._finalizeCalled = true;\n\n    clearTimeout(this._closeTimer);\n    this._closeTimer = null;\n\n    //\n    // If the connection was closed abnormally (with an error), or if the close\n    // control frame was malformed or not received then the close code must be\n    // 1006.\n    //\n    if (error) this._closeCode = 1006;\n\n    if (this._socket) {\n      this._ultron.destroy();\n      this._socket.on('error', function onerror () {\n        this.destroy();\n      });\n\n      if (!error) this._socket.end();\n      else this._socket.destroy();\n\n      this._socket = null;\n      this._ultron = null;\n    }\n\n    if (this._sender) {\n      this._sender = this._sender.onerror = null;\n    }\n\n    if (this._receiver) {\n      this._receiver.cleanup(() => this.emitClose());\n      this._receiver = null;\n    } else {\n      this.emitClose();\n    }\n  }\n\n  /**\n   * Emit the `close` event.\n   *\n   * @private\n   */\n  emitClose () {\n    this.readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode || 1006, this._closeMessage || '');\n\n    if (this.extensions[PerMessageDeflate.extensionName]) {\n      this.extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this.extensions = null;\n\n    this.removeAllListeners();\n    this.on('error', constants.NOOP); // Catch all errors after this.\n  }\n\n  /**\n   * Pause the socket stream.\n   *\n   * @public\n   */\n  pause () {\n    if (this.readyState !== WebSocket.OPEN) throw new Error('not opened');\n\n    this._socket.pause();\n  }\n\n  /**\n   * Resume the socket stream\n   *\n   * @public\n   */\n  resume () {\n    if (this.readyState !== WebSocket.OPEN) throw new Error('not opened');\n\n    this._socket.resume();\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   * @param {Number} code Status code explaining why the connection is closing\n   * @param {String} data A string explaining why the connection is closing\n   * @public\n   */\n  close (code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      if (this._req && !this._req.aborted) {\n        this._req.abort();\n        this.emit('error', new Error('closed before the connection is established'));\n        this.finalize(true);\n      }\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (this._closeCode && this._socket) this._socket.end();\n      return;\n    }\n\n    this.readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      if (err) this.emit('error', err);\n\n      if (this._socket) {\n        if (this._closeCode) this._socket.end();\n        //\n        // Ensure that the connection is cleaned up even when the closing\n        // handshake fails.\n        //\n        clearTimeout(this._closeTimer);\n        this._closeTimer = setTimeout(this._finalize, closeTimeout, true);\n      }\n    });\n  }\n\n  /**\n   * Send a ping message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Boolean} failSilently Indicates whether or not to throw if `readyState` isn't `OPEN`\n   * @public\n   */\n  ping (data, mask, failSilently) {\n    if (this.readyState !== WebSocket.OPEN) {\n      if (failSilently) return;\n      throw new Error('not opened');\n    }\n\n    if (typeof data === 'number') data = data.toString();\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || constants.EMPTY_BUFFER, mask);\n  }\n\n  /**\n   * Send a pong message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Boolean} failSilently Indicates whether or not to throw if `readyState` isn't `OPEN`\n   * @public\n   */\n  pong (data, mask, failSilently) {\n    if (this.readyState !== WebSocket.OPEN) {\n      if (failSilently) return;\n      throw new Error('not opened');\n    }\n\n    if (typeof data === 'number') data = data.toString();\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || constants.EMPTY_BUFFER, mask);\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when data is written out\n   * @public\n   */\n  send (data, options, cb) {\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (this.readyState !== WebSocket.OPEN) {\n      if (cb) cb(new Error('not opened'));\n      else throw new Error('not opened');\n      return;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    const opts = Object.assign({\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true\n    }, options);\n\n    if (!this.extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || constants.EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate () {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      if (this._req && !this._req.aborted) {\n        this._req.abort();\n        this.emit('error', new Error('closed before the connection is established'));\n        this.finalize(true);\n      }\n      return;\n    }\n\n    this.finalize(true);\n  }\n}\n\nWebSocket.CONNECTING = 0;\nWebSocket.OPEN = 1;\nWebSocket.CLOSING = 2;\nWebSocket.CLOSED = 3;\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    /**\n     * Return the listener of the event.\n     *\n     * @return {(Function|undefined)} The event listener or `undefined`\n     * @public\n     */\n    get () {\n      const listeners = this.listeners(method);\n      for (var i = 0; i < listeners.length; i++) {\n        if (listeners[i]._listener) return listeners[i]._listener;\n      }\n    },\n    /**\n     * Add a listener for the event.\n     *\n     * @param {Function} listener The listener to add\n     * @public\n     */\n    set (listener) {\n      const listeners = this.listeners(method);\n      for (var i = 0; i < listeners.length; i++) {\n        //\n        // Remove only the listeners added via `addEventListener`.\n        //\n        if (listeners[i]._listener) this.removeListener(method, listeners[i]);\n      }\n      this.addEventListener(method, listener);\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = EventTarget.addEventListener;\nWebSocket.prototype.removeEventListener = EventTarget.removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket server client.\n *\n * @param {http.IncomingMessage} req The request object\n * @param {net.Socket} socket The network socket between the server and client\n * @param {Buffer} head The first packet of the upgraded stream\n * @param {Object} options WebSocket attributes\n * @param {Number} options.protocolVersion The WebSocket protocol version\n * @param {Object} options.extensions The negotiated extensions\n * @param {Number} options.maxPayload The maximum allowed message size\n * @param {String} options.protocol The chosen subprotocol\n * @private\n */\nfunction initAsServerClient (req, socket, head, options) {\n  this.protocolVersion = options.protocolVersion;\n  this.extensions = options.extensions;\n  this.maxPayload = options.maxPayload;\n  this.protocol = options.protocol;\n\n  this.upgradeReq = req;\n  this._isServer = true;\n\n  this.setSocket(socket, head);\n}\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {String} address The URL to which to connect\n * @param {String[]} protocols The list of subprotocols\n * @param {Object} options Connection options\n * @param {String} options.protocol Value of the `Sec-WebSocket-Protocol` header\n * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable permessage-deflate\n * @param {String} options.localAddress Local interface to bind for network connections\n * @param {Number} options.protocolVersion Value of the `Sec-WebSocket-Version` header\n * @param {Object} options.headers An object containing request headers\n * @param {String} options.origin Value of the `Origin` or `Sec-WebSocket-Origin` header\n * @param {http.Agent} options.agent Use the specified Agent\n * @param {String} options.host Value of the `Host` header\n * @param {Number} options.family IP address family to use during hostname lookup (4 or 6).\n * @param {Function} options.checkServerIdentity A function to validate the server hostname\n * @param {Boolean} options.rejectUnauthorized Verify or not the server certificate\n * @param {String} options.passphrase The passphrase for the private key or pfx\n * @param {String} options.ciphers The ciphers to use or exclude\n * @param {(String|String[]|Buffer|Buffer[])} options.cert The certificate key\n * @param {(String|String[]|Buffer|Buffer[])} options.key The private key\n * @param {(String|Buffer)} options.pfx The private key, certificate, and CA certs\n * @param {(String|String[]|Buffer|Buffer[])} options.ca Trusted certificates\n * @private\n */\nfunction initAsClient (address, protocols, options) {\n  options = Object.assign({\n    protocolVersion: protocolVersions[1],\n    protocol: protocols.join(','),\n    perMessageDeflate: true,\n    localAddress: null,\n    headers: null,\n    family: null,\n    origin: null,\n    agent: null,\n    host: null,\n\n    //\n    // SSL options.\n    //\n    checkServerIdentity: null,\n    rejectUnauthorized: null,\n    passphrase: null,\n    ciphers: null,\n    cert: null,\n    key: null,\n    pfx: null,\n    ca: null\n  }, options);\n\n  if (protocolVersions.indexOf(options.protocolVersion) === -1) {\n    throw new Error(\n      `unsupported protocol version: ${options.protocolVersion} ` +\n      `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  this.protocolVersion = options.protocolVersion;\n  this._isServer = false;\n  this.url = address;\n\n  const serverUrl = url.parse(address);\n  const isUnixSocket = serverUrl.protocol === 'ws+unix:';\n\n  if (!serverUrl.host && (!isUnixSocket || !serverUrl.path)) {\n    throw new Error('invalid url');\n  }\n\n  const isSecure = serverUrl.protocol === 'wss:' || serverUrl.protocol === 'https:';\n  const key = crypto.randomBytes(16).toString('base64');\n  const httpObj = isSecure ? https : http;\n\n  //\n  // Prepare extensions.\n  //\n  const extensionsOffer = {};\n  var perMessageDeflate;\n\n  if (options.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      options.perMessageDeflate !== true ? options.perMessageDeflate : {},\n      false\n    );\n    extensionsOffer[PerMessageDeflate.extensionName] = perMessageDeflate.offer();\n  }\n\n  const requestOptions = {\n    port: serverUrl.port || (isSecure ? 443 : 80),\n    host: serverUrl.hostname,\n    path: '/',\n    headers: {\n      'Sec-WebSocket-Version': options.protocolVersion,\n      'Sec-WebSocket-Key': key,\n      'Connection': 'Upgrade',\n      'Upgrade': 'websocket'\n    }\n  };\n\n  if (options.headers) Object.assign(requestOptions.headers, options.headers);\n  if (Object.keys(extensionsOffer).length) {\n    requestOptions.headers['Sec-WebSocket-Extensions'] = Extensions.format(extensionsOffer);\n  }\n  if (options.protocol) {\n    requestOptions.headers['Sec-WebSocket-Protocol'] = options.protocol;\n  }\n  if (options.origin) {\n    if (options.protocolVersion < 13) {\n      requestOptions.headers['Sec-WebSocket-Origin'] = options.origin;\n    } else {\n      requestOptions.headers.Origin = options.origin;\n    }\n  }\n  if (options.host) requestOptions.headers.Host = options.host;\n  if (serverUrl.auth) requestOptions.auth = serverUrl.auth;\n\n  if (options.localAddress) requestOptions.localAddress = options.localAddress;\n  if (options.family) requestOptions.family = options.family;\n\n  if (isUnixSocket) {\n    const parts = serverUrl.path.split(':');\n\n    requestOptions.socketPath = parts[0];\n    requestOptions.path = parts[1];\n  } else if (serverUrl.path) {\n    //\n    // Make sure that path starts with `/`.\n    //\n    if (serverUrl.path.charAt(0) !== '/') {\n      requestOptions.path = `/${serverUrl.path}`;\n    } else {\n      requestOptions.path = serverUrl.path;\n    }\n  }\n\n  var agent = options.agent;\n\n  //\n  // A custom agent is required for these options.\n  //\n  if (\n    options.rejectUnauthorized != null ||\n    options.checkServerIdentity ||\n    options.passphrase ||\n    options.ciphers ||\n    options.cert ||\n    options.key ||\n    options.pfx ||\n    options.ca\n  ) {\n    if (options.passphrase) requestOptions.passphrase = options.passphrase;\n    if (options.ciphers) requestOptions.ciphers = options.ciphers;\n    if (options.cert) requestOptions.cert = options.cert;\n    if (options.key) requestOptions.key = options.key;\n    if (options.pfx) requestOptions.pfx = options.pfx;\n    if (options.ca) requestOptions.ca = options.ca;\n    if (options.checkServerIdentity) {\n      requestOptions.checkServerIdentity = options.checkServerIdentity;\n    }\n    if (options.rejectUnauthorized != null) {\n      requestOptions.rejectUnauthorized = options.rejectUnauthorized;\n    }\n\n    if (!agent) agent = new httpObj.Agent(requestOptions);\n  }\n\n  if (agent) requestOptions.agent = agent;\n\n  this._req = httpObj.get(requestOptions);\n\n  this._req.on('error', (error) => {\n    if (this._req.aborted) return;\n\n    this._req = null;\n    this.emit('error', error);\n    this.finalize(true);\n  });\n\n  this._req.on('response', (res) => {\n    if (!this.emit('unexpected-response', this._req, res)) {\n      this._req.abort();\n      this.emit('error', new Error(`unexpected server response (${res.statusCode})`));\n      this.finalize(true);\n    }\n  });\n\n  this._req.on('upgrade', (res, socket, head) => {\n    this.emit('headers', res.headers, res);\n\n    //\n    // The user may have closed the connection from a listener of the `headers`\n    // event.\n    //\n    if (this.readyState !== WebSocket.CONNECTING) return;\n\n    this._req = null;\n\n    const digest = crypto.createHash('sha1')\n      .update(key + constants.GUID, 'binary')\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      socket.destroy();\n      this.emit('error', new Error('invalid server key'));\n      return this.finalize(true);\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    const protList = (options.protocol || '').split(/, */);\n    var protError;\n\n    if (!options.protocol && serverProt) {\n      protError = 'server sent a subprotocol even though none requested';\n    } else if (options.protocol && !serverProt) {\n      protError = 'server sent no subprotocol even though requested';\n    } else if (serverProt && protList.indexOf(serverProt) === -1) {\n      protError = 'server responded with an invalid protocol';\n    }\n\n    if (protError) {\n      socket.destroy();\n      this.emit('error', new Error(protError));\n      return this.finalize(true);\n    }\n\n    if (serverProt) this.protocol = serverProt;\n\n    const serverExtensions = Extensions.parse(res.headers['sec-websocket-extensions']);\n\n    if (perMessageDeflate && serverExtensions[PerMessageDeflate.extensionName]) {\n      try {\n        perMessageDeflate.accept(serverExtensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        socket.destroy();\n        this.emit('error', new Error('invalid extension parameter'));\n        return this.finalize(true);\n      }\n\n      this.extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n    }\n\n    this.setSocket(socket, head);\n  });\n}\n"]}