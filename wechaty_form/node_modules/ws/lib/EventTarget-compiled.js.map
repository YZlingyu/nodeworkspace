{"version":3,"sources":["EventTarget.js"],"names":[],"mappings":"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","file":"EventTarget-compiled.js","sourcesContent":["'use strict';\n\n/**\n * Class representing an event.\n *\n * @private\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} target A reference to the target to which the event was dispatched\n   */\n  constructor (type, target) {\n    this.target = target;\n    this.type = type;\n  }\n}\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n * @private\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The received data\n   * @param {Boolean} isBinary Specifies if `data` is binary\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor (data, isBinary, target) {\n    super('message', target);\n\n    this.binary = isBinary; // non-standard.\n    this.data = data;\n  }\n}\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n * @private\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {Number} code The status code explaining why the connection is being closed\n   * @param {String} reason A human-readable string explaining why the connection is closing\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor (code, reason, target) {\n    super('close', target);\n\n    this.wasClean = code === undefined || code === 1000;\n    this.reason = reason;\n    this.target = target;\n    this.type = 'close';\n    this.code = code;\n  }\n}\n\n/**\n * Class representing an open event.\n *\n * @extends Event\n * @private\n */\nclass OpenEvent extends Event {\n  /**\n   * Create a new `OpenEvent`.\n   *\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor (target) {\n    super('open', target);\n  }\n}\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} method A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @public\n   */\n  addEventListener (method, listener) {\n    if (typeof listener !== 'function') return;\n\n    function onMessage (data, flags) {\n      listener.call(this, new MessageEvent(data, !!flags.binary, this));\n    }\n\n    function onClose (code, message) {\n      listener.call(this, new CloseEvent(code, message, this));\n    }\n\n    function onError (event) {\n      event.type = 'error';\n      event.target = this;\n      listener.call(this, event);\n    }\n\n    function onOpen () {\n      listener.call(this, new OpenEvent(this));\n    }\n\n    if (method === 'message') {\n      onMessage._listener = listener;\n      this.on(method, onMessage);\n    } else if (method === 'close') {\n      onClose._listener = listener;\n      this.on(method, onClose);\n    } else if (method === 'error') {\n      onError._listener = listener;\n      this.on(method, onError);\n    } else if (method === 'open') {\n      onOpen._listener = listener;\n      this.on(method, onOpen);\n    } else {\n      this.on(method, listener);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} method A string representing the event type to remove\n   * @param {Function} listener The listener to remove\n   * @public\n   */\n  removeEventListener (method, listener) {\n    const listeners = this.listeners(method);\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i] === listener || listeners[i]._listener === listener) {\n        this.removeListener(method, listeners[i]);\n      }\n    }\n  }\n};\n\nmodule.exports = EventTarget;\n"]}