{"version":3,"sources":["Receiver.js"],"names":[],"mappings":"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","file":"Receiver-compiled.js","sourcesContent":["/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\n'use strict';\n\nconst safeBuffer = require('safe-buffer');\n\nconst PerMessageDeflate = require('./PerMessageDeflate');\nconst isValidUTF8 = require('./Validation');\nconst bufferUtil = require('./BufferUtil');\nconst ErrorCodes = require('./ErrorCodes');\nconst constants = require('./Constants');\n\nconst Buffer = safeBuffer.Buffer;\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n */\nclass Receiver {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} extensions An object containing the negotiated extensions\n   * @param {Number} maxPayload The maximum allowed message length\n   * @param {String} binaryType The type for binary data\n   */\n  constructor (extensions, maxPayload, binaryType) {\n    this.binaryType = binaryType || constants.BINARY_TYPES[0];\n    this.extensions = extensions || {};\n    this.maxPayload = maxPayload | 0;\n\n    this.bufferedBytes = 0;\n    this.buffers = [];\n\n    this.compressed = false;\n    this.payloadLength = 0;\n    this.fragmented = 0;\n    this.masked = false;\n    this.fin = false;\n    this.mask = null;\n    this.opcode = 0;\n\n    this.totalPayloadLength = 0;\n    this.messageLength = 0;\n    this.fragments = [];\n\n    this.cleanupCallback = null;\n    this.hadError = false;\n    this.dead = false;\n    this.loop = false;\n\n    this.onmessage = null;\n    this.onclose = null;\n    this.onerror = null;\n    this.onping = null;\n    this.onpong = null;\n\n    this.state = GET_INFO;\n  }\n\n  /**\n   * Consumes bytes from the available buffered data.\n   *\n   * @param {Number} bytes The number of bytes to consume\n   * @return {Buffer} Consumed bytes\n   * @private\n   */\n  readBuffer (bytes) {\n    var offset = 0;\n    var dst;\n    var l;\n\n    this.bufferedBytes -= bytes;\n\n    if (bytes === this.buffers[0].length) return this.buffers.shift();\n\n    if (bytes < this.buffers[0].length) {\n      dst = this.buffers[0].slice(0, bytes);\n      this.buffers[0] = this.buffers[0].slice(bytes);\n      return dst;\n    }\n\n    dst = Buffer.allocUnsafe(bytes);\n\n    while (bytes > 0) {\n      l = this.buffers[0].length;\n\n      if (bytes >= l) {\n        this.buffers[0].copy(dst, offset);\n        offset += l;\n        this.buffers.shift();\n      } else {\n        this.buffers[0].copy(dst, offset, 0, bytes);\n        this.buffers[0] = this.buffers[0].slice(bytes);\n      }\n\n      bytes -= l;\n    }\n\n    return dst;\n  }\n\n  /**\n   * Checks if the number of buffered bytes is bigger or equal than `n` and\n   * calls `cleanup` if necessary.\n   *\n   * @param {Number} n The number of bytes to check against\n   * @return {Boolean} `true` if `bufferedBytes >= n`, else `false`\n   * @private\n   */\n  hasBufferedBytes (n) {\n    if (this.bufferedBytes >= n) return true;\n\n    this.loop = false;\n    if (this.dead) this.cleanup(this.cleanupCallback);\n    return false;\n  }\n\n  /**\n   * Adds new data to the parser.\n   *\n   * @public\n   */\n  add (data) {\n    if (this.dead) return;\n\n    this.bufferedBytes += data.length;\n    this.buffers.push(data);\n    this.startLoop();\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @private\n   */\n  startLoop () {\n    this.loop = true;\n\n    while (this.loop) {\n      switch (this.state) {\n        case GET_INFO:\n          this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          this.getData();\n          break;\n        default: // `INFLATING`\n          this.loop = false;\n      }\n    }\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @private\n   */\n  getInfo () {\n    if (!this.hasBufferedBytes(2)) return;\n\n    const buf = this.readBuffer(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this.error(new Error('RSV2 and RSV3 must be clear'), 1002);\n      return;\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this.extensions[PerMessageDeflate.extensionName]) {\n      this.error(new Error('RSV1 must be clear'), 1002);\n      return;\n    }\n\n    this.fin = (buf[0] & 0x80) === 0x80;\n    this.opcode = buf[0] & 0x0f;\n    this.payloadLength = buf[1] & 0x7f;\n\n    if (this.opcode === 0x00) {\n      if (compressed) {\n        this.error(new Error('RSV1 must be clear'), 1002);\n        return;\n      }\n\n      if (!this.fragmented) {\n        this.error(new Error(`invalid opcode: ${this.opcode}`), 1002);\n        return;\n      } else {\n        this.opcode = this.fragmented;\n      }\n    } else if (this.opcode === 0x01 || this.opcode === 0x02) {\n      if (this.fragmented) {\n        this.error(new Error(`invalid opcode: ${this.opcode}`), 1002);\n        return;\n      }\n\n      this.compressed = compressed;\n    } else if (this.opcode > 0x07 && this.opcode < 0x0b) {\n      if (!this.fin) {\n        this.error(new Error('FIN must be set'), 1002);\n        return;\n      }\n\n      if (compressed) {\n        this.error(new Error('RSV1 must be clear'), 1002);\n        return;\n      }\n\n      if (this.payloadLength > 0x7d) {\n        this.error(new Error('invalid payload length'), 1002);\n        return;\n      }\n    } else {\n      this.error(new Error(`invalid opcode: ${this.opcode}`), 1002);\n      return;\n    }\n\n    if (!this.fin && !this.fragmented) this.fragmented = this.opcode;\n\n    this.masked = (buf[1] & 0x80) === 0x80;\n\n    if (this.payloadLength === 126) this.state = GET_PAYLOAD_LENGTH_16;\n    else if (this.payloadLength === 127) this.state = GET_PAYLOAD_LENGTH_64;\n    else this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @private\n   */\n  getPayloadLength16 () {\n    if (!this.hasBufferedBytes(2)) return;\n\n    this.payloadLength = this.readBuffer(2).readUInt16BE(0, true);\n    this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @private\n   */\n  getPayloadLength64 () {\n    if (!this.hasBufferedBytes(8)) return;\n\n    const buf = this.readBuffer(8);\n    const num = buf.readUInt32BE(0, true);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this.error(new Error('max payload size exceeded'), 1009);\n      return;\n    }\n\n    this.payloadLength = (num * Math.pow(2, 32)) + buf.readUInt32BE(4, true);\n    this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @private\n   */\n  haveLength () {\n    if (this.opcode < 0x08 && this.maxPayloadExceeded(this.payloadLength)) {\n      return;\n    }\n\n    if (this.masked) this.state = GET_MASK;\n    else this.state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask () {\n    if (!this.hasBufferedBytes(4)) return;\n\n    this.mask = this.readBuffer(4);\n    this.state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @private\n   */\n  getData () {\n    var data = constants.EMPTY_BUFFER;\n\n    if (this.payloadLength) {\n      if (!this.hasBufferedBytes(this.payloadLength)) return;\n\n      data = this.readBuffer(this.payloadLength);\n      if (this.masked) bufferUtil.unmask(data, this.mask);\n    }\n\n    if (this.opcode > 0x07) {\n      this.controlMessage(data);\n    } else if (this.compressed) {\n      this.state = INFLATING;\n      this.decompress(data);\n    } else if (this.pushFragment(data)) {\n      this.dataMessage();\n    }\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @private\n   */\n  decompress (data) {\n    const extension = this.extensions[PerMessageDeflate.extensionName];\n\n    extension.decompress(data, this.fin, (err, buf) => {\n      if (err) {\n        this.error(err, err.closeCode === 1009 ? 1009 : 1007);\n        return;\n      }\n\n      if (this.pushFragment(buf)) this.dataMessage();\n      this.startLoop();\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @private\n   */\n  dataMessage () {\n    if (this.fin) {\n      const messageLength = this.messageLength;\n      const fragments = this.fragments;\n\n      this.totalPayloadLength = 0;\n      this.messageLength = 0;\n      this.fragmented = 0;\n      this.fragments = [];\n\n      if (this.opcode === 2) {\n        var data;\n\n        if (this.binaryType === 'nodebuffer') {\n          data = toBuffer(fragments, messageLength);\n        } else if (this.binaryType === 'arraybuffer') {\n          data = toArrayBuffer(toBuffer(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.onmessage(data, { masked: this.masked, binary: true });\n      } else {\n        const buf = toBuffer(fragments, messageLength);\n\n        if (!isValidUTF8(buf)) {\n          this.error(new Error('invalid utf8 sequence'), 1007);\n          return;\n        }\n\n        this.onmessage(buf.toString(), { masked: this.masked });\n      }\n    }\n\n    this.state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @private\n   */\n  controlMessage (data) {\n    if (this.opcode === 0x08) {\n      if (data.length === 0) {\n        this.onclose(1000, '', { masked: this.masked });\n        this.loop = false;\n        this.cleanup(this.cleanupCallback);\n      } else if (data.length === 1) {\n        this.error(new Error('invalid payload length'), 1002);\n      } else {\n        const code = data.readUInt16BE(0, true);\n\n        if (!ErrorCodes.isValidErrorCode(code)) {\n          this.error(new Error(`invalid status code: ${code}`), 1002);\n          return;\n        }\n\n        const buf = data.slice(2);\n\n        if (!isValidUTF8(buf)) {\n          this.error(new Error('invalid utf8 sequence'), 1007);\n          return;\n        }\n\n        this.onclose(code, buf.toString(), { masked: this.masked });\n        this.loop = false;\n        this.cleanup(this.cleanupCallback);\n      }\n\n      return;\n    }\n\n    const flags = { masked: this.masked, binary: true };\n\n    if (this.opcode === 0x09) this.onping(data, flags);\n    else this.onpong(data, flags);\n\n    this.state = GET_INFO;\n  }\n\n  /**\n   * Handles an error.\n   *\n   * @param {Error} err The error\n   * @param {Number} code Close code\n   * @private\n   */\n  error (err, code) {\n    this.onerror(err, code);\n    this.hadError = true;\n    this.loop = false;\n    this.cleanup(this.cleanupCallback);\n  }\n\n  /**\n   * Checks payload size, disconnects socket when it exceeds `maxPayload`.\n   *\n   * @param {Number} length Payload length\n   * @private\n   */\n  maxPayloadExceeded (length) {\n    if (length === 0 || this.maxPayload < 1) return false;\n\n    const fullLength = this.totalPayloadLength + length;\n\n    if (fullLength <= this.maxPayload) {\n      this.totalPayloadLength = fullLength;\n      return false;\n    }\n\n    this.error(new Error('max payload size exceeded'), 1009);\n    return true;\n  }\n\n  /**\n   * Appends a fragment in the fragments array after checking that the sum of\n   * fragment lengths does not exceed `maxPayload`.\n   *\n   * @param {Buffer} fragment The fragment to add\n   * @return {Boolean} `true` if `maxPayload` is not exceeded, else `false`\n   * @private\n   */\n  pushFragment (fragment) {\n    if (fragment.length === 0) return true;\n\n    const totalLength = this.messageLength + fragment.length;\n\n    if (this.maxPayload < 1 || totalLength <= this.maxPayload) {\n      this.messageLength = totalLength;\n      this.fragments.push(fragment);\n      return true;\n    }\n\n    this.error(new Error('max payload size exceeded'), 1009);\n    return false;\n  }\n\n  /**\n   * Releases resources used by the receiver.\n   *\n   * @param {Function} cb Callback\n   * @public\n   */\n  cleanup (cb) {\n    this.dead = true;\n\n    if (!this.hadError && (this.loop || this.state === INFLATING)) {\n      this.cleanupCallback = cb;\n    } else {\n      this.extensions = null;\n      this.fragments = null;\n      this.buffers = null;\n      this.mask = null;\n\n      this.cleanupCallback = null;\n      this.onmessage = null;\n      this.onclose = null;\n      this.onerror = null;\n      this.onping = null;\n      this.onpong = null;\n\n      if (cb) cb();\n    }\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Makes a buffer from a list of fragments.\n *\n * @param {Buffer[]} fragments The list of fragments composing the message\n * @param {Number} messageLength The length of the message\n * @return {Buffer}\n * @private\n */\nfunction toBuffer (fragments, messageLength) {\n  if (fragments.length === 1) return fragments[0];\n  if (fragments.length > 1) return bufferUtil.concat(fragments, messageLength);\n  return constants.EMPTY_BUFFER;\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n */\nfunction toArrayBuffer (buf) {\n  if (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n"]}