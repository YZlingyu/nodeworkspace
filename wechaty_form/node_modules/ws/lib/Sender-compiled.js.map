{"version":3,"sources":["Sender.js"],"names":[],"mappings":"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","file":"Sender-compiled.js","sourcesContent":["/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\n'use strict';\n\nconst safeBuffer = require('safe-buffer');\nconst crypto = require('crypto');\n\nconst PerMessageDeflate = require('./PerMessageDeflate');\nconst bufferUtil = require('./BufferUtil');\nconst ErrorCodes = require('./ErrorCodes');\n\nconst Buffer = safeBuffer.Buffer;\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {net.Socket} socket The connection socket\n   * @param {Object} extensions An object containing the negotiated extensions\n   */\n  constructor (socket, extensions) {\n    this.perMessageDeflate = (extensions || {})[PerMessageDeflate.extensionName];\n    this._socket = socket;\n\n    this.firstFragment = true;\n    this.compress = false;\n\n    this.bufferedBytes = 0;\n    this.deflating = false;\n    this.queue = [];\n\n    this.onerror = null;\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {Buffer} data The data to frame\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @return {Buffer[]} The framed data as a list of `Buffer` instances\n   * @public\n   */\n  static frame (data, options) {\n    const merge = data.length < 1024 || (options.mask && options.readOnly);\n    var offset = options.mask ? 6 : 2;\n    var payloadLength = data.length;\n\n    if (data.length >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (data.length > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(data.length, 2, true);\n    } else if (payloadLength === 127) {\n      target.writeUInt32BE(0, 2, true);\n      target.writeUInt32BE(data.length, 6, true);\n    }\n\n    if (!options.mask) {\n      target[1] = payloadLength;\n      if (merge) {\n        data.copy(target, offset);\n        return [target];\n      }\n\n      return [target, data];\n    }\n\n    const mask = crypto.randomBytes(4);\n\n    target[1] = payloadLength | 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (merge) {\n      bufferUtil.mask(data, mask, target, offset, data.length);\n      return [target];\n    }\n\n    bufferUtil.mask(data, mask, data, 0, data.length);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {(Number|undefined)} code The status code component of the body\n   * @param {String} data The message component of the body\n   * @param {Boolean} mask Specifies whether or not to mask the message\n   * @param {Function} cb Callback\n   * @public\n   */\n  close (code, data, mask, cb) {\n    if (code !== undefined && (typeof code !== 'number' || !ErrorCodes.isValidErrorCode(code))) {\n      throw new Error('first argument must be a valid error code number');\n    }\n\n    const buf = Buffer.allocUnsafe(2 + (data ? Buffer.byteLength(data) : 0));\n\n    buf.writeUInt16BE(code || 1000, 0, true);\n    if (buf.length > 2) buf.write(data, 2);\n\n    if (this.deflating) {\n      this.enqueue([this.doClose, buf, mask, cb]);\n    } else {\n      this.doClose(buf, mask, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a close message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @private\n   */\n  doClose (data, mask, cb) {\n    this.sendFrame(Sender.frame(data, {\n      fin: true,\n      rsv1: false,\n      opcode: 0x08,\n      mask,\n      readOnly: false\n    }), cb);\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @public\n   */\n  ping (data, mask) {\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    if (this.deflating) {\n      this.enqueue([this.doPing, data, mask, readOnly]);\n    } else {\n      this.doPing(data, mask, readOnly);\n    }\n  }\n\n  /**\n   * Frames and sends a ping message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @private\n   */\n  doPing (data, mask, readOnly) {\n    this.sendFrame(Sender.frame(data, {\n      fin: true,\n      rsv1: false,\n      opcode: 0x09,\n      mask,\n      readOnly\n    }));\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @public\n   */\n  pong (data, mask) {\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    if (this.deflating) {\n      this.enqueue([this.doPong, data, mask, readOnly]);\n    } else {\n      this.doPong(data, mask, readOnly);\n    }\n  }\n\n  /**\n   * Frames and sends a pong message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @private\n   */\n  doPong (data, mask, readOnly) {\n    this.sendFrame(Sender.frame(data, {\n      fin: true,\n      rsv1: false,\n      opcode: 0x0a,\n      mask,\n      readOnly\n    }));\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  send (data, options, cb) {\n    var opcode = options.binary ? 2 : 1;\n    var rsv1 = options.compress;\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    if (this.firstFragment) {\n      this.firstFragment = false;\n      if (rsv1 && this.perMessageDeflate) {\n        rsv1 = data.length >= this.perMessageDeflate.threshold;\n      }\n      this.compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this.firstFragment = true;\n\n    if (this.perMessageDeflate) {\n      const opts = {\n        fin: options.fin,\n        rsv1,\n        opcode,\n        mask: options.mask,\n        readOnly\n      };\n\n      if (this.deflating) {\n        this.enqueue([this.dispatch, data, this.compress, opts, cb]);\n      } else {\n        this.dispatch(data, this.compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(Sender.frame(data, {\n        fin: options.fin,\n        rsv1: false,\n        opcode,\n        mask: options.mask,\n        readOnly\n      }), cb);\n    }\n  }\n\n  /**\n   * Dispatches a data message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} compress Specifies whether or not to compress `data`\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @param {Function} cb Callback\n   * @private\n   */\n  dispatch (data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    this.deflating = true;\n    this.perMessageDeflate.compress(data, options.fin, (err, buf) => {\n      if (err) {\n        if (cb) cb(err);\n        else this.onerror(err);\n        return;\n      }\n\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.deflating = false;\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue () {\n    while (!this.deflating && this.queue.length) {\n      const params = this.queue.shift();\n\n      this.bufferedBytes -= params[1].length;\n      params[0].apply(this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue (params) {\n    this.bufferedBytes += params[1].length;\n    this.queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} cb Callback\n   * @private\n   */\n  sendFrame (list, cb) {\n    if (list.length === 2) {\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Converts an `ArrayBuffer` view into a buffer.\n *\n * @param {(DataView|TypedArray)} view The view to convert\n * @return {Buffer} Converted view\n * @private\n */\nfunction viewToBuffer (view) {\n  const buf = Buffer.from(view.buffer);\n\n  if (view.byteLength !== view.buffer.byteLength) {\n    return buf.slice(view.byteOffset, view.byteOffset + view.byteLength);\n  }\n\n  return buf;\n}\n"]}