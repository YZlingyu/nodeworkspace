{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA,IAAI,KAAK,yOAAT;;AAEA,IAAI,QAAQ,CACR,QADQ,EACE,UADF,EACc,WADd,EAC2B,UAD3B,EACuC,MADvC,EAC+C,UAD/C,EAC2D,MAD3D,EACmE,MADnE,EAC2E,UAD3E,EACuF,MADvF,EAC+F,WAD/F,EAC4G,MAD5G,EACoH,OADpH,EAC6H,QAD7H,CAAZ;;AAIA,OAAO,OAAP,GAAiB,SAAS,QAAT,CAAkB,GAAlB,EAAuB;AACpC,QAAI,MAAM,GAAV;AAAA,QACI,IAAI,IAAI,OAAJ,CAAY,GAAZ,CADR;AAAA,QAEI,IAAI,IAAI,OAAJ,CAAY,GAAZ,CAFR;;AAIA,QAAI,KAAK,CAAC,CAAN,IAAW,KAAK,CAAC,CAArB,EAAwB;AACpB,cAAM,IAAI,SAAJ,CAAc,CAAd,EAAiB,CAAjB,IAAsB,IAAI,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,OAApB,CAA4B,IAA5B,EAAkC,GAAlC,CAAtB,GAA+D,IAAI,SAAJ,CAAc,CAAd,EAAiB,IAAI,MAArB,CAArE;AACH;;AAED,QAAI,IAAI,GAAG,IAAH,CAAQ,OAAO,EAAf,CAAR;AAAA,QACI,MAAM,EADV;AAAA,QAEI,IAAI,EAFR;;AAIA,WAAO,GAAP,EAAY;AACR,YAAI,MAAM,CAAN,CAAJ,IAAgB,EAAE,CAAF,KAAQ,EAAxB;AACH;;AAED,QAAI,KAAK,CAAC,CAAN,IAAW,KAAK,CAAC,CAArB,EAAwB;AACpB,YAAI,MAAJ,GAAa,GAAb;AACA,YAAI,IAAJ,GAAW,IAAI,IAAJ,CAAS,SAAT,CAAmB,CAAnB,EAAsB,IAAI,IAAJ,CAAS,MAAT,GAAkB,CAAxC,EAA2C,OAA3C,CAAmD,IAAnD,EAAyD,GAAzD,CAAX;AACA,YAAI,SAAJ,GAAgB,IAAI,SAAJ,CAAc,OAAd,CAAsB,GAAtB,EAA2B,EAA3B,EAA+B,OAA/B,CAAuC,GAAvC,EAA4C,EAA5C,EAAgD,OAAhD,CAAwD,IAAxD,EAA8D,GAA9D,CAAhB;AACA,YAAI,OAAJ,GAAc,IAAd;AACH;;AAED,WAAO,GAAP;AACH,CAzBD","file":"index-compiled.js","sourcesContent":["/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n"]}