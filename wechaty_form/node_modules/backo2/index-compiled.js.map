{"version":3,"sources":["index.js"],"names":[],"mappings":";AACA;;;;AAIA,OAAO,OAAP,GAAiB,OAAjB;;AAEA;;;;;;;;;;;;AAYA,SAAS,OAAT,CAAiB,IAAjB,EAAuB;AACrB,SAAO,QAAQ,EAAf;AACA,OAAK,EAAL,GAAU,KAAK,GAAL,IAAY,GAAtB;AACA,OAAK,GAAL,GAAW,KAAK,GAAL,IAAY,KAAvB;AACA,OAAK,MAAL,GAAc,KAAK,MAAL,IAAe,CAA7B;AACA,OAAK,MAAL,GAAc,KAAK,MAAL,GAAc,CAAd,IAAmB,KAAK,MAAL,IAAe,CAAlC,GAAsC,KAAK,MAA3C,GAAoD,CAAlE;AACA,OAAK,QAAL,GAAgB,CAAhB;AACD;;AAED;;;;;;;AAOA,QAAQ,SAAR,CAAkB,QAAlB,GAA6B,YAAU;AACrC,MAAI,KAAK,KAAK,EAAL,GAAU,KAAK,GAAL,CAAS,KAAK,MAAd,EAAsB,KAAK,QAAL,EAAtB,CAAnB;AACA,MAAI,KAAK,MAAT,EAAiB;AACf,QAAI,OAAQ,KAAK,MAAL,EAAZ;AACA,QAAI,YAAY,KAAK,KAAL,CAAW,OAAO,KAAK,MAAZ,GAAqB,EAAhC,CAAhB;AACA,SAAK,CAAC,KAAK,KAAL,CAAW,OAAO,EAAlB,IAAwB,CAAzB,KAA+B,CAA/B,GAAoC,KAAK,SAAzC,GAAqD,KAAK,SAA/D;AACD;AACD,SAAO,KAAK,GAAL,CAAS,EAAT,EAAa,KAAK,GAAlB,IAAyB,CAAhC;AACD,CARD;;AAUA;;;;;;AAMA,QAAQ,SAAR,CAAkB,KAAlB,GAA0B,YAAU;AAClC,OAAK,QAAL,GAAgB,CAAhB;AACD,CAFD;;AAIA;;;;;;AAMA,QAAQ,SAAR,CAAkB,MAAlB,GAA2B,UAAS,GAAT,EAAa;AACtC,OAAK,EAAL,GAAU,GAAV;AACD,CAFD;;AAIA;;;;;;AAMA,QAAQ,SAAR,CAAkB,MAAlB,GAA2B,UAAS,GAAT,EAAa;AACtC,OAAK,GAAL,GAAW,GAAX;AACD,CAFD;;AAIA;;;;;;AAMA,QAAQ,SAAR,CAAkB,SAAlB,GAA8B,UAAS,MAAT,EAAgB;AAC5C,OAAK,MAAL,GAAc,MAAd;AACD,CAFD","file":"index-compiled.js","sourcesContent":["\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n"]}