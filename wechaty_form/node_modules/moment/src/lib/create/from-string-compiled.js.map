{"version":3,"sources":["from-string.js"],"names":[],"mappings":"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","file":"from-string-compiled.js","sourcesContent":["import { configFromStringAndFormat } from './from-string-and-format';\nimport { hooks } from '../utils/hooks';\nimport { deprecate } from '../utils/deprecate';\nimport getParsingFlags from './parsing-flags';\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nexport function configFromISO(config) {\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nvar basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/;\n\n// date and time from ref 2822 format\nexport function configFromRFC2822(config) {\n    var string, match, dayFormat,\n        dateFormat, timeFormat, tzFormat;\n    var timezones = {\n        ' GMT': ' +0000',\n        ' EDT': ' -0400',\n        ' EST': ' -0500',\n        ' CDT': ' -0500',\n        ' CST': ' -0600',\n        ' MDT': ' -0600',\n        ' MST': ' -0700',\n        ' PDT': ' -0700',\n        ' PST': ' -0800'\n    };\n    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';\n    var timezone, timezoneIndex;\n\n    string = config._i\n        .replace(/\\([^\\)]*\\)|[\\n\\t]/g, ' ') // Remove comments and folding whitespace\n        .replace(/(\\s\\s+)/g, ' ') // Replace multiple-spaces with a single space\n        .replace(/^\\s|\\s$/g, ''); // Remove leading and trailing spaces\n    match = basicRfcRegex.exec(string);\n\n    if (match) {\n        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';\n        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');\n        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');\n\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        if (match[1]) { // day of week given\n            var momentDate = new Date(match[2]);\n            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];\n\n            if (match[1].substr(0,3) !== momentDay) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return;\n            }\n        }\n\n        switch (match[5].length) {\n            case 2: // military\n                if (timezoneIndex === 0) {\n                    timezone = ' +0000';\n                } else {\n                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;\n                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +\n                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';\n                }\n                break;\n            case 4: // Zone\n                timezone = timezones[match[5]];\n                break;\n            default: // UT or +/-9999\n                timezone = timezones[' GMT'];\n        }\n        match[5] = timezone;\n        config._i = match.splice(1).join('');\n        tzFormat = ' ZZ';\n        config._f = dayFormat + dateFormat + timeFormat + tzFormat;\n        configFromStringAndFormat(config);\n        getParsingFlags(config).rfc2822 = true;\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nexport function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n"]}