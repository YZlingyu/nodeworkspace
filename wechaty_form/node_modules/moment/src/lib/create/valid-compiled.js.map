{"version":3,"sources":["valid.js"],"names":[],"mappings":"AAAA,OAAO,MAAP,MAAmB,iBAAnB;AACA,SAAS,SAAT,QAA0B,OAA1B;AACA,OAAO,eAAP,MAA4B,yBAA5B;AACA,OAAO,IAAP,MAAiB,eAAjB;;AAEA,OAAO,SAAS,OAAT,CAAiB,CAAjB,EAAoB;AACvB,QAAI,EAAE,QAAF,IAAc,IAAlB,EAAwB;AACpB,YAAI,QAAQ,gBAAgB,CAAhB,CAAZ;AACA,YAAI,cAAc,KAAK,IAAL,CAAU,MAAM,eAAhB,EAAiC,UAAU,CAAV,EAAa;AAC5D,mBAAO,KAAK,IAAZ;AACH,SAFiB,CAAlB;AAGA,YAAI,aAAa,CAAC,MAAM,EAAE,EAAF,CAAK,OAAL,EAAN,CAAD,IACb,MAAM,QAAN,GAAiB,CADJ,IAEb,CAAC,MAAM,KAFM,IAGb,CAAC,MAAM,YAHM,IAIb,CAAC,MAAM,cAJM,IAKb,CAAC,MAAM,SALM,IAMb,CAAC,MAAM,aANM,IAOb,CAAC,MAAM,eAPM,KAQZ,CAAC,MAAM,QAAP,IAAoB,MAAM,QAAN,IAAkB,WAR1B,CAAjB;;AAUA,YAAI,EAAE,OAAN,EAAe;AACX,yBAAa,cACT,MAAM,aAAN,KAAwB,CADf,IAET,MAAM,YAAN,CAAmB,MAAnB,KAA8B,CAFrB,IAGT,MAAM,OAAN,KAAkB,SAHtB;AAIH;;AAED,YAAI,OAAO,QAAP,IAAmB,IAAnB,IAA2B,CAAC,OAAO,QAAP,CAAgB,CAAhB,CAAhC,EAAoD;AAChD,cAAE,QAAF,GAAa,UAAb;AACH,SAFD,MAGK;AACD,mBAAO,UAAP;AACH;AACJ;AACD,WAAO,EAAE,QAAT;AACH;;AAED,OAAO,SAAS,aAAT,CAAwB,KAAxB,EAA+B;AAClC,QAAI,IAAI,UAAU,GAAV,CAAR;AACA,QAAI,SAAS,IAAb,EAAmB;AACf,eAAO,gBAAgB,CAAhB,CAAP,EAA2B,KAA3B;AACH,KAFD,MAGK;AACD,wBAAgB,CAAhB,EAAmB,eAAnB,GAAqC,IAArC;AACH;;AAED,WAAO,CAAP;AACH","file":"valid-compiled.js","sourcesContent":["import extend from '../utils/extend';\nimport { createUTC } from './utc';\nimport getParsingFlags from '../create/parsing-flags';\nimport some from '../utils/some';\n\nexport function isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nexport function createInvalid (flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    }\n    else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n"]}