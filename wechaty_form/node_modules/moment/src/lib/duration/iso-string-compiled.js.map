{"version":3,"sources":["iso-string.js"],"names":[],"mappings":"AAAA,OAAO,QAAP,MAAqB,oBAArB;AACA,IAAI,MAAM,KAAK,GAAf;;AAEA,OAAO,SAAS,WAAT,GAAuB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAI,CAAC,KAAK,OAAL,EAAL,EAAqB;AACjB,eAAO,KAAK,UAAL,GAAkB,WAAlB,EAAP;AACH;;AAED,QAAI,UAAU,IAAI,KAAK,aAAT,IAA0B,IAAxC;AACA,QAAI,OAAe,IAAI,KAAK,KAAT,CAAnB;AACA,QAAI,SAAe,IAAI,KAAK,OAAT,CAAnB;AACA,QAAI,OAAJ,EAAa,KAAb,EAAoB,KAApB;;AAEA;AACA,cAAoB,SAAS,UAAU,EAAnB,CAApB;AACA,YAAoB,SAAS,UAAU,EAAnB,CAApB;AACA,eAAW,EAAX;AACA,eAAW,EAAX;;AAEA;AACA,YAAS,SAAS,SAAS,EAAlB,CAAT;AACA,cAAU,EAAV;;AAGA;AACA,QAAI,IAAI,KAAR;AACA,QAAI,IAAI,MAAR;AACA,QAAI,IAAI,IAAR;AACA,QAAI,IAAI,KAAR;AACA,QAAI,IAAI,OAAR;AACA,QAAI,IAAI,OAAR;AACA,QAAI,QAAQ,KAAK,SAAL,EAAZ;;AAEA,QAAI,CAAC,KAAL,EAAY;AACR;AACA;AACA,eAAO,KAAP;AACH;;AAED,WAAO,CAAC,QAAQ,CAAR,GAAY,GAAZ,GAAkB,EAAnB,IACH,GADG,IAEF,IAAI,IAAI,GAAR,GAAc,EAFZ,KAGF,IAAI,IAAI,GAAR,GAAc,EAHZ,KAIF,IAAI,IAAI,GAAR,GAAc,EAJZ,KAKD,KAAK,CAAL,IAAU,CAAX,GAAgB,GAAhB,GAAsB,EALpB,KAMF,IAAI,IAAI,GAAR,GAAc,EANZ,KAOF,IAAI,IAAI,GAAR,GAAc,EAPZ,KAQF,IAAI,IAAI,GAAR,GAAc,EARZ,CAAP;AASH","file":"iso-string-compiled.js","sourcesContent":["import absFloor from '../utils/abs-floor';\nvar abs = Math.abs;\n\nexport function toISOString() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var seconds = abs(this._milliseconds) / 1000;\n    var days         = abs(this._days);\n    var months       = abs(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds;\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    return (total < 0 ? '-' : '') +\n        'P' +\n        (Y ? Y + 'Y' : '') +\n        (M ? M + 'M' : '') +\n        (D ? D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? h + 'H' : '') +\n        (m ? m + 'M' : '') +\n        (s ? s + 'S' : '');\n}\n"]}