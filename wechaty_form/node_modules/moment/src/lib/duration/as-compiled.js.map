{"version":3,"sources":["as.js"],"names":[],"mappings":"AAAA,SAAS,YAAT,EAAuB,YAAvB,QAA2C,UAA3C;AACA,SAAS,cAAT,QAA+B,kBAA/B;AACA,OAAO,KAAP,MAAkB,iBAAlB;;AAEA,OAAO,SAAS,EAAT,CAAa,KAAb,EAAoB;AACvB,QAAI,CAAC,KAAK,OAAL,EAAL,EAAqB;AACjB,eAAO,GAAP;AACH;AACD,QAAI,IAAJ;AACA,QAAI,MAAJ;AACA,QAAI,eAAe,KAAK,aAAxB;;AAEA,YAAQ,eAAe,KAAf,CAAR;;AAEA,QAAI,UAAU,OAAV,IAAqB,UAAU,MAAnC,EAA2C;AACvC,eAAS,KAAK,KAAL,GAAe,eAAe,KAAvC;AACA,iBAAS,KAAK,OAAL,GAAe,aAAa,IAAb,CAAxB;AACA,eAAO,UAAU,OAAV,GAAoB,MAApB,GAA6B,SAAS,EAA7C;AACH,KAJD,MAIO;AACH;AACA,eAAO,KAAK,KAAL,GAAa,KAAK,KAAL,CAAW,aAAa,KAAK,OAAlB,CAAX,CAApB;AACA,gBAAQ,KAAR;AACI,iBAAK,MAAL;AAAgB,uBAAO,OAAO,CAAP,GAAe,eAAe,MAArC;AAChB,iBAAK,KAAL;AAAgB,uBAAO,OAAe,eAAe,KAArC;AAChB,iBAAK,MAAL;AAAgB,uBAAO,OAAO,EAAP,GAAe,eAAe,IAArC;AAChB,iBAAK,QAAL;AAAgB,uBAAO,OAAO,IAAP,GAAe,eAAe,GAArC;AAChB,iBAAK,QAAL;AAAgB,uBAAO,OAAO,KAAP,GAAe,eAAe,IAArC;AAChB;AACA,iBAAK,aAAL;AAAoB,uBAAO,KAAK,KAAL,CAAW,OAAO,KAAlB,IAA2B,YAAlC;AACpB;AAAS,sBAAM,IAAI,KAAJ,CAAU,kBAAkB,KAA5B,CAAN;AARb;AAUH;AACJ;;AAED;AACA,OAAO,SAAS,OAAT,GAAoB;AACvB,QAAI,CAAC,KAAK,OAAL,EAAL,EAAqB;AACjB,eAAO,GAAP;AACH;AACD,WACI,KAAK,aAAL,GACA,KAAK,KAAL,GAAa,KADb,GAEC,KAAK,OAAL,GAAe,EAAhB,GAAsB,MAFtB,GAGA,MAAM,KAAK,OAAL,GAAe,EAArB,IAA2B,OAJ/B;AAMH;;AAED,SAAS,MAAT,CAAiB,KAAjB,EAAwB;AACpB,WAAO,YAAY;AACf,eAAO,KAAK,EAAL,CAAQ,KAAR,CAAP;AACH,KAFD;AAGH;;AAED,OAAO,IAAI,iBAAiB,OAAO,IAAP,CAArB;AACP,OAAO,IAAI,YAAiB,OAAO,GAAP,CAArB;AACP,OAAO,IAAI,YAAiB,OAAO,GAAP,CAArB;AACP,OAAO,IAAI,UAAiB,OAAO,GAAP,CAArB;AACP,OAAO,IAAI,SAAiB,OAAO,GAAP,CAArB;AACP,OAAO,IAAI,UAAiB,OAAO,GAAP,CAArB;AACP,OAAO,IAAI,WAAiB,OAAO,GAAP,CAArB;AACP,OAAO,IAAI,UAAiB,OAAO,GAAP,CAArB","file":"as-compiled.js","sourcesContent":["import { daysToMonths, monthsToDays } from './bubble';\nimport { normalizeUnits } from '../units/aliases';\nimport toInt from '../utils/to-int';\n\nexport function as (units) {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nexport function valueOf () {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs (alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nexport var asMilliseconds = makeAs('ms');\nexport var asSeconds      = makeAs('s');\nexport var asMinutes      = makeAs('m');\nexport var asHours        = makeAs('h');\nexport var asDays         = makeAs('d');\nexport var asWeeks        = makeAs('w');\nexport var asMonths       = makeAs('M');\nexport var asYears        = makeAs('y');\n"]}