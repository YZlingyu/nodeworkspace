{"version":3,"sources":["timestamp.js"],"names":[],"mappings":"AAAA,SAAS,cAAT,QAA+B,kBAA/B;AACA,SAAS,aAAT,EAAwB,cAAxB,EAAwC,WAAxC,QAA2D,gBAA3D;AACA,SAAS,aAAT,QAA8B,gBAA9B;AACA,OAAO,KAAP,MAAkB,iBAAlB;;AAEA;;AAEA,eAAe,GAAf,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,MAA1B;AACA,eAAe,GAAf,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,SAA1B;;AAEA;;AAEA,cAAc,GAAd,EAAmB,WAAnB;AACA,cAAc,GAAd,EAAmB,cAAnB;AACA,cAAc,GAAd,EAAmB,UAAU,KAAV,EAAiB,KAAjB,EAAwB,MAAxB,EAAgC;AAC/C,WAAO,EAAP,GAAY,IAAI,IAAJ,CAAS,WAAW,KAAX,EAAkB,EAAlB,IAAwB,IAAjC,CAAZ;AACH,CAFD;AAGA,cAAc,GAAd,EAAmB,UAAU,KAAV,EAAiB,KAAjB,EAAwB,MAAxB,EAAgC;AAC/C,WAAO,EAAP,GAAY,IAAI,IAAJ,CAAS,MAAM,KAAN,CAAT,CAAZ;AACH,CAFD","file":"timestamp-compiled.js","sourcesContent":["import { addFormatToken } from '../format/format';\nimport { addRegexToken, matchTimestamp, matchSigned } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport toInt from '../utils/to-int';\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n"]}