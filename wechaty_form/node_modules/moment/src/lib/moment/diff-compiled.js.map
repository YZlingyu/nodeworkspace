{"version":3,"sources":["diff.js"],"names":[],"mappings":"AAAA,OAAO,QAAP,MAAqB,oBAArB;AACA,SAAS,eAAT,QAAgC,iBAAhC;AACA,SAAS,cAAT,QAA+B,kBAA/B;;AAEA,OAAO,SAAS,IAAT,CAAe,KAAf,EAAsB,KAAtB,EAA6B,OAA7B,EAAsC;AACzC,QAAI,IAAJ,EACI,SADJ,EAEI,KAFJ,EAEW,MAFX;;AAIA,QAAI,CAAC,KAAK,OAAL,EAAL,EAAqB;AACjB,eAAO,GAAP;AACH;;AAED,WAAO,gBAAgB,KAAhB,EAAuB,IAAvB,CAAP;;AAEA,QAAI,CAAC,KAAK,OAAL,EAAL,EAAqB;AACjB,eAAO,GAAP;AACH;;AAED,gBAAY,CAAC,KAAK,SAAL,KAAmB,KAAK,SAAL,EAApB,IAAwC,GAApD;;AAEA,YAAQ,eAAe,KAAf,CAAR;;AAEA,QAAI,UAAU,MAAV,IAAoB,UAAU,OAA9B,IAAyC,UAAU,SAAvD,EAAkE;AAC9D,iBAAS,UAAU,IAAV,EAAgB,IAAhB,CAAT;AACA,YAAI,UAAU,SAAd,EAAyB;AACrB,qBAAS,SAAS,CAAlB;AACH,SAFD,MAEO,IAAI,UAAU,MAAd,EAAsB;AACzB,qBAAS,SAAS,EAAlB;AACH;AACJ,KAPD,MAOO;AACH,gBAAQ,OAAO,IAAf;AACA,iBAAS,UAAU,QAAV,GAAqB,QAAQ,GAA7B,GAAmC;AACxC,kBAAU,QAAV,GAAqB,QAAQ,GAA7B,GAAmC;AACnC,kBAAU,MAAV,GAAmB,QAAQ,IAA3B,GAAkC;AAClC,kBAAU,KAAV,GAAkB,CAAC,QAAQ,SAAT,IAAsB,KAAxC,GAAgD;AAChD,kBAAU,MAAV,GAAmB,CAAC,QAAQ,SAAT,IAAsB,MAAzC,GAAkD;AAClD,aALJ;AAMH;AACD,WAAO,UAAU,MAAV,GAAmB,SAAS,MAAT,CAA1B;AACH;;AAED,SAAS,SAAT,CAAoB,CAApB,EAAuB,CAAvB,EAA0B;AACtB;AACA,QAAI,iBAAkB,CAAC,EAAE,IAAF,KAAW,EAAE,IAAF,EAAZ,IAAwB,EAAzB,IAAgC,EAAE,KAAF,KAAY,EAAE,KAAF,EAA5C,CAArB;;AACI;AACA,aAAS,EAAE,KAAF,GAAU,GAAV,CAAc,cAAd,EAA8B,QAA9B,CAFb;AAAA,QAGI,OAHJ;AAAA,QAGa,MAHb;;AAKA,QAAI,IAAI,MAAJ,GAAa,CAAjB,EAAoB;AAChB,kBAAU,EAAE,KAAF,GAAU,GAAV,CAAc,iBAAiB,CAA/B,EAAkC,QAAlC,CAAV;AACA;AACA,iBAAS,CAAC,IAAI,MAAL,KAAgB,SAAS,OAAzB,CAAT;AACH,KAJD,MAIO;AACH,kBAAU,EAAE,KAAF,GAAU,GAAV,CAAc,iBAAiB,CAA/B,EAAkC,QAAlC,CAAV;AACA;AACA,iBAAS,CAAC,IAAI,MAAL,KAAgB,UAAU,MAA1B,CAAT;AACH;;AAED;AACA,WAAO,EAAE,iBAAiB,MAAnB,KAA8B,CAArC;AACH","file":"diff-compiled.js","sourcesContent":["import absFloor from '../utils/abs-floor';\nimport { cloneWithOffset } from '../units/offset';\nimport { normalizeUnits } from '../units/aliases';\n\nexport function diff (input, units, asFloat) {\n    var that,\n        zoneDelta,\n        delta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    if (units === 'year' || units === 'month' || units === 'quarter') {\n        output = monthDiff(this, that);\n        if (units === 'quarter') {\n            output = output / 3;\n        } else if (units === 'year') {\n            output = output / 12;\n        }\n    } else {\n        delta = this - that;\n        output = units === 'second' ? delta / 1e3 : // 1000\n            units === 'minute' ? delta / 6e4 : // 1000 * 60\n            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n            delta;\n    }\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n"]}