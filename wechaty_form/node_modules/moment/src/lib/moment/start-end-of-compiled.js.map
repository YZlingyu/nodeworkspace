{"version":3,"sources":["start-end-of.js"],"names":[],"mappings":"AAAA,SAAS,cAAT,QAA+B,kBAA/B;;AAEA,OAAO,SAAS,OAAT,CAAkB,KAAlB,EAAyB;AAC5B,YAAQ,eAAe,KAAf,CAAR;AACA;AACA;AACA,YAAQ,KAAR;AACI,aAAK,MAAL;AACI,iBAAK,KAAL,CAAW,CAAX;AACA;AACJ,aAAK,SAAL;AACA,aAAK,OAAL;AACI,iBAAK,IAAL,CAAU,CAAV;AACA;AACJ,aAAK,MAAL;AACA,aAAK,SAAL;AACA,aAAK,KAAL;AACA,aAAK,MAAL;AACI,iBAAK,KAAL,CAAW,CAAX;AACA;AACJ,aAAK,MAAL;AACI,iBAAK,OAAL,CAAa,CAAb;AACA;AACJ,aAAK,QAAL;AACI,iBAAK,OAAL,CAAa,CAAb;AACA;AACJ,aAAK,QAAL;AACI,iBAAK,YAAL,CAAkB,CAAlB;AArBR;;AAwBA;AACA,QAAI,UAAU,MAAd,EAAsB;AAClB,aAAK,OAAL,CAAa,CAAb;AACH;AACD,QAAI,UAAU,SAAd,EAAyB;AACrB,aAAK,UAAL,CAAgB,CAAhB;AACH;;AAED;AACA,QAAI,UAAU,SAAd,EAAyB;AACrB,aAAK,KAAL,CAAW,KAAK,KAAL,CAAW,KAAK,KAAL,KAAe,CAA1B,IAA+B,CAA1C;AACH;;AAED,WAAO,IAAP;AACH;;AAED,OAAO,SAAS,KAAT,CAAgB,KAAhB,EAAuB;AAC1B,YAAQ,eAAe,KAAf,CAAR;AACA,QAAI,UAAU,SAAV,IAAuB,UAAU,aAArC,EAAoD;AAChD,eAAO,IAAP;AACH;;AAED;AACA,QAAI,UAAU,MAAd,EAAsB;AAClB,gBAAQ,KAAR;AACH;;AAED,WAAO,KAAK,OAAL,CAAa,KAAb,EAAoB,GAApB,CAAwB,CAAxB,EAA4B,UAAU,SAAV,GAAsB,MAAtB,GAA+B,KAA3D,EAAmE,QAAnE,CAA4E,CAA5E,EAA+E,IAA/E,CAAP;AACH","file":"start-end-of-compiled.js","sourcesContent":["import { normalizeUnits } from '../units/aliases';\n\nexport function startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nexport function endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n"]}