{"version":3,"sources":["et.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,OAAO,MAAP,MAAmB,WAAnB;;AAEA,SAAS,mBAAT,CAA6B,MAA7B,EAAqC,aAArC,EAAoD,GAApD,EAAyD,QAAzD,EAAmE;AAC/D,QAAI,SAAS;AACT,aAAM,CAAC,cAAD,EAAiB,aAAjB,EAAgC,eAAhC,CADG;AAET,aAAM,CAAC,YAAD,EAAe,WAAf,CAFG;AAGT,cAAM,CAAC,SAAS,SAAV,EAAqB,SAAS,UAA9B,CAHG;AAIT,aAAM,CAAC,WAAD,EAAc,WAAd,EAA2B,UAA3B,CAJG;AAKT,cAAM,CAAC,SAAS,QAAV,EAAoB,SAAS,QAA7B,CALG;AAMT,aAAM,CAAC,WAAD,EAAc,UAAd,CANG;AAOT,aAAM,CAAC,SAAD,EAAY,UAAZ,EAAwB,SAAxB,CAPG;AAQT,cAAM,CAAC,SAAS,MAAV,EAAkB,SAAS,OAA3B,CARG;AAST,aAAM,CAAC,WAAD,EAAc,OAAd,EAAuB,WAAvB,CATG;AAUT,cAAM,CAAC,SAAS,QAAV,EAAoB,SAAS,SAA7B;AAVG,KAAb;AAYA,QAAI,aAAJ,EAAmB;AACf,eAAO,OAAO,GAAP,EAAY,CAAZ,IAAiB,OAAO,GAAP,EAAY,CAAZ,CAAjB,GAAkC,OAAO,GAAP,EAAY,CAAZ,CAAzC;AACH;AACD,WAAO,WAAW,OAAO,GAAP,EAAY,CAAZ,CAAX,GAA4B,OAAO,GAAP,EAAY,CAAZ,CAAnC;AACH;;AAED,eAAe,OAAO,YAAP,CAAoB,IAApB,EAA0B;AACrC,YAAgB,6FAA6F,KAA7F,CAAmG,GAAnG,CADqB;AAErC,iBAAgB,6DAA6D,KAA7D,CAAmE,GAAnE,CAFqB;AAGrC,cAAgB,iEAAiE,KAAjE,CAAuE,GAAvE,CAHqB;AAIrC,mBAAgB,gBAAgB,KAAhB,CAAsB,GAAtB,CAJqB;AAKrC,iBAAgB,gBAAgB,KAAhB,CAAsB,GAAtB,CALqB;AAMrC,oBAAiB;AACb,YAAO,MADM;AAEb,aAAM,SAFO;AAGb,WAAO,YAHM;AAIb,YAAO,cAJM;AAKb,aAAO,mBALM;AAMb,cAAO;AANM,KANoB;AAcrC,cAAW;AACP,iBAAW,YADJ;AAEP,iBAAW,aAFJ;AAGP,kBAAW,oBAHJ;AAIP,iBAAW,YAJJ;AAKP,kBAAW,mBALJ;AAMP,kBAAW;AANJ,KAd0B;AAsBrC,kBAAe;AACX,gBAAS,WADE;AAEX,cAAS,WAFE;AAGX,WAAS,mBAHE;AAIX,WAAS,mBAJE;AAKX,YAAS,mBALE;AAMX,WAAS,mBANE;AAOX,YAAS,mBAPE;AAQX,WAAS,mBARE;AASX,YAAS,UATE;AAUX,WAAS,mBAVE;AAWX,YAAS,mBAXE;AAYX,WAAS,mBAZE;AAaX,YAAS;AAbE,KAtBsB;AAqCrC,4BAAwB,WArCa;AAsCrC,aAAU,KAtC2B;AAuCrC,UAAO;AACH,aAAM,CADH,EACM;AACT,aAAM,CAFH,CAEM;AAFN;AAvC8B,CAA1B,CAAf","file":"et-compiled.js","sourcesContent":["//! moment.js locale configuration\n//! locale : Estonian [et]\n//! author : Henry Kehlmann : https://github.com/madhenry\n//! improvements : Illimar Tambek : https://github.com/ragulka\n\nimport moment from '../moment';\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n    var format = {\n        's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n        'm' : ['ühe minuti', 'üks minut'],\n        'mm': [number + ' minuti', number + ' minutit'],\n        'h' : ['ühe tunni', 'tund aega', 'üks tund'],\n        'hh': [number + ' tunni', number + ' tundi'],\n        'd' : ['ühe päeva', 'üks päev'],\n        'M' : ['kuu aja', 'kuu aega', 'üks kuu'],\n        'MM': [number + ' kuu', number + ' kuud'],\n        'y' : ['ühe aasta', 'aasta', 'üks aasta'],\n        'yy': [number + ' aasta', number + ' aastat']\n    };\n    if (withoutSuffix) {\n        return format[key][2] ? format[key][2] : format[key][1];\n    }\n    return isFuture ? format[key][0] : format[key][1];\n}\n\nexport default moment.defineLocale('et', {\n    months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n    monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n    weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n    weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),\n    weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),\n    longDateFormat : {\n        LT   : 'H:mm',\n        LTS : 'H:mm:ss',\n        L    : 'DD.MM.YYYY',\n        LL   : 'D. MMMM YYYY',\n        LLL  : 'D. MMMM YYYY H:mm',\n        LLLL : 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar : {\n        sameDay  : '[Täna,] LT',\n        nextDay  : '[Homme,] LT',\n        nextWeek : '[Järgmine] dddd LT',\n        lastDay  : '[Eile,] LT',\n        lastWeek : '[Eelmine] dddd LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s pärast',\n        past   : '%s tagasi',\n        s      : processRelativeTime,\n        m      : processRelativeTime,\n        mm     : processRelativeTime,\n        h      : processRelativeTime,\n        hh     : processRelativeTime,\n        d      : processRelativeTime,\n        dd     : '%d päeva',\n        M      : processRelativeTime,\n        MM     : processRelativeTime,\n        y      : processRelativeTime,\n        yy     : processRelativeTime\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\n"]}