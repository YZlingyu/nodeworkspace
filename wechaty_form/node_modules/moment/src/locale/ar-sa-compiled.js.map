{"version":3,"sources":["ar-sa.js"],"names":[],"mappings":"AAAA;AACA;AACA;;AAEA,OAAO,MAAP,MAAmB,WAAnB;;AAEA,IAAI,YAAY;AACZ,SAAK,GADO;AAEZ,SAAK,GAFO;AAGZ,SAAK,GAHO;AAIZ,SAAK,GAJO;AAKZ,SAAK,GALO;AAMZ,SAAK,GANO;AAOZ,SAAK,GAPO;AAQZ,SAAK,GARO;AASZ,SAAK,GATO;AAUZ,SAAK;AAVO,CAAhB;AAAA,IAWG,YAAY;AACX,SAAK,GADM;AAEX,SAAK,GAFM;AAGX,SAAK,GAHM;AAIX,SAAK,GAJM;AAKX,SAAK,GALM;AAMX,SAAK,GANM;AAOX,SAAK,GAPM;AAQX,SAAK,GARM;AASX,SAAK,GATM;AAUX,SAAK;AAVM,CAXf;;AAwBA,eAAe,OAAO,YAAP,CAAoB,OAApB,EAA6B;AACxC,YAAS,6EAA6E,KAA7E,CAAmF,GAAnF,CAD+B;AAExC,iBAAc,6EAA6E,KAA7E,CAAmF,GAAnF,CAF0B;AAGxC,cAAW,sDAAsD,KAAtD,CAA4D,GAA5D,CAH6B;AAIxC,mBAAgB,wCAAwC,KAAxC,CAA8C,GAA9C,CAJwB;AAKxC,iBAAc,gBAAgB,KAAhB,CAAsB,GAAtB,CAL0B;AAMxC,wBAAqB,IANmB;AAOxC,oBAAiB;AACb,YAAK,OADQ;AAEb,aAAM,UAFO;AAGb,WAAI,YAHS;AAIb,YAAK,aAJQ;AAKb,aAAM,mBALO;AAMb,cAAO;AANM,KAPuB;AAexC,mBAAe,KAfyB;AAgBxC,UAAO,UAAU,KAAV,EAAiB;AACpB,eAAO,QAAQ,KAAf;AACH,KAlBuC;AAmBxC,cAAW,UAAU,IAAV,EAAgB,MAAhB,EAAwB,OAAxB,EAAiC;AACxC,YAAI,OAAO,EAAX,EAAe;AACX,mBAAO,GAAP;AACH,SAFD,MAEO;AACH,mBAAO,GAAP;AACH;AACJ,KAzBuC;AA0BxC,cAAW;AACP,iBAAS,uBADF;AAEP,iBAAS,qBAFF;AAGP,kBAAU,sBAHH;AAIP,iBAAS,qBAJF;AAKP,kBAAU,sBALH;AAMP,kBAAU;AANH,KA1B6B;AAkCxC,kBAAe;AACX,gBAAS,OADE;AAEX,cAAO,QAFI;AAGX,WAAI,MAHO;AAIX,WAAI,OAJO;AAKX,YAAK,UALM;AAMX,WAAI,MANO;AAOX,YAAK,UAPM;AAQX,WAAI,KARO;AASX,YAAK,SATM;AAUX,WAAI,KAVO;AAWX,YAAK,SAXM;AAYX,WAAI,KAZO;AAaX,YAAK;AAbM,KAlCyB;AAiDxC,cAAU,UAAU,MAAV,EAAkB;AACxB,eAAO,OAAO,OAAP,CAAe,eAAf,EAAgC,UAAU,KAAV,EAAiB;AACpD,mBAAO,UAAU,KAAV,CAAP;AACH,SAFM,EAEJ,OAFI,CAEI,IAFJ,EAEU,GAFV,CAAP;AAGH,KArDuC;AAsDxC,gBAAY,UAAU,MAAV,EAAkB;AAC1B,eAAO,OAAO,OAAP,CAAe,KAAf,EAAsB,UAAU,KAAV,EAAiB;AAC1C,mBAAO,UAAU,KAAV,CAAP;AACH,SAFM,EAEJ,OAFI,CAEI,IAFJ,EAEU,GAFV,CAAP;AAGH,KA1DuC;AA2DxC,UAAO;AACH,aAAM,CADH,EACM;AACT,aAAM,CAFH,CAEM;AAFN;AA3DiC,CAA7B,CAAf","file":"ar-sa-compiled.js","sourcesContent":["//! moment.js locale configuration\n//! locale : Arabic (Saudi Arabia) [ar-sa]\n//! author : Suhail Alkowaileet : https://github.com/xsoh\n\nimport moment from '../moment';\n\nvar symbolMap = {\n    '1': '١',\n    '2': '٢',\n    '3': '٣',\n    '4': '٤',\n    '5': '٥',\n    '6': '٦',\n    '7': '٧',\n    '8': '٨',\n    '9': '٩',\n    '0': '٠'\n}, numberMap = {\n    '١': '1',\n    '٢': '2',\n    '٣': '3',\n    '٤': '4',\n    '٥': '5',\n    '٦': '6',\n    '٧': '7',\n    '٨': '8',\n    '٩': '9',\n    '٠': '0'\n};\n\nexport default moment.defineLocale('ar-sa', {\n    months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n    monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /ص|م/,\n    isPM : function (input) {\n        return 'م' === input;\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ص';\n        } else {\n            return 'م';\n        }\n    },\n    calendar : {\n        sameDay: '[اليوم على الساعة] LT',\n        nextDay: '[غدا على الساعة] LT',\n        nextWeek: 'dddd [على الساعة] LT',\n        lastDay: '[أمس على الساعة] LT',\n        lastWeek: 'dddd [على الساعة] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'في %s',\n        past : 'منذ %s',\n        s : 'ثوان',\n        m : 'دقيقة',\n        mm : '%d دقائق',\n        h : 'ساعة',\n        hh : '%d ساعات',\n        d : 'يوم',\n        dd : '%d أيام',\n        M : 'شهر',\n        MM : '%d أشهر',\n        y : 'سنة',\n        yy : '%d سنوات'\n    },\n    preparse: function (string) {\n        return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n            return numberMap[match];\n        }).replace(/،/g, ',');\n    },\n    postformat: function (string) {\n        return string.replace(/\\d/g, function (match) {\n            return symbolMap[match];\n        }).replace(/,/g, '،');\n    },\n    week : {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\n"]}