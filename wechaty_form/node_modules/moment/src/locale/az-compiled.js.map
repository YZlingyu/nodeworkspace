{"version":3,"sources":["az.js"],"names":[],"mappings":"AAAA;AACA;AACA;;AAEA,OAAO,MAAP,MAAmB,WAAnB;;AAEA,IAAI,WAAW;AACX,OAAG,OADQ;AAEX,OAAG,OAFQ;AAGX,OAAG,OAHQ;AAIX,QAAI,OAJO;AAKX,QAAI,OALO;AAMX,OAAG,MANQ;AAOX,OAAG,MAPQ;AAQX,QAAI,MARO;AASX,QAAI,MATO;AAUX,OAAG,OAVQ;AAWX,OAAG,OAXQ;AAYX,SAAK,OAZM;AAaX,OAAG,MAbQ;AAcX,OAAG,OAdQ;AAeX,QAAI,OAfO;AAgBX,QAAI,OAhBO;AAiBX,QAAI,OAjBO;AAkBX,QAAI;AAlBO,CAAf;;AAqBA,eAAe,OAAO,YAAP,CAAoB,IAApB,EAA0B;AACrC,YAAS,+EAA+E,KAA/E,CAAqF,GAArF,CAD4B;AAErC,iBAAc,kDAAkD,KAAlD,CAAwD,GAAxD,CAFuB;AAGrC,cAAW,qEAAqE,KAArE,CAA2E,GAA3E,CAH0B;AAIrC,mBAAgB,8BAA8B,KAA9B,CAAoC,GAApC,CAJqB;AAKrC,iBAAc,uBAAuB,KAAvB,CAA6B,GAA7B,CALuB;AAMrC,wBAAqB,IANgB;AAOrC,oBAAiB;AACb,YAAK,OADQ;AAEb,aAAM,UAFO;AAGb,WAAI,YAHS;AAIb,YAAK,aAJQ;AAKb,aAAM,mBALO;AAMb,cAAO;AANM,KAPoB;AAerC,cAAW;AACP,iBAAU,iBADH;AAEP,iBAAU,iBAFH;AAGP,kBAAW,8BAHJ;AAIP,iBAAU,YAJH;AAKP,kBAAW,8BALJ;AAMP,kBAAW;AANJ,KAf0B;AAuBrC,kBAAe;AACX,gBAAS,UADE;AAEX,cAAO,UAFI;AAGX,WAAI,iBAHO;AAIX,WAAI,YAJO;AAKX,YAAK,WALM;AAMX,WAAI,UANO;AAOX,YAAK,SAPM;AAQX,WAAI,SARO;AASX,YAAK,QATM;AAUX,WAAI,QAVO;AAWX,YAAK,OAXM;AAYX,WAAI,QAZO;AAaX,YAAK;AAbM,KAvBsB;AAsCrC,mBAAe,yBAtCsB;AAuCrC,UAAO,UAAU,KAAV,EAAiB;AACpB,eAAO,oBAAmB,IAAnB,CAAwB,KAAxB;AAAP;AACH,KAzCoC;AA0CrC,cAAW,UAAU,IAAV,EAAgB,MAAhB,EAAwB,OAAxB,EAAiC;AACxC,YAAI,OAAO,CAAX,EAAc;AACV,mBAAO,MAAP;AACH,SAFD,MAEO,IAAI,OAAO,EAAX,EAAe;AAClB,mBAAO,OAAP;AACH,SAFM,MAEA,IAAI,OAAO,EAAX,EAAe;AAClB,mBAAO,QAAP;AACH,SAFM,MAEA;AACH,mBAAO,OAAP;AACH;AACJ,KApDoC;AAqDrC,4BAAwB,uCArDa;AAsDrC,aAAU,UAAU,MAAV,EAAkB;AACxB,YAAI,WAAW,CAAf,EAAkB;AAAG;AACjB,mBAAO,SAAS,OAAhB;AACH;AACD,YAAI,IAAI,SAAS,EAAjB;AAAA,YACI,IAAI,SAAS,GAAT,GAAe,CADvB;AAAA,YAEI,IAAI,UAAU,GAAV,GAAgB,GAAhB,GAAsB,IAF9B;AAGA,eAAO,UAAU,SAAS,CAAT,KAAe,SAAS,CAAT,CAAf,IAA8B,SAAS,CAAT,CAAxC,CAAP;AACH,KA9DoC;AA+DrC,UAAO;AACH,aAAM,CADH,EACM;AACT,aAAM,CAFH,CAEM;AAFN;AA/D8B,CAA1B,CAAf","file":"az-compiled.js","sourcesContent":["//! moment.js locale configuration\n//! locale : Azerbaijani [az]\n//! author : topchiyev : https://github.com/topchiyev\n\nimport moment from '../moment';\n\nvar suffixes = {\n    1: '-inci',\n    5: '-inci',\n    8: '-inci',\n    70: '-inci',\n    80: '-inci',\n    2: '-nci',\n    7: '-nci',\n    20: '-nci',\n    50: '-nci',\n    3: '-üncü',\n    4: '-üncü',\n    100: '-üncü',\n    6: '-ncı',\n    9: '-uncu',\n    10: '-uncu',\n    30: '-uncu',\n    60: '-ıncı',\n    90: '-ıncı'\n};\n\nexport default moment.defineLocale('az', {\n    months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),\n    monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),\n    weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),\n    weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),\n    weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay : '[bugün saat] LT',\n        nextDay : '[sabah saat] LT',\n        nextWeek : '[gələn həftə] dddd [saat] LT',\n        lastDay : '[dünən] LT',\n        lastWeek : '[keçən həftə] dddd [saat] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s sonra',\n        past : '%s əvvəl',\n        s : 'birneçə saniyyə',\n        m : 'bir dəqiqə',\n        mm : '%d dəqiqə',\n        h : 'bir saat',\n        hh : '%d saat',\n        d : 'bir gün',\n        dd : '%d gün',\n        M : 'bir ay',\n        MM : '%d ay',\n        y : 'bir il',\n        yy : '%d il'\n    },\n    meridiemParse: /gecə|səhər|gündüz|axşam/,\n    isPM : function (input) {\n        return /^(gündüz|axşam)$/.test(input);\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'gecə';\n        } else if (hour < 12) {\n            return 'səhər';\n        } else if (hour < 17) {\n            return 'gündüz';\n        } else {\n            return 'axşam';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,\n    ordinal : function (number) {\n        if (number === 0) {  // special case for zero\n            return number + '-ıncı';\n        }\n        var a = number % 10,\n            b = number % 100 - a,\n            c = number >= 100 ? 100 : null;\n        return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\n"]}