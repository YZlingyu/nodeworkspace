{"version":3,"sources":["et.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,CAAE,WAAU,MAAV,EAAkB,OAAlB,EAA2B;AAC1B,WAAO,OAAP,KAAmB,QAAnB,IAA+B,OAAO,MAAP,KAAkB,WAAjD,IACO,OAAO,OAAP,KAAmB,UAD1B,GACuC,QAAQ,QAAQ,WAAR,CAAR,CADvC,GAEA,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAvC,GAA6C,OAAO,CAAC,WAAD,CAAP,EAAsB,OAAtB,CAA7C,GACA,QAAQ,OAAO,MAAf,CAHA;AAIF,CALC,EAKA,IALA,EAKO,UAAU,MAAV,EAAkB;AAAE;;AAG7B,aAAS,mBAAT,CAA6B,MAA7B,EAAqC,aAArC,EAAoD,GAApD,EAAyD,QAAzD,EAAmE;AAC/D,YAAI,SAAS;AACT,iBAAM,CAAC,cAAD,EAAiB,aAAjB,EAAgC,eAAhC,CADG;AAET,iBAAM,CAAC,YAAD,EAAe,WAAf,CAFG;AAGT,kBAAM,CAAC,SAAS,SAAV,EAAqB,SAAS,UAA9B,CAHG;AAIT,iBAAM,CAAC,WAAD,EAAc,WAAd,EAA2B,UAA3B,CAJG;AAKT,kBAAM,CAAC,SAAS,QAAV,EAAoB,SAAS,QAA7B,CALG;AAMT,iBAAM,CAAC,WAAD,EAAc,UAAd,CANG;AAOT,iBAAM,CAAC,SAAD,EAAY,UAAZ,EAAwB,SAAxB,CAPG;AAQT,kBAAM,CAAC,SAAS,MAAV,EAAkB,SAAS,OAA3B,CARG;AAST,iBAAM,CAAC,WAAD,EAAc,OAAd,EAAuB,WAAvB,CATG;AAUT,kBAAM,CAAC,SAAS,QAAV,EAAoB,SAAS,SAA7B;AAVG,SAAb;AAYA,YAAI,aAAJ,EAAmB;AACf,mBAAO,OAAO,GAAP,EAAY,CAAZ,IAAiB,OAAO,GAAP,EAAY,CAAZ,CAAjB,GAAkC,OAAO,GAAP,EAAY,CAAZ,CAAzC;AACH;AACD,eAAO,WAAW,OAAO,GAAP,EAAY,CAAZ,CAAX,GAA4B,OAAO,GAAP,EAAY,CAAZ,CAAnC;AACH;;AAED,QAAI,KAAK,OAAO,YAAP,CAAoB,IAApB,EAA0B;AAC/B,gBAAgB,6FAA6F,KAA7F,CAAmG,GAAnG,CADe;AAE/B,qBAAgB,6DAA6D,KAA7D,CAAmE,GAAnE,CAFe;AAG/B,kBAAgB,iEAAiE,KAAjE,CAAuE,GAAvE,CAHe;AAI/B,uBAAgB,gBAAgB,KAAhB,CAAsB,GAAtB,CAJe;AAK/B,qBAAgB,gBAAgB,KAAhB,CAAsB,GAAtB,CALe;AAM/B,wBAAiB;AACb,gBAAO,MADM;AAEb,iBAAM,SAFO;AAGb,eAAO,YAHM;AAIb,gBAAO,cAJM;AAKb,iBAAO,mBALM;AAMb,kBAAO;AANM,SANc;AAc/B,kBAAW;AACP,qBAAW,YADJ;AAEP,qBAAW,aAFJ;AAGP,sBAAW,oBAHJ;AAIP,qBAAW,YAJJ;AAKP,sBAAW,mBALJ;AAMP,sBAAW;AANJ,SAdoB;AAsB/B,sBAAe;AACX,oBAAS,WADE;AAEX,kBAAS,WAFE;AAGX,eAAS,mBAHE;AAIX,eAAS,mBAJE;AAKX,gBAAS,mBALE;AAMX,eAAS,mBANE;AAOX,gBAAS,mBAPE;AAQX,eAAS,mBARE;AASX,gBAAS,UATE;AAUX,eAAS,mBAVE;AAWX,gBAAS,mBAXE;AAYX,eAAS,mBAZE;AAaX,gBAAS;AAbE,SAtBgB;AAqC/B,gCAAwB,WArCO;AAsC/B,iBAAU,KAtCqB;AAuC/B,cAAO;AACH,iBAAM,CADH,EACM;AACT,iBAAM,CAFH,CAEM;AAFN;AAvCwB,KAA1B,CAAT;;AA6CA,WAAO,EAAP;AAEC,CA1EC,CAAD","file":"et-compiled.js","sourcesContent":["//! moment.js locale configuration\n//! locale : Estonian [et]\n//! author : Henry Kehlmann : https://github.com/madhenry\n//! improvements : Illimar Tambek : https://github.com/ragulka\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n    var format = {\n        's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n        'm' : ['ühe minuti', 'üks minut'],\n        'mm': [number + ' minuti', number + ' minutit'],\n        'h' : ['ühe tunni', 'tund aega', 'üks tund'],\n        'hh': [number + ' tunni', number + ' tundi'],\n        'd' : ['ühe päeva', 'üks päev'],\n        'M' : ['kuu aja', 'kuu aega', 'üks kuu'],\n        'MM': [number + ' kuu', number + ' kuud'],\n        'y' : ['ühe aasta', 'aasta', 'üks aasta'],\n        'yy': [number + ' aasta', number + ' aastat']\n    };\n    if (withoutSuffix) {\n        return format[key][2] ? format[key][2] : format[key][1];\n    }\n    return isFuture ? format[key][0] : format[key][1];\n}\n\nvar et = moment.defineLocale('et', {\n    months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n    monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n    weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n    weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),\n    weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),\n    longDateFormat : {\n        LT   : 'H:mm',\n        LTS : 'H:mm:ss',\n        L    : 'DD.MM.YYYY',\n        LL   : 'D. MMMM YYYY',\n        LLL  : 'D. MMMM YYYY H:mm',\n        LLLL : 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar : {\n        sameDay  : '[Täna,] LT',\n        nextDay  : '[Homme,] LT',\n        nextWeek : '[Järgmine] dddd LT',\n        lastDay  : '[Eile,] LT',\n        lastWeek : '[Eelmine] dddd LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s pärast',\n        past   : '%s tagasi',\n        s      : processRelativeTime,\n        m      : processRelativeTime,\n        mm     : processRelativeTime,\n        h      : processRelativeTime,\n        hh     : processRelativeTime,\n        d      : processRelativeTime,\n        dd     : '%d päeva',\n        M      : processRelativeTime,\n        MM     : processRelativeTime,\n        y      : processRelativeTime,\n        yy     : processRelativeTime\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn et;\n\n})));\n"]}