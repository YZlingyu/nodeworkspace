{"version":3,"sources":["de-ch.js"],"names":[],"mappings":"AAAA;AACA;AACA;;AAEA,CAAE,WAAU,MAAV,EAAkB,OAAlB,EAA2B;AAC1B,WAAO,OAAP,KAAmB,QAAnB,IAA+B,OAAO,MAAP,KAAkB,WAAjD,IACO,OAAO,OAAP,KAAmB,UAD1B,GACuC,QAAQ,QAAQ,WAAR,CAAR,CADvC,GAEA,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAvC,GAA6C,OAAO,CAAC,WAAD,CAAP,EAAsB,OAAtB,CAA7C,GACA,QAAQ,OAAO,MAAf,CAHA;AAIF,CALC,EAKA,IALA,EAKO,UAAU,MAAV,EAAkB;AAAE;;AAG7B;;AAEA,aAAS,mBAAT,CAA6B,MAA7B,EAAqC,aAArC,EAAoD,GAApD,EAAyD,QAAzD,EAAmE;AAC/D,YAAI,SAAS;AACT,iBAAK,CAAC,aAAD,EAAgB,cAAhB,CADI;AAET,iBAAK,CAAC,aAAD,EAAgB,cAAhB,CAFI;AAGT,iBAAK,CAAC,SAAD,EAAY,WAAZ,CAHI;AAIT,kBAAM,CAAC,SAAS,OAAV,EAAmB,SAAS,QAA5B,CAJG;AAKT,iBAAK,CAAC,WAAD,EAAc,aAAd,CALI;AAMT,kBAAM,CAAC,SAAS,SAAV,EAAqB,SAAS,UAA9B,CANG;AAOT,iBAAK,CAAC,UAAD,EAAa,YAAb,CAPI;AAQT,kBAAM,CAAC,SAAS,QAAV,EAAoB,SAAS,SAA7B;AARG,SAAb;AAUA,eAAO,gBAAgB,OAAO,GAAP,EAAY,CAAZ,CAAhB,GAAiC,OAAO,GAAP,EAAY,CAAZ,CAAxC;AACH;;AAED,QAAI,OAAO,OAAO,YAAP,CAAoB,OAApB,EAA6B;AACpC,gBAAS,qFAAqF,KAArF,CAA2F,GAA3F,CAD2B;AAEpC,qBAAc,gEAAgE,KAAhE,CAAsE,GAAtE,CAFsB;AAGpC,0BAAmB,IAHiB;AAIpC,kBAAW,8DAA8D,KAA9D,CAAoE,GAApE,CAJyB;AAKpC,uBAAgB,uBAAuB,KAAvB,CAA6B,GAA7B,CALoB;AAMpC,qBAAc,uBAAuB,KAAvB,CAA6B,GAA7B,CANsB;AAOpC,4BAAqB,IAPe;AAQpC,wBAAiB;AACb,gBAAI,OADS;AAEb,iBAAK,UAFQ;AAGb,eAAI,YAHS;AAIb,gBAAK,cAJQ;AAKb,iBAAM,oBALO;AAMb,kBAAO;AANM,SARmB;AAgBpC,kBAAW;AACP,qBAAS,qBADF;AAEP,sBAAU,GAFH;AAGP,qBAAS,sBAHF;AAIP,sBAAU,oBAJH;AAKP,qBAAS,uBALF;AAMP,sBAAU;AANH,SAhByB;AAwBpC,sBAAe;AACX,oBAAS,OADE;AAEX,kBAAO,QAFI;AAGX,eAAI,mBAHO;AAIX,eAAI,mBAJO;AAKX,gBAAK,YALM;AAMX,eAAI,mBANO;AAOX,gBAAK,YAPM;AAQX,eAAI,mBARO;AASX,gBAAK,mBATM;AAUX,eAAI,mBAVO;AAWX,gBAAK,mBAXM;AAYX,eAAI,mBAZO;AAaX,gBAAK;AAbM,SAxBqB;AAuCpC,gCAAwB,WAvCY;AAwCpC,iBAAU,KAxC0B;AAyCpC,cAAO;AACH,iBAAM,CADH,EACM;AACT,iBAAM,CAFH,CAEM;AAFN;AAzC6B,KAA7B,CAAX;;AA+CA,WAAO,IAAP;AAEC,CAzEC,CAAD","file":"de-ch-compiled.js","sourcesContent":["//! moment.js locale configuration\n//! locale : German (Switzerland) [de-ch]\n//! author : sschueller : https://github.com/sschueller\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n// based on: https://www.bk.admin.ch/dokumentation/sprachen/04915/05016/index.html?lang=de#\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n    var format = {\n        'm': ['eine Minute', 'einer Minute'],\n        'h': ['eine Stunde', 'einer Stunde'],\n        'd': ['ein Tag', 'einem Tag'],\n        'dd': [number + ' Tage', number + ' Tagen'],\n        'M': ['ein Monat', 'einem Monat'],\n        'MM': [number + ' Monate', number + ' Monaten'],\n        'y': ['ein Jahr', 'einem Jahr'],\n        'yy': [number + ' Jahre', number + ' Jahren']\n    };\n    return withoutSuffix ? format[key][0] : format[key][1];\n}\n\nvar deCh = moment.defineLocale('de-ch', {\n    months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n    monthsShort : 'Jan._Febr._März_April_Mai_Juni_Juli_Aug._Sept._Okt._Nov._Dez.'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n    weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT: 'HH.mm',\n        LTS: 'HH.mm.ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D. MMMM YYYY',\n        LLL : 'D. MMMM YYYY HH.mm',\n        LLLL : 'dddd, D. MMMM YYYY HH.mm'\n    },\n    calendar : {\n        sameDay: '[heute um] LT [Uhr]',\n        sameElse: 'L',\n        nextDay: '[morgen um] LT [Uhr]',\n        nextWeek: 'dddd [um] LT [Uhr]',\n        lastDay: '[gestern um] LT [Uhr]',\n        lastWeek: '[letzten] dddd [um] LT [Uhr]'\n    },\n    relativeTime : {\n        future : 'in %s',\n        past : 'vor %s',\n        s : 'ein paar Sekunden',\n        m : processRelativeTime,\n        mm : '%d Minuten',\n        h : processRelativeTime,\n        hh : '%d Stunden',\n        d : processRelativeTime,\n        dd : processRelativeTime,\n        M : processRelativeTime,\n        MM : processRelativeTime,\n        y : processRelativeTime,\n        yy : processRelativeTime\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn deCh;\n\n})));\n"]}