{"version":3,"sources":["asap-compiled.js"],"names":[],"mappings":"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","file":"asap-compiled-compiled.js","sourcesContent":["var len = 0;\nvar vertxNext;\nvar customSchedulerFn;\n\nexport var asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nexport function setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nexport function setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  return function () {\n    vertxNext(flush);\n  };\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  return function () {\n    setTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\n//# sourceMappingURL=asap-compiled.js.map"]}