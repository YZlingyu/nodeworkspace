{"version":3,"sources":["polyfill-compiled.js"],"names":[],"mappings":"AAAA;AACA,OAAO,OAAP,MAAoB,WAApB;;AAEA,eAAe,SAAS,QAAT,GAAoB;AAC/B,QAAI,KAAJ;;AAEA,QAAI,OAAO,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,gBAAQ,MAAR;AACH,KAFD,MAEO,IAAI,OAAO,IAAP,KAAgB,WAApB,EAAiC;AACpC,gBAAQ,IAAR;AACH,KAFM,MAEA;AACH,YAAI;AACA,oBAAQ,SAAS,aAAT,GAAR;AACH,SAFD,CAEE,OAAO,CAAP,EAAU;AACR,kBAAM,IAAI,KAAJ,CAAU,0EAAV,CAAN;AACH;AACJ;;AAED,QAAI,IAAI,MAAM,OAAd;;AAEA,QAAI,KAAK,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,EAAE,OAAF,EAA/B,MAAgD,kBAArD,IAA2E,CAAC,EAAE,IAAlF,EAAwF;AACpF;AACH;;AAED,UAAM,OAAN,GAAgB,OAAhB;AACH;;AAED","file":"polyfill-compiled-compiled.js","sourcesContent":["/*global self*/\nimport Promise from './promise';\n\nexport default function polyfill() {\n    var local;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n    }\n\n    local.Promise = Promise;\n}\n\n//# sourceMappingURL=polyfill-compiled.js.map"]}