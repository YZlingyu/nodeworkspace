{"version":3,"sources":["insert_bench-compiled.js"],"names":[],"mappings":"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","file":"insert_bench-compiled-compiled.js","sourcesContent":["var MongoClient = require('./').MongoClient,\n    assert = require('assert');\n\n// var memwatch = require('memwatch-next');\n// memwatch.on('leak', function(info) {\n//   console.log(\"======== leak\")\n// });\n//\n// memwatch.on('stats', function(stats) {\n//   console.log(\"======== stats\")\n//   console.dir(stats)\n// });\n\n// // Take first snapshot\n// var hd = new memwatch.HeapDiff();\n\nMongoClient.connect('mongodb://localhost:27017/bench', function (err, db) {\n  var docs = [];\n  var total = 1000;\n  var count = total;\n  var measurements = [];\n\n  // Insert a bunch of documents\n  for (var i = 0; i < 100; i++) {\n    docs.push(JSON.parse(data));\n  }\n\n  var col = db.collection('inserts');\n\n  function execute(col, callback) {\n    var start = new Date().getTime();\n\n    col.find({}).limit(100).toArray(function (e, docs) {\n      measurements.push(new Date().getTime() - start);\n      assert.equal(null, e);\n      callback();\n    });\n  }\n\n  console.log(\"== insert documents\");\n  col.insert(docs, function (e, r) {\n    docs = [];\n    assert.equal(null, e);\n\n    console.log(\"== start bench\");\n    for (var i = 0; i < total; i++) {\n      execute(col, function (e) {\n        count = count - 1;\n\n        if (count == 0) {\n          // Calculate total execution time for operations\n          var totalTime = measurements.reduce(function (prev, curr) {\n            return prev + curr;\n          }, 0);\n\n          console.log(\"===========================================\");\n          console.log(\"total time: \" + totalTime);\n\n          // var diff = hd.end();\n          // console.log(\"===========================================\");\n          // console.log(JSON.stringify(diff, null, 2))\n\n          db.close();\n          process.exit(0);\n        }\n      });\n    }\n  });\n});\n\nvar data = JSON.stringify({\n  \"data\": [{\n    \"_id\": 1,\n    \"x\": 11\n  }, {\n    \"_id\": 2,\n    \"x\": 22\n  }, {\n    \"_id\": 3,\n    \"x\": 33\n  }],\n  \"collection_name\": \"test\",\n  \"database_name\": \"command-monitoring-tests\",\n  \"tests\": [{\n    \"description\": \"A successful mixed bulk write\",\n    \"operation\": {\n      \"name\": \"bulkWrite\",\n      \"arguments\": {\n        \"requests\": [{\n          \"insertOne\": {\n            \"document\": {\n              \"_id\": 4,\n              \"x\": 44\n            }\n          }\n        }, {\n          \"updateOne\": {\n            \"filter\": {\n              \"_id\": 3\n            },\n            \"update\": {\n              \"set\": {\n                \"x\": 333\n              }\n            }\n          }\n        }]\n      }\n    },\n    \"expectations\": [{\n      \"command_started_event\": {\n        \"command\": {\n          \"insert\": \"test\",\n          \"documents\": [{\n            \"_id\": 4,\n            \"x\": 44\n          }],\n          \"ordered\": true\n        },\n        \"command_name\": \"insert\",\n        \"database_name\": \"command-monitoring-tests\"\n      }\n    }, {\n      \"command_succeeded_event\": {\n        \"reply\": {\n          \"ok\": 1.0,\n          \"n\": 1\n        },\n        \"command_name\": \"insert\"\n      }\n    }, {\n      \"command_started_event\": {\n        \"command\": {\n          \"update\": \"test\",\n          \"updates\": [{\n            \"q\": {\n              \"_id\": 3\n            },\n            \"u\": {\n              \"set\": {\n                \"x\": 333\n              }\n            },\n            \"upsert\": false,\n            \"multi\": false\n          }],\n          \"ordered\": true\n        },\n        \"command_name\": \"update\",\n        \"database_name\": \"command-monitoring-tests\"\n      }\n    }, {\n      \"command_succeeded_event\": {\n        \"reply\": {\n          \"ok\": 1.0,\n          \"n\": 1\n        },\n        \"command_name\": \"update\"\n      }\n    }]\n  }, {\n    \"description\": \"A successful unordered bulk write with an unacknowledged write concern\",\n    \"operation\": {\n      \"name\": \"bulkWrite\",\n      \"arguments\": {\n        \"requests\": [{\n          \"insertOne\": {\n            \"document\": {\n              \"_id\": 4,\n              \"x\": 44\n            }\n          }\n        }],\n        \"ordered\": false,\n        \"writeConcern\": {\n          \"w\": 0\n        }\n      }\n    },\n    \"expectations\": [{\n      \"command_started_event\": {\n        \"command\": {\n          \"insert\": \"test\",\n          \"documents\": [{\n            \"_id\": 4,\n            \"x\": 44\n          }],\n          \"ordered\": false,\n          \"writeConcern\": {\n            \"w\": 0\n          }\n        },\n        \"command_name\": \"insert\",\n        \"database_name\": \"command-monitoring-tests\"\n      }\n    }, {\n      \"command_succeeded_event\": {\n        \"reply\": {\n          \"ok\": 1.0\n        },\n        \"command_name\": \"insert\"\n      }\n    }]\n  }]\n});\n\n//# sourceMappingURL=insert_bench-compiled.js.map"]}