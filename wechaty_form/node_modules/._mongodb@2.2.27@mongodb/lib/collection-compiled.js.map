{"version":3,"sources":["collection.js"],"names":[],"mappings":"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","file":"collection-compiled.js","sourcesContent":["\"use strict\";\n\nvar checkCollectionName = require('./utils').checkCollectionName\n  , ObjectID = require('mongodb-core').BSON.ObjectID\n  , Long = require('mongodb-core').BSON.Long\n  , Code = require('mongodb-core').BSON.Code\n  , f = require('util').format\n  , AggregationCursor = require('./aggregation_cursor')\n  , MongoError = require('mongodb-core').MongoError\n  , shallowClone = require('./utils').shallowClone\n  , isObject = require('./utils').isObject\n  , toError = require('./utils').toError\n  , normalizeHintField = require('./utils').normalizeHintField\n  , handleCallback = require('./utils').handleCallback\n  , decorateCommand = require('./utils').decorateCommand\n  , formattedOrderClause = require('./utils').formattedOrderClause\n  , ReadPreference = require('./read_preference')\n  , CoreReadPreference = require('mongodb-core').ReadPreference\n  , CommandCursor = require('./command_cursor')\n  , Define = require('./metadata')\n  , Cursor = require('./cursor')\n  , unordered = require('./bulk/unordered')\n  , ordered = require('./bulk/ordered')\n  , assign = require('./utils').assign\n  , mergeOptions = require('./utils').mergeOptions;\n\n/**\n * @fileOverview The **Collection** class is an internal class that embodies a MongoDB collection\n * allowing for insert/update/remove/find and other command operation on that MongoDB collection.\n *\n * **COLLECTION Cannot directly be instantiated**\n * @example\n * var MongoClient = require('mongodb').MongoClient,\n *   test = require('assert');\n * // Connection url\n * var url = 'mongodb://localhost:27017/test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, db) {\n *   // Create a collection we want to drop later\n *   var col = db.collection('createIndexExample1');\n *   // Show that duplicate records got dropped\n *   col.find({}).toArray(function(err, items) {\n *     test.equal(null, err);\n *     test.equal(4, items.length);\n *     db.close();\n *   });\n * });\n */\n\nvar mergeKeys = ['readPreference', 'ignoreUndefined'];\n\n/**\n * Create a new Collection instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @property {string} collectionName Get the collection name.\n * @property {string} namespace Get the full collection namespace.\n * @property {object} writeConcern The current write concern values.\n * @property {object} readConcern The current read concern values.\n * @property {object} hint Get current index hint for collection.\n * @return {Collection} a Collection instance.\n */\nvar Collection = function(db, topology, dbName, name, pkFactory, options) {\n  checkCollectionName(name);\n\n  // Unpack variables\n  var internalHint = null;\n  var slaveOk = options == null || options.slaveOk == null ? db.slaveOk : options.slaveOk;\n  var serializeFunctions = options == null || options.serializeFunctions == null ? db.s.options.serializeFunctions : options.serializeFunctions;\n  var raw = options == null || options.raw == null ? db.s.options.raw : options.raw;\n  var promoteLongs = options == null || options.promoteLongs == null ? db.s.options.promoteLongs : options.promoteLongs;\n  var promoteValues = options == null || options.promoteValues == null ? db.s.options.promoteValues : options.promoteValues;\n  var promoteBuffers = options == null || options.promoteBuffers == null ? db.s.options.promoteBuffers : options.promoteBuffers;\n  var readPreference = null;\n  var collectionHint = null;\n  var namespace = f(\"%s.%s\", dbName, name);\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary;\n\n  // No promise library selected fall back\n  if(!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ?\n      global.Promise : require('es6-promise').Promise;\n  }\n\n  // Assign the right collection level readPreference\n  if(options && options.readPreference) {\n    readPreference = options.readPreference;\n  } else if(db.options.readPreference) {\n    readPreference = db.options.readPreference;\n  }\n\n  // Set custom primary key factory if provided\n  pkFactory = pkFactory == null\n    ? ObjectID\n    : pkFactory;\n\n  // Internal state\n  this.s = {\n    // Set custom primary key factory if provided\n      pkFactory: pkFactory\n    // Db\n    , db: db\n    // Topology\n    , topology: topology\n    // dbName\n    , dbName: dbName\n    // Options\n    , options: options\n    // Namespace\n    , namespace: namespace\n    // Read preference\n    , readPreference: readPreference\n    // SlaveOK\n    , slaveOk: slaveOk\n    // Serialize functions\n    , serializeFunctions: serializeFunctions\n    // Raw\n    , raw: raw\n    // promoteLongs\n    , promoteLongs: promoteLongs\n    // promoteValues\n    , promoteValues: promoteValues\n    // promoteBuffers\n    , promoteBuffers: promoteBuffers\n    // internalHint\n    , internalHint: internalHint\n    // collectionHint\n    , collectionHint: collectionHint\n    // Name\n    , name: name\n    // Promise library\n    , promiseLibrary: promiseLibrary\n    // Read Concern\n    , readConcern: options.readConcern\n  }\n}\n\nvar define = Collection.define = new Define('Collection', Collection, false);\n\nObject.defineProperty(Collection.prototype, 'collectionName', {\n  enumerable: true, get: function() { return this.s.name; }\n});\n\nObject.defineProperty(Collection.prototype, 'namespace', {\n  enumerable: true, get: function() { return this.s.namespace; }\n});\n\nObject.defineProperty(Collection.prototype, 'readConcern', {\n  enumerable: true, get: function() { return this.s.readConcern || {level: 'local'}; }\n});\n\nObject.defineProperty(Collection.prototype, 'writeConcern', {\n  enumerable:true,\n  get: function() {\n    var ops = {};\n    if(this.s.options.w != null) ops.w = this.s.options.w;\n    if(this.s.options.j != null) ops.j = this.s.options.j;\n    if(this.s.options.fsync != null) ops.fsync = this.s.options.fsync;\n    if(this.s.options.wtimeout != null) ops.wtimeout = this.s.options.wtimeout;\n    return ops;\n  }\n});\n\n/**\n * @ignore\n */\nObject.defineProperty(Collection.prototype, \"hint\", {\n    enumerable: true\n  , get: function () { return this.s.collectionHint; }\n  , set: function (v) { this.s.collectionHint = normalizeHintField(v); }\n});\n\n/**\n * Creates a cursor for a query that can be used to iterate over results from MongoDB\n * @method\n * @param {object} query The cursor query object.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCollection.prototype.find = function() {\n  var options\n    , args = Array.prototype.slice.call(arguments, 0)\n    , has_callback = typeof args[args.length - 1] === 'function'\n    , has_weird_callback = typeof args[0] === 'function'\n    , callback = has_callback ? args.pop() : (has_weird_callback ? args.shift() : null)\n    , len = args.length\n    , selector = len >= 1 ? args[0] : {}\n    , fields = len >= 2 ? args[1] : undefined;\n\n  if(len === 1 && has_weird_callback) {\n    // backwards compat for callback?, options case\n    selector = {};\n    options = args[0];\n  }\n\n  if(len === 2 && fields !== undefined && !Array.isArray(fields)) {\n    var fieldKeys = Object.keys(fields);\n    var is_option = false;\n\n    for(var i = 0; i < fieldKeys.length; i++) {\n      if(testForFields[fieldKeys[i]] != null) {\n        is_option = true;\n        break;\n      }\n    }\n\n    if(is_option) {\n      options = fields;\n      fields = undefined;\n    } else {\n      options = {};\n    }\n  } else if(len === 2 && Array.isArray(fields) && !Array.isArray(fields[0])) {\n    var newFields = {};\n    // Rewrite the array\n    for(i = 0; i < fields.length; i++) {\n      newFields[fields[i]] = 1;\n    }\n    // Set the fields\n    fields = newFields;\n  }\n\n  if(3 === len) {\n    options = args[2];\n  }\n\n  // Ensure selector is not null\n  selector = selector == null ? {} : selector;\n  // Validate correctness off the selector\n  var object = selector;\n  if(Buffer.isBuffer(object)) {\n    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;\n    if(object_size != object.length)  {\n      var error = new Error(\"query selector raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n      error.name = 'MongoError';\n      throw error;\n    }\n  }\n\n  // Validate correctness of the field selector\n  object = fields;\n  if(Buffer.isBuffer(object)) {\n    object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;\n    if(object_size != object.length)  {\n      error = new Error(\"query fields raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n      error.name = 'MongoError';\n      throw error;\n    }\n  }\n\n  // Check special case where we are using an objectId\n  if(selector != null && selector._bsontype == 'ObjectID') {\n    selector = {_id:selector};\n  }\n\n  // If it's a serialized fields field we need to just let it through\n  // user be warned it better be good\n  if(options && options.fields && !(Buffer.isBuffer(options.fields))) {\n    fields = {};\n\n    if(Array.isArray(options.fields)) {\n      if(!options.fields.length) {\n        fields['_id'] = 1;\n      } else {\n        var l = options.fields.length;\n\n        for (i = 0; i < l; i++) {\n          fields[options.fields[i]] = 1;\n        }\n      }\n    } else {\n      fields = options.fields;\n    }\n  }\n\n  if (!options) options = {};\n\n  var newOptions = {};\n\n  // Make a shallow copy of the collection options\n  for(var key in this.s.options) {\n    if(mergeKeys.indexOf(key) != -1) {\n      newOptions[key] = this.s.options[key];\n    }\n  }\n\n  // Make a shallow copy of options\n  for (var key in options) {\n    newOptions[key] = options[key];\n  }\n\n  // Unpack options\n  newOptions.skip = len > 3 ? args[2] : options.skip ? options.skip : 0;\n  newOptions.limit = len > 3 ? args[3] : options.limit ? options.limit : 0;\n  newOptions.raw = options.raw != null && typeof options.raw === 'boolean' ? options.raw : this.s.raw;\n  newOptions.hint = options.hint != null ? normalizeHintField(options.hint) : this.s.collectionHint;\n  newOptions.timeout = len == 5 ? args[4] : typeof options.timeout === 'undefined' ? undefined : options.timeout;\n  // // If we have overridden slaveOk otherwise use the default db setting\n  newOptions.slaveOk = options.slaveOk != null ? options.slaveOk : this.s.db.slaveOk;\n\n  // Add read preference if needed\n  newOptions = getReadPreference(this, newOptions, this.s.db, this);\n\n  // Set slave ok to true if read preference different from primary\n  if(newOptions.readPreference != null\n    && (newOptions.readPreference != 'primary' || newOptions.readPreference.mode != 'primary')) {\n    newOptions.slaveOk = true;\n  }\n\n  // Ensure the query is an object\n  if(selector != null && typeof selector != 'object') {\n    throw MongoError.create({message: \"query selector must be an object\", driver:true });\n  }\n\n  // Build the find command\n  var findCommand = {\n      find: this.s.namespace\n    , limit: newOptions.limit\n    , skip: newOptions.skip\n    , query: selector\n  }\n\n  // Ensure we use the right await data option\n  if(typeof newOptions.awaitdata == 'boolean')  {\n    newOptions.awaitData = newOptions.awaitdata\n  }\n\n  // Translate to new command option noCursorTimeout\n  if(typeof newOptions.timeout == 'boolean') newOptions.noCursorTimeout = newOptions.timeout;\n\n  // Merge in options to command\n  for(var name in newOptions) {\n    if(newOptions[name] != null) findCommand[name] = newOptions[name];\n  }\n\n  // Format the fields\n  var formatFields = function(fields) {\n    var object = {};\n    if(Array.isArray(fields)) {\n      for(var i = 0; i < fields.length; i++) {\n        if(Array.isArray(fields[i])) {\n          object[fields[i][0]] = fields[i][1];\n        } else {\n          object[fields[i][0]] = 1;\n        }\n      }\n    } else {\n      object = fields;\n    }\n\n    return object;\n  }\n\n  // Special treatment for the fields selector\n  if(fields) findCommand.fields = formatFields(fields);\n\n  // Add db object to the new options\n  newOptions.db = this.s.db;\n\n  // Add the promise library\n  newOptions.promiseLibrary = this.s.promiseLibrary;\n\n  // Set raw if available at collection level\n  if(newOptions.raw == null && typeof this.s.raw == 'boolean') newOptions.raw = this.s.raw;\n  // Set promoteLongs if available at collection level\n  if(newOptions.promoteLongs == null && typeof this.s.promoteLongs == 'boolean') newOptions.promoteLongs = this.s.promoteLongs;\n  if(newOptions.promoteValues == null && typeof this.s.promoteValues == 'boolean') newOptions.promoteValues = this.s.promoteValues;\n  if(newOptions.promoteBuffers == null && typeof this.s.promoteBuffers == 'boolean') newOptions.promoteBuffers = this.s.promoteBuffers;\n\n  // Sort options\n  if(findCommand.sort) {\n    findCommand.sort = formattedOrderClause(findCommand.sort);\n  }\n\n  // Set the readConcern\n  if(this.s.readConcern) {\n    findCommand.readConcern = this.s.readConcern;\n  }\n\n  // Decorate find command with collation options\n  decorateWithCollation(findCommand, this, options);\n\n  // Create the cursor\n  if(typeof callback == 'function') return handleCallback(callback, null, this.s.topology.cursor(this.s.namespace, findCommand, newOptions));\n  return this.s.topology.cursor(this.s.namespace, findCommand, newOptions);\n}\n\ndefine.classMethod('find', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Inserts a single document into MongoDB. If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {object} doc Document to insert.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {Collection~insertOneWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.insertOne = function(doc, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n  if(Array.isArray(doc) && typeof callback == 'function') {\n    return callback(MongoError.create({message: 'doc parameter must be an object', driver:true }));\n  } else if(Array.isArray(doc)) {\n    return new this.s.promiseLibrary(function(resolve, reject) {\n      reject(MongoError.create({message: 'doc parameter must be an object', driver:true }));\n    });\n  }\n\n  // Add ignoreUndfined\n  if(this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return insertOne(self, doc, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    insertOne(self, doc, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar insertOne = function(self, doc, options, callback) {\n  insertDocuments(self, [doc], options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    // Workaround for pre 2.6 servers\n    if(r == null) return callback(null, {result: {ok:1}});\n    // Add values to top level to ensure crud spec compatibility\n    r.insertedCount = r.result.n;\n    r.insertedId = doc._id;\n    if(callback) callback(null, r);\n  });\n}\n\nvar mapInserManyResults = function(docs, r) {\n  var ids = r.getInsertedIds();\n  var keys = Object.keys(ids);\n  var finalIds = new Array(keys.length);\n\n  for(var i = 0; i < keys.length; i++) {\n    if(ids[keys[i]]._id) {\n      finalIds[ids[keys[i]].index] = ids[keys[i]]._id;\n    }\n  }\n\n  var finalResult = {\n    result: {ok: 1, n: r.insertedCount},\n    ops: docs,\n    insertedCount: r.insertedCount,\n    insertedIds: finalIds\n  };\n\n  if(r.getLastOp()) {\n    finalResult.result.opTime = r.getLastOp();\n  }\n\n  return finalResult;\n}\n\ndefine.classMethod('insertOne', {callback: true, promise:true});\n\n/**\n * Inserts an array of documents into MongoDB. If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {object[]} docs Documents to insert.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {boolean} [options.ordered=true] If true, when an insert fails, don't execute the remaining writes. If false, continue with remaining inserts when one fails.\n * @param {Collection~insertWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.insertMany = function(docs, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {ordered:true};\n  if(!Array.isArray(docs) && typeof callback == 'function') {\n    return callback(MongoError.create({message: 'docs parameter must be an array of documents', driver:true }));\n  } else if(!Array.isArray(docs)) {\n    return new this.s.promiseLibrary(function(resolve, reject) {\n      reject(MongoError.create({message: 'docs parameter must be an array of documents', driver:true }));\n    });\n  }\n\n  // Get the write concern options\n  if(typeof options.checkKeys != 'boolean') {\n    options.checkKeys = true;\n  }\n\n  // If keep going set unordered\n  options['serializeFunctions'] = options['serializeFunctions'] || self.s.serializeFunctions;\n\n  // Set up the force server object id\n  var forceServerObjectId = typeof options.forceServerObjectId == 'boolean'\n    ? options.forceServerObjectId : self.s.db.options.forceServerObjectId;\n\n  // Do we want to force the server to assign the _id key\n  if(forceServerObjectId !== true) {\n    // Add _id if not specified\n    for(var i = 0; i < docs.length; i++) {\n      if(docs[i]._id == null) docs[i]._id = self.s.pkFactory.createPk();\n    }\n  }\n\n  // Generate the bulk write operations\n  var operations = [{\n    insertMany: docs\n  }];\n\n  // Execute using callback\n  if(typeof callback == 'function') return bulkWrite(self, operations, options, function(err, r) {\n    if(err) return callback(err, r);\n    callback(null, mapInserManyResults(docs, r));\n  });\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    bulkWrite(self, operations, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(mapInserManyResults(docs, r));\n    });\n  });\n}\n\ndefine.classMethod('insertMany', {callback: true, promise:true});\n\n/**\n * @typedef {Object} Collection~BulkWriteOpResult\n * @property {number} insertedCount Number of documents inserted.\n * @property {number} matchedCount Number of documents matched for update.\n * @property {number} modifiedCount Number of documents modified.\n * @property {number} deletedCount Number of documents deleted.\n * @property {number} upsertedCount Number of documents upserted.\n * @property {object} insertedIds Inserted document generated Id's, hash key is the index of the originating operation\n * @property {object} upsertedIds Upserted document generated Id's, hash key is the index of the originating operation\n * @property {object} result The command result object.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~bulkWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~BulkWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Perform a bulkWrite operation without a fluent API\n *\n * Legal operation types are\n *\n *  { insertOne: { document: { a: 1 } } }\n *\n *  { updateOne: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }\n *\n *  { updateMany: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }\n *\n *  { deleteOne: { filter: {c:1} } }\n *\n *  { deleteMany: { filter: {c:1} } }\n *\n *  { replaceOne: { filter: {c:3}, replacement: {c:4}, upsert:true}}\n *\n * If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {object[]} operations Bulk operations to perform.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.ordered=true] Execute write operation in ordered or unordered fashion.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {Collection~bulkWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.bulkWrite = function(operations, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {ordered:true};\n\n  if(!Array.isArray(operations)) {\n    throw MongoError.create({message: \"operations must be an array of documents\", driver:true });\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return bulkWrite(self, operations, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    bulkWrite(self, operations, options, function(err, r) {\n      if(err && r == null) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar bulkWrite = function(self, operations, options, callback) {\n  // Add ignoreUndfined\n  if(self.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = self.s.options.ignoreUndefined;\n  }\n\n  // Create the bulk operation\n  var bulk = options.ordered == true || options.ordered == null ? self.initializeOrderedBulkOp(options) : self.initializeUnorderedBulkOp(options);\n\n  // Do we have a collation\n  var collation = false;\n\n  // for each op go through and add to the bulk\n  try {\n    for(var i = 0; i < operations.length; i++) {\n      // Get the operation type\n      var key = Object.keys(operations[i])[0];\n      // Check if we have a collation\n      if(operations[i][key].collation) {\n        collation = true;\n      }\n\n      // Pass to the raw bulk\n      bulk.raw(operations[i]);\n    }\n  } catch(err) {\n    return callback(err, null);\n  }\n\n  // Final options for write concern\n  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);\n  var writeCon = finalOptions.writeConcern ? finalOptions.writeConcern : {};\n  var capabilities = self.s.topology.capabilities();\n\n  // Did the user pass in a collation, check if our write server supports it\n  if(collation && capabilities && !capabilities.commandsTakeCollation) {\n    return callback(new MongoError(f('server/primary/mongos does not support collation')));\n  }\n\n  // Execute the bulk\n  bulk.execute(writeCon, function(err, r) {\n    // We have connection level error\n    if(!r && err) return callback(err, null);\n    // We have single error\n    if(r && r.hasWriteErrors() && r.getWriteErrorCount() == 1) {\n      return callback(toError(r.getWriteErrorAt(0)), r);\n    }\n\n    r.insertedCount = r.nInserted;\n    r.matchedCount = r.nMatched;\n    r.modifiedCount = r.nModified || 0;\n    r.deletedCount = r.nRemoved;\n    r.upsertedCount = r.getUpsertedIds().length;\n    r.upsertedIds = {};\n    r.insertedIds = {};\n\n    // Update the n\n    r.n = r.insertedCount;\n\n    // Inserted documents\n    var inserted = r.getInsertedIds();\n    // Map inserted ids\n    for(var i = 0; i < inserted.length; i++) {\n      r.insertedIds[inserted[i].index] = inserted[i]._id;\n    }\n\n    // Upserted documents\n    var upserted = r.getUpsertedIds();\n    // Map upserted ids\n    for(i = 0; i < upserted.length; i++) {\n      r.upsertedIds[upserted[i].index] = upserted[i]._id;\n    }\n\n    // Check if we have write errors\n    if(r.hasWriteErrors()) {\n      // Get all the errors\n      var errors = r.getWriteErrors();\n      // Return the MongoError object\n      return callback(toError({\n        message: 'write operation failed', code: errors[0].code, writeErrors: errors\n      }), r);\n    }\n\n    // Check if we have a writeConcern error\n    if(r.getWriteConcernError()) {\n      // Return the MongoError object\n      return callback(toError(r.getWriteConcernError()), r);\n    }\n\n    // Return the results\n    callback(null, r);\n  });\n}\n\nvar insertDocuments = function(self, docs, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n  // Ensure we are operating on an array op docs\n  docs = Array.isArray(docs) ? docs : [docs];\n\n  // Get the write concern options\n  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);\n  if(typeof finalOptions.checkKeys != 'boolean') finalOptions.checkKeys = true;\n\n  // If keep going set unordered\n  if(finalOptions.keepGoing == true) finalOptions.ordered = false;\n  finalOptions['serializeFunctions'] = options['serializeFunctions'] || self.s.serializeFunctions;\n\n  // Set up the force server object id\n  var forceServerObjectId = typeof options.forceServerObjectId == 'boolean'\n    ? options.forceServerObjectId : self.s.db.options.forceServerObjectId;\n\n  // Add _id if not specified\n  if(forceServerObjectId !== true){\n    for(var i = 0; i < docs.length; i++) {\n      if(docs[i]._id === void 0) docs[i]._id = self.s.pkFactory.createPk();\n    }\n  }\n\n  // File inserts\n  self.s.topology.insert(self.s.namespace, docs, finalOptions, function(err, result) {\n    if(callback == null) return;\n    if(err) return handleCallback(callback, err);\n    if(result == null) return handleCallback(callback, null, null);\n    if(result.result.code) return handleCallback(callback, toError(result.result));\n    if(result.result.writeErrors) return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Add docs to the list\n    result.ops = docs;\n    // Return the results\n    handleCallback(callback, null, result);\n  });\n}\n\ndefine.classMethod('bulkWrite', {callback: true, promise:true});\n\n/**\n * @typedef {Object} Collection~WriteOpResult\n * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany\n * @property {object} connection The connection object used for the operation.\n * @property {object} result The command result object.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~writeOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~WriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * @typedef {Object} Collection~insertWriteOpResult\n * @property {Number} insertedCount The total amount of documents inserted.\n * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany\n * @property {ObjectId[]} insertedIds All the generated _id's for the inserted documents.\n * @property {object} connection The connection object used for the operation.\n * @property {object} result The raw command result object returned from MongoDB (content might vary by server version).\n * @property {Number} result.ok Is 1 if the command executed correctly.\n * @property {Number} result.n The total count of documents inserted.\n */\n\n/**\n * @typedef {Object} Collection~insertOneWriteOpResult\n * @property {Number} insertedCount The total amount of documents inserted.\n * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany\n * @property {ObjectId} insertedId The driver generated ObjectId for the insert operation.\n * @property {object} connection The connection object used for the operation.\n * @property {object} result The raw command result object returned from MongoDB (content might vary by server version).\n * @property {Number} result.ok Is 1 if the command executed correctly.\n * @property {Number} result.n The total count of documents inserted.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~insertWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~insertWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~insertOneWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~insertOneWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Inserts a single document or a an array of documents into MongoDB. If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {(object|object[])} docs Documents to insert.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {Collection~insertWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use insertOne, insertMany or bulkWrite\n */\nCollection.prototype.insert = function(docs, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {ordered:false};\n  docs = !Array.isArray(docs) ? [docs] : docs;\n\n  if(options.keepGoing == true) {\n    options.ordered = false;\n  }\n\n  return this.insertMany(docs, options, callback);\n}\n\ndefine.classMethod('insert', {callback: true, promise:true});\n\n/**\n * @typedef {Object} Collection~updateWriteOpResult\n * @property {Object} result The raw result returned from MongoDB, field will vary depending on server version.\n * @property {Number} result.ok Is 1 if the command executed correctly.\n * @property {Number} result.n The total count of documents scanned.\n * @property {Number} result.nModified The total count of documents modified.\n * @property {Object} connection The connection object used for the operation.\n * @property {Number} matchedCount The number of documents that matched the filter.\n * @property {Number} modifiedCount The number of documents that were modified.\n * @property {Number} upsertedCount The number of documents upserted.\n * @property {Object} upsertedId The upserted id.\n * @property {ObjectId} upsertedId._id The upserted _id returned from the server.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~updateWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~updateWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Update a single document on MongoDB\n * @method\n * @param {object} filter The Filter used to select the document to update\n * @param {object} update The update operations to be applied to the document\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {Collection~updateWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.updateOne = function(filter, update, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = shallowClone(options)\n\n  // Add ignoreUndfined\n  if(this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return updateOne(self, filter, update, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    updateOne(self, filter, update, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar updateOne = function(self, filter, update, options, callback) {\n  // Set single document update\n  options.multi = false;\n  // Execute update\n  updateDocuments(self, filter, update, options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    if(r == null) return callback(null, {result: {ok:1}});\n    r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;\n    r.upsertedId = Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? r.result.upserted[0] : null;\n    r.upsertedCount = Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;\n    r.matchedCount = Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? 0 : r.result.n;\n    if(callback) callback(null, r);\n  });\n}\n\ndefine.classMethod('updateOne', {callback: true, promise:true});\n\n/**\n * Replace a document on MongoDB\n * @method\n * @param {object} filter The Filter used to select the document to update\n * @param {object} doc The Document that replaces the matching document\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {Collection~updateWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.replaceOne = function(filter, doc, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = shallowClone(options)\n\n  // Add ignoreUndfined\n  if(this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return replaceOne(self, filter, doc, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    replaceOne(self, filter, doc, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar replaceOne = function(self, filter, doc, options, callback) {\n  // Set single document update\n  options.multi = false;\n\n  // Execute update\n  updateDocuments(self, filter, doc, options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    if(r == null) return callback(null, {result: {ok:1}});\n\n    r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;\n    r.upsertedId = Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? r.result.upserted[0] : null;\n    r.upsertedCount = Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;\n    r.matchedCount = Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? 0 : r.result.n;\n    r.ops = [doc];\n    if(callback) callback(null, r);\n  });\n}\n\ndefine.classMethod('replaceOne', {callback: true, promise:true});\n\n/**\n * Update multiple documents on MongoDB\n * @method\n * @param {object} filter The Filter used to select the document to update\n * @param {object} update The update operations to be applied to the document\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~updateWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.updateMany = function(filter, update, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = shallowClone(options)\n\n  // Add ignoreUndfined\n  if(this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return updateMany(self, filter, update, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    updateMany(self, filter, update, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar updateMany = function(self, filter, update, options, callback) {\n  // Set single document update\n  options.multi = true;\n  // Execute update\n  updateDocuments(self, filter, update, options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    if(r == null) return callback(null, {result: {ok:1}});\n    r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;\n    r.upsertedId = Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? r.result.upserted[0] : null;\n    r.upsertedCount = Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;\n    r.matchedCount = Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? 0 : r.result.n;\n    if(callback) callback(null, r);\n  });\n}\n\ndefine.classMethod('updateMany', {callback: true, promise:true});\n\nvar updateDocuments = function(self, selector, document, options, callback) {\n  if('function' === typeof options) callback = options, options = null;\n  if(options == null) options = {};\n  if(!('function' === typeof callback)) callback = null;\n\n  // If we are not providing a selector or document throw\n  if(selector == null || typeof selector != 'object') return callback(toError(\"selector must be a valid JavaScript object\"));\n  if(document == null || typeof document != 'object') return callback(toError(\"document must be a valid JavaScript object\"));\n\n  // Get the write concern options\n  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);\n\n  // Do we return the actual result document\n  // Either use override on the function, or go back to default on either the collection\n  // level or db\n  finalOptions['serializeFunctions'] = options['serializeFunctions'] || self.s.serializeFunctions;\n\n  // Execute the operation\n  var op = {q: selector, u: document};\n  op.upsert = typeof options.upsert == 'boolean' ? options.upsert : false;\n  op.multi = typeof options.multi == 'boolean' ? options.multi : false;\n\n  // Have we specified collation\n  decorateWithCollation(finalOptions, self, options);\n\n  // Update options\n  self.s.topology.update(self.s.namespace, [op], finalOptions, function(err, result) {\n    if(callback == null) return;\n    if(err) return handleCallback(callback, err, null);\n    if(result == null) return handleCallback(callback, null, null);\n    if(result.result.code) return handleCallback(callback, toError(result.result));\n    if(result.result.writeErrors) return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Return the results\n    handleCallback(callback, null, result);\n  });\n}\n\n/**\n * Updates documents.\n * @method\n * @param {object} selector The selector for the update operation.\n * @param {object} document The update document.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {boolean} [options.multi=false] Update one/all documents with operation.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {Collection~writeOpCallback} [callback] The command result callback\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use updateOne, updateMany or bulkWrite\n */\nCollection.prototype.update = function(selector, document, options, callback) {\n  var self = this;\n\n  // Add ignoreUndfined\n  if(this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return updateDocuments(self, selector, document, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    updateDocuments(self, selector, document, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('update', {callback: true, promise:true});\n\n/**\n * @typedef {Object} Collection~deleteWriteOpResult\n * @property {Object} result The raw result returned from MongoDB, field will vary depending on server version.\n * @property {Number} result.ok Is 1 if the command executed correctly.\n * @property {Number} result.n The total count of documents deleted.\n * @property {Object} connection The connection object used for the operation.\n * @property {Number} deletedCount The number of documents deleted.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~deleteWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~deleteWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Delete a document on MongoDB\n * @method\n * @param {object} filter The Filter used to select the document to remove\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~deleteWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.deleteOne = function(filter, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = shallowClone(options);\n\n  // Add ignoreUndfined\n  if(this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return deleteOne(self, filter, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    deleteOne(self, filter, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar deleteOne = function(self, filter, options, callback) {\n  options.single = true;\n  removeDocuments(self, filter, options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    if(r == null) return callback(null, {result: {ok:1}});\n    r.deletedCount = r.result.n;\n    if(callback) callback(null, r);\n  });\n}\n\ndefine.classMethod('deleteOne', {callback: true, promise:true});\n\nCollection.prototype.removeOne = Collection.prototype.deleteOne;\n\ndefine.classMethod('removeOne', {callback: true, promise:true});\n\n/**\n * Delete multiple documents on MongoDB\n * @method\n * @param {object} filter The Filter used to select the documents to remove\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~deleteWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.deleteMany = function(filter, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = shallowClone(options);\n\n  // Add ignoreUndfined\n  if(this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return deleteMany(self, filter, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    deleteMany(self, filter, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar deleteMany = function(self, filter, options, callback) {\n  options.single = false;\n\n  removeDocuments(self, filter, options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    if(r == null) return callback(null, {result: {ok:1}});\n    r.deletedCount = r.result.n;\n    if(callback) callback(null, r);\n  });\n}\n\nvar removeDocuments = function(self, selector, options, callback) {\n  if(typeof options == 'function') {\n    callback = options, options = {};\n  } else if (typeof selector === 'function') {\n    callback = selector;\n    options = {};\n    selector = {};\n  }\n\n  // Create an empty options object if the provided one is null\n  options = options || {};\n\n  // Get the write concern options\n  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);\n\n  // If selector is null set empty\n  if(selector == null) selector = {};\n\n  // Build the op\n  var op = {q: selector, limit: 0};\n  if(options.single) op.limit = 1;\n\n  // Have we specified collation\n  decorateWithCollation(finalOptions, self, options);\n\n  // Execute the remove\n  self.s.topology.remove(self.s.namespace, [op], finalOptions, function(err, result) {\n    if(callback == null) return;\n    if(err) return handleCallback(callback, err, null);\n    if(result == null) return handleCallback(callback, null, null);\n    if(result.result.code) return handleCallback(callback, toError(result.result));\n    if(result.result.writeErrors) return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Return the results\n    handleCallback(callback, null, result);\n  });\n}\n\ndefine.classMethod('deleteMany', {callback: true, promise:true});\n\nCollection.prototype.removeMany = Collection.prototype.deleteMany;\n\ndefine.classMethod('removeMany', {callback: true, promise:true});\n\n/**\n * Remove documents.\n * @method\n * @param {object} selector The selector for the update operation.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.single=false] Removes the first document found.\n * @param {Collection~writeOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use deleteOne, deleteMany or bulkWrite\n */\nCollection.prototype.remove = function(selector, options, callback) {\n  var self = this;\n\n  // Add ignoreUndfined\n  if(this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return removeDocuments(self, selector, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    removeDocuments(self, selector, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('remove', {callback: true, promise:true});\n\n/**\n * Save a document. Simple full document replacement function. Not recommended for efficiency, use atomic\n * operators and update instead for more efficient operations.\n * @method\n * @param {object} doc Document to save\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~writeOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use insertOne, insertMany, updateOne or updateMany\n */\nCollection.prototype.save = function(doc, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Add ignoreUndfined\n  if(this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return save(self, doc, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    save(self, doc, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar save = function(self, doc, options, callback) {\n  // Get the write concern options\n  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);\n  // Establish if we need to perform an insert or update\n  if(doc._id != null) {\n    finalOptions.upsert = true;\n    return updateDocuments(self, {_id: doc._id}, doc, finalOptions, callback);\n  }\n\n  // Insert the document\n  insertDocuments(self, [doc], options, function(err, r) {\n    if(callback == null) return;\n    if(doc == null) return handleCallback(callback, null, null);\n    if(err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, r);\n  });\n}\n\ndefine.classMethod('save', {callback: true, promise:true});\n\n/**\n * The callback format for results\n * @callback Collection~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result object if the command was executed successfully.\n */\n\n/**\n * Fetches the first document that matches the query\n * @method\n * @param {object} query Query for find Operation\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.limit=0] Sets the limit of documents returned in the query.\n * @param {(array|object)} [options.sort=null] Set to sort the documents coming back from the query. Array of indexes, [['a', 1]] etc.\n * @param {object} [options.fields=null] The fields to return in the query. Object of fields to include or exclude (not both), {'a':1}\n * @param {number} [options.skip=0] Set to skip N documents ahead in your query (useful for pagination).\n * @param {Object} [options.hint=null] Tell the query to use specific indexes in the query. Object of indexes to use, {'_id':1}\n * @param {boolean} [options.explain=false] Explain the query instead of returning the data.\n * @param {boolean} [options.snapshot=false] Snapshot query.\n * @param {boolean} [options.timeout=false] Specify if the cursor can timeout.\n * @param {boolean} [options.tailable=false] Specify if the cursor is tailable.\n * @param {number} [options.batchSize=0] Set the batchSize for the getMoreCommand when iterating over the query results.\n * @param {boolean} [options.returnKey=false] Only return the index key.\n * @param {number} [options.maxScan=null] Limit the number of items to scan.\n * @param {number} [options.min=null] Set index bounds.\n * @param {number} [options.max=null] Set index bounds.\n * @param {boolean} [options.showDiskLoc=false] Show disk location of results.\n * @param {string} [options.comment=null] You can put a $comment field on a query to make looking in the profiler logs simpler.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.partial=false] Specify if the cursor should return partial results when querying against a sharded system\n * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query.\n * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.findOne = function() {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  var callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n\n  // Execute using callback\n  if(typeof callback == 'function') return findOne(self, args, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    findOne(self, args, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar findOne = function(self, args, callback) {\n  var cursor = self.find.apply(self, args).limit(-1).batchSize(1);\n  // Return the item\n  cursor.next(function(err, item) {\n    if(err != null) return handleCallback(callback, toError(err), null);\n    handleCallback(callback, null, item);\n  });\n}\n\ndefine.classMethod('findOne', {callback: true, promise:true});\n\n/**\n * The callback format for the collection method, must be used if strict is specified\n * @callback Collection~collectionResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection} collection The collection instance.\n */\n\n/**\n * Rename the collection.\n *\n * @method\n * @param {string} newName New name of of the collection.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.dropTarget=false] Drop the target name collection if it previously exists.\n * @param {Collection~collectionResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.rename = function(newName, opt, callback) {\n  var self = this;\n  if(typeof opt == 'function') callback = opt, opt = {};\n  opt = assign({}, opt, {readPreference: ReadPreference.PRIMARY});\n\n  // Execute using callback\n  if(typeof callback == 'function') return rename(self, newName, opt, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    rename(self, newName, opt, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar rename = function(self, newName, opt, callback) {\n  // Check the collection name\n  checkCollectionName(newName);\n  // Build the command\n  var renameCollection = f(\"%s.%s\", self.s.dbName, self.s.name);\n  var toCollection =  f(\"%s.%s\", self.s.dbName, newName);\n  var dropTarget = typeof opt.dropTarget == 'boolean' ? opt.dropTarget : false;\n  var cmd = {'renameCollection':renameCollection, 'to':toCollection, 'dropTarget':dropTarget};\n\n  // Decorate command with writeConcern if supported\n  decorateWithWriteConcern(cmd, self, opt);\n\n  // Execute against admin\n  self.s.db.admin().command(cmd, opt, function(err, doc) {\n    if(err) return handleCallback(callback, err, null);\n    // We have an error\n    if(doc.errmsg) return handleCallback(callback, toError(doc), null);\n    try {\n      return handleCallback(callback, null, new Collection(self.s.db, self.s.topology, self.s.dbName, newName, self.s.pkFactory, self.s.options));\n    } catch(err) {\n      return handleCallback(callback, toError(err), null);\n    }\n  });\n}\n\ndefine.classMethod('rename', {callback: true, promise:true});\n\n/**\n * Drop the collection from the database, removing it permanently. New accesses will create a new collection.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {Collection~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.drop = function(options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return self.s.db.dropCollection(self.s.name, options, callback);\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self.s.db.dropCollection(self.s.name, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('drop', {callback: true, promise:true});\n\n/**\n * Returns the options of the collection.\n *\n * @method\n * @param {Collection~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.options = function(callback) {\n  var self = this;\n\n  // Execute using callback\n  if(typeof callback == 'function') return options(self, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    options(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar options = function(self, callback) {\n  self.s.db.listCollections({name: self.s.name}).toArray(function(err, collections) {\n    if(err) return handleCallback(callback, err);\n    if(collections.length == 0) {\n      return handleCallback(callback, MongoError.create({message: f(\"collection %s not found\", self.s.namespace), driver:true }));\n    }\n\n    handleCallback(callback, err, collections[0].options || null);\n  });\n}\n\ndefine.classMethod('options', {callback: true, promise:true});\n\n/**\n * Returns if the collection is a capped collection\n *\n * @method\n * @param {Collection~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.isCapped = function(callback) {\n  var self = this;\n\n  // Execute using callback\n  if(typeof callback == 'function') return isCapped(self, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    isCapped(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar isCapped = function(self, callback) {\n  self.options(function(err, document) {\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, null, document && document.capped);\n  });\n}\n\ndefine.classMethod('isCapped', {callback: true, promise:true});\n\n/**\n * Creates an index on the db and collection collection.\n * @method\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v=null] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {string} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {object} [options.partialFilterExpression=null] Creates a partial index based on the given filter object (MongoDB 3.2 or higher)\n * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.createIndex = function(fieldOrSpec, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() || {} : {};\n  options = typeof callback === 'function' ? options : callback;\n  options = options == null ? {} : options;\n\n  // Execute using callback\n  if(typeof callback == 'function') return createIndex(self, fieldOrSpec, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    createIndex(self, fieldOrSpec, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar createIndex = function(self, fieldOrSpec, options, callback) {\n  self.s.db.createIndex(self.s.name, fieldOrSpec, options, callback);\n}\n\ndefine.classMethod('createIndex', {callback: true, promise:true});\n\n/**\n * Creates multiple indexes in the collection, this method is only supported for\n * MongoDB 2.6 or higher. Earlier version of MongoDB will throw a command not supported\n * error. Index specifications are defined at http://docs.mongodb.org/manual/reference/command/createIndexes/.\n * @method\n * @param {array} indexSpecs An array of index specifications to be created\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.createIndexes = function(indexSpecs, callback) {\n  var self = this;\n\n  // Execute using callback\n  if(typeof callback == 'function') return createIndexes(self, indexSpecs, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    createIndexes(self, indexSpecs, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar createIndexes = function(self, indexSpecs, callback) {\n  var capabilities = self.s.topology.capabilities();\n\n  // Ensure we generate the correct name if the parameter is not set\n  for(var i = 0; i < indexSpecs.length; i++) {\n    if(indexSpecs[i].name == null) {\n      var keys = [];\n\n      // Did the user pass in a collation, check if our write server supports it\n      if(indexSpecs[i].collation && capabilities && !capabilities.commandsTakeCollation) {\n        return callback(new MongoError(f('server/primary/mongos does not support collation')));\n      }\n\n      for(var name in indexSpecs[i].key) {\n        keys.push(f('%s_%s', name, indexSpecs[i].key[name]));\n      }\n\n      // Set the name\n      indexSpecs[i].name = keys.join('_');\n    }\n  }\n\n  // Execute the index\n  self.s.db.command({\n    createIndexes: self.s.name, indexes: indexSpecs\n  }, { readPreference: ReadPreference.PRIMARY }, callback);\n}\n\ndefine.classMethod('createIndexes', {callback: true, promise:true});\n\n/**\n * Drops an index from this collection.\n * @method\n * @param {string} indexName Name of the index to drop.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.dropIndex = function(indexName, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() || {} : {};\n  // Run only against primary\n  options.readPreference = ReadPreference.PRIMARY;\n\n  // Execute using callback\n  if(typeof callback == 'function') return dropIndex(self, indexName, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    dropIndex(self, indexName, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar dropIndex = function(self, indexName, options, callback) {\n  // Delete index command\n  var cmd = {'dropIndexes':self.s.name, 'index':indexName};\n\n  // Decorate command with writeConcern if supported\n  decorateWithWriteConcern(cmd, self, options);\n\n  // Execute command\n  self.s.db.command(cmd, options, function(err, result) {\n    if(typeof callback != 'function') return;\n    if(err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result);\n  });\n}\n\ndefine.classMethod('dropIndex', {callback: true, promise:true});\n\n/**\n * Drops all indexes from this collection.\n * @method\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.dropIndexes = function(options, callback) {\n  var self = this;\n\n  // Do we have options\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return dropIndexes(self, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    dropIndexes(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar dropIndexes = function(self, options, callback) {\n  self.dropIndex('*', options, function(err) {\n    if(err) return handleCallback(callback, err, false);\n    handleCallback(callback, null, true);\n  });\n}\n\ndefine.classMethod('dropIndexes', {callback: true, promise:true});\n\n/**\n * Drops all indexes from this collection.\n * @method\n * @deprecated use dropIndexes\n * @param {Collection~resultCallback} callback The command result callback\n * @return {Promise} returns Promise if no [callback] passed\n */\nCollection.prototype.dropAllIndexes = Collection.prototype.dropIndexes;\n\ndefine.classMethod('dropAllIndexes', {callback: true, promise:true});\n\n/**\n * Reindex all indexes on the collection\n * Warning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections.\n * @method\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.reIndex = function(options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return reIndex(self, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    reIndex(self, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar reIndex = function(self, options, callback) {\n  // Reindex\n  var cmd = {'reIndex':self.s.name};\n\n  // Execute the command\n  self.s.db.command(cmd, options, function(err, result) {\n    if(callback == null) return;\n    if(err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result.ok ? true : false);\n  });\n}\n\ndefine.classMethod('reIndex', {callback: true, promise:true});\n\n/**\n * Get the list of all indexes information for the collection.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.batchSize=null] The batchSize for the returned command cursor or if pre 2.8 the systems batch collection\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @return {CommandCursor}\n */\nCollection.prototype.listIndexes = function(options) {\n  options = options || {};\n  // Clone the options\n  options = shallowClone(options);\n  // Determine the read preference in the options.\n  options = getReadPreference(this, options, this.s.db, this);\n  // Set the CommandCursor constructor\n  options.cursorFactory = CommandCursor;\n  // Set the promiseLibrary\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  if(!this.s.topology.capabilities()) {\n    throw new MongoError('cannot connect to server');\n  }\n\n  // We have a list collections command\n  if(this.s.topology.capabilities().hasListIndexesCommand) {\n    // Cursor options\n    var cursor = options.batchSize ? {batchSize: options.batchSize} : {}\n    // Build the command\n    var command = { listIndexes: this.s.name, cursor: cursor };\n    // Execute the cursor\n    cursor = this.s.topology.cursor(f('%s.$cmd', this.s.dbName), command, options);\n    // Do we have a readPreference, apply it\n    if(options.readPreference) cursor.setReadPreference(options.readPreference);\n    // Return the cursor\n    return cursor;\n  }\n\n  // Get the namespace\n  var ns = f('%s.system.indexes', this.s.dbName);\n  // Get the query\n  cursor = this.s.topology.cursor(ns, {find: ns, query: {ns: this.s.namespace}}, options);\n  // Do we have a readPreference, apply it\n  if(options.readPreference) cursor.setReadPreference(options.readPreference);\n  // Set the passed in batch size if one was provided\n  if(options.batchSize) cursor = cursor.batchSize(options.batchSize);\n  // Return the cursor\n  return cursor;\n};\n\ndefine.classMethod('listIndexes', {callback: false, promise:false, returns: [CommandCursor]});\n\n/**\n * Ensures that an index exists, if it does not it creates it\n * @method\n * @deprecated use createIndexes instead\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v=null] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.ensureIndex = function(fieldOrSpec, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return ensureIndex(self, fieldOrSpec, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    ensureIndex(self, fieldOrSpec, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar ensureIndex = function(self, fieldOrSpec, options, callback) {\n  self.s.db.ensureIndex(self.s.name, fieldOrSpec, options, callback);\n}\n\ndefine.classMethod('ensureIndex', {callback: true, promise:true});\n\n/**\n * Checks if one or more indexes exist on the collection, fails on first non-existing index\n * @method\n * @param {(string|array)} indexes One or more index names to check.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.indexExists = function(indexes, callback) {\n  var self = this;\n\n  // Execute using callback\n  if(typeof callback == 'function') return indexExists(self, indexes, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    indexExists(self, indexes, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar indexExists = function(self, indexes, callback) {\n  self.indexInformation(function(err, indexInformation) {\n    // If we have an error return\n    if(err != null) return handleCallback(callback, err, null);\n    // Let's check for the index names\n    if(!Array.isArray(indexes)) return handleCallback(callback, null, indexInformation[indexes] != null);\n    // Check in list of indexes\n    for(var i = 0; i < indexes.length; i++) {\n      if(indexInformation[indexes[i]] == null) {\n        return handleCallback(callback, null, false);\n      }\n    }\n\n    // All keys found return true\n    return handleCallback(callback, null, true);\n  });\n}\n\ndefine.classMethod('indexExists', {callback: true, promise:true});\n\n/**\n * Retrieves this collections index info.\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.full=false] Returns the full raw index information.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.indexInformation = function(options, callback) {\n  var self = this;\n  // Unpack calls\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() || {} : {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return indexInformation(self, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    indexInformation(self, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar indexInformation = function(self, options, callback) {\n  self.s.db.indexInformation(self.s.name, options, callback);\n}\n\ndefine.classMethod('indexInformation', {callback: true, promise:true});\n\n/**\n * The callback format for results\n * @callback Collection~countCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {number} result The count of documents that matched the query.\n */\n\n/**\n * Count number of matching documents in the db to a query.\n * @method\n * @param {object} query The query for the count.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.limit=null] The limit of documents to count.\n * @param {boolean} [options.skip=null] The number of documents to skip for the count.\n * @param {string} [options.hint=null] An index name hint for the query.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query.\n * @param {Collection~countCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.count = function(query, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  var queryOption = args.length ? args.shift() || {} : {};\n  var optionsOption = args.length ? args.shift() || {} : {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return count(self, queryOption, optionsOption, callback);\n\n  // Check if query is empty\n  query = query || {};\n  options = options || {};\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    count(self, query, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar count = function(self, query, options, callback) {\n  var skip = options.skip;\n  var limit = options.limit;\n  var hint = options.hint;\n  var maxTimeMS = options.maxTimeMS;\n\n  // Final query\n  var cmd = {\n    'count': self.s.name, 'query': query\n  };\n\n  // Add limit, skip and maxTimeMS if defined\n  if(typeof skip == 'number') cmd.skip = skip;\n  if(typeof limit == 'number') cmd.limit = limit;\n  if(typeof maxTimeMS == 'number') cmd.maxTimeMS = maxTimeMS;\n  if(hint) cmd.hint = hint;\n\n  options = shallowClone(options);\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(self, options, self.s.db, self);\n\n  // Do we have a readConcern specified\n  if(self.s.readConcern) {\n    cmd.readConcern = self.s.readConcern;\n  }\n\n  // Have we specified collation\n  decorateWithCollation(cmd, self, options);\n\n  // Execute command\n  self.s.db.command(cmd, options, function(err, result) {\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, null, result.n);\n  });\n}\n\ndefine.classMethod('count', {callback: true, promise:true});\n\n/**\n * The distinct command returns returns a list of distinct values for the given key across a collection.\n * @method\n * @param {string} key Field of the document to find distinct values for.\n * @param {object} query The query for filtering the set of documents to which we apply the distinct filter.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.distinct = function(key, query, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  var queryOption = args.length ? args.shift() || {} : {};\n  var optionsOption = args.length ? args.shift() || {} : {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return distinct(self, key, queryOption, optionsOption, callback);\n\n  // Ensure the query and options are set\n  query = query || {};\n  options = options || {};\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    distinct(self, key, query, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar distinct = function(self, key, query, options, callback) {\n  // maxTimeMS option\n  var maxTimeMS = options.maxTimeMS;\n\n  // Distinct command\n  var cmd = {\n    'distinct': self.s.name, 'key': key, 'query': query\n  };\n\n  options = shallowClone(options);\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(self, options, self.s.db, self);\n\n  // Add maxTimeMS if defined\n  if(typeof maxTimeMS == 'number')\n    cmd.maxTimeMS = maxTimeMS;\n\n  // Do we have a readConcern specified\n  if(self.s.readConcern) {\n    cmd.readConcern = self.s.readConcern;\n  }\n\n  // Have we specified collation\n  decorateWithCollation(cmd, self, options);\n\n  // Execute the command\n  self.s.db.command(cmd, options, function(err, result) {\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, null, result.values);\n  });\n}\n\ndefine.classMethod('distinct', {callback: true, promise:true});\n\n/**\n * Retrieve all the indexes on the collection.\n * @method\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.indexes = function(callback) {\n  var self = this;\n  // Execute using callback\n  if(typeof callback == 'function') return indexes(self, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    indexes(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar indexes = function(self, callback) {\n  self.s.db.indexInformation(self.s.name, {full:true}, callback);\n}\n\ndefine.classMethod('indexes', {callback: true, promise:true});\n\n/**\n * Get all the collection statistics.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.scale=null] Divide the returned sizes by scale value.\n * @param {Collection~resultCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.stats = function(options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  // Fetch all commands\n  options = args.length ? args.shift() || {} : {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return stats(self, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    stats(self, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar stats = function(self, options, callback) {\n  // Build command object\n  var commandObject = {\n    collStats:self.s.name\n  }\n\n  // Check if we have the scale value\n  if(options['scale'] != null) commandObject['scale'] = options['scale'];\n\n  options = shallowClone(options);\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(self, options, self.s.db, self);\n\n  // Execute the command\n  self.s.db.command(commandObject, options, callback);\n}\n\ndefine.classMethod('stats', {callback: true, promise:true});\n\n/**\n * @typedef {Object} Collection~findAndModifyWriteOpResult\n * @property {object} value Document returned from findAndModify command.\n * @property {object} lastErrorObject The raw lastErrorObject returned from the command.\n * @property {Number} ok Is 1 if the command executed correctly.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~findAndModifyCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~findAndModifyWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Find a document and delete it in one atomic operation, requires a write lock for the duration of the operation.\n *\n * @method\n * @param {object} filter Document selection filter.\n * @param {object} [options=null] Optional settings.\n * @param {object} [options.projection=null] Limits the fields to return for all matching documents.\n * @param {object} [options.sort=null] Determines which document the operation modifies if the query selects multiple documents.\n * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run.\n * @param {Collection~findAndModifyCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.findOneAndDelete = function(filter, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Basic validation\n  if(filter == null || typeof filter != 'object') throw toError('filter parameter must be an object');\n\n  // Execute using callback\n  if(typeof callback == 'function') return findOneAndDelete(self, filter, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    options = options || {};\n\n    findOneAndDelete(self, filter, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar findOneAndDelete = function(self, filter, options, callback) {\n  // Final options\n  var finalOptions = shallowClone(options);\n  finalOptions['fields'] = options.projection;\n  finalOptions['remove'] = true;\n  // Execute find and Modify\n  self.findAndModify(\n      filter\n    , options.sort\n    , null\n    , finalOptions\n    , callback\n  );\n}\n\ndefine.classMethod('findOneAndDelete', {callback: true, promise:true});\n\n/**\n * Find a document and replace it in one atomic operation, requires a write lock for the duration of the operation.\n *\n * @method\n * @param {object} filter Document selection filter.\n * @param {object} replacement Document replacing the matching document.\n * @param {object} [options=null] Optional settings.\n * @param {object} [options.projection=null] Limits the fields to return for all matching documents.\n * @param {object} [options.sort=null] Determines which document the operation modifies if the query selects multiple documents.\n * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run.\n * @param {boolean} [options.upsert=false] Upsert the document if it does not exist.\n * @param {boolean} [options.returnOriginal=true] When false, returns the updated document rather than the original. The default is true.\n * @param {Collection~findAndModifyCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.findOneAndReplace = function(filter, replacement, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Basic validation\n  if(filter == null || typeof filter != 'object') throw toError('filter parameter must be an object');\n  if(replacement == null || typeof replacement != 'object') throw toError('replacement parameter must be an object');\n\n  // Execute using callback\n  if(typeof callback == 'function') return findOneAndReplace(self, filter, replacement, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    options = options || {};\n\n    findOneAndReplace(self, filter, replacement, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar findOneAndReplace = function(self, filter, replacement, options, callback) {\n  // Final options\n  var finalOptions = shallowClone(options);\n  finalOptions['fields'] = options.projection;\n  finalOptions['update'] = true;\n  finalOptions['new'] = typeof options.returnOriginal == 'boolean' ? !options.returnOriginal : false;\n  finalOptions['upsert'] = typeof options.upsert == 'boolean' ? options.upsert : false;\n\n  // Execute findAndModify\n  self.findAndModify(\n      filter\n    , options.sort\n    , replacement\n    , finalOptions\n    , callback\n  );\n}\n\ndefine.classMethod('findOneAndReplace', {callback: true, promise:true});\n\n/**\n * Find a document and update it in one atomic operation, requires a write lock for the duration of the operation.\n *\n * @method\n * @param {object} filter Document selection filter.\n * @param {object} update Update operations to be performed on the document\n * @param {object} [options=null] Optional settings.\n * @param {object} [options.projection=null] Limits the fields to return for all matching documents.\n * @param {object} [options.sort=null] Determines which document the operation modifies if the query selects multiple documents.\n * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run.\n * @param {boolean} [options.upsert=false] Upsert the document if it does not exist.\n * @param {boolean} [options.returnOriginal=true] When false, returns the updated document rather than the original. The default is true.\n * @param {Collection~findAndModifyCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.findOneAndUpdate = function(filter, update, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Basic validation\n  if(filter == null || typeof filter != 'object') throw toError('filter parameter must be an object');\n  if(update == null || typeof update != 'object') throw toError('update parameter must be an object');\n\n  // Execute using callback\n  if(typeof callback == 'function') return findOneAndUpdate(self, filter, update, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    options = options || {};\n\n    findOneAndUpdate(self, filter, update, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar findOneAndUpdate = function(self, filter, update, options, callback) {\n  // Final options\n  var finalOptions = shallowClone(options);\n  finalOptions['fields'] = options.projection;\n  finalOptions['update'] = true;\n  finalOptions['new'] = typeof options.returnOriginal == 'boolean' ? !options.returnOriginal : false;\n  finalOptions['upsert'] = typeof options.upsert == 'boolean' ? options.upsert : false;\n\n  // Execute findAndModify\n  self.findAndModify(\n      filter\n    , options.sort\n    , update\n    , finalOptions\n    , callback\n  );\n}\n\ndefine.classMethod('findOneAndUpdate', {callback: true, promise:true});\n\n/**\n * Find and update a document.\n * @method\n * @param {object} query Query object to locate the object to modify.\n * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate.\n * @param {object} doc The fields/vals to be updated.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.remove=false] Set to true to remove the object before returning.\n * @param {boolean} [options.upsert=false] Perform an upsert operation.\n * @param {boolean} [options.new=false] Set to true if you want to return the modified object rather than the original. Ignored for remove.\n * @param {object} [options.fields=null] Object containing the field projection for the result returned from the operation.\n * @param {Collection~findAndModifyCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use findOneAndUpdate, findOneAndReplace or findOneAndDelete instead\n */\nCollection.prototype.findAndModify = function(query, sort, doc, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  sort = args.length ? args.shift() || [] : [];\n  doc = args.length ? args.shift() : null;\n  options = args.length ? args.shift() || {} : {};\n\n  // Clone options\n  options = shallowClone(options);\n  // Force read preference primary\n  options.readPreference = ReadPreference.PRIMARY;\n\n  // Execute using callback\n  if(typeof callback == 'function') return findAndModify(self, query, sort, doc, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    options = options || {};\n\n    findAndModify(self, query, sort, doc, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar findAndModify = function(self, query, sort, doc, options, callback) {\n  // Create findAndModify command object\n  var queryObject = {\n     'findandmodify': self.s.name\n   , 'query': query\n  };\n\n  sort = formattedOrderClause(sort);\n  if(sort) {\n    queryObject.sort = sort;\n  }\n\n  queryObject.new = options.new ? true : false;\n  queryObject.remove = options.remove ? true : false;\n  queryObject.upsert = options.upsert ? true : false;\n\n  if(options.fields) {\n    queryObject.fields = options.fields;\n  }\n\n  if(doc && !options.remove) {\n    queryObject.update = doc;\n  }\n\n  if(options.maxTimeMS)\n    queryObject.maxTimeMS = options.maxTimeMS;\n\n  // Either use override on the function, or go back to default on either the collection\n  // level or db\n  if(options['serializeFunctions'] != null) {\n    options['serializeFunctions'] = options['serializeFunctions'];\n  } else {\n    options['serializeFunctions'] = self.s.serializeFunctions;\n  }\n\n  // No check on the documents\n  options.checkKeys = false;\n\n  // Get the write concern settings\n  var finalOptions = writeConcern(options, self.s.db, self, options);\n\n  // Decorate the findAndModify command with the write Concern\n  if(finalOptions.writeConcern) {\n    queryObject.writeConcern = finalOptions.writeConcern;\n  }\n\n  // Have we specified bypassDocumentValidation\n  if(typeof finalOptions.bypassDocumentValidation == 'boolean') {\n    queryObject.bypassDocumentValidation = finalOptions.bypassDocumentValidation;\n  }\n\n  // Have we specified collation\n  decorateWithCollation(queryObject, self, options);\n\n  // Execute the command\n  self.s.db.command(queryObject\n    , options, function(err, result) {\n      if(err) return handleCallback(callback, err, null);\n      return handleCallback(callback, null, result);\n  });\n}\n\ndefine.classMethod('findAndModify', {callback: true, promise:true});\n\n/**\n * Find and remove a document.\n * @method\n * @param {object} query Query object to locate the object to modify.\n * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use findOneAndDelete instead\n */\nCollection.prototype.findAndRemove = function(query, sort, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  sort = args.length ? args.shift() || [] : [];\n  options = args.length ? args.shift() || {} : {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return findAndRemove(self, query, sort, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    findAndRemove(self, query, sort, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar findAndRemove = function(self, query, sort, options, callback) {\n  // Add the remove option\n  options['remove'] = true;\n  // Execute the callback\n  self.findAndModify(query, sort, null, options, callback);\n}\n\ndefine.classMethod('findAndRemove', {callback: true, promise:true});\n\nfunction decorateWithWriteConcern(command, self, options) {\n  // Do we support collation 3.4 and higher\n  var capabilities = self.s.topology.capabilities();\n  // Do we support write concerns 3.4 and higher\n  if(capabilities && capabilities.commandsTakeWriteConcern) {\n    // Get the write concern settings\n    var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);\n    // Add the write concern to the command\n    if(finalOptions.writeConcern) {\n      command.writeConcern = finalOptions.writeConcern;\n    }\n  }\n}\n\nfunction decorateWithCollation(command, self, options) {\n  // Do we support collation 3.4 and higher\n  var capabilities = self.s.topology.capabilities();\n  // Do we support write concerns 3.4 and higher\n  if(capabilities && capabilities.commandsTakeCollation) {\n    if(options.collation && typeof options.collation == 'object') {\n      command.collation = options.collation;\n    }\n  }\n}\n\n/**\n * Execute an aggregation framework pipeline against the collection, needs MongoDB >= 2.2\n * @method\n * @param {object} pipeline Array containing all the aggregation framework commands for the execution.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.cursor=null] Return the query as cursor, on 2.6 > it returns as a real cursor on pre 2.6 it returns as an emulated cursor.\n * @param {number} [options.cursor.batchSize=null] The batchSize for the cursor\n * @param {boolean} [options.explain=false] Explain returns the aggregation execution plan (requires mongodb 2.6 >).\n * @param {boolean} [options.allowDiskUse=false] allowDiskUse lets the server know if it can use disk to store temporary results for the aggregation (requires mongodb 2.6 >).\n * @param {number} [options.maxTimeMS=null] maxTimeMS specifies a cumulative time limit in milliseconds for processing operations on the cursor. MongoDB interrupts the operation at the earliest following interrupt point.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {Collection~resultCallback} callback The command result callback\n * @return {(null|AggregationCursor)}\n */\nCollection.prototype.aggregate = function(pipeline, options, callback) {\n  var self = this;\n\n  if(Array.isArray(pipeline)) {\n    // Set up callback if one is provided\n    if(typeof options == 'function') {\n      callback = options;\n      options = {};\n    }\n\n    // If we have no options or callback we are doing\n    // a cursor based aggregation\n    if(options == null && callback == null) {\n      options = {};\n    }\n  } else {\n    // Aggregation pipeline passed as arguments on the method\n    var args = Array.prototype.slice.call(arguments, 0);\n    // Get the callback\n    callback = args.pop();\n    // Get the possible options object\n    var opts = args[args.length - 1];\n    // If it contains any of the admissible options pop it of the args\n    options = opts && (opts.readPreference\n      || opts.explain || opts.cursor || opts.out\n      || opts.maxTimeMS || opts.allowDiskUse) ? args.pop() : {};\n      // Left over arguments is the pipeline\n    pipeline = args;\n  }\n\n  // Ignore readConcern option\n  var ignoreReadConcern = false;\n\n  // Build the command\n  var command = { aggregate : this.s.name, pipeline : pipeline};\n\n  // If out was specified\n  if(typeof options.out == 'string') {\n    pipeline.push({$out: options.out});\n    // Ignore read concern\n    ignoreReadConcern = true;\n  } else if(pipeline.length > 0 && pipeline[pipeline.length - 1]['$out']) {\n    ignoreReadConcern = true;\n  }\n\n  // Decorate command with writeConcern if out has been specified\n  if(pipeline.length > 0 && pipeline[pipeline.length - 1]['$out']) {\n    decorateWithWriteConcern(command, self, options);\n  }\n\n  // Have we specified collation\n  decorateWithCollation(command, self, options);\n\n  // If we have bypassDocumentValidation set\n  if(typeof options.bypassDocumentValidation == 'boolean') {\n    command.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // Do we have a readConcern specified\n  if(!ignoreReadConcern && this.s.readConcern) {\n    command.readConcern = this.s.readConcern;\n  }\n\n  // If we have allowDiskUse defined\n  if(options.allowDiskUse) command.allowDiskUse = options.allowDiskUse;\n  if(typeof options.maxTimeMS == 'number') command.maxTimeMS = options.maxTimeMS;\n\n  options = shallowClone(options);\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(this, options, this.s.db, this);\n\n  // If explain has been specified add it\n  if(options.explain) command.explain = options.explain;\n\n  // Validate that cursor options is valid\n  if(options.cursor != null && typeof options.cursor != 'object') {\n    throw toError('cursor options must be an object');\n  }\n\n  // promiseLibrary\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  // Set the AggregationCursor constructor\n  options.cursorFactory = AggregationCursor;\n  if(typeof callback != 'function') {\n    if(!this.s.topology.capabilities()) {\n      throw new MongoError('cannot connect to server');\n    }\n\n    if(this.s.topology.capabilities().hasAggregationCursor) {\n      options.cursor = options.cursor || { batchSize : 1000 };\n      command.cursor = options.cursor;\n    }\n\n    // Allow disk usage command\n    if(typeof options.allowDiskUse == 'boolean') command.allowDiskUse = options.allowDiskUse;\n    if(typeof options.maxTimeMS == 'number') command.maxTimeMS = options.maxTimeMS;\n\n    // Execute the cursor\n    return this.s.topology.cursor(this.s.namespace, command, options);\n  }\n\n  // We do not allow cursor\n  if(options.cursor) {\n    return this.s.topology.cursor(this.s.namespace, command, options);\n  }\n\n  // Execute the command\n  this.s.db.command(command, options, function(err, result) {\n    if(err) {\n      handleCallback(callback, err);\n    } else if(result['err'] || result['errmsg']) {\n      handleCallback(callback, toError(result));\n    } else if(typeof result == 'object' && result['serverPipeline']) {\n      handleCallback(callback, null, result['serverPipeline']);\n    } else if(typeof result == 'object' && result['stages']) {\n      handleCallback(callback, null, result['stages']);\n    } else {\n      handleCallback(callback, null, result.result);\n    }\n  });\n}\n\ndefine.classMethod('aggregate', {callback: true, promise:false});\n\n/**\n * The callback format for results\n * @callback Collection~parallelCollectionScanCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Cursor[]} cursors A list of cursors returned allowing for parallel reading of collection.\n */\n\n/**\n * Return N number of parallel cursors for a collection allowing parallel reading of entire collection. There are\n * no ordering guarantees for returned results.\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.batchSize=null] Set the batchSize for the getMoreCommand when iterating over the query results.\n * @param {number} [options.numCursors=1] The maximum number of parallel command cursors to return (the number of returned cursors will be in the range 1:numCursors)\n * @param {boolean} [options.raw=false] Return all BSON documents as Raw Buffer documents.\n * @param {Collection~parallelCollectionScanCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.parallelCollectionScan = function(options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {numCursors: 1};\n  // Set number of cursors to 1\n  options.numCursors = options.numCursors || 1;\n  options.batchSize = options.batchSize || 1000;\n\n  options = shallowClone(options);\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(this, options, this.s.db, this);\n\n  // Add a promiseLibrary\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  // Execute using callback\n  if(typeof callback == 'function') return parallelCollectionScan(self, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    parallelCollectionScan(self, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar parallelCollectionScan = function(self, options, callback) {\n  // Create command object\n  var commandObject = {\n      parallelCollectionScan: self.s.name\n    , numCursors: options.numCursors\n  }\n\n  // Do we have a readConcern specified\n  if(self.s.readConcern) {\n    commandObject.readConcern = self.s.readConcern;\n  }\n\n  // Store the raw value\n  var raw = options.raw;\n  delete options['raw'];\n\n  // Execute the command\n  self.s.db.command(commandObject, options, function(err, result) {\n    if(err) return handleCallback(callback, err, null);\n    if(result == null) return handleCallback(callback, new Error(\"no result returned for parallelCollectionScan\"), null);\n\n    var cursors = [];\n    // Add the raw back to the option\n    if(raw) options.raw = raw;\n    // Create command cursors for each item\n    for(var i = 0; i < result.cursors.length; i++) {\n      var rawId = result.cursors[i].cursor.id\n      // Convert cursorId to Long if needed\n      var cursorId = typeof rawId == 'number' ? Long.fromNumber(rawId) : rawId;\n      // Add a command cursor\n      cursors.push(self.s.topology.cursor(self.s.namespace, cursorId, options));\n    }\n\n    handleCallback(callback, null, cursors);\n  });\n}\n\ndefine.classMethod('parallelCollectionScan', {callback: true, promise:true});\n\n/**\n * Execute the geoNear command to search for items in the collection\n *\n * @method\n * @param {number} x Point to search on the x axis, ensure the indexes are ordered in the same order.\n * @param {number} y Point to search on the y axis, ensure the indexes are ordered in the same order.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.num=null] Max number of results to return.\n * @param {number} [options.minDistance=null] Include results starting at minDistance from a point (2.6 or higher)\n * @param {number} [options.maxDistance=null] Include results up to maxDistance from the point.\n * @param {number} [options.distanceMultiplier=null] Include a value to multiply the distances with allowing for range conversions.\n * @param {object} [options.query=null] Filter the results by a query.\n * @param {boolean} [options.spherical=false] Perform query using a spherical model.\n * @param {boolean} [options.uniqueDocs=false] The closest location in a document to the center of the search region will always be returned MongoDB > 2.X.\n * @param {boolean} [options.includeLocs=false] Include the location data fields in the top level of the results MongoDB > 2.X.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.geoNear = function(x, y, options, callback) {\n  var self = this;\n  var point = typeof(x) == 'object' && x\n    , args = Array.prototype.slice.call(arguments, point?1:2);\n\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  // Fetch all commands\n  options = args.length ? args.shift() || {} : {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return geoNear(self, x, y, point, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    geoNear(self, x, y, point, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar geoNear = function(self, x, y, point, options, callback) {\n  // Build command object\n  var commandObject = {\n    geoNear:self.s.name,\n    near: point || [x, y]\n  }\n\n  options = shallowClone(options);\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(self, options, self.s.db, self);\n\n  // Exclude readPreference and existing options to prevent user from\n  // shooting themselves in the foot\n  var exclude = {\n    readPreference: true,\n    geoNear: true,\n    near: true\n  };\n\n  // Filter out any excluded objects\n  commandObject = decorateCommand(commandObject, options, exclude);\n\n  // Do we have a readConcern specified\n  if(self.s.readConcern) {\n    commandObject.readConcern = self.s.readConcern;\n  }\n\n  // Have we specified collation\n  decorateWithCollation(commandObject, self, options);\n\n  // Execute the command\n  self.s.db.command(commandObject, options, function (err, res) {\n    if(err) return handleCallback(callback, err);\n    if(res.err || res.errmsg) return handleCallback(callback, toError(res));\n    // should we only be returning res.results here? Not sure if the user\n    // should see the other return information\n    handleCallback(callback, null, res);\n  });\n}\n\ndefine.classMethod('geoNear', {callback: true, promise:true});\n\n/**\n * Execute a geo search using a geo haystack index on a collection.\n *\n * @method\n * @param {number} x Point to search on the x axis, ensure the indexes are ordered in the same order.\n * @param {number} y Point to search on the y axis, ensure the indexes are ordered in the same order.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxDistance=null] Include results up to maxDistance from the point.\n * @param {object} [options.search=null] Filter the results by a query.\n * @param {number} [options.limit=false] Max number of results to return.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.geoHaystackSearch = function(x, y, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  // Fetch all commands\n  options = args.length ? args.shift() || {} : {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return geoHaystackSearch(self, x, y, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    geoHaystackSearch(self, x, y, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar geoHaystackSearch = function(self, x, y, options, callback) {\n  // Build command object\n  var commandObject = {\n    geoSearch: self.s.name,\n    near: [x, y]\n  }\n\n  // Remove read preference from hash if it exists\n  commandObject = decorateCommand(commandObject, options, {readPreference: true});\n\n  options = shallowClone(options);\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(self, options, self.s.db, self);\n\n  // Do we have a readConcern specified\n  if(self.s.readConcern) {\n    commandObject.readConcern = self.s.readConcern;\n  }\n\n  // Execute the command\n  self.s.db.command(commandObject, options, function (err, res) {\n    if(err) return handleCallback(callback, err);\n    if(res.err || res.errmsg) handleCallback(callback, toError(res));\n    // should we only be returning res.results here? Not sure if the user\n    // should see the other return information\n    handleCallback(callback, null, res);\n  });\n}\n\ndefine.classMethod('geoHaystackSearch', {callback: true, promise:true});\n\n/**\n * Group function helper\n * @ignore\n */\n// var groupFunction = function () {\n//   var c = db[ns].find(condition);\n//   var map = new Map();\n//   var reduce_function = reduce;\n//\n//   while (c.hasNext()) {\n//     var obj = c.next();\n//     var key = {};\n//\n//     for (var i = 0, len = keys.length; i < len; ++i) {\n//       var k = keys[i];\n//       key[k] = obj[k];\n//     }\n//\n//     var aggObj = map.get(key);\n//\n//     if (aggObj == null) {\n//       var newObj = Object.extend({}, key);\n//       aggObj = Object.extend(newObj, initial);\n//       map.put(key, aggObj);\n//     }\n//\n//     reduce_function(obj, aggObj);\n//   }\n//\n//   return { \"result\": map.values() };\n// }.toString();\nvar groupFunction = 'function () {\\nvar c = db[ns].find(condition);\\nvar map = new Map();\\nvar reduce_function = reduce;\\n\\nwhile (c.hasNext()) {\\nvar obj = c.next();\\nvar key = {};\\n\\nfor (var i = 0, len = keys.length; i < len; ++i) {\\nvar k = keys[i];\\nkey[k] = obj[k];\\n}\\n\\nvar aggObj = map.get(key);\\n\\nif (aggObj == null) {\\nvar newObj = Object.extend({}, key);\\naggObj = Object.extend(newObj, initial);\\nmap.put(key, aggObj);\\n}\\n\\nreduce_function(obj, aggObj);\\n}\\n\\nreturn { \"result\": map.values() };\\n}';\n\n/**\n * Run a group command across a collection\n *\n * @method\n * @param {(object|array|function|code)} keys An object, array or function expressing the keys to group by.\n * @param {object} condition An optional condition that must be true for a row to be considered.\n * @param {object} initial Initial value of the aggregation counter object.\n * @param {(function|Code)} reduce The reduce function aggregates (reduces) the objects iterated\n * @param {(function|Code)} finalize An optional function to be run on each item in the result set just before the item is returned.\n * @param {boolean} command Specify if you wish to run using the internal group command or using eval, default is true.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated MongoDB 3.6 or higher will no longer support the group command. We recommend rewriting using the aggregation framework.\n */\nCollection.prototype.group = function(keys, condition, initial, reduce, finalize, command, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 3);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  // Fetch all commands\n  reduce = args.length ? args.shift() : null;\n  finalize = args.length ? args.shift() : null;\n  command = args.length ? args.shift() : null;\n  options = args.length ? args.shift() || {} : {};\n\n  // Make sure we are backward compatible\n  if(!(typeof finalize == 'function')) {\n    command = finalize;\n    finalize = null;\n  }\n\n  if (!Array.isArray(keys) && keys instanceof Object && typeof(keys) !== 'function' && !(keys._bsontype == 'Code')) {\n    keys = Object.keys(keys);\n  }\n\n  if(typeof reduce === 'function') {\n    reduce = reduce.toString();\n  }\n\n  if(typeof finalize === 'function') {\n    finalize = finalize.toString();\n  }\n\n  // Set up the command as default\n  command = command == null ? true : command;\n\n  // Execute using callback\n  if(typeof callback == 'function') return group(self, keys, condition, initial, reduce, finalize, command, options, callback);\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    group(self, keys, condition, initial, reduce, finalize, command, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar group = function(self, keys, condition, initial, reduce, finalize, command, options, callback) {\n  // Execute using the command\n  if(command) {\n    var reduceFunction = reduce && reduce._bsontype == 'Code'\n        ? reduce\n        : new Code(reduce);\n\n    var selector = {\n      group: {\n          'ns': self.s.name\n        , '$reduce': reduceFunction\n        , 'cond': condition\n        , 'initial': initial\n        , 'out': \"inline\"\n      }\n    };\n\n    // if finalize is defined\n    if(finalize != null) selector.group['finalize'] = finalize;\n    // Set up group selector\n    if ('function' === typeof keys || (keys && keys._bsontype == 'Code')) {\n      selector.group.$keyf = keys && keys._bsontype == 'Code'\n        ? keys\n        : new Code(keys);\n    } else {\n      var hash = {};\n      keys.forEach(function (key) {\n        hash[key] = 1;\n      });\n      selector.group.key = hash;\n    }\n\n    options = shallowClone(options);\n    // Ensure we have the right read preference inheritance\n    options = getReadPreference(self, options, self.s.db, self);\n\n    // Do we have a readConcern specified\n    if(self.s.readConcern) {\n      selector.readConcern = self.s.readConcern;\n    }\n\n    // Have we specified collation\n    decorateWithCollation(selector, self, options);\n\n    // Execute command\n    self.s.db.command(selector, options, function(err, result) {\n      if(err) return handleCallback(callback, err, null);\n      handleCallback(callback, null, result.retval);\n    });\n  } else {\n    // Create execution scope\n    var scope = reduce != null && reduce._bsontype == 'Code'\n      ? reduce.scope\n      : {};\n\n    scope.ns = self.s.name;\n    scope.keys = keys;\n    scope.condition = condition;\n    scope.initial = initial;\n\n    // Pass in the function text to execute within mongodb.\n    var groupfn = groupFunction.replace(/ reduce;/, reduce.toString() + ';');\n\n    self.s.db.eval(new Code(groupfn, scope), function (err, results) {\n      if (err) return handleCallback(callback, err, null);\n      handleCallback(callback, null, results.result || results);\n    });\n  }\n}\n\ndefine.classMethod('group', {callback: true, promise:true});\n\n/**\n * Functions that are passed as scope args must\n * be converted to Code instances.\n * @ignore\n */\nfunction processScope (scope) {\n  if(!isObject(scope) || scope._bsontype == 'ObjectID') {\n    return scope;\n  }\n\n  var keys = Object.keys(scope);\n  var i = keys.length;\n  var key;\n  var new_scope = {};\n\n  while (i--) {\n    key = keys[i];\n    if ('function' == typeof scope[key]) {\n      new_scope[key] = new Code(String(scope[key]));\n    } else {\n      new_scope[key] = processScope(scope[key]);\n    }\n  }\n\n  return new_scope;\n}\n\n/**\n * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\n *\n * @method\n * @param {(function|string)} map The mapping function.\n * @param {(function|string)} reduce The reduce function.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.out=null] Sets the output target for the map reduce job. *{inline:1} | {replace:'collectionName'} | {merge:'collectionName'} | {reduce:'collectionName'}*\n * @param {object} [options.query=null] Query filter object.\n * @param {object} [options.sort=null] Sorts the input objects using this key. Useful for optimization, like sorting by the emit key for fewer reduces.\n * @param {number} [options.limit=null] Number of objects to return from collection.\n * @param {boolean} [options.keeptemp=false] Keep temporary data.\n * @param {(function|string)} [options.finalize=null] Finalize function.\n * @param {object} [options.scope=null] Can pass in variables that can be access from map/reduce/finalize.\n * @param {boolean} [options.jsMode=false] It is possible to make the execution stay in JS. Provided in MongoDB > 2.0.X.\n * @param {boolean} [options.verbose=false] Provide statistics on job execution time.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.mapReduce = function(map, reduce, options, callback) {\n  var self = this;\n  if('function' === typeof options) callback = options, options = {};\n  // Out must allways be defined (make sure we don't break weirdly on pre 1.8+ servers)\n  if(null == options.out) {\n    throw new Error(\"the out option parameter must be defined, see mongodb docs for possible values\");\n  }\n\n  if('function' === typeof map) {\n    map = map.toString();\n  }\n\n  if('function' === typeof reduce) {\n    reduce = reduce.toString();\n  }\n\n  if('function' === typeof options.finalize) {\n    options.finalize = options.finalize.toString();\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return mapReduce(self, map, reduce, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    mapReduce(self, map, reduce, options, function(err, r, r1) {\n      if(err) return reject(err);\n      if(!r1) return resolve(r);\n      resolve({results: r, stats: r1});\n    });\n  });\n}\n\nvar mapReduce = function(self, map, reduce, options, callback) {\n  var mapCommandHash = {\n      mapreduce: self.s.name\n    , map: map\n    , reduce: reduce\n  };\n\n  // Exclusion list\n  var exclusionList = ['readPreference'];\n\n  // Add any other options passed in\n  for(var n in options) {\n    if('scope' == n) {\n      mapCommandHash[n] = processScope(options[n]);\n    } else {\n      // Only include if not in exclusion list\n      if(exclusionList.indexOf(n) == -1) {\n        mapCommandHash[n] = options[n];\n      }\n    }\n  }\n\n  options = shallowClone(options);\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(self, options, self.s.db, self);\n\n  // If we have a read preference and inline is not set as output fail hard\n  if((options.readPreference != false && options.readPreference != 'primary')\n    && options['out'] && (options['out'].inline != 1 && options['out'] != 'inline')) {\n      // Force readPreference to primary\n      options.readPreference = 'primary';\n      // Decorate command with writeConcern if supported\n      decorateWithWriteConcern(mapCommandHash, self, options);\n  } else if(self.s.readConcern) {\n    mapCommandHash.readConcern = self.s.readConcern;\n  }\n\n  // Is bypassDocumentValidation specified\n  if(typeof options.bypassDocumentValidation == 'boolean') {\n    mapCommandHash.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // Have we specified collation\n  decorateWithCollation(mapCommandHash, self, options);\n\n  // Execute command\n  self.s.db.command(mapCommandHash, {readPreference:options.readPreference}, function (err, result) {\n    if(err) return handleCallback(callback, err);\n    // Check if we have an error\n    if(1 != result.ok || result.err || result.errmsg) {\n      return handleCallback(callback, toError(result));\n    }\n\n    // Create statistics value\n    var stats = {};\n    if(result.timeMillis) stats['processtime'] = result.timeMillis;\n    if(result.counts) stats['counts'] = result.counts;\n    if(result.timing) stats['timing'] = result.timing;\n\n    // invoked with inline?\n    if(result.results) {\n      // If we wish for no verbosity\n      if(options['verbose'] == null || !options['verbose']) {\n        return handleCallback(callback, null, result.results);\n      }\n\n      return handleCallback(callback, null, result.results, stats);\n    }\n\n    // The returned collection\n    var collection = null;\n\n    // If we have an object it's a different db\n    if(result.result != null && typeof result.result == 'object') {\n      var doc = result.result;\n      collection = self.s.db.db(doc.db).collection(doc.collection);\n    } else {\n      // Create a collection object that wraps the result collection\n      collection = self.s.db.collection(result.result)\n    }\n\n    // If we wish for no verbosity\n    if(options['verbose'] == null || !options['verbose']) {\n      return handleCallback(callback, err, collection);\n    }\n\n    // Return stats as third set of values\n    handleCallback(callback, err, collection, stats);\n  });\n}\n\ndefine.classMethod('mapReduce', {callback: true, promise:true});\n\n/**\n * Initiate a Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @return {UnorderedBulkOperation}\n */\nCollection.prototype.initializeUnorderedBulkOp = function(options) {\n  options = options || {};\n  options.promiseLibrary = this.s.promiseLibrary;\n  return unordered(this.s.topology, this, options);\n}\n\ndefine.classMethod('initializeUnorderedBulkOp', {callback: false, promise:false, returns: [ordered.UnorderedBulkOperation]});\n\n/**\n * Initiate an In order bulk write operation, operations will be serially executed in the order they are added, creating a new operation for each switch in types.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {OrderedBulkOperation} callback The command result callback\n * @return {null}\n */\nCollection.prototype.initializeOrderedBulkOp = function(options) {\n  options = options || {};\n  options.promiseLibrary = this.s.promiseLibrary;\n  return ordered(this.s.topology, this, options);\n}\n\ndefine.classMethod('initializeOrderedBulkOp', {callback: false, promise:false, returns: [ordered.OrderedBulkOperation]});\n\n// Get write concern\nvar writeConcern = function(target, db, col, options) {\n  if(options.w != null || options.j != null || options.fsync != null) {\n    var opts = {};\n    if(options.w != null) opts.w = options.w;\n    if(options.wtimeout != null) opts.wtimeout = options.wtimeout;\n    if(options.j != null) opts.j = options.j;\n    if(options.fsync != null) opts.fsync = options.fsync;\n    target.writeConcern = opts;\n  } else if(col.writeConcern.w != null || col.writeConcern.j != null || col.writeConcern.fsync != null) {\n    target.writeConcern = col.writeConcern;\n  } else if(db.writeConcern.w != null || db.writeConcern.j != null || db.writeConcern.fsync != null) {\n    target.writeConcern = db.writeConcern;\n  }\n\n  return target\n}\n\n// Figure out the read preference\nvar getReadPreference = function(self, options, db) {\n  var r = null\n  if(options.readPreference) {\n    r = options.readPreference\n  } else if(self.s.readPreference) {\n    r = self.s.readPreference\n  } else if(db.s.readPreference) {\n    r = db.s.readPreference;\n  }\n\n  if(r instanceof ReadPreference) {\n    options.readPreference = new CoreReadPreference(r.mode, r.tags, {maxStalenessSeconds: r.maxStalenessSeconds});\n  } else if(typeof r == 'string') {\n    options.readPreference = new CoreReadPreference(r);\n  } else if(r && !(r instanceof ReadPreference) && typeof r == 'object') {\n    var mode = r.mode || r.preference;\n    if (mode && typeof mode == 'string') {\n      options.readPreference = new CoreReadPreference(mode, r.tags, {maxStalenessSeconds: r.maxStalenessSeconds});\n    }\n  }\n\n  return options;\n}\n\nvar testForFields = {\n    limit: 1, sort: 1, fields:1, skip: 1, hint: 1, explain: 1, snapshot: 1, timeout: 1, tailable: 1, tailableRetryInterval: 1\n  , numberOfRetries: 1, awaitdata: 1, awaitData: 1, exhaust: 1, batchSize: 1, returnKey: 1, maxScan: 1, min: 1, max: 1, showDiskLoc: 1\n  , comment: 1, raw: 1, readPreference: 1, partial: 1, read: 1, dbName: 1, oplogReplay: 1, connection: 1, maxTimeMS: 1, transforms: 1\n  , collation: 1\n}\n\nmodule.exports = Collection;\n"]}