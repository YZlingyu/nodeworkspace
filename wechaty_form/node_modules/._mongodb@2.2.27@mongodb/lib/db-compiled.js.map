{"version":3,"sources":["db.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,QAAQ,QAAR,EAAkB,YAArC;AAAA,IACI,eAAe,QAAQ,gBAAR,CADnB;AAAA,IAEI,WAAW,QAAQ,MAAR,EAAgB,QAF/B;AAAA,IAGI,oBAAoB,QAAQ,SAAR,EAAmB,iBAH3C;AAAA,IAII,eAAe,QAAQ,SAAR,EAAmB,YAJtC;AAAA,IAKI,oBAAoB,QAAQ,SAAR,EAAmB,iBAL3C;AAAA,IAMI,eAAe,QAAQ,SAAR,EAAmB,YANtC;AAAA,IAOI,gBAAgB,QAAQ,kBAAR,CAPpB;AAAA,IAQI,iBAAiB,QAAQ,SAAR,EAAmB,cARxC;AAAA,IASI,gBAAgB,QAAQ,SAAR,EAAmB,aATvC;AAAA,IAUI,UAAU,QAAQ,SAAR,EAAmB,OAVjC;AAAA,IAWI,iBAAiB,QAAQ,mBAAR,CAXrB;AAAA,IAYI,IAAI,QAAQ,MAAR,EAAgB,MAZxB;AAAA,IAaI,QAAQ,QAAQ,SAAR,CAbZ;AAAA,IAcI,OAAO,QAAQ,cAAR,EAAwB,IAAxB,CAA6B,IAdxC;AAAA,IAeI,qBAAqB,QAAQ,cAAR,EAAwB,cAfjD;AAAA,IAgBI,aAAa,QAAQ,cAAR,EAAwB,UAhBzC;AAAA,IAiBI,WAAW,QAAQ,cAAR,EAAwB,QAjBvC;AAAA,IAkBI,SAAS,QAAQ,YAAR,CAlBb;AAAA,IAmBI,SAAS,QAAQ,cAAR,EAAwB,MAnBrC;AAAA,IAoBI,aAAa,QAAQ,cAAR,CApBjB;AAAA,IAqBI,SAAS,QAAQ,QAAR,CArBb;AAAA,IAsBI,8BAA8B,QAAQ,SAAR,EAAmB,2BAtBrD;AAAA,IAuBI,SAAS,QAAQ,SAAR,EAAmB,MAvBhC;;AAyBA,IAAI,cAAc,CAAC,YAAD,EAAe,GAAf,EAAoB,UAApB,EAAgC,GAAhC,EAAqC,eAArC,EAAsD,qBAAtD,EACd,oBADc,EACQ,KADR,EACe,cADf,EAC+B,eAD/B,EACgD,gBADhD,EACkE,kBADlE,EACsF,iBADtF,EACyG,kBADzG,EAEd,gBAFc,EAEI,WAFJ,EAEiB,UAFjB,EAE6B,gBAF7B,EAE+C,YAF/C,CAAlB;;AAIA;AACA,IAAI,uBAAuB,CAAC,GAAD,EAAM,UAAN,EAAkB,GAAlB,EAAuB,OAAvB,EAAgC,aAAhC,EACvB,QADuB,EACb,oBADa,EACS,WADT,EACsB,KADtB,EAC6B,gBAD7B,CAA3B;;AAGA;;;;;;;;;;;;;;;;AAgBA;AACA,IAAI,mBAAmB,CAAC,GAAD,EAAM,UAAN,EAAkB,OAAlB,EAA2B,GAA3B,EAAgC,gBAAhC,EAAkD,oBAAlD,EAAwE,eAAxE,EACnB,qBADmB,EACI,WADJ,EACiB,oBADjB,EACuC,KADvC,EAC8C,kBAD9C,EACkE,YADlE,EAEnB,iBAFmB,EAEA,cAFA,EAEgB,gBAFhB,EAEkC,aAFlC,EAEiD,kBAFjD,EAEqE,iBAFrE,EAGnB,UAHmB,EAGP,YAHO,EAGO,aAHP,EAGsB,QAHtB,EAGgC,gBAHhC,EAGkD,cAHlD,EAGkE,eAHlE,CAAvB;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,IAAI,KAAK,UAAS,YAAT,EAAuB,QAAvB,EAAiC,OAAjC,EAA0C;AACjD,YAAU,WAAW,EAArB;AACA,MAAG,EAAE,gBAAgB,EAAlB,CAAH,EAA0B,OAAO,IAAI,EAAJ,CAAO,YAAP,EAAqB,QAArB,EAA+B,OAA/B,CAAP;AAC1B,eAAa,IAAb,CAAkB,IAAlB;AACA,MAAI,OAAO,IAAX;;AAEA;AACA,MAAI,iBAAiB,QAAQ,cAA7B;;AAEA;AACA,MAAG,CAAC,cAAJ,EAAoB;AAClB,qBAAiB,OAAO,OAAO,OAAd,IAAyB,UAAzB,GACf,OAAO,OADQ,GACE,QAAQ,aAAR,EAAuB,OAD1C;AAED;;AAED;AACA,YAAU,cAAc,OAAd,EAAuB,gBAAvB,CAAV;;AAEA;AACA,UAAQ,cAAR,GAAyB,cAAzB;;AAEA;AACA,OAAK,CAAL,GAAS;AACP;AACE,kBAAc;AAChB;AAHO,MAIL,SAAS;AACX;AALO,MAML,UAAU;AACZ;AAPO,MAQL,UAAU;AACZ;AATO,MAUL,SAAS;AACX;AAXO,MAYL,QAAQ,OAAO,IAAP,EAAa,OAAb;AACV;AAbO,MAcL,MAAM,WAAW,SAAS,IAApB,GAA2B;AACnC;AAfO,MAgBL,YAAY,QAAQ;AACtB;AAjBO,MAkBL,gBAAgB,QAAQ;AAC1B;AAnBO,MAoBL,kBAAkB,OAAO,QAAQ,gBAAf,IAAmC,QAAnC,GAA8C,QAAQ,gBAAtD,GAAyE,CAAC;AAC9F;AArBO,MAsBL,UAAU,QAAQ,QAAR,IAAoB;AAChC;AAvBO,MAwBL,WAAW,QAAQ,SAAR,IAAqB;AAClC;AAzBO,MA0BL,cAAc,QAAQ,YAAR,IAAwB,QAAQ;AAChD;AA3BO,MA4BL,gBAAgB;AAClB;AA7BO,MA8BL,YAAY,OAAO,QAAQ,UAAf,IAA6B,SAA7B,GAAyC,QAAQ,UAAjD,GAA8D;AAC5E;AA/BO,MAgCL,aAAa,QAAQ;AAhChB,GAAT;;AAmCA;AACA,uBAAqB,KAAK,CAAL,CAAO,YAA5B;;AAEA;AACA,oBAAkB,IAAlB,EAAwB,cAAxB,EAAwC,KAAK,CAAL,CAAO,QAA/C;AACA,oBAAkB,IAAlB,EAAwB,kBAAxB,EAA4C,KAAK,CAAL,CAAO,gBAAnD;AACA,oBAAkB,IAAlB,EAAwB,cAAxB,EAAwC,KAAK,CAAL,CAAO,YAA/C;;AAEA;AACA,MAAG,QAAQ,QAAX,EAAqB;AACrB,MAAG,KAAK,CAAL,CAAO,UAAV,EAAsB;;AAEtB;AACA,WAAS,EAAT,CAAY,OAAZ,EAAqB,eAAe,IAAf,EAAqB,OAArB,EAA8B,IAA9B,CAArB;AACA,WAAS,EAAT,CAAY,SAAZ,EAAuB,eAAe,IAAf,EAAqB,SAArB,EAAgC,IAAhC,CAAvB;AACA,WAAS,EAAT,CAAY,OAAZ,EAAqB,eAAe,IAAf,EAAqB,OAArB,EAA8B,IAA9B,CAArB;AACA,WAAS,EAAT,CAAY,YAAZ,EAA0B,eAAe,IAAf,EAAqB,YAArB,EAAmC,IAAnC,CAA1B;AACA,WAAS,IAAT,CAAc,MAAd,EAAsB,eAAe,IAAf,EAAqB,MAArB,EAA6B,IAA7B,CAAtB;AACA,WAAS,IAAT,CAAc,WAAd,EAA2B,eAAe,IAAf,EAAqB,WAArB,EAAkC,IAAlC,CAA3B;AACA,WAAS,IAAT,CAAc,KAAd,EAAqB,eAAe,IAAf,EAAqB,KAArB,EAA4B,IAA5B,CAArB;AACA,WAAS,EAAT,CAAY,WAAZ,EAAyB,eAAe,IAAf,EAAqB,WAArB,EAAkC,IAAlC,CAAzB;AACD,CA9ED;;AAgFA,SAAS,EAAT,EAAa,YAAb;;AAEA,IAAI,SAAS,GAAG,MAAH,GAAY,IAAI,MAAJ,CAAW,IAAX,EAAiB,EAAjB,EAAqB,KAArB,CAAzB;;AAEA;AACA,OAAO,cAAP,CAAsB,GAAG,SAAzB,EAAoC,UAApC,EAAgD;AAC9C,cAAW,IADmC;AAE9C,OAAK,YAAW;AAAE,WAAO,KAAK,CAAL,CAAO,QAAd;AAAyB;AAFG,CAAhD;;AAKA;AACA,OAAO,cAAP,CAAsB,GAAG,SAAzB,EAAoC,SAApC,EAA+C;AAC7C,cAAW,IADkC;AAE7C,OAAK,YAAW;AAAE,WAAO,KAAK,CAAL,CAAO,OAAd;AAAwB;AAFG,CAA/C;;AAKA;AACA,OAAO,cAAP,CAAsB,GAAG,SAAzB,EAAoC,SAApC,EAA+C;AAC7C,cAAW,IADkC;AAE7C,OAAK,YAAW;AACd,QAAG,KAAK,CAAL,CAAO,OAAP,CAAe,cAAf,IAAiC,IAAjC,KACG,KAAK,CAAL,CAAO,OAAP,CAAe,cAAf,IAAiC,SAAjC,IAA8C,KAAK,CAAL,CAAO,OAAP,CAAe,cAAf,CAA8B,IAA9B,IAAsC,SADvF,CAAH,EACsG;AACpG,aAAO,IAAP;AACD;AACD,WAAO,KAAP;AACD;AAR4C,CAA/C;;AAWA;AACA,OAAO,cAAP,CAAsB,GAAG,SAAzB,EAAoC,cAApC,EAAoD;AAClD,cAAW,IADuC;AAElD,OAAK,YAAW;AACd,QAAI,MAAM,EAAV;AACA,QAAG,KAAK,CAAL,CAAO,OAAP,CAAe,CAAf,IAAoB,IAAvB,EAA6B,IAAI,CAAJ,GAAQ,KAAK,CAAL,CAAO,OAAP,CAAe,CAAvB;AAC7B,QAAG,KAAK,CAAL,CAAO,OAAP,CAAe,CAAf,IAAoB,IAAvB,EAA6B,IAAI,CAAJ,GAAQ,KAAK,CAAL,CAAO,OAAP,CAAe,CAAvB;AAC7B,QAAG,KAAK,CAAL,CAAO,OAAP,CAAe,KAAf,IAAwB,IAA3B,EAAiC,IAAI,KAAJ,GAAY,KAAK,CAAL,CAAO,OAAP,CAAe,KAA3B;AACjC,QAAG,KAAK,CAAL,CAAO,OAAP,CAAe,QAAf,IAA2B,IAA9B,EAAoC,IAAI,QAAJ,GAAe,KAAK,CAAL,CAAO,OAAP,CAAe,QAA9B;AACpC,WAAO,GAAP;AACD;AATiD,CAApD;;AAYA;;;;;;;AAOA;AACA,IAAI,OAAO,UAAS,IAAT,EAAe,QAAf,EAAyB;AAClC,OAAK,CAAL,CAAO,QAAP,CAAgB,OAAhB,CAAwB,IAAxB,EAA8B,KAAK,CAAL,CAAO,OAArC,EAA8C,UAAS,GAAT,EAAc;AAC1D,QAAG,YAAY,IAAf,EAAqB;AACrB,QAAI,mBAAmB,QAAvB;AACA,gBAAY,IAAZ;;AAEA,QAAG,GAAH,EAAQ;AACN,WAAK,KAAL;AACA,aAAO,iBAAiB,GAAjB,CAAP;AACD;;AAED,qBAAiB,IAAjB,EAAuB,IAAvB;AACD,GAXD;AAYD,CAbD;;AAeA;;;;;;AAMA,GAAG,SAAH,CAAa,IAAb,GAAoB,UAAS,QAAT,EAAmB;AACrC,MAAI,OAAO,IAAX;AACA;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC,OAAO,KAAK,IAAL,EAAW,QAAX,CAAP;AAClC;AACA,SAAO,IAAI,KAAK,CAAL,CAAO,cAAX,CAA0B,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACzD,SAAK,IAAL,EAAW,UAAS,GAAT,EAAc,EAAd,EAAkB;AAC3B,UAAG,GAAH,EAAQ,OAAO,OAAO,GAAP,CAAP;AACR,cAAQ,EAAR;AACD,KAHD;AAID,GALM,CAAP;AAMD,CAXD;;AAaA,OAAO,WAAP,CAAmB,MAAnB,EAA2B,EAAC,UAAU,IAAX,EAAiB,SAAQ,IAAzB,EAA3B;;AAEA;;;;;AAKA,IAAI,wBAAwB,UAAS,cAAT,EAAyB;AACnD,MAAG,kBAAkB,OAAO,cAAP,IAAyB,QAA9C,EAAwD;AACtD,WAAO,IAAI,kBAAJ,CAAuB,cAAvB,CAAP;AACD,GAFD,MAEO,IAAG,0BAA0B,cAA7B,EAA6C;AAClD,WAAO,IAAI,kBAAJ,CAAuB,eAAe,IAAtC,EAA4C,eAAe,IAA3D,EAAiE,EAAC,qBAAqB,eAAe,mBAArC,EAAjE,CAAP;AACD,GAFM,MAEA,IAAG,kBAAkB,OAAO,cAAP,IAAyB,QAA9C,EAAwD;AAC7D,QAAI,OAAO,eAAe,IAAf,IAAuB,eAAe,UAAjD;AACA,QAAI,QAAQ,OAAO,IAAP,IAAe,QAA3B,EAAqC;AACnC,uBAAiB,IAAI,kBAAJ,CAAuB,IAAvB,EAA6B,eAAe,IAA5C,EAAkD,EAAC,qBAAqB,eAAe,mBAArC,EAAlD,CAAjB;AACD;AACF;AACD,SAAO,cAAP;AACD,CAZD;;AAcA;;;;;;;AAOA,IAAI,iBAAiB,UAAS,IAAT,EAAe,OAAf,EAAwB,OAAxB,EAAiC,QAAjC,EAA2C;AAC9D;AACA,MAAG,KAAK,YAAL,IAAqB,KAAK,YAAL,CAAkB,WAAlB,EAAxB,EAAyD,OAAO,SAAS,IAAI,UAAJ,CAAe,wBAAf,CAAT,CAAP;AACzD;AACA,MAAI,SAAS,QAAQ,MAAR,IAAkB,QAAQ,MAA1B,IAAoC,KAAK,CAAL,CAAO,YAAxD;;AAEA;AACA,MAAG,QAAQ,cAAR,IAA0B,IAA1B,IAAkC,KAAK,CAAL,CAAO,cAA5C,EAA4D;AAC1D,YAAQ,cAAR,GAAyB,KAAK,CAAL,CAAO,cAAhC;AACD;;AAED;AACA,MAAG,QAAQ,cAAX,EAA2B;AACzB,YAAQ,cAAR,GAAyB,sBAAsB,QAAQ,cAA9B,CAAzB;AACD,GAFD,MAEO;AACL,YAAQ,cAAR,GAAyB,mBAAmB,OAA5C;AACD;;AAED;AACA,MAAG,KAAK,CAAL,CAAO,MAAP,CAAc,OAAd,EAAH,EAA4B,KAAK,CAAL,CAAO,MAAP,CAAc,KAAd,CAAoB,EAAE,mDAAF,EAC5C,KAAK,SAAL,CAAe,OAAf,CAD4C,EACnB,EAAE,SAAF,EAAa,MAAb,CADmB,EACG,KAAK,SAAL,CAAe,aAAa,WAAb,EAA0B,OAA1B,CAAf,CADH,CAApB;;AAG5B;AACA,OAAK,CAAL,CAAO,QAAP,CAAgB,OAAhB,CAAwB,EAAE,SAAF,EAAa,MAAb,CAAxB,EAA8C,OAA9C,EAAuD,OAAvD,EAAgE,UAAS,GAAT,EAAc,MAAd,EAAsB;AACpF,QAAG,GAAH,EAAQ,OAAO,eAAe,QAAf,EAAyB,GAAzB,CAAP;AACR,QAAG,QAAQ,IAAX,EAAiB,OAAO,eAAe,QAAf,EAAyB,IAAzB,EAA+B,MAA/B,CAAP;AACjB,mBAAe,QAAf,EAAyB,IAAzB,EAA+B,OAAO,MAAtC;AACD,GAJD;AAKD,CA5BD;;AA8BA;;;;;;;;;AASA,GAAG,SAAH,CAAa,OAAb,GAAuB,UAAS,OAAT,EAAkB,OAAlB,EAA2B,QAA3B,EAAqC;AAC1D,MAAI,OAAO,IAAX;AACA;AACA,MAAG,OAAO,OAAP,IAAkB,UAArB,EAAiC,WAAW,OAAX,EAAoB,UAAU,EAA9B;AACjC;AACA,YAAU,aAAa,OAAb,CAAV;;AAEA;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC,OAAO,eAAe,IAAf,EAAqB,OAArB,EAA8B,OAA9B,EAAuC,QAAvC,CAAP;AAClC;AACA,SAAO,IAAI,KAAK,CAAL,CAAO,cAAX,CAA0B,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACzD,mBAAe,IAAf,EAAqB,OAArB,EAA8B,OAA9B,EAAuC,UAAS,GAAT,EAAc,CAAd,EAAiB;AACtD,UAAG,GAAH,EAAQ,OAAO,OAAO,GAAP,CAAP;AACR,cAAQ,CAAR;AACD,KAHD;AAID,GALM,CAAP;AAMD,CAhBD;;AAkBA,OAAO,WAAP,CAAmB,SAAnB,EAA8B,EAAC,UAAU,IAAX,EAAiB,SAAQ,IAAzB,EAA9B;;AAEA;;;;;;;AAOA;;;;;;;AAOA,GAAG,SAAH,CAAa,KAAb,GAAqB,UAAS,KAAT,EAAgB,QAAhB,EAA0B;AAC7C,MAAG,OAAO,KAAP,IAAgB,UAAnB,EAA+B,WAAW,KAAX,EAAkB,QAAQ,KAA1B;AAC/B,OAAK,CAAL,CAAO,QAAP,CAAgB,KAAhB,CAAsB,KAAtB;AACA,MAAI,OAAO,IAAX;;AAEA;AACA,MAAG,KAAK,SAAL,CAAe,OAAf,EAAwB,MAAxB,GAAiC,CAApC,EAAuC;AACrC,SAAK,IAAL,CAAU,OAAV;;AAEA;AACA,QAAG,KAAK,QAAL,IAAiB,IAApB,EAA0B;AACxB;AACA,WAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,KAAK,CAAL,CAAO,QAAP,CAAgB,MAAnC,EAA2C,GAA3C,EAAgD;AAC9C,aAAK,CAAL,CAAO,QAAP,CAAgB,CAAhB,EAAmB,IAAnB,CAAwB,OAAxB;AACD;AACF;;AAED;AACA,SAAK,kBAAL,CAAwB,OAAxB;AACD;;AAED;AACA,MAAG,KAAK,CAAL,CAAO,QAAV,EAAoB,KAAK,CAAL,CAAO,QAAP,CAAgB,KAAhB;AACpB;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC,OAAO,QAAQ,QAAR,CAAiB,YAAW;AACnE,mBAAe,QAAf,EAAyB,IAAzB;AACD,GAFwC,CAAP;;AAIlC;AACA,SAAO,IAAI,KAAK,CAAL,CAAO,cAAX,CAA0B,UAAS,OAAT,EAAkB;AACjD;AACD,GAFM,CAAP;AAGD,CAhCD;;AAkCA,OAAO,WAAP,CAAmB,OAAnB,EAA4B,EAAC,UAAU,IAAX,EAAiB,SAAQ,IAAzB,EAA5B;;AAEA;;;;;AAKA,GAAG,SAAH,CAAa,KAAb,GAAqB,YAAW;AAC9B,SAAO,IAAI,KAAJ,CAAU,IAAV,EAAgB,KAAK,CAAL,CAAO,QAAvB,EAAiC,KAAK,CAAL,CAAO,cAAxC,CAAP;AACD,CAFD;;AAIA,OAAO,WAAP,CAAmB,OAAnB,EAA4B,EAAC,UAAU,KAAX,EAAkB,SAAQ,KAA1B,EAAiC,SAAS,CAAC,KAAD,CAA1C,EAA5B;;AAEA;;;;;;;AAOA,IAAI,iBAAiB,CAAC,WAAD,EAAc,gBAAd,EACjB,oBADiB,EACK,QADL,EACe,aADf,EAC8B,iBAD9B,EACiD,eADjD,EACkE,gBADlE,EACoF,cADpF,CAArB;;AAGA;;;;;;;;;;;;;;;;;;;;AAoBA,GAAG,SAAH,CAAa,UAAb,GAA0B,UAAS,IAAT,EAAe,OAAf,EAAwB,QAAxB,EAAkC;AAC1D,MAAI,OAAO,IAAX;AACA,MAAG,OAAO,OAAP,IAAkB,UAArB,EAAiC,WAAW,OAAX,EAAoB,UAAU,EAA9B;AACjC,YAAU,WAAW,EAArB;AACA,YAAU,aAAa,OAAb,CAAV;AACA;AACA,UAAQ,cAAR,GAAyB,KAAK,CAAL,CAAO,cAAhC;;AAEA;AACA,UAAQ,WAAR,GAAsB,QAAQ,WAAR,IAAuB,KAAK,CAAL,CAAO,WAApD;;AAEA;AACA,MAAG,KAAK,CAAL,CAAO,OAAP,CAAe,eAAlB,EAAmC;AACjC,YAAQ,eAAR,GAA0B,KAAK,CAAL,CAAO,OAAP,CAAe,eAAzC;AACD;;AAED;AACA,YAAU,4BAA4B,OAA5B,EAAqC,KAAK,CAAL,CAAO,OAA5C,EAAqD,cAArD,EAAqE,IAArE,CAAV;;AAEA;AACA,MAAG,WAAW,IAAX,IAAmB,CAAC,QAAQ,MAA/B,EAAuC;AACrC,QAAI;AACF,UAAI,aAAa,IAAI,UAAJ,CAAe,IAAf,EAAqB,KAAK,CAAL,CAAO,QAA5B,EAAsC,KAAK,CAAL,CAAO,YAA7C,EAA2D,IAA3D,EAAiE,KAAK,CAAL,CAAO,SAAxE,EAAmF,OAAnF,CAAjB;AACA,UAAG,QAAH,EAAa,SAAS,IAAT,EAAe,UAAf;AACb,aAAO,UAAP;AACD,KAJD,CAIE,OAAM,GAAN,EAAW;AACX,UAAG,QAAH,EAAa,OAAO,SAAS,GAAT,CAAP;AACb,YAAM,GAAN;AACD;AACF;;AAED;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC;AAChC,UAAM,QAAQ,EAAE,qEAAF,EAAyE,IAAzE,CAAR,CAAN;AACD;;AAED;AACA,MAAG,KAAK,YAAL,IAAqB,KAAK,YAAL,CAAkB,WAAlB,EAAxB,EAAyD;AACvD,WAAO,SAAS,IAAI,UAAJ,CAAe,wBAAf,CAAT,CAAP;AACD;;AAED;AACA,OAAK,eAAL,CAAqB,EAAC,MAAK,IAAN,EAArB,EAAkC,OAAlC,EAA2C,OAA3C,CAAmD,UAAS,GAAT,EAAc,WAAd,EAA2B;AAC5E,QAAG,OAAO,IAAV,EAAgB,OAAO,eAAe,QAAf,EAAyB,GAAzB,EAA8B,IAA9B,CAAP;AAChB,QAAG,YAAY,MAAZ,IAAsB,CAAzB,EAA4B,OAAO,eAAe,QAAf,EAAyB,QAAQ,EAAE,yDAAF,EAA6D,IAA7D,CAAR,CAAzB,EAAsG,IAAtG,CAAP;;AAE5B,QAAI;AACF,aAAO,eAAe,QAAf,EAAyB,IAAzB,EAA+B,IAAI,UAAJ,CAAe,IAAf,EAAqB,KAAK,CAAL,CAAO,QAA5B,EAAsC,KAAK,CAAL,CAAO,YAA7C,EAA2D,IAA3D,EAAiE,KAAK,CAAL,CAAO,SAAxE,EAAmF,OAAnF,CAA/B,CAAP;AACD,KAFD,CAEE,OAAM,GAAN,EAAW;AACX,aAAO,eAAe,QAAf,EAAyB,GAAzB,EAA8B,IAA9B,CAAP;AACD;AACF,GATD;AAUD,CApDD;;AAsDA,OAAO,WAAP,CAAmB,YAAnB,EAAiC,EAAC,UAAU,IAAX,EAAiB,SAAQ,KAAzB,EAAgC,SAAS,CAAC,UAAD,CAAzC,EAAjC;;AAEA,SAAS,wBAAT,CAAkC,OAAlC,EAA2C,IAA3C,EAAiD,OAAjD,EAA0D;AACxD;AACA,MAAG,KAAK,CAAL,CAAO,QAAP,CAAgB,YAAhB,GAA+B,wBAAlC,EAA4D;AAC1D;AACA,QAAI,eAAe,aAAa,aAAa,OAAb,CAAb,EAAoC,IAApC,EAA0C,OAA1C,CAAnB;AACA;AACA,QAAG,aAAa,YAAhB,EAA8B;AAC5B,cAAQ,YAAR,GAAuB,aAAa,YAApC;AACD;AACF;AACF;;AAED,IAAI,mBAAmB,UAAS,IAAT,EAAe,IAAf,EAAqB,OAArB,EAA8B,QAA9B,EAAwC;AAC7D;AACA,MAAI,eAAe,aAAa,aAAa,OAAb,CAAb,EAAoC,IAApC,EAA0C,OAA1C,CAAnB;AACA;AACA,MAAG,KAAK,YAAL,IAAqB,KAAK,YAAL,CAAkB,WAAlB,EAAxB,EAAyD,OAAO,SAAS,IAAI,UAAJ,CAAe,wBAAf,CAAT,CAAP;AACzD;AACA,OAAK,eAAL,CAAqB,EAAC,MAAM,IAAP,EAArB,EACG,iBADH,CACqB,eAAe,OADpC,EAEG,OAFH,CAEW,UAAS,GAAT,EAAc,WAAd,EAA2B;AAClC,QAAG,OAAO,IAAV,EAAgB,OAAO,eAAe,QAAf,EAAyB,GAAzB,EAA8B,IAA9B,CAAP;AAChB,QAAG,YAAY,MAAZ,GAAqB,CAArB,IAA0B,aAAa,MAA1C,EAAkD;AAChD,aAAO,eAAe,QAAf,EAAyB,WAAW,MAAX,CAAkB,EAAC,SAAS,EAAE,yDAAF,EAA6D,IAA7D,CAAV,EAA8E,QAAO,IAArF,EAAlB,CAAzB,EAAwI,IAAxI,CAAP;AACD,KAFD,MAEO,IAAI,YAAY,MAAZ,GAAqB,CAAzB,EAA4B;AACjC,UAAI;AAAE,eAAO,eAAe,QAAf,EAAyB,IAAzB,EAA+B,IAAI,UAAJ,CAAe,IAAf,EAAqB,KAAK,CAAL,CAAO,QAA5B,EAAsC,KAAK,CAAL,CAAO,YAA7C,EAA2D,IAA3D,EAAiE,KAAK,CAAL,CAAO,SAAxE,EAAmF,OAAnF,CAA/B,CAAP;AAAqI,OAA3I,CACA,OAAM,GAAN,EAAW;AAAE,eAAO,eAAe,QAAf,EAAyB,GAAzB,CAAP;AAAuC;AACrD;;AAED;AACA,QAAI,MAAM,EAAC,UAAS,IAAV,EAAV;;AAEA;AACA,6BAAyB,GAAzB,EAA8B,IAA9B,EAAoC,OAApC;AACA;AACA,SAAI,IAAI,CAAR,IAAa,OAAb,EAAsB;AACpB,UAAG,QAAQ,CAAR,KAAc,IAAd,IACE,OAAO,QAAQ,CAAR,CAAP,IAAqB,UADvB,IACqC,qBAAqB,OAArB,CAA6B,CAA7B,KAAmC,CAAC,CAD5E,EAC+E;AAC3E,YAAI,CAAJ,IAAS,QAAQ,CAAR,CAAT;AACH;AACF;;AAED;AACA,iBAAa,cAAb,GAA8B,eAAe,OAA7C;;AAEA;AACA,SAAK,OAAL,CAAa,GAAb,EAAkB,YAAlB,EAAgC,UAAS,GAAT,EAAc;AAC5C,UAAG,GAAH,EAAQ,OAAO,eAAe,QAAf,EAAyB,GAAzB,CAAP;AACR,qBAAe,QAAf,EAAyB,IAAzB,EAA+B,IAAI,UAAJ,CAAe,IAAf,EAAqB,KAAK,CAAL,CAAO,QAA5B,EAAsC,KAAK,CAAL,CAAO,YAA7C,EAA2D,IAA3D,EAAiE,KAAK,CAAL,CAAO,SAAxE,EAAmF,OAAnF,CAA/B;AACD,KAHD;AAIH,GAhCD;AAiCD,CAvCD;;AAyCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,GAAG,SAAH,CAAa,gBAAb,GAAgC,UAAS,IAAT,EAAe,OAAf,EAAwB,QAAxB,EAAkC;AAChE,MAAI,OAAO,IAAX;AACA,MAAI,OAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,EAAsC,CAAtC,CAAX;AACA,aAAW,KAAK,GAAL,EAAX;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC,KAAK,IAAL,CAAU,QAAV;AAClC,SAAO,KAAK,MAAL,GAAc,KAAK,KAAL,EAAd,GAA6B,IAApC;AACA,YAAU,KAAK,MAAL,GAAc,KAAK,KAAL,MAAgB,EAA9B,GAAmC,EAA7C;;AAEA;AACA,UAAQ,cAAR,GAAyB,QAAQ,cAAR,IAA0B,KAAK,CAAL,CAAO,cAA1D;;AAEA;AACA,MAAG,OAAO,QAAP,IAAmB,QAAtB,EAAgC,OAAO,QAAP;;AAEhC;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC,OAAO,iBAAiB,IAAjB,EAAuB,IAAvB,EAA6B,OAA7B,EAAsC,QAAtC,CAAP;AAClC,SAAO,IAAI,KAAK,CAAL,CAAO,cAAX,CAA0B,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACzD,qBAAiB,IAAjB,EAAuB,IAAvB,EAA6B,OAA7B,EAAsC,UAAS,GAAT,EAAc,CAAd,EAAiB;AACrD,UAAG,GAAH,EAAQ,OAAO,OAAO,GAAP,CAAP;AACR,cAAQ,CAAR;AACD,KAHD;AAID,GALM,CAAP;AAMD,CAtBD;;AAwBA,OAAO,WAAP,CAAmB,kBAAnB,EAAuC,EAAC,UAAU,IAAX,EAAiB,SAAQ,IAAzB,EAAvC;;AAEA;;;;;;;;;AASA,GAAG,SAAH,CAAa,KAAb,GAAqB,UAAS,OAAT,EAAkB,QAAlB,EAA4B;AAC/C,MAAG,OAAO,OAAP,IAAkB,UAArB,EAAiC,WAAW,OAAX,EAAoB,UAAU,EAA9B;AACjC,YAAU,WAAW,EAArB;AACA;AACA,MAAI,gBAAgB,EAAE,SAAQ,IAAV,EAApB;AACA;AACA,MAAG,QAAQ,OAAR,KAAoB,IAAvB,EAA6B,cAAc,OAAd,IAAyB,QAAQ,OAAR,CAAzB;;AAE7B;AACA,MAAG,QAAQ,cAAR,IAA0B,IAA1B,IAAkC,KAAK,CAAL,CAAO,cAA5C,EAA4D;AAC1D,YAAQ,cAAR,GAAyB,KAAK,CAAL,CAAO,cAAhC;AACD;;AAED;AACA,SAAO,KAAK,OAAL,CAAa,aAAb,EAA4B,OAA5B,EAAqC,QAArC,CAAP;AACD,CAfD;;AAiBA,OAAO,WAAP,CAAmB,OAAnB,EAA4B,EAAC,UAAU,IAAX,EAAiB,SAAQ,IAAzB,EAA5B;;AAEA;AACA,IAAI,2BAA2B,UAAS,YAAT,EAAuB;AACpD,MAAI,WAAW,EAAE,KAAF,EAAS,YAAT,CAAf;;AAEA,SAAO;AACL,SAAK,UAAS,GAAT,EAAc;AACjB,UAAI,QAAQ,IAAI,IAAJ,CAAS,OAAT,CAAiB,QAAjB,CAAZ;AACA;AACA,UAAG,IAAI,IAAJ,IAAY,SAAS,CAAxB,EAA2B;AACzB,YAAI,IAAJ,GAAW,IAAI,IAAJ,CAAS,MAAT,CAAgB,QAAQ,SAAS,MAAjC,CAAX;AACD;;AAED,aAAO,GAAP;AACD;AATI,GAAP;AAWD,CAdD;;AAgBA;;;;;;;;;;AAUA,GAAG,SAAH,CAAa,eAAb,GAA+B,UAAS,MAAT,EAAiB,OAAjB,EAA0B;AACvD,WAAS,UAAU,EAAnB;AACA,YAAU,WAAW,EAArB;;AAEA;AACA,YAAU,aAAa,OAAb,CAAV;AACA;AACA,UAAQ,cAAR,GAAyB,KAAK,CAAL,CAAO,cAAhC;;AAEA;AACA,MAAG,QAAQ,cAAX,EAA2B;AACzB,YAAQ,cAAR,GAAyB,sBAAsB,QAAQ,cAA9B,CAAzB;AACD;;AAED;AACA,MAAG,KAAK,YAAL,CAAkB,YAAlB,GAAiC,yBAApC,EAA+D;AAC7D;AACA,QAAI,SAAS,QAAQ,SAAR,GAAoB,EAAC,WAAW,QAAQ,SAApB,EAApB,GAAqD,EAAlE;AACA;AACA,QAAI,UAAU,EAAE,iBAAkB,IAApB,EAA0B,QAAQ,MAAlC,EAA0C,QAAQ,MAAlD,EAAd;AACA;AACA,YAAQ,aAAR,GAAwB,aAAxB;AACA;AACA,aAAS,KAAK,CAAL,CAAO,QAAP,CAAgB,MAAhB,CAAuB,EAAE,SAAF,EAAa,KAAK,CAAL,CAAO,YAApB,CAAvB,EAA0D,OAA1D,EAAmE,OAAnE,CAAT;AACA;AACA,QAAG,QAAQ,cAAX,EAA2B;AACzB,aAAO,iBAAP,CAAyB,QAAQ,cAAjC;AACD;AACD;AACA,WAAO,MAAP;AACD;;AAED;AACA,MAAG,CAAC,KAAK,YAAL,CAAkB,YAAlB,GAAiC,yBAArC,EAAgE;AAC9D;AACA,QAAG,OAAO,OAAO,IAAd,IAAsB,QAAtB,IAAkC,CAAE,IAAI,MAAJ,CAAW,MAAM,KAAK,YAAX,GAA0B,KAArC,EAA4C,IAA5C,CAAiD,OAAO,IAAxD,CAAvC,EAAuG;AACrG,eAAS,aAAa,MAAb,CAAT;AACA,aAAO,IAAP,GAAc,EAAE,OAAF,EAAW,KAAK,CAAL,CAAO,YAAlB,EAAgC,OAAO,IAAvC,CAAd;AACD;AACF;;AAED;AACA,MAAG,UAAU,IAAb,EAAmB;AACjB,WAAO,IAAP,GAAc,EAAE,MAAF,EAAU,KAAK,CAAL,CAAO,YAAjB,CAAd;AACD;;AAED;AACA,MAAG,OAAO,IAAV,EAAgB;AACd,aAAS,EAAC,MAAM,CAAC,EAAC,MAAM,OAAO,IAAd,EAAD,EAAsB,EAAC,MAAK,cAAN,EAAtB,CAAP,EAAT;AACD,GAFD,MAEO;AACL,aAAS,EAAC,MAAK,cAAN,EAAT;AACD;;AAED;AACA,MAAI,WAAW,EAAC,YAAY,yBAAyB,KAAK,CAAL,CAAO,YAAhC,CAAb,EAAf;AACA;AACA,WAAS,KAAK,UAAL,CAAgB,GAAG,2BAAnB,EAAgD,IAAhD,CAAqD,MAArD,EAA6D,QAA7D,CAAT;AACA;AACA,MAAG,QAAQ,cAAX,EAA2B,OAAO,iBAAP,CAAyB,QAAQ,cAAjC;AAC3B;AACA,MAAG,QAAQ,SAAX,EAAsB,SAAS,OAAO,SAAP,CAAiB,QAAQ,SAAzB,CAAT;AACtB;AACA,SAAO,MAAP;AACD,CA/DD;;AAiEA,OAAO,WAAP,CAAmB,iBAAnB,EAAsC,EAAC,UAAU,KAAX,EAAkB,SAAQ,KAA1B,EAAiC,SAAS,CAAC,aAAD,CAA1C,EAAtC;;AAEA,IAAI,WAAW,UAAS,IAAT,EAAe,IAAf,EAAqB,UAArB,EAAiC,OAAjC,EAA0C,QAA1C,EAAoD;AACjE,MAAI,YAAY,IAAhB;AACA,MAAI,kBAAkB,EAAtB;;AAEA;AACA,MAAG,KAAK,YAAL,IAAqB,KAAK,YAAL,CAAkB,WAAlB,EAAxB,EAAyD,OAAO,SAAS,IAAI,UAAJ,CAAe,wBAAf,CAAT,CAAP;;AAEzD;AACA,MAAG,EAAE,aAAa,UAAU,SAAV,IAAuB,MAAtC,CAAH,EAAkD,YAAY,IAAI,IAAJ,CAAS,SAAT,CAAZ;AAClD;AACA,MAAG,cAAc,IAAd,IAAsB,CAAC,MAAM,OAAN,CAAc,UAAd,CAAvB,IAAoD,OAAO,UAAP,KAAsB,UAA7E,EAAyF;AACvF,sBAAkB,CAAC,UAAD,CAAlB;AACD,GAFD,MAEO,IAAG,cAAc,IAAd,IAAsB,MAAM,OAAN,CAAc,UAAd,CAAtB,IAAmD,OAAO,UAAP,KAAsB,UAA5E,EAAwF;AAC7F,sBAAkB,UAAlB;AACD;;AAED;AACA,MAAI,MAAM,EAAC,SAAQ,SAAT,EAAoB,QAAO,eAA3B,EAAV;AACA;AACA,MAAG,QAAQ,QAAR,CAAH,EAAsB;AACpB,QAAI,QAAJ,IAAgB,QAAQ,QAAR,CAAhB;AACD;;AAED;AACA,UAAQ,cAAR,GAAyB,IAAI,kBAAJ,CAAuB,eAAe,OAAtC,CAAzB;;AAEA;AACA,OAAK,OAAL,CAAa,GAAb,EAAkB,OAAlB,EAA2B,UAAS,GAAT,EAAc,MAAd,EAAsB;AAC/C,QAAG,GAAH,EAAQ,OAAO,eAAe,QAAf,EAAyB,GAAzB,EAA8B,IAA9B,CAAP;AACR,QAAG,UAAU,OAAO,EAAP,IAAa,CAA1B,EAA6B,OAAO,eAAe,QAAf,EAAyB,IAAzB,EAA+B,OAAO,MAAtC,CAAP;AAC7B,QAAG,MAAH,EAAW,OAAO,eAAe,QAAf,EAAyB,WAAW,MAAX,CAAkB,EAAC,SAAS,EAAE,iBAAF,EAAqB,OAAO,MAA5B,CAAV,EAA+C,QAAO,IAAtD,EAAlB,CAAzB,EAAyG,IAAzG,CAAP;AACX,mBAAe,QAAf,EAAyB,GAAzB,EAA8B,MAA9B;AACD,GALD;AAMD,CAjCD;;AAmCA;;;;;;;;;;;;AAYA,GAAG,SAAH,CAAa,IAAb,GAAoB,UAAS,IAAT,EAAe,UAAf,EAA2B,OAA3B,EAAoC,QAApC,EAA8C;AAChE,MAAI,OAAO,IAAX;AACA,MAAI,OAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,EAAsC,CAAtC,CAAX;AACA,aAAW,KAAK,GAAL,EAAX;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC,KAAK,IAAL,CAAU,QAAV;AAClC,eAAa,KAAK,MAAL,GAAc,KAAK,KAAL,EAAd,GAA6B,UAA1C;AACA,YAAU,KAAK,MAAL,GAAc,KAAK,KAAL,MAAgB,EAA9B,GAAmC,EAA7C;;AAEA;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC,OAAO,SAAS,IAAT,EAAe,IAAf,EAAqB,UAArB,EAAiC,OAAjC,EAA0C,QAA1C,CAAP;AAClC;AACA,SAAO,IAAI,KAAK,CAAL,CAAO,cAAX,CAA0B,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACzD,aAAS,IAAT,EAAe,IAAf,EAAqB,UAArB,EAAiC,OAAjC,EAA0C,UAAS,GAAT,EAAc,CAAd,EAAiB;AACzD,UAAG,GAAH,EAAQ,OAAO,OAAO,GAAP,CAAP;AACR,cAAQ,CAAR;AACD,KAHD;AAID,GALM,CAAP;AAMD,CAjBD;;AAmBA,OAAO,WAAP,CAAmB,MAAnB,EAA2B,EAAC,UAAU,IAAX,EAAiB,SAAQ,IAAzB,EAA3B;;AAEA;;;;;;;;;;;AAWA,GAAG,SAAH,CAAa,gBAAb,GAAgC,UAAS,cAAT,EAAyB,YAAzB,EAAuC,OAAvC,EAAgD,QAAhD,EAA0D;AACxF,MAAI,OAAO,IAAX;AACA,MAAG,OAAO,OAAP,IAAkB,UAArB,EAAiC,WAAW,OAAX,EAAoB,UAAU,EAA9B;AACjC,YAAU,WAAW,EAArB;AACA;AACA,UAAQ,cAAR,GAAyB,IAAzB;;AAEA;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC;AAChC,WAAO,KAAK,UAAL,CAAgB,cAAhB,EAAgC,MAAhC,CAAuC,YAAvC,EAAqD,OAArD,EAA8D,QAA9D,CAAP;AACD;;AAED;AACA,SAAO,IAAI,KAAK,CAAL,CAAO,cAAX,CAA0B,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACzD,SAAK,UAAL,CAAgB,cAAhB,EAAgC,MAAhC,CAAuC,YAAvC,EAAqD,OAArD,EAA8D,UAAS,GAAT,EAAc,CAAd,EAAiB;AAC7E,UAAG,GAAH,EAAQ,OAAO,OAAO,GAAP,CAAP;AACR,cAAQ,CAAR;AACD,KAHD;AAID,GALM,CAAP;AAMD,CAnBD;;AAqBA,OAAO,WAAP,CAAmB,kBAAnB,EAAuC,EAAC,UAAU,IAAX,EAAiB,SAAQ,IAAzB,EAAvC;;AAEA;;;;;;;;AAQA,GAAG,SAAH,CAAa,cAAb,GAA8B,UAAS,IAAT,EAAe,OAAf,EAAwB,QAAxB,EAAkC;AAC9D,MAAI,OAAO,IAAX;AACA,MAAG,OAAO,OAAP,IAAkB,UAArB,EAAiC,WAAW,OAAX,EAAoB,UAAU,EAA9B;AACjC,YAAU,WAAW,EAArB;;AAEA;AACA,MAAI,MAAM,EAAC,QAAO,IAAR,EAAV;;AAEA;AACA,2BAAyB,GAAzB,EAA8B,IAA9B,EAAoC,OAApC;;AAEA;AACA,YAAU,OAAO,EAAP,EAAW,KAAK,CAAL,CAAO,OAAlB,EAA2B,EAAC,gBAAgB,eAAe,OAAhC,EAA3B,CAAV;;AAEA;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC,OAAO,KAAK,OAAL,CAAa,GAAb,EAAkB,OAAlB,EAA2B,UAAS,GAAT,EAAc,MAAd,EAAsB;AACxF;AACA,QAAG,KAAK,YAAL,IAAqB,KAAK,YAAL,CAAkB,WAAlB,EAAxB,EAAyD,OAAO,SAAS,IAAI,UAAJ,CAAe,wBAAf,CAAT,CAAP;AACzD,QAAG,GAAH,EAAQ,OAAO,eAAe,QAAf,EAAyB,GAAzB,CAAP;AACR,QAAG,OAAO,EAAV,EAAc,OAAO,eAAe,QAAf,EAAyB,IAAzB,EAA+B,IAA/B,CAAP;AACd,mBAAe,QAAf,EAAyB,IAAzB,EAA+B,KAA/B;AACD,GANwC,CAAP;;AAQlC;AACA,YAAU,aAAa,KAAK,CAAL,CAAO,OAApB,CAAV;AACA;AACA,UAAQ,cAAR,GAAyB,eAAe,OAAxC;;AAEA;AACA,SAAO,IAAI,KAAK,CAAL,CAAO,cAAX,CAA0B,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACzD;AACA,SAAK,OAAL,CAAa,GAAb,EAAkB,OAAlB,EAA2B,UAAS,GAAT,EAAc,MAAd,EAAsB;AAC/C;AACA,UAAG,KAAK,YAAL,IAAqB,KAAK,YAAL,CAAkB,WAAlB,EAAxB,EAAyD,OAAO,OAAO,IAAI,UAAJ,CAAe,wBAAf,CAAP,CAAP;AACzD,UAAG,GAAH,EAAQ,OAAO,OAAO,GAAP,CAAP;AACR,UAAG,OAAO,EAAV,EAAc,OAAO,QAAQ,IAAR,CAAP;AACd,cAAQ,KAAR;AACD,KAND;AAOD,GATM,CAAP;AAUD,CAvCD;;AAyCA,OAAO,WAAP,CAAmB,gBAAnB,EAAqC,EAAC,UAAU,IAAX,EAAiB,SAAQ,IAAzB,EAArC;;AAEA;;;;;;;AAOA,GAAG,SAAH,CAAa,YAAb,GAA4B,UAAS,OAAT,EAAkB,QAAlB,EAA4B;AACtD,MAAI,OAAO,IAAX;AACA,MAAG,OAAO,OAAP,IAAkB,UAArB,EAAiC,WAAW,OAAX,EAAoB,UAAU,EAA9B;AACjC,YAAU,WAAW,EAArB;AACA;AACA,MAAI,MAAM,EAAC,gBAAe,CAAhB,EAAV;;AAEA;AACA,2BAAyB,GAAzB,EAA8B,IAA9B,EAAoC,OAApC;;AAEA;AACA,YAAU,OAAO,EAAP,EAAW,KAAK,CAAL,CAAO,OAAlB,EAA2B,EAAC,gBAAgB,eAAe,OAAhC,EAA3B,CAAV;;AAEA;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC,OAAO,KAAK,OAAL,CAAa,GAAb,EAAkB,OAAlB,EAA2B,UAAS,GAAT,EAAc,MAAd,EAAsB;AACxF;AACA,QAAG,KAAK,YAAL,IAAqB,KAAK,YAAL,CAAkB,WAAlB,EAAxB,EAAyD,OAAO,SAAS,IAAI,UAAJ,CAAe,wBAAf,CAAT,CAAP;AACzD,QAAG,YAAY,IAAf,EAAqB;AACrB,QAAG,GAAH,EAAQ,OAAO,eAAe,QAAf,EAAyB,GAAzB,EAA8B,IAA9B,CAAP;AACR,mBAAe,QAAf,EAAyB,IAAzB,EAA+B,OAAO,EAAP,GAAY,IAAZ,GAAmB,KAAlD;AACD,GANwC,CAAP;;AAQlC;AACA,SAAO,IAAI,KAAK,CAAL,CAAO,cAAX,CAA0B,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACzD;AACA,SAAK,OAAL,CAAa,GAAb,EAAkB,OAAlB,EAA2B,UAAS,GAAT,EAAc,MAAd,EAAsB;AAC/C;AACA,UAAG,KAAK,YAAL,IAAqB,KAAK,YAAL,CAAkB,WAAlB,EAAxB,EAAyD,OAAO,OAAO,IAAI,UAAJ,CAAe,wBAAf,CAAP,CAAP;AACzD,UAAG,GAAH,EAAQ,OAAO,OAAO,GAAP,CAAP;AACR,UAAG,OAAO,EAAV,EAAc,OAAO,QAAQ,IAAR,CAAP;AACd,cAAQ,KAAR;AACD,KAND;AAOD,GATM,CAAP;AAUD,CAjCD;;AAmCA,OAAO,WAAP,CAAmB,cAAnB,EAAmC,EAAC,UAAU,IAAX,EAAiB,SAAQ,IAAzB,EAAnC;;AAEA;;;;;;AAMA,IAAI,cAAc,UAAS,IAAT,EAAe,QAAf,EAAyB;AACzC;AACA,OAAK,eAAL,GAAuB,OAAvB,CAA+B,UAAS,GAAT,EAAc,SAAd,EAAyB;AACtD,QAAG,OAAO,IAAV,EAAgB,OAAO,eAAe,QAAf,EAAyB,GAAzB,EAA8B,IAA9B,CAAP;AAChB;AACA,gBAAY,UAAU,MAAV,CAAiB,UAAS,GAAT,EAAc;AACzC,aAAO,IAAI,IAAJ,CAAS,OAAT,CAAiB,GAAjB,KAAyB,CAAC,CAAjC;AACD,KAFW,CAAZ;;AAIA;AACA,mBAAe,QAAf,EAAyB,IAAzB,EAA+B,UAAU,GAAV,CAAc,UAAS,CAAT,EAAY;AACvD,aAAO,IAAI,UAAJ,CAAe,IAAf,EAAqB,KAAK,CAAL,CAAO,QAA5B,EAAsC,KAAK,CAAL,CAAO,YAA7C,EAA2D,EAAE,IAA7D,EAAmE,KAAK,CAAL,CAAO,SAA1E,EAAqF,KAAK,CAAL,CAAO,OAA5F,CAAP;AACD,KAF8B,CAA/B;AAGD,GAXD;AAYD,CAdD;;AAgBA;;;;;;;AAOA,GAAG,SAAH,CAAa,WAAb,GAA2B,UAAS,QAAT,EAAmB;AAC5C,MAAI,OAAO,IAAX;;AAEA;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC,OAAO,YAAY,IAAZ,EAAkB,QAAlB,CAAP;AAClC;AACA,SAAO,IAAI,KAAK,CAAL,CAAO,cAAX,CAA0B,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACzD,gBAAY,IAAZ,EAAkB,UAAS,GAAT,EAAc,CAAd,EAAiB;AACjC,UAAG,GAAH,EAAQ,OAAO,OAAO,GAAP,CAAP;AACR,cAAQ,CAAR;AACD,KAHD;AAID,GALM,CAAP;AAMD,CAZD;;AAcA,OAAO,WAAP,CAAmB,aAAnB,EAAkC,EAAC,UAAU,IAAX,EAAiB,SAAQ,IAAzB,EAAlC;;AAEA;;;;;;;;;AASA,GAAG,SAAH,CAAa,qBAAb,GAAqC,UAAS,QAAT,EAAmB,OAAnB,EAA4B,QAA5B,EAAsC;AACzE,MAAI,OAAO,IAAX;AACA,MAAG,OAAO,OAAP,IAAkB,UAArB,EAAiC,WAAW,OAAX,EAAoB,UAAU,EAA9B;AACjC,YAAU,WAAW,EAArB;;AAEA;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC;AAChC;AACA,QAAG,QAAQ,cAAX,EAA2B;AACzB,cAAQ,cAAR,GAAyB,sBAAsB,QAAQ,cAA9B,CAAzB;AACD;;AAED,WAAO,KAAK,CAAL,CAAO,QAAP,CAAgB,OAAhB,CAAwB,YAAxB,EAAsC,QAAtC,EAAgD,OAAhD,EAAyD,UAAS,GAAT,EAAc,MAAd,EAAsB;AACpF;AACA,UAAG,KAAK,YAAL,IAAqB,KAAK,YAAL,CAAkB,WAAlB,EAAxB,EAAyD,OAAO,SAAS,IAAI,UAAJ,CAAe,wBAAf,CAAT,CAAP;AACzD,UAAG,GAAH,EAAQ,OAAO,eAAe,QAAf,EAAyB,GAAzB,CAAP;AACR,qBAAe,QAAf,EAAyB,IAAzB,EAA+B,OAAO,MAAtC;AACD,KALM,CAAP;AAMD;;AAED;AACA,SAAO,IAAI,KAAK,CAAL,CAAO,cAAX,CAA0B,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACzD,SAAK,CAAL,CAAO,QAAP,CAAgB,OAAhB,CAAwB,YAAxB,EAAsC,QAAtC,EAAgD,OAAhD,EAAyD,UAAS,GAAT,EAAc,MAAd,EAAsB;AAC7E;AACA,UAAG,KAAK,YAAL,IAAqB,KAAK,YAAL,CAAkB,WAAlB,EAAxB,EAAyD,OAAO,OAAO,IAAI,UAAJ,CAAe,wBAAf,CAAP,CAAP;AACzD,UAAG,GAAH,EAAQ,OAAO,OAAO,GAAP,CAAP;AACR,cAAQ,OAAO,MAAf;AACD,KALD;AAMD,GAPM,CAAP;AAQD,CA7BD;;AA+BA,OAAO,WAAP,CAAmB,uBAAnB,EAA4C,EAAC,UAAU,IAAX,EAAiB,SAAQ,IAAzB,EAA5C;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBA,GAAG,SAAH,CAAa,WAAb,GAA2B,UAAS,IAAT,EAAe,WAAf,EAA4B,OAA5B,EAAqC,QAArC,EAA+C;AACxE,MAAI,OAAO,IAAX;AACA,MAAI,OAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,EAAsC,CAAtC,CAAX;AACA,aAAW,KAAK,GAAL,EAAX;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC,KAAK,IAAL,CAAU,QAAV;AAClC,YAAU,KAAK,MAAL,GAAc,KAAK,KAAL,MAAgB,EAA9B,GAAmC,EAA7C;AACA,YAAU,OAAO,QAAP,KAAoB,UAApB,GAAiC,OAAjC,GAA2C,QAArD;AACA,YAAU,WAAW,IAAX,GAAkB,EAAlB,GAAuB,OAAjC;AACA;AACA,YAAU,aAAa,OAAb,CAAV;;AAEA;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC,OAAO,YAAY,IAAZ,EAAkB,IAAlB,EAAwB,WAAxB,EAAqC,OAArC,EAA8C,QAA9C,CAAP;AAClC;AACA,SAAO,IAAI,KAAK,CAAL,CAAO,cAAX,CAA0B,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACzD,gBAAY,IAAZ,EAAkB,IAAlB,EAAwB,WAAxB,EAAqC,OAArC,EAA8C,UAAS,GAAT,EAAc,CAAd,EAAiB;AAC7D,UAAG,GAAH,EAAQ,OAAO,OAAO,GAAP,CAAP;AACR,cAAQ,CAAR;AACD,KAHD;AAID,GALM,CAAP;AAMD,CApBD;;AAsBA,IAAI,cAAc,UAAS,IAAT,EAAe,IAAf,EAAqB,WAArB,EAAkC,OAAlC,EAA2C,QAA3C,EAAqD;AACrE;AACA,MAAI,eAAe,aAAa,EAAb,EAAiB,IAAjB,EAAuB,OAAvB,EAAgC,EAAE,gBAAgB,eAAe,OAAjC,EAAhC,CAAnB;AACA;AACA,MAAG,aAAa,YAAb,IAA6B,OAAO,QAAP,IAAmB,UAAnD,EAA+D;AAC7D,UAAM,WAAW,MAAX,CAAkB,EAAC,SAAS,uDAAV,EAAmE,QAAO,IAA1E,EAAlB,CAAN;AACD;;AAED;AACA,UAAQ,cAAR,GAAyB,eAAe,OAAxC;;AAEA;AACA,MAAG,KAAK,YAAL,IAAqB,KAAK,YAAL,CAAkB,WAAlB,EAAxB,EAAyD,OAAO,SAAS,IAAI,UAAJ,CAAe,wBAAf,CAAT,CAAP;;AAEzD;AACA,gCAA8B,IAA9B,EAAoC,IAApC,EAA0C,WAA1C,EAAuD,OAAvD,EAAgE,UAAS,GAAT,EAAc,MAAd,EAAsB;AACpF,QAAG,OAAO,IAAV,EAAgB,OAAO,eAAe,QAAf,EAAyB,GAAzB,EAA8B,MAA9B,CAAP;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA,QAAG,IAAI,IAAJ,KAAa,EAAb,IAAmB,IAAI,IAAJ,IAAY,KAA/B,IAAwC,IAAI,IAAJ,KAAa,EAArD,IAA2D,IAAI,IAAJ,IAAY,KAA1E,EAAiF;AAC/E,aAAO,eAAe,QAAf,EAAyB,GAAzB,EAA8B,MAA9B,CAAP;AACD;;AAED;AACA,QAAI,MAAM,yBAAyB,IAAzB,EAA+B,IAA/B,EAAqC,WAArC,EAAkD,OAAlD,CAAV;AACA;AACA,iBAAa,SAAb,GAAyB,KAAzB;AACA;AACA,SAAK,CAAL,CAAO,QAAP,CAAgB,MAAhB,CAAuB,EAAE,OAAF,EAAW,KAAK,CAAL,CAAO,YAAlB,EAAgC,GAAG,uBAAnC,CAAvB,EAAoF,GAApF,EAAyF,YAAzF,EAAuG,UAAS,GAAT,EAAc,MAAd,EAAsB;AAC3H,UAAG,YAAY,IAAf,EAAqB;AACrB,UAAG,GAAH,EAAQ,OAAO,eAAe,QAAf,EAAyB,GAAzB,CAAP;AACR,UAAG,UAAU,IAAb,EAAmB,OAAO,eAAe,QAAf,EAAyB,IAAzB,EAA+B,IAA/B,CAAP;AACnB,UAAG,OAAO,MAAP,CAAc,WAAjB,EAA8B,OAAO,eAAe,QAAf,EAAyB,WAAW,MAAX,CAAkB,OAAO,MAAP,CAAc,WAAd,CAA0B,CAA1B,CAAlB,CAAzB,EAA0E,IAA1E,CAAP;AAC9B,qBAAe,QAAf,EAAyB,IAAzB,EAA+B,IAAI,IAAnC;AACD,KAND;AAOD,GAzBD;AA0BD,CAzCD;;AA2CA,OAAO,WAAP,CAAmB,aAAnB,EAAkC,EAAC,UAAU,IAAX,EAAiB,SAAQ,IAAzB,EAAlC;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBA,GAAG,SAAH,CAAa,WAAb,GAA2B,UAAS,IAAT,EAAe,WAAf,EAA4B,OAA5B,EAAqC,QAArC,EAA+C;AACxE,MAAI,OAAO,IAAX;AACA,MAAG,OAAO,OAAP,IAAkB,UAArB,EAAiC,WAAW,OAAX,EAAoB,UAAU,EAA9B;AACjC,YAAU,WAAW,EAArB;;AAEA;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC,OAAO,YAAY,IAAZ,EAAkB,IAAlB,EAAwB,WAAxB,EAAqC,OAArC,EAA8C,QAA9C,CAAP;;AAElC;AACA,SAAO,IAAI,KAAK,CAAL,CAAO,cAAX,CAA0B,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACzD,gBAAY,IAAZ,EAAkB,IAAlB,EAAwB,WAAxB,EAAqC,OAArC,EAA8C,UAAS,GAAT,EAAc,CAAd,EAAiB;AAC7D,UAAG,GAAH,EAAQ,OAAO,OAAO,GAAP,CAAP;AACR,cAAQ,CAAR;AACD,KAHD;AAID,GALM,CAAP;AAMD,CAfD;;AAiBA,IAAI,cAAc,UAAS,IAAT,EAAe,IAAf,EAAqB,WAArB,EAAkC,OAAlC,EAA2C,QAA3C,EAAqD;AACrE;AACA,MAAI,eAAe,aAAa,EAAb,EAAiB,IAAjB,EAAuB,OAAvB,CAAnB;AACA;AACA,MAAI,WAAW,yBAAyB,IAAzB,EAA+B,IAA/B,EAAqC,WAArC,EAAkD,OAAlD,CAAf;AACA,MAAI,aAAa,SAAS,IAA1B;;AAEA;AACA,MAAG,KAAK,YAAL,IAAqB,KAAK,YAAL,CAAkB,WAAlB,EAAxB,EAAyD,OAAO,SAAS,IAAI,UAAJ,CAAe,wBAAf,CAAT,CAAP;;AAEzD;AACA,eAAa,cAAb,GAA8B,eAAe,OAA7C;;AAEA;AACA,OAAK,gBAAL,CAAsB,IAAtB,EAA4B,YAA5B,EAA0C,UAAS,GAAT,EAAc,gBAAd,EAAgC;AACxE,QAAG,OAAO,IAAP,IAAe,IAAI,IAAJ,IAAY,EAA9B,EAAkC,OAAO,eAAe,QAAf,EAAyB,GAAzB,EAA8B,IAA9B,CAAP;AAClC;AACA,QAAG,oBAAoB,IAApB,IAA4B,CAAC,iBAAiB,UAAjB,CAAhC,EAA+D;AAC7D,WAAK,WAAL,CAAiB,IAAjB,EAAuB,WAAvB,EAAoC,OAApC,EAA6C,QAA7C;AACD,KAFD,MAEO;AACL,UAAG,OAAO,QAAP,KAAoB,UAAvB,EAAmC,OAAO,eAAe,QAAf,EAAyB,IAAzB,EAA+B,UAA/B,CAAP;AACpC;AACF,GARD;AASD,CAvBD;;AAyBA,OAAO,WAAP,CAAmB,aAAnB,EAAkC,EAAC,UAAU,IAAX,EAAiB,SAAQ,IAAzB,EAAlC;;AAEA,GAAG,SAAH,CAAa,QAAb,GAAwB,UAAS,EAAT,EAAa;AACnC,MAAG,KAAK,CAAL,CAAO,QAAV,EAAoB,OAAO,KAAK,CAAL,CAAO,QAAP,CAAgB,QAAhB,CAAyB,EAAzB,CAAP;AACpB,OAAK,CAAL,CAAO,QAAP,CAAgB,IAAhB,CAAqB,EAArB;AACD,CAHD;;AAKA;;;;;;;;;;;;;AAaA,GAAG,SAAH,CAAa,EAAb,GAAkB,UAAS,MAAT,EAAiB,OAAjB,EAA0B;AAC1C,YAAU,WAAW,EAArB;;AAEA;AACA,MAAI,eAAe,OAAO,EAAP,EAAW,KAAK,OAAhB,EAAyB,OAAzB,CAAnB;;AAEA;AACA,MAAG,KAAK,CAAL,CAAO,OAAP,CAAe,MAAf,KAA0B,aAAa,uBAAb,KAAyC,IAAtE,EAA4E;AAC1E,WAAO,KAAK,CAAL,CAAO,OAAP,CAAe,MAAf,CAAP;AACD;;AAED;AACA,MAAG,aAAa,UAAb,IAA2B,IAA3B,IAAmC,aAAa,UAAb,IAA2B,KAAjE,EAAwE;AACtE,iBAAa,QAAb,GAAwB,IAAxB;AACD;;AAED;AACA,eAAa,cAAb,GAA8B,KAAK,CAAL,CAAO,cAArC;;AAEA;AACA,MAAI,KAAK,IAAI,EAAJ,CAAO,MAAP,EAAe,KAAK,CAAL,CAAO,QAAtB,EAAgC,YAAhC,CAAT;;AAEA;AACA,MAAG,aAAa,UAAb,IAA2B,IAA3B,IAAmC,aAAa,UAAb,IAA2B,KAAjE,EAAwE;AACtE,SAAK,QAAL,CAAc,EAAd;AACD;;AAED;AACA,OAAK,CAAL,CAAO,OAAP,CAAe,MAAf,IAAyB,EAAzB;AACA;AACA,SAAO,EAAP;AACD,CA/BD;;AAiCA,OAAO,WAAP,CAAmB,IAAnB,EAAyB,EAAC,UAAU,KAAX,EAAkB,SAAQ,KAA1B,EAAiC,SAAS,CAAC,EAAD,CAA1C,EAAzB;;AAEA,IAAI,gCAAgC,UAAS,IAAT,EAAe,QAAf,EAAyB,QAAzB,EAAmC,OAAnC,EAA4C,QAA5C,EAAsD;AACxF;AACA,MAAG,OAAO,QAAP,IAAmB,QAAnB,IACE,YAAY,IADd,IACsB,OAAO,QAAP,IAAmB,QAD5C,EACsD;AACpD,cAAU,QAAV;AACA,eAAW,IAAX;AACD;;AAED;AACA,MAAG,OAAO,OAAP,IAAkB,UAArB,EAAiC;AAC/B,eAAW,OAAX;AACA,cAAU,EAAV;AACD;;AAED;AACA,MAAG,QAAQ,cAAR,IAA0B,IAA7B,EAAmC;AACjC,UAAM,QAAQ,4HAAR,CAAN;AACD;;AAED;AACA,MAAI,aAAa,QAAQ,UAAR,IAAsB,IAAtB,GAA6B,QAAQ,UAArC,GAAkD,EAAnE;AACA,MAAI,QAAQ,MAAM,OAAN,CAAc,QAAQ,KAAtB,IAA+B,QAAQ,KAAvC,GAA+C,EAA3D;AACA,MAAI,YAAY,OAAO,QAAQ,SAAf,IAA4B,QAA5B,GAAuC,QAAQ,SAA/C,GAA2D,IAA3E;;AAEA;AACA,MAAG,MAAM,MAAN,IAAgB,CAAnB,EAAsB;AACpB,YAAQ,GAAR,CAAY,+DAAZ;AACD;;AAED;AACA,MAAI,iBAAiB,EAAC,cAAa,IAAd,EAArB;AACA,MAAG,QAAQ,QAAR,CAAH,EAAsB,eAAe,MAAf,GAAwB,QAAQ,QAAR,CAAxB;;AAEtB;AACA,MAAG,aAAa,IAAhB,EAAsB,eAAe,SAAf,GAA2B,SAA3B;;AAEtB;AACA,MAAG,CAAC,KAAK,YAAL,CAAkB,WAAlB,MAAmC,OAAnC,IAA8C,QAAQ,MAAR,IAAkB,OAAjE,KAA6E,CAAC,MAAM,OAAN,CAAc,QAAQ,KAAtB,CAAjF,EAA+G;AAC7G,YAAQ,CAAC,MAAD,CAAR;AACD,GAFD,MAEO,IAAG,CAAC,MAAM,OAAN,CAAc,QAAQ,KAAtB,CAAJ,EAAkC;AACvC,YAAQ,CAAC,SAAD,CAAR;AACD;;AAED;AACA,MAAI,UAAU;AACV,gBAAY,QADF;AAEV,gBAAY,UAFF;AAGV,WAAO,KAHG;AAIV,oBAAe;AAJL,GAAd;;AAOA;AACA,YAAU,aAAa,OAAb,EAAsB,IAAtB,EAA4B,OAA5B,CAAV;;AAEA;AACA,MAAI,MAAM,OAAO,UAAP,CAAkB,KAAlB,CAAV;AACA;AACA,MAAI,MAAJ,CAAW,WAAW,SAAX,GAAuB,QAAlC;AACA,MAAI,eAAe,IAAI,MAAJ,CAAW,KAAX,CAAnB;;AAEA;AACA,MAAG,OAAO,QAAP,IAAmB,QAAtB,EAAgC;AAC9B,YAAQ,GAAR,GAAc,YAAd;AACD;;AAED;AACA,iBAAe,cAAf,GAAgC,eAAe,OAA/C;;AAEA;AACA,OAAK,OAAL,CAAa,OAAb,EAAsB,cAAtB,EAAsC,UAAS,GAAT,EAAc,MAAd,EAAsB;AAC1D,QAAG,OAAO,IAAI,EAAJ,IAAU,CAAjB,IAAsB,IAAI,IAAJ,IAAY,SAArC,EAAgD,OAAO,eAAe,QAAf,EAAyB,EAAC,MAAM,CAAC,IAAR,EAAzB,EAAwC,IAAxC,CAAP;AAChD,QAAG,GAAH,EAAQ,OAAO,eAAe,QAAf,EAAyB,GAAzB,EAA8B,IAA9B,CAAP;AACR,mBAAe,QAAf,EAAyB,CAAC,OAAO,EAAR,GAAa,QAAQ,MAAR,CAAb,GAA+B,IAAxD,EACI,OAAO,EAAP,GAAY,CAAC,EAAC,MAAM,QAAP,EAAiB,KAAK,EAAtB,EAAD,CAAZ,GAA0C,IAD9C;AAED,GALD;AAMD,CA3ED;;AA6EA,IAAI,UAAU,UAAS,IAAT,EAAe,QAAf,EAAyB,QAAzB,EAAmC,OAAnC,EAA4C,QAA5C,EAAsD;AAClE;AACA,MAAG,KAAK,YAAL,IAAqB,KAAK,YAAL,CAAkB,WAAlB,EAAxB,EAAyD,OAAO,SAAS,IAAI,UAAJ,CAAe,wBAAf,CAAT,CAAP;AACzD;AACA,gCAA8B,IAA9B,EAAoC,QAApC,EAA8C,QAA9C,EAAwD,OAAxD,EAAiE,UAAS,GAAT,EAAc,CAAd,EAAiB;AAChF;AACA,QAAG,OAAO,IAAI,IAAJ,IAAY,CAAC,IAAvB,EAA6B;AAC3B,UAAI,eAAe,aAAa,aAAa,OAAb,CAAb,EAAoC,IAApC,EAA0C,OAA1C,CAAnB;AACA;AACA,UAAI,MAAM,OAAO,UAAP,CAAkB,KAAlB,CAAV;AACA;AACA,UAAI,MAAJ,CAAW,WAAW,SAAX,GAAuB,QAAlC;AACA,UAAI,eAAe,IAAI,MAAJ,CAAW,KAAX,CAAnB;;AAEA;AACA,UAAI,KAAK,QAAQ,MAAR,GAAiB,KAAK,EAAL,CAAQ,QAAQ,MAAhB,CAAjB,GAA2C,IAApD;;AAEA;AACA,UAAI,aAAa,GAAG,UAAH,CAAc,GAAG,sBAAjB,CAAjB;;AAEA;AACA,iBAAW,KAAX,CAAiB,EAAjB,EAAqB,UAAS,GAAT,EAAc,KAAd,EAAqB;AACxC;AACA,YAAG,OAAO,IAAV,EAAgB,OAAO,eAAe,QAAf,EAAyB,GAAzB,EAA8B,IAA9B,CAAP;AAChB;AACA,mBAAW,IAAX,CAAgB,EAAC,MAAM,QAAP,EAAhB,EAAkC,EAAC,QAAQ,QAAQ,QAAR,CAAT,EAAlC,EAA+D,OAA/D,CAAuE,UAAS,GAAT,EAAc;AACnF;AACA,cAAG,OAAO,IAAV,EAAgB,OAAO,eAAe,QAAf,EAAyB,GAAzB,EAA8B,IAA9B,CAAP;AAChB;AACA,uBAAa,MAAb,GAAsB,IAAtB;;AAEA;AACA,qBAAW,MAAX,CAAkB,EAAC,MAAM,QAAP,EAAlB,EAAmC,EAAC,MAAM,EAAC,MAAM,QAAP,EAAiB,KAAK,YAAtB,EAAP,EAAnC,EAAgF,YAAhF,EAA8F,UAAS,GAAT,EAAc;AAC1G,gBAAG,SAAS,CAAT,IAAc,GAAjB,EAAsB,OAAO,eAAe,QAAf,EAAyB,IAAzB,EAA+B,CAAC,EAAC,MAAK,QAAN,EAAgB,KAAI,YAApB,EAAD,CAA/B,CAAP;AACtB,gBAAG,GAAH,EAAQ,OAAO,eAAe,QAAf,EAAyB,GAAzB,EAA8B,IAA9B,CAAP;AACR,2BAAe,QAAf,EAAyB,IAAzB,EAA+B,CAAC,EAAC,MAAK,QAAN,EAAgB,KAAI,YAApB,EAAD,CAA/B;AACD,WAJD;AAKD,SAZD;AAaD,OAjBD;;AAmBA;AACD;;AAED,QAAG,GAAH,EAAQ,OAAO,eAAe,QAAf,EAAyB,GAAzB,CAAP;AACR,mBAAe,QAAf,EAAyB,GAAzB,EAA8B,CAA9B;AACD,GAzCD;AA0CD,CA9CD;;AAgDA;;;;;;;;;;;;;;AAcA,GAAG,SAAH,CAAa,OAAb,GAAuB,UAAS,QAAT,EAAmB,QAAnB,EAA6B,OAA7B,EAAsC,QAAtC,EAAgD;AACrE;AACA,MAAI,OAAO,IAAX;AACA,MAAI,OAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,EAAsC,CAAtC,CAAX;AACA,aAAW,KAAK,GAAL,EAAX;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC,KAAK,IAAL,CAAU,QAAV;AAClC,YAAU,KAAK,MAAL,GAAc,KAAK,KAAL,MAAgB,EAA9B,GAAmC,EAA7C;;AAEA;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC,OAAO,QAAQ,IAAR,EAAc,QAAd,EAAwB,QAAxB,EAAkC,OAAlC,EAA2C,QAA3C,CAAP;;AAElC;AACA,SAAO,IAAI,KAAK,CAAL,CAAO,cAAX,CAA0B,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACzD,YAAQ,IAAR,EAAc,QAAd,EAAwB,QAAxB,EAAkC,OAAlC,EAA2C,UAAS,GAAT,EAAc,CAAd,EAAiB;AAC1D,UAAG,GAAH,EAAQ,OAAO,OAAO,GAAP,CAAP;AACR,cAAQ,CAAR;AACD,KAHD;AAID,GALM,CAAP;AAMD,CAlBD;;AAoBA,OAAO,WAAP,CAAmB,SAAnB,EAA8B,EAAC,UAAU,IAAX,EAAiB,SAAQ,IAAzB,EAA9B;;AAEA,IAAI,gCAAgC,UAAS,IAAT,EAAe,QAAf,EAAyB,OAAzB,EAAkC,QAAlC,EAA4C;AAC9E,MAAG,OAAO,OAAP,IAAkB,UAArB,EAAiC,WAAW,OAAX,EAAoB,UAAU,EAA9B;AACjC;AACA,MAAG,KAAK,YAAL,IAAqB,KAAK,YAAL,CAAkB,WAAlB,EAAxB,EAAyD,OAAO,SAAS,IAAI,UAAJ,CAAe,wBAAf,CAAT,CAAP;AACzD;AACA,MAAI,iBAAiB,EAAC,cAAa,IAAd,EAArB;AACA,MAAG,QAAQ,QAAR,CAAH,EAAsB,eAAe,MAAf,GAAwB,QAAQ,QAAR,CAAxB;;AAEtB;AACA,MAAI,YAAY,OAAO,QAAQ,SAAf,IAA4B,QAA5B,GAAuC,QAAQ,SAA/C,GAA2D,IAA3E;;AAEA;AACA,MAAG,aAAa,IAAhB,EAAsB,eAAe,SAAf,GAA2B,SAA3B;;AAEtB;AACA,MAAI,UAAU;AACZ,cAAU;AADE,GAAd;;AAIA;AACA,YAAU,aAAa,OAAb,EAAsB,IAAtB,EAA4B,OAA5B,CAAV;;AAEA;AACA,iBAAe,cAAf,GAAgC,eAAe,OAA/C;;AAEA;AACA,OAAK,OAAL,CAAa,OAAb,EAAsB,cAAtB,EAAsC,UAAS,GAAT,EAAc,MAAd,EAAsB;AAC1D,QAAG,OAAO,CAAC,IAAI,EAAZ,IAAkB,IAAI,IAAJ,IAAY,SAAjC,EAA4C,OAAO,eAAe,QAAf,EAAyB,EAAC,MAAM,CAAC,IAAR,EAAzB,CAAP;AAC5C,QAAG,GAAH,EAAQ,OAAO,eAAe,QAAf,EAAyB,GAAzB,EAA8B,IAA9B,CAAP;AACR,mBAAe,QAAf,EAAyB,IAAzB,EAA+B,OAAO,EAAP,GAAY,IAAZ,GAAmB,KAAlD;AACD,GAJD;AAKD,CA/BD;;AAiCA,IAAI,aAAa,UAAS,IAAT,EAAe,QAAf,EAAyB,OAAzB,EAAkC,QAAlC,EAA4C;AAC3D;AACA,gCAA8B,IAA9B,EAAoC,QAApC,EAA8C,OAA9C,EAAuD,UAAS,GAAT,EAAc,MAAd,EAAsB;AAC3E,QAAG,OAAO,IAAI,IAAJ,IAAY,CAAC,IAAvB,EAA6B;AAC3B,UAAI,eAAe,aAAa,aAAa,OAAb,CAAb,EAAoC,IAApC,EAA0C,OAA1C,CAAnB;AACA;AACA,UAAI,KAAK,QAAQ,MAAR,GAAiB,KAAK,EAAL,CAAQ,QAAQ,MAAhB,CAAjB,GAA2C,IAApD;;AAEA;AACA,UAAI,aAAa,GAAG,UAAH,CAAc,GAAG,sBAAjB,CAAjB;;AAEA;AACA,iBAAW,OAAX,CAAmB,EAAC,MAAM,QAAP,EAAnB,EAAqC,EAArC,EAAyC,UAAS,GAAT,EAAc,IAAd,EAAoB;AAC3D,YAAG,QAAQ,IAAX,EAAiB,OAAO,eAAe,QAAf,EAAyB,GAAzB,EAA8B,KAA9B,CAAP;AACjB,mBAAW,MAAX,CAAkB,EAAC,MAAM,QAAP,EAAlB,EAAoC,YAApC,EAAkD,UAAS,GAAT,EAAc;AAC9D,yBAAe,QAAf,EAAyB,GAAzB,EAA8B,IAA9B;AACD,SAFD;AAGD,OALD;;AAOA;AACD;;AAED,QAAG,GAAH,EAAQ,OAAO,eAAe,QAAf,EAAyB,GAAzB,CAAP;AACR,mBAAe,QAAf,EAAyB,GAAzB,EAA8B,MAA9B;AACD,GAtBD;AAuBD,CAzBD;;AA2BA,OAAO,WAAP,CAAmB,YAAnB,EAAiC,EAAC,UAAU,IAAX,EAAiB,SAAQ,IAAzB,EAAjC;;AAEA;;;;;;;;;;;AAWA,GAAG,SAAH,CAAa,UAAb,GAA0B,UAAS,QAAT,EAAmB,OAAnB,EAA4B,QAA5B,EAAsC;AAC9D;AACA,MAAI,OAAO,IAAX;AACA,MAAI,OAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,EAAsC,CAAtC,CAAX;AACA,aAAW,KAAK,GAAL,EAAX;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC,KAAK,IAAL,CAAU,QAAV;AAClC,YAAU,KAAK,MAAL,GAAc,KAAK,KAAL,MAAgB,EAA9B,GAAmC,EAA7C;;AAEA;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC,OAAO,WAAW,IAAX,EAAiB,QAAjB,EAA2B,OAA3B,EAAoC,QAApC,CAAP;;AAElC;AACA,SAAO,IAAI,KAAK,CAAL,CAAO,cAAX,CAA0B,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACzD,eAAW,IAAX,EAAiB,QAAjB,EAA2B,OAA3B,EAAoC,UAAS,GAAT,EAAc,CAAd,EAAiB;AACnD,UAAG,GAAH,EAAQ,OAAO,OAAO,GAAP,CAAP;AACR,cAAQ,CAAR;AACD,KAHD;AAID,GALM,CAAP;AAMD,CAlBD;;AAoBA;;;;;;;;;;;AAWA,GAAG,SAAH,CAAa,YAAb,GAA4B,UAAS,QAAT,EAAmB,QAAnB,EAA6B,OAA7B,EAAsC,QAAtC,EAAgD;AAC1E,UAAQ,IAAR,CAAa,8RAAb;AACA,SAAO,aAAa,KAAb,CAAmB,IAAnB,EAAyB,CAAC,IAAD,EAAO,MAAP,CAAc,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAd,CAAzB,CAAP;AACD,CAHD;;AAKA,OAAO,WAAP,CAAmB,cAAnB,EAAmC,EAAC,UAAU,IAAX,EAAiB,SAAQ,IAAzB,EAAnC;;AAEA;;;;;;;;AAQA,GAAG,SAAH,CAAa,MAAb,GAAsB,UAAS,OAAT,EAAkB,QAAlB,EAA4B;AAChD,MAAI,OAAO,IAAX;AACA,MAAG,OAAO,OAAP,IAAkB,UAArB,EAAiC,WAAW,OAAX,EAAoB,UAAU,EAA9B;AACjC,YAAU,WAAW,EAArB;;AAEA;AACA,MAAI,SAAS,KAAK,CAAL,CAAO,UAAP,GAAoB,KAAK,CAAL,CAAO,UAA3B,GAAwC,KAAK,CAAL,CAAO,YAA5D;AACA,WAAS,QAAQ,MAAR,GAAiB,QAAQ,MAAzB,GAAkC,MAA3C;;AAEA;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC;AAChC,WAAO,KAAK,CAAL,CAAO,QAAP,CAAgB,MAAhB,CAAuB,MAAvB,EAA+B,UAAS,GAAT,EAAc;AAClD,UAAG,GAAH,EAAQ,OAAO,SAAS,GAAT,CAAP;AACR,eAAS,IAAT,EAAe,IAAf;AACD,KAHM,CAAP;AAID;;AAED;AACA,SAAO,IAAI,KAAK,CAAL,CAAO,cAAX,CAA0B,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACzD,SAAK,CAAL,CAAO,QAAP,CAAgB,MAAhB,CAAuB,MAAvB,EAA+B,UAAS,GAAT,EAAc;AAC3C,UAAG,GAAH,EAAQ,OAAO,OAAO,GAAP,CAAP;AACR,cAAQ,IAAR;AACD,KAHD;AAID,GALM,CAAP;AAMD,CAxBD;;AA0BA,OAAO,WAAP,CAAmB,QAAnB,EAA6B,EAAC,UAAU,IAAX,EAAiB,SAAQ,IAAzB,EAA7B;;AAEA;;;;;;;;;;AAUA,GAAG,SAAH,CAAa,gBAAb,GAAgC,UAAS,IAAT,EAAe,OAAf,EAAwB,QAAxB,EAAkC;AAChE,MAAI,OAAO,IAAX;AACA,MAAG,OAAO,OAAP,IAAkB,UAArB,EAAiC,WAAW,OAAX,EAAoB,UAAU,EAA9B;AACjC,YAAU,WAAW,EAArB;;AAEA;AACA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC,OAAO,iBAAiB,IAAjB,EAAuB,IAAvB,EAA6B,OAA7B,EAAsC,QAAtC,CAAP;;AAElC;AACA,SAAO,IAAI,KAAK,CAAL,CAAO,cAAX,CAA0B,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACzD,qBAAiB,IAAjB,EAAuB,IAAvB,EAA6B,OAA7B,EAAsC,UAAS,GAAT,EAAc,CAAd,EAAiB;AACrD,UAAG,GAAH,EAAQ,OAAO,OAAO,GAAP,CAAP;AACR,cAAQ,CAAR;AACD,KAHD;AAID,GALM,CAAP;AAMD,CAfD;;AAiBA,IAAI,mBAAmB,UAAS,IAAT,EAAe,IAAf,EAAqB,OAArB,EAA8B,QAA9B,EAAwC;AAC3D;AACF,MAAI,OAAO,QAAQ,MAAR,KAAmB,IAAnB,GAA0B,KAA1B,GAAkC,QAAQ,MAAR,CAA7C;;AAEA;AACA,MAAG,KAAK,YAAL,IAAqB,KAAK,YAAL,CAAkB,WAAlB,EAAxB,EAAyD,OAAO,SAAS,IAAI,UAAJ,CAAe,wBAAf,CAAT,CAAP;AACzD;AACA,MAAI,iBAAiB,UAAS,OAAT,EAAkB;AACrC;AACA,QAAI,OAAO,EAAX;AACA;AACA,SAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,QAAQ,MAA3B,EAAmC,GAAnC,EAAwC;AACtC,UAAI,QAAQ,QAAQ,CAAR,CAAZ;AACA;AACA,WAAK,MAAM,IAAX,IAAmB,EAAnB;AACA,WAAI,IAAI,IAAR,IAAgB,MAAM,GAAtB,EAA2B;AACzB,aAAK,MAAM,IAAX,EAAiB,IAAjB,CAAsB,CAAC,IAAD,EAAO,MAAM,GAAN,CAAU,IAAV,CAAP,CAAtB;AACD;AACF;;AAED,WAAO,IAAP;AACD,GAdD;;AAgBA;AACA,OAAK,UAAL,CAAgB,IAAhB,EAAsB,WAAtB,CAAkC,OAAlC,EAA2C,OAA3C,CAAmD,UAAS,GAAT,EAAc,OAAd,EAAuB;AACxE,QAAG,GAAH,EAAQ,OAAO,SAAS,QAAQ,GAAR,CAAT,CAAP;AACR,QAAG,CAAC,MAAM,OAAN,CAAc,OAAd,CAAJ,EAA4B,OAAO,eAAe,QAAf,EAAyB,IAAzB,EAA+B,EAA/B,CAAP;AAC5B,QAAG,IAAH,EAAS,OAAO,eAAe,QAAf,EAAyB,IAAzB,EAA+B,OAA/B,CAAP;AACT,mBAAe,QAAf,EAAyB,IAAzB,EAA+B,eAAe,OAAf,CAA/B;AACD,GALD;AAMD,CA9BD;;AAgCA,OAAO,WAAP,CAAmB,kBAAnB,EAAuC,EAAC,UAAU,IAAX,EAAiB,SAAQ,IAAzB,EAAvC;;AAEA,IAAI,2BAA2B,UAAS,EAAT,EAAa,IAAb,EAAmB,WAAnB,EAAgC,OAAhC,EAAyC;AACtE,MAAI,kBAAkB,kBAAkB,WAAlB,CAAtB;AACA,MAAI,YAAY,gBAAgB,SAAhC;;AAEA;AACA,MAAI,YAAY,OAAO,QAAQ,IAAf,IAAuB,QAAvB,GAAkC,QAAQ,IAA1C,GAAiD,gBAAgB,IAAjF;AACA,MAAI,WAAW;AACb,UAAM,GAAG,YAAH,GAAkB,GAAlB,GAAwB,IADjB,EACuB,OAAO,SAD9B,EACyC,QAAQ;AADjD,GAAf;;AAIA;AACA,MAAI,cAAc,WAAW,IAAX,IAAmB,aAAa,OAAO,OAAvC,GAAiD,KAAjD,GAAyD,OAA3E;AACA;AACA,YAAU,WAAW,IAAX,IAAmB,OAAO,OAAP,IAAkB,SAArC,GAAiD,EAAjD,GAAsD,OAAhE;;AAEA;AACA,MAAI,aAAa,OAAO,IAAP,CAAY,QAAZ,CAAjB;AACA,OAAI,IAAI,UAAR,IAAsB,OAAtB,EAA+B;AAC7B,QAAG,WAAW,OAAX,CAAmB,UAAnB,KAAkC,CAAC,CAAtC,EAAyC;AACvC,eAAS,UAAT,IAAuB,QAAQ,UAAR,CAAvB;AACD;AACF;;AAED,MAAG,SAAS,QAAT,KAAsB,IAAzB,EAA+B,SAAS,QAAT,IAAqB,WAArB;;AAE/B;AACA,MAAI,aAAa,CAAC,GAAD,EAAM,UAAN,EAAkB,GAAlB,EAAuB,OAAvB,EAAgC,gBAAhC,CAAjB;AACA,OAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,WAAW,MAA9B,EAAsC,GAAtC,EAA2C;AACzC,WAAO,SAAS,WAAW,CAAX,CAAT,CAAP;AACD;;AAED;AACA,SAAO,QAAP;AACD,CAjCD;;AAmCA,IAAI,gCAAgC,UAAS,IAAT,EAAe,IAAf,EAAqB,WAArB,EAAkC,OAAlC,EAA2C,QAA3C,EAAqD;AACvF;AACA,MAAI,kBAAkB,kBAAkB,WAAlB,CAAtB;AACA;AACA,MAAI,YAAY,OAAO,QAAQ,IAAf,IAAuB,QAAvB,GAAkC,QAAQ,IAA1C,GAAiD,gBAAgB,IAAjF;AACA;AACA,MAAI,UAAU,CAAC,EAAE,MAAM,SAAR,EAAmB,KAAK,gBAAgB,SAAxC,EAAD,CAAd;AACA;AACA,MAAI,aAAa,OAAO,IAAP,CAAY,QAAQ,CAAR,CAAZ,CAAjB;AACA,OAAI,IAAI,UAAR,IAAsB,OAAtB,EAA+B;AAC7B,QAAG,WAAW,OAAX,CAAmB,UAAnB,KAAkC,CAAC,CAAtC,EAAyC;AACvC,cAAQ,CAAR,EAAW,UAAX,IAAyB,QAAQ,UAAR,CAAzB;AACD;;AAED;AACA,QAAI,aAAa,CAAC,GAAD,EAAM,UAAN,EAAkB,GAAlB,EAAuB,OAAvB,EAAgC,gBAAhC,CAAjB;AACA,SAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,WAAW,MAA9B,EAAsC,GAAtC,EAA2C;AACzC,aAAO,QAAQ,CAAR,EAAW,WAAW,CAAX,CAAX,CAAP;AACD;AACF;;AAED;AACA,MAAI,eAAe,KAAK,CAAL,CAAO,QAAP,CAAgB,YAAhB,EAAnB;;AAEA;AACA,MAAG,QAAQ,CAAR,EAAW,SAAX,IAAwB,YAAxB,IAAwC,CAAC,aAAa,qBAAzD,EAAgF;AAC9E;AACA,QAAI,QAAQ,IAAI,UAAJ,CAAe,EAAE,kDAAF,CAAf,CAAZ;AACA,UAAM,IAAN,GAAa,EAAb;AACA;AACA,WAAO,SAAS,KAAT,CAAP;AACD;;AAED;AACA,MAAI,MAAM,aAAa,EAAC,eAAe,IAAhB,EAAsB,SAAS,OAA/B,EAAb,EAAsD,IAAtD,EAA4D,OAA5D,CAAV;;AAEA;AACA,2BAAyB,GAAzB,EAA8B,IAA9B,EAAoC,OAApC;;AAEA;AACA,UAAQ,cAAR,GAAyB,eAAe,OAAxC;;AAEA;AACA,OAAK,OAAL,CAAa,GAAb,EAAkB,OAAlB,EAA2B,UAAS,GAAT,EAAc,MAAd,EAAsB;AAC/C,QAAG,GAAH,EAAQ,OAAO,eAAe,QAAf,EAAyB,GAAzB,EAA8B,IAA9B,CAAP;AACR,QAAG,OAAO,EAAP,IAAa,CAAhB,EAAmB,OAAO,eAAe,QAAf,EAAyB,QAAQ,MAAR,CAAzB,EAA0C,IAA1C,CAAP;AACnB;AACA,mBAAe,QAAf,EAAyB,IAAzB,EAA+B,SAA/B;AACD,GALD;AAMD,CAjDD;;AAmDA;AACA,IAAI,uBAAuB,UAAS,YAAT,EAAuB;AAChD,MAAG,OAAO,YAAP,KAAwB,QAA3B,EAAqC,MAAM,WAAW,MAAX,CAAkB,EAAC,SAAS,gCAAV,EAA4C,QAAO,IAAnD,EAAlB,CAAN;AACrC,MAAG,aAAa,MAAb,KAAwB,CAA3B,EAA8B,MAAM,WAAW,MAAX,CAAkB,EAAC,SAAS,0CAAV,EAAsD,QAAO,IAA7D,EAAlB,CAAN;AAC9B,MAAG,gBAAgB,WAAnB,EAAgC;;AAEhC,MAAI,eAAe,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,IAArB,CAAnB;AACA,OAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,aAAa,MAAhC,EAAwC,GAAxC,EAA6C;AAC3C,QAAG,aAAa,OAAb,CAAqB,aAAa,CAAb,CAArB,KAAyC,CAAC,CAA7C,EAAgD,MAAM,WAAW,MAAX,CAAkB,EAAC,SAAS,kDAAkD,aAAa,CAAb,CAAlD,GAAoE,GAA9E,EAAmF,QAAO,IAA1F,EAAlB,CAAN;AACjD;AACF,CATD;;AAWA;AACA,IAAI,eAAe,UAAS,MAAT,EAAiB,EAAjB,EAAqB,OAArB,EAA8B;AAC/C,MAAG,QAAQ,CAAR,IAAa,IAAb,IAAqB,QAAQ,CAAR,IAAa,IAAlC,IAA0C,QAAQ,KAAR,IAAiB,IAA9D,EAAoE;AAClE,QAAI,OAAO,EAAX;AACA,QAAG,QAAQ,CAAX,EAAc,KAAK,CAAL,GAAS,QAAQ,CAAjB;AACd,QAAG,QAAQ,QAAX,EAAqB,KAAK,QAAL,GAAgB,QAAQ,QAAxB;AACrB,QAAG,QAAQ,CAAX,EAAc,KAAK,CAAL,GAAS,QAAQ,CAAjB;AACd,QAAG,QAAQ,KAAX,EAAkB,KAAK,KAAL,GAAa,QAAQ,KAArB;AAClB,WAAO,YAAP,GAAsB,IAAtB;AACD,GAPD,MAOO,IAAG,GAAG,YAAH,CAAgB,CAAhB,IAAqB,IAArB,IAA6B,GAAG,YAAH,CAAgB,CAAhB,IAAqB,IAAlD,IAA0D,GAAG,YAAH,CAAgB,KAAhB,IAAyB,IAAtF,EAA4F;AACjG,WAAO,YAAP,GAAsB,GAAG,YAAzB;AACD;;AAED,SAAO,MAAP;AACD,CAbD;;AAeA;AACA,IAAI,iBAAiB,UAAS,IAAT,EAAe,CAAf,EAAkB,MAAlB,EAA0B;AAC7C,MAAI,WAAW,UAAS,GAAT,EAAc;AAC3B,QAAG,OAAO,SAAP,CAAiB,CAAjB,EAAoB,MAApB,GAA6B,CAAhC,EAAmC;AACjC,aAAO,IAAP,CAAY,CAAZ,EAAe,GAAf,EAAoB,IAApB;;AAEA;AACA,WAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,KAAK,CAAL,CAAO,QAAP,CAAgB,MAAnC,EAA2C,GAA3C,EAAgD;AAC9C,aAAK,CAAL,CAAO,QAAP,CAAgB,CAAhB,EAAmB,IAAnB,CAAwB,CAAxB,EAA2B,GAA3B,EAAgC,KAAK,CAAL,CAAO,QAAP,CAAgB,CAAhB,CAAhC;AACD;AACF;AACF,GATD;AAUA,SAAO,QAAP;AACD,CAZD;;AAeA;;;;AAIA,GAAG,SAAH,CAAa,KAAb,GAAqB,YAAW;AAC9B,OAAK,CAAL,CAAO,QAAP,CAAgB,KAAhB;AACD,CAFD;;AAIA;;;;;;;;;AASA;;;;;;;;;AASA;;;;;;;;;;;AAWA;;;;;;;;;AASA;;;;;;;;;AASA;;;;;;;;;AASA;;;;;;;;;;;AAWA;AACA,GAAG,2BAAH,GAAiC,mBAAjC;AACA,GAAG,uBAAH,GAA6B,gBAA7B;AACA,GAAG,yBAAH,GAA+B,gBAA/B;AACA,GAAG,sBAAH,GAA4B,cAA5B;AACA,GAAG,yBAAH,GAA+B,MAA/B;AACA,GAAG,oBAAH,GAA0B,WAA1B;;AAEA,OAAO,OAAP,GAAiB,EAAjB","file":"db-compiled.js","sourcesContent":["\"use strict\";\n\nvar EventEmitter = require('events').EventEmitter\n  , authenticate = require('./authenticate')\n  , inherits = require('util').inherits\n  , getSingleProperty = require('./utils').getSingleProperty\n  , shallowClone = require('./utils').shallowClone\n  , parseIndexOptions = require('./utils').parseIndexOptions\n  , debugOptions = require('./utils').debugOptions\n  , CommandCursor = require('./command_cursor')\n  , handleCallback = require('./utils').handleCallback\n  , filterOptions = require('./utils').filterOptions\n  , toError = require('./utils').toError\n  , ReadPreference = require('./read_preference')\n  , f = require('util').format\n  , Admin = require('./admin')\n  , Code = require('mongodb-core').BSON.Code\n  , CoreReadPreference = require('mongodb-core').ReadPreference\n  , MongoError = require('mongodb-core').MongoError\n  , ObjectID = require('mongodb-core').ObjectID\n  , Define = require('./metadata')\n  , Logger = require('mongodb-core').Logger\n  , Collection = require('./collection')\n  , crypto = require('crypto')\n  , mergeOptionsAndWriteConcern = require('./utils').mergeOptionsAndWriteConcern\n  , assign = require('./utils').assign;\n\nvar debugFields = ['authSource', 'w', 'wtimeout', 'j', 'native_parser', 'forceServerObjectId'\n  , 'serializeFunctions', 'raw', 'promoteLongs', 'promoteValues', 'promoteBuffers', 'bufferMaxEntries', 'numberOfRetries', 'retryMiliSeconds'\n  , 'readPreference', 'pkFactory', 'parentDb', 'promiseLibrary', 'noListener'];\n\n// Filter out any write concern options\nvar illegalCommandFields = ['w', 'wtimeout', 'j', 'fsync', 'autoIndexId'\n  , 'strict', 'serializeFunctions', 'pkFactory', 'raw', 'readPreference'];\n\n/**\n * @fileOverview The **Db** class is a class that represents a MongoDB Database.\n *\n * @example\n * var MongoClient = require('mongodb').MongoClient,\n *   test = require('assert');\n * // Connection url\n * var url = 'mongodb://localhost:27017/test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, db) {\n *   // Get an additional db\n *   var testDb = db.db('test');\n *   db.close();\n * });\n */\n\n// Allowed parameters\nvar legalOptionNames = ['w', 'wtimeout', 'fsync', 'j', 'readPreference', 'readPreferenceTags', 'native_parser'\n  , 'forceServerObjectId', 'pkFactory', 'serializeFunctions', 'raw', 'bufferMaxEntries', 'authSource'\n  , 'ignoreUndefined', 'promoteLongs', 'promiseLibrary', 'readConcern', 'retryMiliSeconds', 'numberOfRetries'\n  , 'parentDb', 'noListener', 'loggerLevel', 'logger', 'promoteBuffers', 'promoteLongs', 'promoteValues'];\n\n/**\n * Creates a new Db instance\n * @class\n * @param {string} databaseName The name of the database this instance represents.\n * @param {(Server|ReplSet|Mongos)} topology The server topology for the database.\n * @param {object} [options=null] Optional settings.\n * @param {string} [options.authSource=null] If the database authentication is dependent on another databaseName.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {number} [options.bufferMaxEntries=-1] Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys.\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {object} [options.readConcern=null] Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)\n * @param {object} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)\n * @property {(Server|ReplSet|Mongos)} serverConfig Get the current db topology.\n * @property {number} bufferMaxEntries Current bufferMaxEntries value for the database\n * @property {string} databaseName The name of the database this instance represents.\n * @property {object} options The options associated with the db instance.\n * @property {boolean} native_parser The current value of the parameter native_parser.\n * @property {boolean} slaveOk The current slaveOk value for the db instance.\n * @property {object} writeConcern The current write concern values.\n * @property {object} topology Access the topology object (single server, replicaset or mongos).\n * @fires Db#close\n * @fires Db#authenticated\n * @fires Db#reconnect\n * @fires Db#error\n * @fires Db#timeout\n * @fires Db#parseError\n * @fires Db#fullsetup\n * @return {Db} a Db instance.\n */\nvar Db = function(databaseName, topology, options) {\n  options = options || {};\n  if(!(this instanceof Db)) return new Db(databaseName, topology, options);\n  EventEmitter.call(this);\n  var self = this;\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary;\n\n  // No promise library selected fall back\n  if(!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ?\n      global.Promise : require('es6-promise').Promise;\n  }\n\n  // Filter the options\n  options = filterOptions(options, legalOptionNames);\n\n  // Ensure we put the promiseLib in the options\n  options.promiseLibrary = promiseLibrary;\n\n  // var self = this;  // Internal state of the db object\n  this.s = {\n    // Database name\n      databaseName: databaseName\n    // DbCache\n    , dbCache: {}\n    // Children db's\n    , children: []\n    // Topology\n    , topology: topology\n    // Options\n    , options: options\n    // Logger instance\n    , logger: Logger('Db', options)\n    // Get the bson parser\n    , bson: topology ? topology.bson : null\n    // Authsource if any\n    , authSource: options.authSource\n    // Unpack read preference\n    , readPreference: options.readPreference\n    // Set buffermaxEntries\n    , bufferMaxEntries: typeof options.bufferMaxEntries == 'number' ? options.bufferMaxEntries : -1\n    // Parent db (if chained)\n    , parentDb: options.parentDb || null\n    // Set up the primary key factory or fallback to ObjectID\n    , pkFactory: options.pkFactory || ObjectID\n    // Get native parser\n    , nativeParser: options.nativeParser || options.native_parser\n    // Promise library\n    , promiseLibrary: promiseLibrary\n    // No listener\n    , noListener: typeof options.noListener == 'boolean' ? options.noListener : false\n    // ReadConcern\n    , readConcern: options.readConcern\n  }\n\n  // Ensure we have a valid db name\n  validateDatabaseName(self.s.databaseName);\n\n  // Add a read Only property\n  getSingleProperty(this, 'serverConfig', self.s.topology);\n  getSingleProperty(this, 'bufferMaxEntries', self.s.bufferMaxEntries);\n  getSingleProperty(this, 'databaseName', self.s.databaseName);\n\n  // This is a child db, do not register any listeners\n  if(options.parentDb) return;\n  if(this.s.noListener) return;\n\n  // Add listeners\n  topology.on('error', createListener(self, 'error', self));\n  topology.on('timeout', createListener(self, 'timeout', self));\n  topology.on('close', createListener(self, 'close', self));\n  topology.on('parseError', createListener(self, 'parseError', self));\n  topology.once('open', createListener(self, 'open', self));\n  topology.once('fullsetup', createListener(self, 'fullsetup', self));\n  topology.once('all', createListener(self, 'all', self));\n  topology.on('reconnect', createListener(self, 'reconnect', self));\n}\n\ninherits(Db, EventEmitter);\n\nvar define = Db.define = new Define('Db', Db, false);\n\n// Topology\nObject.defineProperty(Db.prototype, 'topology', {\n  enumerable:true,\n  get: function() { return this.s.topology; }\n});\n\n// Options\nObject.defineProperty(Db.prototype, 'options', {\n  enumerable:true,\n  get: function() { return this.s.options; }\n});\n\n// slaveOk specified\nObject.defineProperty(Db.prototype, 'slaveOk', {\n  enumerable:true,\n  get: function() {\n    if(this.s.options.readPreference != null\n      && (this.s.options.readPreference != 'primary' || this.s.options.readPreference.mode != 'primary')) {\n      return true;\n    }\n    return false;\n  }\n});\n\n// get the write Concern\nObject.defineProperty(Db.prototype, 'writeConcern', {\n  enumerable:true,\n  get: function() {\n    var ops = {};\n    if(this.s.options.w != null) ops.w = this.s.options.w;\n    if(this.s.options.j != null) ops.j = this.s.options.j;\n    if(this.s.options.fsync != null) ops.fsync = this.s.options.fsync;\n    if(this.s.options.wtimeout != null) ops.wtimeout = this.s.options.wtimeout;\n    return ops;\n  }\n});\n\n/**\n * The callback format for the Db.open method\n * @callback Db~openCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Db} db The Db instance if the open method was successful.\n */\n\n// Internal method\nvar open = function(self, callback) {\n  self.s.topology.connect(self, self.s.options, function(err) {\n    if(callback == null) return;\n    var internalCallback = callback;\n    callback == null;\n\n    if(err) {\n      self.close();\n      return internalCallback(err);\n    }\n\n    internalCallback(null, self);\n  });\n}\n\n/**\n * Open the database\n * @method\n * @param {Db~openCallback} [callback] Callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.open = function(callback) {\n  var self = this;\n  // We provided a callback leg\n  if(typeof callback == 'function') return open(self, callback);\n  // Return promise\n  return new self.s.promiseLibrary(function(resolve, reject) {\n    open(self, function(err, db) {\n      if(err) return reject(err);\n      resolve(db);\n    })\n  });\n}\n\ndefine.classMethod('open', {callback: true, promise:true});\n\n/**\n * Converts provided read preference to CoreReadPreference\n * @param {(ReadPreference|string|object)} readPreference the user provided read preference\n * @return {CoreReadPreference}\n */\nvar convertReadPreference = function(readPreference) {\n  if(readPreference && typeof readPreference == 'string') {\n    return new CoreReadPreference(readPreference);\n  } else if(readPreference instanceof ReadPreference) {\n    return new CoreReadPreference(readPreference.mode, readPreference.tags, {maxStalenessSeconds: readPreference.maxStalenessSeconds});\n  } else if(readPreference && typeof readPreference == 'object') {\n    var mode = readPreference.mode || readPreference.preference;\n    if (mode && typeof mode == 'string') {\n      readPreference = new CoreReadPreference(mode, readPreference.tags, {maxStalenessSeconds: readPreference.maxStalenessSeconds});\n    }\n  }\n  return readPreference;\n}\n\n/**\n * The callback format for results\n * @callback Db~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result object if the command was executed successfully.\n */\n\nvar executeCommand = function(self, command, options, callback) {\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n  // Get the db name we are executing against\n  var dbName = options.dbName || options.authdb || self.s.databaseName;\n\n  // If we have a readPreference set\n  if(options.readPreference == null && self.s.readPreference) {\n    options.readPreference = self.s.readPreference;\n  }\n\n  // Convert the readPreference if its not a write\n  if(options.readPreference) {\n    options.readPreference = convertReadPreference(options.readPreference);\n  } else {\n    options.readPreference = CoreReadPreference.primary;\n  }\n\n  // Debug information\n  if(self.s.logger.isDebug()) self.s.logger.debug(f('executing command %s against %s with options [%s]'\n    , JSON.stringify(command), f('%s.$cmd', dbName), JSON.stringify(debugOptions(debugFields, options))));\n\n  // Execute command\n  self.s.topology.command(f('%s.$cmd', dbName), command, options, function(err, result) {\n    if(err) return handleCallback(callback, err);\n    if(options.full) return handleCallback(callback, null, result);\n    handleCallback(callback, null, result.result);\n  });\n}\n\n/**\n * Execute a command\n * @method\n * @param {object} command The command hash\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.command = function(command, options, callback) {\n  var self = this;\n  // Change the callback\n  if(typeof options == 'function') callback = options, options = {};\n  // Clone the options\n  options = shallowClone(options);\n\n  // Do we have a callback\n  if(typeof callback == 'function') return executeCommand(self, command, options, callback);\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    executeCommand(self, command, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('command', {callback: true, promise:true});\n\n/**\n * The callback format for results\n * @callback Db~noResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {null} result Is not set to a value\n */\n\n/**\n * Close the db and its underlying connections\n * @method\n * @param {boolean} force Force close, emitting no events\n * @param {Db~noResultCallback} [callback] The result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.close = function(force, callback) {\n  if(typeof force == 'function') callback = force, force = false;\n  this.s.topology.close(force);\n  var self = this;\n\n  // Fire close event if any listeners\n  if(this.listeners('close').length > 0) {\n    this.emit('close');\n\n    // If it's the top level db emit close on all children\n    if(this.parentDb == null) {\n      // Fire close on all children\n      for(var i = 0; i < this.s.children.length; i++) {\n        this.s.children[i].emit('close');\n      }\n    }\n\n    // Remove listeners after emit\n    self.removeAllListeners('close');\n  }\n\n  // Close parent db if set\n  if(this.s.parentDb) this.s.parentDb.close();\n  // Callback after next event loop tick\n  if(typeof callback == 'function') return process.nextTick(function() {\n    handleCallback(callback, null);\n  })\n\n  // Return dummy promise\n  return new this.s.promiseLibrary(function(resolve) {\n    resolve();\n  });\n}\n\ndefine.classMethod('close', {callback: true, promise:true});\n\n/**\n * Return the Admin db instance\n * @method\n * @return {Admin} return the new Admin db instance\n */\nDb.prototype.admin = function() {\n  return new Admin(this, this.s.topology, this.s.promiseLibrary);\n};\n\ndefine.classMethod('admin', {callback: false, promise:false, returns: [Admin]});\n\n/**\n * The callback format for the collection method, must be used if strict is specified\n * @callback Db~collectionResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection} collection The collection instance.\n */\n\nvar collectionKeys = ['pkFactory', 'readPreference'\n  , 'serializeFunctions', 'strict', 'readConcern', 'ignoreUndefined', 'promoteValues', 'promoteBuffers', 'promoteLongs'];\n\n/**\n * Fetch a specific collection (containing the actual collection information). If the application does not use strict mode you can\n * can use it without a callback in the following way: `var collection = db.collection('mycollection');`\n *\n * @method\n * @param {string} name the collection name we wish to access.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.strict=false] Returns an error if the collection does not exist\n * @param {object} [options.readConcern=null] Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)\n * @param {object} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)\n * @param {Db~collectionResultCallback} callback The collection result callback\n * @return {Collection} return the new Collection instance if not in strict mode\n */\nDb.prototype.collection = function(name, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n  options = shallowClone(options);\n  // Set the promise library\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  // If we have not set a collection level readConcern set the db level one\n  options.readConcern = options.readConcern || this.s.readConcern;\n\n  // Do we have ignoreUndefined set\n  if(this.s.options.ignoreUndefined) {\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Merge in all needed options and ensure correct writeConcern merging from db level\n  options = mergeOptionsAndWriteConcern(options, this.s.options, collectionKeys, true);\n\n  // Execute\n  if(options == null || !options.strict) {\n    try {\n      var collection = new Collection(this, this.s.topology, this.s.databaseName, name, this.s.pkFactory, options);\n      if(callback) callback(null, collection);\n      return collection;\n    } catch(err) {\n      if(callback) return callback(err);\n      throw err;\n    }\n  }\n\n  // Strict mode\n  if(typeof callback != 'function') {\n    throw toError(f(\"A callback is required in strict mode. While getting collection %s.\", name));\n  }\n\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) {\n    return callback(new MongoError('topology was destroyed'));\n  }\n\n  // Strict mode\n  this.listCollections({name:name}, options).toArray(function(err, collections) {\n    if(err != null) return handleCallback(callback, err, null);\n    if(collections.length == 0) return handleCallback(callback, toError(f(\"Collection %s does not exist. Currently in strict mode.\", name)), null);\n\n    try {\n      return handleCallback(callback, null, new Collection(self, self.s.topology, self.s.databaseName, name, self.s.pkFactory, options));\n    } catch(err) {\n      return handleCallback(callback, err, null);\n    }\n  });\n}\n\ndefine.classMethod('collection', {callback: true, promise:false, returns: [Collection]});\n\nfunction decorateWithWriteConcern(command, self, options) {\n  // Do we support write concerns 3.4 and higher\n  if(self.s.topology.capabilities().commandsTakeWriteConcern) {\n    // Get the write concern settings\n    var finalOptions = writeConcern(shallowClone(options), self, options);\n    // Add the write concern to the command\n    if(finalOptions.writeConcern) {\n      command.writeConcern = finalOptions.writeConcern;\n    }\n  }\n}\n\nvar createCollection = function(self, name, options, callback) {\n  // Get the write concern options\n  var finalOptions = writeConcern(shallowClone(options), self, options);\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n  // Check if we have the name\n  self.listCollections({name: name})\n    .setReadPreference(ReadPreference.PRIMARY)\n    .toArray(function(err, collections) {\n      if(err != null) return handleCallback(callback, err, null);\n      if(collections.length > 0 && finalOptions.strict) {\n        return handleCallback(callback, MongoError.create({message: f(\"Collection %s already exists. Currently in strict mode.\", name), driver:true}), null);\n      } else if (collections.length > 0) {\n        try { return handleCallback(callback, null, new Collection(self, self.s.topology, self.s.databaseName, name, self.s.pkFactory, options)); }\n        catch(err) { return handleCallback(callback, err); }\n      }\n\n      // Create collection command\n      var cmd = {'create':name};\n\n      // Decorate command with writeConcern if supported\n      decorateWithWriteConcern(cmd, self, options);\n      // Add all optional parameters\n      for(var n in options) {\n        if(options[n] != null\n          && typeof options[n] != 'function' && illegalCommandFields.indexOf(n) == -1) {\n            cmd[n] = options[n];\n        }\n      }\n\n      // Force a primary read Preference\n      finalOptions.readPreference = ReadPreference.PRIMARY;\n\n      // Execute command\n      self.command(cmd, finalOptions, function(err) {\n        if(err) return handleCallback(callback, err);\n        handleCallback(callback, null, new Collection(self, self.s.topology, self.s.databaseName, name, self.s.pkFactory, options));\n      });\n  });\n}\n\n/**\n * Create a new collection on a server with the specified options. Use this to create capped collections.\n * More information about command options available at https://docs.mongodb.com/manual/reference/command/create/\n *\n * @method\n * @param {string} name the collection name we wish to access.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.strict=false] Returns an error if the collection does not exist\n * @param {boolean} [options.capped=false] Create a capped collection.\n * @param {boolean} [options.autoIndexId=true] Create an index on the _id field of the document, True by default on MongoDB 2.2 or higher off for version < 2.2.\n * @param {number} [options.size=null] The size of the capped collection in bytes.\n * @param {number} [options.max=null] The maximum number of documents in the capped collection.\n * @param {number} [options.flags=null] Optional. Available for the MMAPv1 storage engine only to set the usePowerOf2Sizes and the noPadding flag.\n * @param {object} [options.storageEngine=null] Allows users to specify configuration to the storage engine on a per-collection basis when creating a collection on MongoDB 3.0 or higher.\n * @param {object} [options.validator=null] Allows users to specify validation rules or expressions for the collection. For more information, see Document Validation on MongoDB 3.2 or higher.\n * @param {string} [options.validationLevel=null] Determines how strictly MongoDB applies the validation rules to existing documents during an update on MongoDB 3.2 or higher.\n * @param {string} [options.validationAction=null] Determines whether to error on invalid documents or just warn about the violations but allow invalid documents to be inserted on MongoDB 3.2 or higher.\n * @param {object} [options.indexOptionDefaults=null] Allows users to specify a default configuration for indexes when creating a collection on MongoDB 3.2 or higher.\n * @param {string} [options.viewOn=null] The name of the source collection or view from which to create the view. The name is not the full namespace of the collection or view; i.e. does not include the database name and implies the same database as the view to create on MongoDB 3.4 or higher.\n * @param {array} [options.pipeline=null] An array that consists of the aggregation pipeline stage. create creates the view by applying the specified pipeline to the viewOn collection or view on MongoDB 3.4 or higher.\n * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {Db~collectionResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.createCollection = function(name, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  name = args.length ? args.shift() : null;\n  options = args.length ? args.shift() || {} : {};\n\n  // Do we have a promisesLibrary\n  options.promiseLibrary = options.promiseLibrary || this.s.promiseLibrary;\n\n  // Check if the callback is in fact a string\n  if(typeof callback == 'string') name = callback;\n\n  // Execute the fallback callback\n  if(typeof callback == 'function') return createCollection(self, name, options, callback);\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    createCollection(self, name, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('createCollection', {callback: true, promise:true});\n\n/**\n * Get all the db statistics.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.scale=null] Divide the returned sizes by scale value.\n * @param {Db~resultCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.stats = function(options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n  // Build command object\n  var commandObject = { dbStats:true };\n  // Check if we have the scale value\n  if(options['scale'] != null) commandObject['scale'] = options['scale'];\n\n  // If we have a readPreference set\n  if(options.readPreference == null && this.s.readPreference) {\n    options.readPreference = this.s.readPreference;\n  }\n\n  // Execute the command\n  return this.command(commandObject, options, callback);\n}\n\ndefine.classMethod('stats', {callback: true, promise:true});\n\n// Transformation methods for cursor results\nvar listCollectionsTranforms = function(databaseName) {\n  var matching = f('%s.', databaseName);\n\n  return {\n    doc: function(doc) {\n      var index = doc.name.indexOf(matching);\n      // Remove database name if available\n      if(doc.name && index == 0) {\n        doc.name = doc.name.substr(index + matching.length);\n      }\n\n      return doc;\n    }\n  }\n}\n\n/**\n * Get the list of all collection information for the specified db.\n *\n * @method\n * @param {object} filter Query to filter collections by\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.batchSize=null] The batchSize for the returned command cursor or if pre 2.8 the systems batch collection\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @return {CommandCursor}\n */\nDb.prototype.listCollections = function(filter, options) {\n  filter = filter || {};\n  options = options || {};\n\n  // Shallow clone the object\n  options = shallowClone(options);\n  // Set the promise library\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  // Ensure valid readPreference\n  if(options.readPreference) {\n    options.readPreference = convertReadPreference(options.readPreference);\n  }\n\n  // We have a list collections command\n  if(this.serverConfig.capabilities().hasListCollectionsCommand) {\n    // Cursor options\n    var cursor = options.batchSize ? {batchSize: options.batchSize} : {}\n    // Build the command\n    var command = { listCollections : true, filter: filter, cursor: cursor };\n    // Set the AggregationCursor constructor\n    options.cursorFactory = CommandCursor;\n    // Create the cursor\n    cursor = this.s.topology.cursor(f('%s.$cmd', this.s.databaseName), command, options);\n    // Do we have a readPreference, apply it\n    if(options.readPreference) {\n      cursor.setReadPreference(options.readPreference);\n    }\n    // Return the cursor\n    return cursor;\n  }\n\n  // We cannot use the listCollectionsCommand\n  if(!this.serverConfig.capabilities().hasListCollectionsCommand) {\n    // If we have legacy mode and have not provided a full db name filter it\n    if(typeof filter.name == 'string' && !(new RegExp('^' + this.databaseName + '\\\\.').test(filter.name))) {\n      filter = shallowClone(filter);\n      filter.name = f('%s.%s', this.s.databaseName, filter.name);\n    }\n  }\n\n  // No filter, filter by current database\n  if(filter == null) {\n    filter.name = f('/%s/', this.s.databaseName);\n  }\n\n  // Rewrite the filter to use $and to filter out indexes\n  if(filter.name) {\n    filter = {$and: [{name: filter.name}, {name:/^((?!\\$).)*$/}]};\n  } else {\n    filter = {name:/^((?!\\$).)*$/};\n  }\n\n  // Return options\n  var _options = {transforms: listCollectionsTranforms(this.s.databaseName)}\n  // Get the cursor\n  cursor = this.collection(Db.SYSTEM_NAMESPACE_COLLECTION).find(filter, _options);\n  // Do we have a readPreference, apply it\n  if(options.readPreference) cursor.setReadPreference(options.readPreference);\n  // Set the passed in batch size if one was provided\n  if(options.batchSize) cursor = cursor.batchSize(options.batchSize);\n  // We have a fallback mode using legacy systems collections\n  return cursor;\n};\n\ndefine.classMethod('listCollections', {callback: false, promise:false, returns: [CommandCursor]});\n\nvar evaluate = function(self, code, parameters, options, callback) {\n  var finalCode = code;\n  var finalParameters = [];\n\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n\n  // If not a code object translate to one\n  if(!(finalCode && finalCode._bsontype == 'Code')) finalCode = new Code(finalCode);\n  // Ensure the parameters are correct\n  if(parameters != null && !Array.isArray(parameters) && typeof parameters !== 'function') {\n    finalParameters = [parameters];\n  } else if(parameters != null && Array.isArray(parameters) && typeof parameters !== 'function') {\n    finalParameters = parameters;\n  }\n\n  // Create execution selector\n  var cmd = {'$eval':finalCode, 'args':finalParameters};\n  // Check if the nolock parameter is passed in\n  if(options['nolock']) {\n    cmd['nolock'] = options['nolock'];\n  }\n\n  // Set primary read preference\n  options.readPreference = new CoreReadPreference(ReadPreference.PRIMARY);\n\n  // Execute the command\n  self.command(cmd, options, function(err, result) {\n    if(err) return handleCallback(callback, err, null);\n    if(result && result.ok == 1) return handleCallback(callback, null, result.retval);\n    if(result) return handleCallback(callback, MongoError.create({message: f(\"eval failed: %s\", result.errmsg), driver:true}), null);\n    handleCallback(callback, err, result);\n  });\n}\n\n/**\n * Evaluate JavaScript on the server\n *\n * @method\n * @param {Code} code JavaScript to execute on server.\n * @param {(object|array)} parameters The parameters for the call.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.nolock=false] Tell MongoDB not to block on the evaulation of the javascript.\n * @param {Db~resultCallback} [callback] The results callback\n * @deprecated Eval is deprecated on MongoDB 3.2 and forward\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.eval = function(code, parameters, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  parameters = args.length ? args.shift() : parameters;\n  options = args.length ? args.shift() || {} : {};\n\n  // Check if the callback is in fact a string\n  if(typeof callback == 'function') return evaluate(self, code, parameters, options, callback);\n  // Execute the command\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    evaluate(self, code, parameters, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\ndefine.classMethod('eval', {callback: true, promise:true});\n\n/**\n * Rename a collection.\n *\n * @method\n * @param {string} fromCollection Name of current collection to rename.\n * @param {string} toCollection New name of of the collection.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.dropTarget=false] Drop the target name collection if it previously exists.\n * @param {Db~collectionResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.renameCollection = function(fromCollection, toCollection, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n  // Add return new collection\n  options.new_collection = true;\n\n  // Check if the callback is in fact a string\n  if(typeof callback == 'function') {\n    return this.collection(fromCollection).rename(toCollection, options, callback);\n  }\n\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self.collection(fromCollection).rename(toCollection, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\ndefine.classMethod('renameCollection', {callback: true, promise:true});\n\n/**\n * Drop a collection from the database, removing it permanently. New accesses will create a new collection.\n *\n * @method\n * @param {string} name Name of collection to drop\n * @param {Db~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.dropCollection = function(name, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Command to execute\n  var cmd = {'drop':name}\n\n  // Decorate with write concern\n  decorateWithWriteConcern(cmd, self, options);\n\n  // options\n  options = assign({}, this.s.options, {readPreference: ReadPreference.PRIMARY});\n\n  // Check if the callback is in fact a string\n  if(typeof callback == 'function') return this.command(cmd, options, function(err, result) {\n    // Did the user destroy the topology\n    if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n    if(err) return handleCallback(callback, err);\n    if(result.ok) return handleCallback(callback, null, true);\n    handleCallback(callback, null, false);\n  });\n\n  // Clone the options\n  options = shallowClone(self.s.options);\n  // Set readPreference PRIMARY\n  options.readPreference = ReadPreference.PRIMARY;\n\n  // Execute the command\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    // Execute command\n    self.command(cmd, options, function(err, result) {\n      // Did the user destroy the topology\n      if(self.serverConfig && self.serverConfig.isDestroyed()) return reject(new MongoError('topology was destroyed'));\n      if(err) return reject(err);\n      if(result.ok) return resolve(true);\n      resolve(false);\n    });\n  });\n};\n\ndefine.classMethod('dropCollection', {callback: true, promise:true});\n\n/**\n * Drop a database, removing it permanently from the server.\n *\n * @method\n * @param {Db~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.dropDatabase = function(options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n  // Drop database command\n  var cmd = {'dropDatabase':1};\n\n  // Decorate with write concern\n  decorateWithWriteConcern(cmd, self, options);\n\n  // Ensure primary only\n  options = assign({}, this.s.options, {readPreference: ReadPreference.PRIMARY});\n\n  // Check if the callback is in fact a string\n  if(typeof callback == 'function') return this.command(cmd, options, function(err, result) {\n    // Did the user destroy the topology\n    if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n    if(callback == null) return;\n    if(err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result.ok ? true : false);\n  });\n\n  // Execute the command\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    // Execute command\n    self.command(cmd, options, function(err, result) {\n      // Did the user destroy the topology\n      if(self.serverConfig && self.serverConfig.isDestroyed()) return reject(new MongoError('topology was destroyed'));\n      if(err) return reject(err);\n      if(result.ok) return resolve(true);\n      resolve(false);\n    });\n  });\n}\n\ndefine.classMethod('dropDatabase', {callback: true, promise:true});\n\n/**\n * The callback format for the collections method.\n * @callback Db~collectionsResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection[]} collections An array of all the collections objects for the db instance.\n */\nvar collections = function(self, callback) {\n  // Let's get the collection names\n  self.listCollections().toArray(function(err, documents) {\n    if(err != null) return handleCallback(callback, err, null);\n    // Filter collections removing any illegal ones\n    documents = documents.filter(function(doc) {\n      return doc.name.indexOf('$') == -1;\n    });\n\n    // Return the collection objects\n    handleCallback(callback, null, documents.map(function(d) {\n      return new Collection(self, self.s.topology, self.s.databaseName, d.name, self.s.pkFactory, self.s.options);\n    }));\n  });\n}\n\n/**\n * Fetch all collections for the current db.\n *\n * @method\n * @param {Db~collectionsResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.collections = function(callback) {\n  var self = this;\n\n  // Return the callback\n  if(typeof callback == 'function') return collections(self, callback);\n  // Return the promise\n  return new self.s.promiseLibrary(function(resolve, reject) {\n    collections(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\ndefine.classMethod('collections', {callback: true, promise:true});\n\n/**\n * Runs a command on the database as admin.\n * @method\n * @param {object} command The command hash\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.executeDbAdminCommand = function(selector, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Return the callback\n  if(typeof callback == 'function') {\n    // Convert read preference\n    if(options.readPreference) {\n      options.readPreference = convertReadPreference(options.readPreference)\n    }\n\n    return self.s.topology.command('admin.$cmd', selector, options, function(err, result) {\n      // Did the user destroy the topology\n      if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n      if(err) return handleCallback(callback, err);\n      handleCallback(callback, null, result.result);\n    });\n  }\n\n  // Return promise\n  return new self.s.promiseLibrary(function(resolve, reject) {\n    self.s.topology.command('admin.$cmd', selector, options, function(err, result) {\n      // Did the user destroy the topology\n      if(self.serverConfig && self.serverConfig.isDestroyed()) return reject(new MongoError('topology was destroyed'));\n      if(err) return reject(err);\n      resolve(result.result);\n    });\n  });\n};\n\ndefine.classMethod('executeDbAdminCommand', {callback: true, promise:true});\n\n/**\n * Creates an index on the db and collection collection.\n * @method\n * @param {string} name Name of the collection to create the index on.\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v=null] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {object} [options.partialFilterExpression=null] Creates a partial index based on the given filter object (MongoDB 3.2 or higher)\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.createIndex = function(name, fieldOrSpec, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() || {} : {};\n  options = typeof callback === 'function' ? options : callback;\n  options = options == null ? {} : options;\n  // Shallow clone the options\n  options = shallowClone(options);\n\n  // If we have a callback fallback\n  if(typeof callback == 'function') return createIndex(self, name, fieldOrSpec, options, callback);\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    createIndex(self, name, fieldOrSpec, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar createIndex = function(self, name, fieldOrSpec, options, callback) {\n  // Get the write concern options\n  var finalOptions = writeConcern({}, self, options, { readPreference: ReadPreference.PRIMARY });\n  // Ensure we have a callback\n  if(finalOptions.writeConcern && typeof callback != 'function') {\n    throw MongoError.create({message: \"Cannot use a writeConcern without a provided callback\", driver:true});\n  }\n\n  // Run only against primary\n  options.readPreference = ReadPreference.PRIMARY;\n\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n\n  // Attempt to run using createIndexes command\n  createIndexUsingCreateIndexes(self, name, fieldOrSpec, options, function(err, result) {\n    if(err == null) return handleCallback(callback, err, result);\n\n    // 67 = 'CannotCreateIndex' (malformed index options)\n    // 85 = 'IndexOptionsConflict' (index already exists with different options)\n    // 11000 = 'DuplicateKey' (couldn't build unique index because of dupes)\n    // 11600 = 'InterruptedAtShutdown' (interrupted at shutdown)\n    // These errors mean that the server recognized `createIndex` as a command\n    // and so we don't need to fallback to an insert.\n    if(err.code === 67 || err.code == 11000 || err.code === 85 || err.code == 11600) {\n      return handleCallback(callback, err, result);\n    }\n\n    // Create command\n    var doc = createCreateIndexCommand(self, name, fieldOrSpec, options);\n    // Set no key checking\n    finalOptions.checkKeys = false;\n    // Insert document\n    self.s.topology.insert(f(\"%s.%s\", self.s.databaseName, Db.SYSTEM_INDEX_COLLECTION), doc, finalOptions, function(err, result) {\n      if(callback == null) return;\n      if(err) return handleCallback(callback, err);\n      if(result == null) return handleCallback(callback, null, null);\n      if(result.result.writeErrors) return handleCallback(callback, MongoError.create(result.result.writeErrors[0]), null);\n      handleCallback(callback, null, doc.name);\n    });\n  });\n}\n\ndefine.classMethod('createIndex', {callback: true, promise:true});\n\n/**\n * Ensures that an index exists, if it does not it creates it\n * @method\n * @deprecated since version 2.0\n * @param {string} name The index name\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v=null] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.ensureIndex = function(name, fieldOrSpec, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // If we have a callback fallback\n  if(typeof callback == 'function') return ensureIndex(self, name, fieldOrSpec, options, callback);\n\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    ensureIndex(self, name, fieldOrSpec, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar ensureIndex = function(self, name, fieldOrSpec, options, callback) {\n  // Get the write concern options\n  var finalOptions = writeConcern({}, self, options);\n  // Create command\n  var selector = createCreateIndexCommand(self, name, fieldOrSpec, options);\n  var index_name = selector.name;\n\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n\n  // Merge primary readPreference\n  finalOptions.readPreference = ReadPreference.PRIMARY\n\n  // Check if the index allready exists\n  self.indexInformation(name, finalOptions, function(err, indexInformation) {\n    if(err != null && err.code != 26) return handleCallback(callback, err, null);\n    // If the index does not exist, create it\n    if(indexInformation == null || !indexInformation[index_name])  {\n      self.createIndex(name, fieldOrSpec, options, callback);\n    } else {\n      if(typeof callback === 'function') return handleCallback(callback, null, index_name);\n    }\n  });\n}\n\ndefine.classMethod('ensureIndex', {callback: true, promise:true});\n\nDb.prototype.addChild = function(db) {\n  if(this.s.parentDb) return this.s.parentDb.addChild(db);\n  this.s.children.push(db);\n}\n\n/**\n * Create a new Db instance sharing the current socket connections. Be aware that the new db instances are\n * related in a parent-child relationship to the original instance so that events are correctly emitted on child\n * db instances. Child db instances are cached so performing db('db1') twice will return the same instance.\n * You can control these behaviors with the options noListener and returnNonCachedInstance.\n *\n * @method\n * @param {string} name The name of the database we want to use.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.noListener=false] Do not make the db an event listener to the original connection.\n * @param {boolean} [options.returnNonCachedInstance=false] Control if you want to return a cached instance or have a new one created\n * @return {Db}\n */\nDb.prototype.db = function(dbName, options) {\n  options = options || {};\n\n  // Copy the options and add out internal override of the not shared flag\n  var finalOptions = assign({}, this.options, options);\n\n  // Do we have the db in the cache already\n  if(this.s.dbCache[dbName] && finalOptions.returnNonCachedInstance !== true) {\n    return this.s.dbCache[dbName];\n  }\n\n  // Add current db as parentDb\n  if(finalOptions.noListener == null || finalOptions.noListener == false) {\n    finalOptions.parentDb = this;\n  }\n\n  // Add promiseLibrary\n  finalOptions.promiseLibrary = this.s.promiseLibrary;\n\n  // Return the db object\n  var db = new Db(dbName, this.s.topology, finalOptions)\n\n  // Add as child\n  if(finalOptions.noListener == null || finalOptions.noListener == false) {\n    this.addChild(db);\n  }\n\n  // Add the db to the cache\n  this.s.dbCache[dbName] = db;\n  // Return the database\n  return db;\n};\n\ndefine.classMethod('db', {callback: false, promise:false, returns: [Db]});\n\nvar _executeAuthCreateUserCommand = function(self, username, password, options, callback) {\n  // Special case where there is no password ($external users)\n  if(typeof username == 'string'\n    && password != null && typeof password == 'object') {\n    options = password;\n    password = null;\n  }\n\n  // Unpack all options\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // Error out if we digestPassword set\n  if(options.digestPassword != null) {\n    throw toError(\"The digestPassword option is not supported via add_user. Please use db.command('createUser', ...) instead for this option.\");\n  }\n\n  // Get additional values\n  var customData = options.customData != null ? options.customData : {};\n  var roles = Array.isArray(options.roles) ? options.roles : [];\n  var maxTimeMS = typeof options.maxTimeMS == 'number' ? options.maxTimeMS : null;\n\n  // If not roles defined print deprecated message\n  if(roles.length == 0) {\n    console.log(\"Creating a user without roles is deprecated in MongoDB >= 2.6\");\n  }\n\n  // Get the error options\n  var commandOptions = {writeCommand:true};\n  if(options['dbName']) commandOptions.dbName = options['dbName'];\n\n  // Add maxTimeMS to options if set\n  if(maxTimeMS != null) commandOptions.maxTimeMS = maxTimeMS;\n\n  // Check the db name and add roles if needed\n  if((self.databaseName.toLowerCase() == 'admin' || options.dbName == 'admin') && !Array.isArray(options.roles)) {\n    roles = ['root']\n  } else if(!Array.isArray(options.roles)) {\n    roles = ['dbOwner']\n  }\n\n  // Build the command to execute\n  var command = {\n      createUser: username\n    , customData: customData\n    , roles: roles\n    , digestPassword:false\n  }\n\n  // Apply write concern to command\n  command = writeConcern(command, self, options);\n\n  // Use node md5 generator\n  var md5 = crypto.createHash('md5');\n  // Generate keys used for authentication\n  md5.update(username + \":mongo:\" + password);\n  var userPassword = md5.digest('hex');\n\n  // No password\n  if(typeof password == 'string') {\n    command.pwd = userPassword;\n  }\n\n  // Force write using primary\n  commandOptions.readPreference = ReadPreference.primary;\n\n  // Execute the command\n  self.command(command, commandOptions, function(err, result) {\n    if(err && err.ok == 0 && err.code == undefined) return handleCallback(callback, {code: -5000}, null);\n    if(err) return handleCallback(callback, err, null);\n    handleCallback(callback, !result.ok ? toError(result) : null\n      , result.ok ? [{user: username, pwd: ''}] : null);\n  })\n}\n\nvar addUser = function(self, username, password, options, callback) {\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n  // Attempt to execute auth command\n  _executeAuthCreateUserCommand(self, username, password, options, function(err, r) {\n    // We need to perform the backward compatible insert operation\n    if(err && err.code == -5000) {\n      var finalOptions = writeConcern(shallowClone(options), self, options);\n      // Use node md5 generator\n      var md5 = crypto.createHash('md5');\n      // Generate keys used for authentication\n      md5.update(username + \":mongo:\" + password);\n      var userPassword = md5.digest('hex');\n\n      // If we have another db set\n      var db = options.dbName ? self.db(options.dbName) : self;\n\n      // Fetch a user collection\n      var collection = db.collection(Db.SYSTEM_USER_COLLECTION);\n\n      // Check if we are inserting the first user\n      collection.count({}, function(err, count) {\n        // We got an error (f.ex not authorized)\n        if(err != null) return handleCallback(callback, err, null);\n        // Check if the user exists and update i\n        collection.find({user: username}, {dbName: options['dbName']}).toArray(function(err) {\n          // We got an error (f.ex not authorized)\n          if(err != null) return handleCallback(callback, err, null);\n          // Add command keys\n          finalOptions.upsert = true;\n\n          // We have a user, let's update the password or upsert if not\n          collection.update({user: username},{$set: {user: username, pwd: userPassword}}, finalOptions, function(err) {\n            if(count == 0 && err) return handleCallback(callback, null, [{user:username, pwd:userPassword}]);\n            if(err) return handleCallback(callback, err, null)\n            handleCallback(callback, null, [{user:username, pwd:userPassword}]);\n          });\n        });\n      });\n\n      return;\n    }\n\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, err, r);\n  });\n}\n\n/**\n * Add a user to the database.\n * @method\n * @param {string} username The username.\n * @param {string} password The password.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {object} [options.customData=null] Custom data associated with the user (only Mongodb 2.6 or higher)\n * @param {object[]} [options.roles=null] Roles associated with the created user (only Mongodb 2.6 or higher)\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.addUser = function(username, password, options, callback) {\n  // Unpack the parameters\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() || {} : {};\n\n  // If we have a callback fallback\n  if(typeof callback == 'function') return addUser(self, username, password, options, callback);\n\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    addUser(self, username, password, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\ndefine.classMethod('addUser', {callback: true, promise:true});\n\nvar _executeAuthRemoveUserCommand = function(self, username, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n  // Get the error options\n  var commandOptions = {writeCommand:true};\n  if(options['dbName']) commandOptions.dbName = options['dbName'];\n\n  // Get additional values\n  var maxTimeMS = typeof options.maxTimeMS == 'number' ? options.maxTimeMS : null;\n\n  // Add maxTimeMS to options if set\n  if(maxTimeMS != null) commandOptions.maxTimeMS = maxTimeMS;\n\n  // Build the command to execute\n  var command = {\n    dropUser: username\n  }\n\n  // Apply write concern to command\n  command = writeConcern(command, self, options);\n\n  // Force write using primary\n  commandOptions.readPreference = ReadPreference.primary;\n\n  // Execute the command\n  self.command(command, commandOptions, function(err, result) {\n    if(err && !err.ok && err.code == undefined) return handleCallback(callback, {code: -5000});\n    if(err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result.ok ? true : false);\n  })\n}\n\nvar removeUser = function(self, username, options, callback) {\n  // Attempt to execute command\n  _executeAuthRemoveUserCommand(self, username, options, function(err, result) {\n    if(err && err.code == -5000) {\n      var finalOptions = writeConcern(shallowClone(options), self, options);\n      // If we have another db set\n      var db = options.dbName ? self.db(options.dbName) : self;\n\n      // Fetch a user collection\n      var collection = db.collection(Db.SYSTEM_USER_COLLECTION);\n\n      // Locate the user\n      collection.findOne({user: username}, {}, function(err, user) {\n        if(user == null) return handleCallback(callback, err, false);\n        collection.remove({user: username}, finalOptions, function(err) {\n          handleCallback(callback, err, true);\n        });\n      });\n\n      return;\n    }\n\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, err, result);\n  });\n}\n\ndefine.classMethod('removeUser', {callback: true, promise:true});\n\n/**\n * Remove a user from a database\n * @method\n * @param {string} username The username.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.removeUser = function(username, options, callback) {\n  // Unpack the parameters\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() || {} : {};\n\n  // If we have a callback fallback\n  if(typeof callback == 'function') return removeUser(self, username, options, callback);\n\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    removeUser(self, username, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\n/**\n * Authenticate a user against the server.\n * @method\n * @param {string} username The username.\n * @param {string} [password] The password.\n * @param {object} [options=null] Optional settings.\n * @param {string} [options.authMechanism=MONGODB-CR] The authentication mechanism to use, GSSAPI, MONGODB-CR, MONGODB-X509, PLAIN\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated This method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.\n */\nDb.prototype.authenticate = function(username, password, options, callback) {\n  console.warn(\"Db.prototype.authenticate method will no longer be available in the next major release 3.x as MongoDB 3.6 will only allow auth against users in the admin db and will no longer allow multiple credentials on a socket. Please authenticate using MongoClient.connect with auth credentials.\");  \n  return authenticate.apply(this, [this].concat(Array.prototype.slice.call(arguments)));\n};\n\ndefine.classMethod('authenticate', {callback: true, promise:true});\n\n/**\n * Logout user from server, fire off on all connections and remove all auth info\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {string} [options.dbName=null] Logout against different database than current.\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.logout = function(options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Establish the correct database name\n  var dbName = this.s.authSource ? this.s.authSource : this.s.databaseName;\n  dbName = options.dbName ? options.dbName : dbName;\n\n  // If we have a callback\n  if(typeof callback == 'function') {\n    return self.s.topology.logout(dbName, function(err) {\n      if(err) return callback(err);\n      callback(null, true);\n    });\n  }\n\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self.s.topology.logout(dbName, function(err) {\n      if(err) return reject(err);\n      resolve(true);\n    });\n  });\n}\n\ndefine.classMethod('logout', {callback: true, promise:true});\n\n/**\n * Retrieves this collections index info.\n * @method\n * @param {string} name The name of the collection.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.full=false] Returns the full raw index information.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.indexInformation = function(name, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // If we have a callback fallback\n  if(typeof callback == 'function') return indexInformation(self, name, options, callback);\n\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    indexInformation(self, name, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar indexInformation = function(self, name, options, callback) {\n    // If we specified full information\n  var full = options['full'] == null ? false : options['full'];\n\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n  // Process all the results from the index command and collection\n  var processResults = function(indexes) {\n    // Contains all the information\n    var info = {};\n    // Process all the indexes\n    for(var i = 0; i < indexes.length; i++) {\n      var index = indexes[i];\n      // Let's unpack the object\n      info[index.name] = [];\n      for(var name in index.key) {\n        info[index.name].push([name, index.key[name]]);\n      }\n    }\n\n    return info;\n  }\n\n  // Get the list of indexes of the specified collection\n  self.collection(name).listIndexes(options).toArray(function(err, indexes) {\n    if(err) return callback(toError(err));\n    if(!Array.isArray(indexes)) return handleCallback(callback, null, []);\n    if(full) return handleCallback(callback, null, indexes);\n    handleCallback(callback, null, processResults(indexes));\n  });\n}\n\ndefine.classMethod('indexInformation', {callback: true, promise:true});\n\nvar createCreateIndexCommand = function(db, name, fieldOrSpec, options) {\n  var indexParameters = parseIndexOptions(fieldOrSpec);\n  var fieldHash = indexParameters.fieldHash;\n\n  // Generate the index name\n  var indexName = typeof options.name == 'string' ? options.name : indexParameters.name;\n  var selector = {\n    'ns': db.databaseName + \".\" + name, 'key': fieldHash, 'name': indexName\n  }\n\n  // Ensure we have a correct finalUnique\n  var finalUnique = options == null || 'object' === typeof options ? false : options;\n  // Set up options\n  options = options == null || typeof options == 'boolean' ? {} : options;\n\n  // Add all the options\n  var keysToOmit = Object.keys(selector);\n  for(var optionName in options) {\n    if(keysToOmit.indexOf(optionName) == -1) {\n      selector[optionName] = options[optionName];\n    }\n  }\n\n  if(selector['unique'] == null) selector['unique'] = finalUnique;\n\n  // Remove any write concern operations\n  var removeKeys = ['w', 'wtimeout', 'j', 'fsync', 'readPreference'];\n  for(var i = 0; i < removeKeys.length; i++) {\n    delete selector[removeKeys[i]];\n  }\n\n  // Return the command creation selector\n  return selector;\n}\n\nvar createIndexUsingCreateIndexes = function(self, name, fieldOrSpec, options, callback) {\n  // Build the index\n  var indexParameters = parseIndexOptions(fieldOrSpec);\n  // Generate the index name\n  var indexName = typeof options.name == 'string' ? options.name : indexParameters.name;\n  // Set up the index\n  var indexes = [{ name: indexName, key: indexParameters.fieldHash }];\n  // merge all the options\n  var keysToOmit = Object.keys(indexes[0]);\n  for(var optionName in options) {\n    if(keysToOmit.indexOf(optionName) == -1) {\n      indexes[0][optionName] = options[optionName];\n    }\n\n    // Remove any write concern operations\n    var removeKeys = ['w', 'wtimeout', 'j', 'fsync', 'readPreference'];\n    for(var i = 0; i < removeKeys.length; i++) {\n      delete indexes[0][removeKeys[i]];\n    }\n  }\n\n  // Get capabilities\n  var capabilities = self.s.topology.capabilities();\n\n  // Did the user pass in a collation, check if our write server supports it\n  if(indexes[0].collation && capabilities && !capabilities.commandsTakeCollation) {\n    // Create a new error\n    var error = new MongoError(f('server/primary/mongos does not support collation'));\n    error.code = 67;\n    // Return the error\n    return callback(error);\n  }\n\n  // Create command, apply write concern to command\n  var cmd = writeConcern({createIndexes: name, indexes: indexes}, self, options);\n\n  // Decorate command with writeConcern if supported\n  decorateWithWriteConcern(cmd, self, options);\n\n  // ReadPreference primary\n  options.readPreference = ReadPreference.PRIMARY;\n\n  // Build the command\n  self.command(cmd, options, function(err, result) {\n    if(err) return handleCallback(callback, err, null);\n    if(result.ok == 0) return handleCallback(callback, toError(result), null);\n    // Return the indexName for backward compatibility\n    handleCallback(callback, null, indexName);\n  });\n}\n\n// Validate the database name\nvar validateDatabaseName = function(databaseName) {\n  if(typeof databaseName !== 'string') throw MongoError.create({message: \"database name must be a string\", driver:true});\n  if(databaseName.length === 0) throw MongoError.create({message: \"database name cannot be the empty string\", driver:true});\n  if(databaseName == '$external') return;\n\n  var invalidChars = [\" \", \".\", \"$\", \"/\", \"\\\\\"];\n  for(var i = 0; i < invalidChars.length; i++) {\n    if(databaseName.indexOf(invalidChars[i]) != -1) throw MongoError.create({message: \"database names cannot contain the character '\" + invalidChars[i] + \"'\", driver:true});\n  }\n}\n\n// Get write concern\nvar writeConcern = function(target, db, options) {\n  if(options.w != null || options.j != null || options.fsync != null) {\n    var opts = {};\n    if(options.w) opts.w = options.w;\n    if(options.wtimeout) opts.wtimeout = options.wtimeout;\n    if(options.j) opts.j = options.j;\n    if(options.fsync) opts.fsync = options.fsync;\n    target.writeConcern = opts;\n  } else if(db.writeConcern.w != null || db.writeConcern.j != null || db.writeConcern.fsync != null) {\n    target.writeConcern = db.writeConcern;\n  }\n\n  return target\n}\n\n// Add listeners to topology\nvar createListener = function(self, e, object) {\n  var listener = function(err) {\n    if(object.listeners(e).length > 0) {\n      object.emit(e, err, self);\n\n      // Emit on all associated db's if available\n      for(var i = 0; i < self.s.children.length; i++) {\n        self.s.children[i].emit(e, err, self.s.children[i]);\n      }\n    }\n  }\n  return listener;\n}\n\n\n/**\n * Unref all sockets\n * @method\n */\nDb.prototype.unref = function() {\n  this.s.topology.unref();\n}\n\n/**\n * Db close event\n *\n * Emitted after a socket closed against a single server or mongos proxy.\n *\n * @event Db#close\n * @type {MongoError}\n */\n\n/**\n * Db authenticated event\n *\n * Emitted after all server members in the topology (single server, replicaset or mongos) have successfully authenticated.\n *\n * @event Db#authenticated\n * @type {object}\n */\n\n/**\n * Db reconnect event\n *\n *  * Server: Emitted when the driver has reconnected and re-authenticated.\n *  * ReplicaSet: N/A\n *  * Mongos: Emitted when the driver reconnects and re-authenticates successfully against a Mongos.\n *\n * @event Db#reconnect\n * @type {object}\n */\n\n/**\n * Db error event\n *\n * Emitted after an error occurred against a single server or mongos proxy.\n *\n * @event Db#error\n * @type {MongoError}\n */\n\n/**\n * Db timeout event\n *\n * Emitted after a socket timeout occurred against a single server or mongos proxy.\n *\n * @event Db#timeout\n * @type {MongoError}\n */\n\n/**\n * Db parseError event\n *\n * The parseError event is emitted if the driver detects illegal or corrupt BSON being received from the server.\n *\n * @event Db#parseError\n * @type {MongoError}\n */\n\n/**\n * Db fullsetup event, emitted when all servers in the topology have been connected to at start up time.\n *\n * * Server: Emitted when the driver has connected to the single server and has authenticated.\n * * ReplSet: Emitted after the driver has attempted to connect to all replicaset members.\n * * Mongos: Emitted after the driver has attempted to connect to all mongos proxies.\n *\n * @event Db#fullsetup\n * @type {Db}\n */\n\n// Constants\nDb.SYSTEM_NAMESPACE_COLLECTION = \"system.namespaces\";\nDb.SYSTEM_INDEX_COLLECTION = \"system.indexes\";\nDb.SYSTEM_PROFILE_COLLECTION = \"system.profile\";\nDb.SYSTEM_USER_COLLECTION = \"system.users\";\nDb.SYSTEM_COMMAND_COLLECTION = \"$cmd\";\nDb.SYSTEM_JS_COLLECTION = \"system.js\";\n\nmodule.exports = Db;\n"]}