{"version":3,"sources":["download-compiled.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,QAAR,CAAb;AAAA,IACI,OAAO,QAAQ,MAAR,CADX;;AAGA,OAAO,OAAP,GAAiB,sBAAjB;;AAEA;;;;;;;;;;;;;;;;;;;;AAoBA,SAAS,sBAAT,CAAgC,MAAhC,EAAwC,KAAxC,EAA+C,cAA/C,EAA+D,MAA/D,EAAuE,OAAvE,EAAgF;AAC9E,OAAK,CAAL,GAAS;AACP,eAAW,CADJ;AAEP,YAAQ,MAFD;AAGP,YAAQ,IAHD;AAIP,cAAU,CAJH;AAKP,WAAO,KALA;AAMP,YAAQ,MAND;AAOP,UAAM,KAPC;AAQP,iBAAa,CARN;AASP,UAAM,IATC;AAUP,aAAS,OAVF;AAWP,oBAAgB;AAXT,GAAT;;AAcA,SAAO,QAAP,CAAgB,IAAhB,CAAqB,IAArB;AACD;;AAED,KAAK,QAAL,CAAc,sBAAd,EAAsC,OAAO,QAA7C;;AAEA;;;;;;;AAOA;;;;;;;;AAQA;;;;;;;AAOA;;;;;;;AAOA;;;;;;;AAOA;;;;;AAKA,uBAAuB,SAAvB,CAAiC,KAAjC,GAAyC,YAAY;AACnD,MAAI,QAAQ,IAAZ;AACA,MAAI,KAAK,SAAT,EAAoB;AAClB;AACD;;AAED,cAAY,KAAZ,EAAmB,YAAY;AAC7B,WAAO,KAAP;AACD,GAFD;AAGD,CATD;;AAWA;;;;;;;;;AASA,uBAAuB,SAAvB,CAAiC,KAAjC,GAAyC,UAAU,KAAV,EAAiB;AACxD,qBAAmB,IAAnB;AACA,OAAK,CAAL,CAAO,OAAP,CAAe,KAAf,GAAuB,KAAvB;AACA,SAAO,IAAP;AACD,CAJD;;AAMA;;;;;;;;;AASA,uBAAuB,SAAvB,CAAiC,GAAjC,GAAuC,UAAU,GAAV,EAAe;AACpD,qBAAmB,IAAnB;AACA,OAAK,CAAL,CAAO,OAAP,CAAe,GAAf,GAAqB,GAArB;AACA,SAAO,IAAP;AACD,CAJD;;AAMA;;;;;;;;;;;AAWA,uBAAuB,SAAvB,CAAiC,KAAjC,GAAyC,UAAU,QAAV,EAAoB;AAC3D,MAAI,QAAQ,IAAZ;AACA,OAAK,IAAL,CAAU,IAAV;AACA,OAAK,SAAL,GAAiB,IAAjB;AACA,MAAI,KAAK,CAAL,CAAO,MAAX,EAAmB;AACjB,SAAK,CAAL,CAAO,MAAP,CAAc,KAAd,CAAoB,UAAU,KAAV,EAAiB;AACnC,YAAM,IAAN,CAAW,OAAX;AACA,kBAAY,SAAS,KAAT,CAAZ;AACD,KAHD;AAID,GALD,MAKO;AACL,QAAI,CAAC,KAAK,CAAL,CAAO,IAAZ,EAAkB;AAChB;AACA;AACA,YAAM,IAAN,CAAW,OAAX;AACD;AACD,gBAAY,UAAZ;AACD;AACF,CAjBD;;AAmBA;;;;AAIA,SAAS,kBAAT,CAA4B,IAA5B,EAAkC;AAChC,MAAI,KAAK,CAAL,CAAO,IAAX,EAAiB;AACf,UAAM,IAAI,KAAJ,CAAU,2DAA2D,eAArE,CAAN;AACD;AACF;;AAED;;;;AAIA,SAAS,MAAT,CAAgB,KAAhB,EAAuB;AACrB,MAAI,MAAM,SAAV,EAAqB;AACnB;AACD;;AAED,QAAM,CAAN,CAAQ,MAAR,CAAe,IAAf,CAAoB,UAAU,KAAV,EAAiB,GAAjB,EAAsB;AACxC,QAAI,MAAM,SAAV,EAAqB;AACnB;AACD;AACD,QAAI,KAAJ,EAAW;AACT,aAAO,cAAc,KAAd,EAAqB,KAArB,CAAP;AACD;AACD,QAAI,CAAC,GAAL,EAAU;AACR,YAAM,IAAN,CAAW,IAAX;AACA,aAAO,MAAM,CAAN,CAAQ,MAAR,CAAe,KAAf,CAAqB,UAAU,KAAV,EAAiB;AAC3C,YAAI,KAAJ,EAAW;AACT,iBAAO,cAAc,KAAd,EAAqB,KAArB,CAAP;AACD;AACD,cAAM,IAAN,CAAW,OAAX;AACD,OALM,CAAP;AAMD;;AAED,QAAI,iBAAiB,MAAM,CAAN,CAAQ,IAAR,CAAa,MAAb,GAAsB,MAAM,CAAN,CAAQ,SAAnD;AACA,QAAI,YAAY,MAAM,CAAN,CAAQ,QAAR,EAAhB;AACA,QAAI,iBAAiB,KAAK,GAAL,CAAS,MAAM,CAAN,CAAQ,IAAR,CAAa,SAAtB,EAAiC,cAAjC,CAArB;;AAEA,QAAI,IAAI,CAAJ,GAAQ,SAAZ,EAAuB;AACrB,UAAI,SAAS,uCAAuC,IAAI,CAA3C,GAA+C,cAA/C,GAAgE,SAA7E;AACA,aAAO,cAAc,KAAd,EAAqB,IAAI,KAAJ,CAAU,MAAV,CAArB,CAAP;AACD;;AAED,QAAI,IAAI,CAAJ,GAAQ,SAAZ,EAAuB;AACrB,eAAS,mCAAmC,IAAI,CAAvC,GAA2C,cAA3C,GAA4D,SAArE;AACA,aAAO,cAAc,KAAd,EAAqB,IAAI,KAAJ,CAAU,MAAV,CAArB,CAAP;AACD;;AAED,QAAI,IAAI,IAAJ,CAAS,MAAT,OAAsB,cAA1B,EAA0C;AACxC,UAAI,kBAAkB,CAAtB,EAAyB;AACvB,iBAAS,mCAAmC,IAAI,CAAhD;AACA,eAAO,cAAc,KAAd,EAAqB,IAAI,KAAJ,CAAU,MAAV,CAArB,CAAP;AACD;;AAED,eAAS,8CAA8C,IAAI,IAAJ,CAAS,MAAT,EAA9C,GAAkE,cAAlE,GAAmF,cAA5F;AACA,aAAO,cAAc,KAAd,EAAqB,IAAI,KAAJ,CAAU,MAAV,CAArB,CAAP;AACD;;AAED,UAAM,CAAN,CAAQ,SAAR,IAAqB,IAAI,IAAJ,CAAS,MAAT,EAArB;;AAEA,QAAI,IAAI,IAAJ,CAAS,MAAT,CAAgB,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,aAAO,MAAM,IAAN,CAAW,IAAX,CAAP;AACD;;AAED,QAAI,aAAa,IAAjB;AACA,QAAI,WAAW,IAAf;AACA,QAAI,MAAM,IAAI,IAAJ,CAAS,MAAnB;;AAEA,QAAI,MAAM,CAAN,CAAQ,WAAR,IAAuB,IAA3B,EAAiC;AAC/B,mBAAa,MAAM,CAAN,CAAQ,WAArB;AACA,YAAM,CAAN,CAAQ,WAAR,GAAsB,CAAtB;AACD;;AAED,QAAI,cAAc,MAAM,CAAN,CAAQ,WAAtB,IAAqC,MAAM,CAAN,CAAQ,WAAR,IAAuB,IAAhE,EAAsE;AACpE,iBAAW,MAAM,CAAN,CAAQ,WAAnB;AACD;;AAED;AACA,QAAI,MAAM,CAAN,CAAQ,OAAR,CAAgB,GAAhB,IAAuB,MAAM,CAAN,CAAQ,OAAR,CAAgB,GAAhB,GAAsB,MAAM,CAAN,CAAQ,WAA9B,GAA4C,IAAI,IAAJ,CAAS,MAAT,EAAvE,EAA0F;AACxF,iBAAW,MAAM,CAAN,CAAQ,OAAR,CAAgB,GAAhB,GAAsB,MAAM,CAAN,CAAQ,WAAzC;AACD;;AAED,QAAI,cAAc,IAAd,IAAsB,YAAY,IAAtC,EAA4C;AAC1C,YAAM,IAAI,KAAJ,CAAU,cAAc,CAAxB,EAA2B,YAAY,IAAI,MAA3C,CAAN;AACD;;AAED,UAAM,IAAN,CAAW,GAAX;AACD,GAtED;AAuED;;AAED;;;;AAIA,SAAS,IAAT,CAAc,IAAd,EAAoB;AAClB,MAAI,iBAAiB,EAArB;AACA,MAAI,KAAK,CAAL,CAAO,cAAX,EAA2B;AACzB,mBAAe,cAAf,GAAgC,KAAK,CAAL,CAAO,cAAvC;AACD;AACD,MAAI,KAAK,CAAL,CAAO,OAAP,IAAkB,KAAK,CAAL,CAAO,OAAP,CAAe,IAArC,EAA2C;AACzC,mBAAe,IAAf,GAAsB,KAAK,CAAL,CAAO,OAAP,CAAe,IAArC;AACD;AACD,MAAI,KAAK,CAAL,CAAO,OAAP,IAAkB,KAAK,CAAL,CAAO,OAAP,CAAe,IAArC,EAA2C;AACzC,mBAAe,IAAf,GAAsB,KAAK,CAAL,CAAO,OAAP,CAAe,IAArC;AACD;;AAED,OAAK,CAAL,CAAO,KAAP,CAAa,OAAb,CAAqB,KAAK,CAAL,CAAO,MAA5B,EAAoC,cAApC,EAAoD,UAAU,KAAV,EAAiB,GAAjB,EAAsB;AACxE,QAAI,KAAJ,EAAW;AACT,aAAO,cAAc,IAAd,EAAoB,KAApB,CAAP;AACD;AACD,QAAI,CAAC,GAAL,EAAU;AACR,UAAI,aAAa,KAAK,CAAL,CAAO,MAAP,CAAc,GAAd,GAAoB,KAAK,CAAL,CAAO,MAAP,CAAc,GAAd,CAAkB,QAAlB,EAApB,GAAmD,KAAK,CAAL,CAAO,MAAP,CAAc,QAAlF;AACA,UAAI,SAAS,wBAAwB,UAAxB,GAAqC,gBAAlD;AACA,UAAI,MAAM,IAAI,KAAJ,CAAU,MAAV,CAAV;AACA,UAAI,IAAJ,GAAW,QAAX;AACA,aAAO,cAAc,IAAd,EAAoB,GAApB,CAAP;AACD;;AAED;AACA;AACA,QAAI,IAAI,MAAJ,IAAc,CAAlB,EAAqB;AACnB,WAAK,IAAL,CAAU,IAAV;AACA;AACD;;AAED,QAAI,KAAK,SAAT,EAAoB;AAClB;AACA;AACA;AACA,WAAK,IAAL,CAAU,OAAV;AACA;AACD;;AAED,SAAK,CAAL,CAAO,MAAP,GAAgB,KAAK,CAAL,CAAO,MAAP,CAAc,IAAd,CAAmB,EAAE,UAAU,IAAI,GAAhB,EAAnB,EAA0C,IAA1C,CAA+C,EAAE,GAAG,CAAL,EAA/C,CAAhB;AACA,QAAI,KAAK,CAAL,CAAO,cAAX,EAA2B;AACzB,WAAK,CAAL,CAAO,MAAP,CAAc,iBAAd,CAAgC,KAAK,CAAL,CAAO,cAAvC;AACD;;AAED,SAAK,CAAL,CAAO,WAAP,GAAqB,KAAK,IAAL,CAAU,IAAI,MAAJ,GAAa,IAAI,SAA3B,CAArB;AACA,SAAK,CAAL,CAAO,IAAP,GAAc,GAAd;AACA,SAAK,CAAL,CAAO,WAAP,GAAqB,kBAAkB,IAAlB,EAAwB,GAAxB,EAA6B,KAAK,CAAL,CAAO,MAApC,EAA4C,KAAK,CAAL,CAAO,OAAnD,CAArB;AACA,SAAK,CAAL,CAAO,WAAP,GAAqB,gBAAgB,IAAhB,EAAsB,GAAtB,EAA2B,KAAK,CAAL,CAAO,MAAlC,EAA0C,KAAK,CAAL,CAAO,OAAjD,CAArB;AACA,SAAK,IAAL,CAAU,MAAV,EAAkB,GAAlB;AACD,GArCD;AAsCD;;AAED;;;;AAIA,SAAS,WAAT,CAAqB,KAArB,EAA4B,QAA5B,EAAsC;AACpC,MAAI,MAAM,CAAN,CAAQ,IAAZ,EAAkB;AAChB,WAAO,UAAP;AACD;;AAED,MAAI,CAAC,MAAM,CAAN,CAAQ,IAAb,EAAmB;AACjB,SAAK,KAAL;AACA,UAAM,CAAN,CAAQ,IAAR,GAAe,IAAf;AACD;;AAED,QAAM,IAAN,CAAW,MAAX,EAAmB,YAAY;AAC7B;AACD,GAFD;AAGD;;AAED;;;;AAIA,SAAS,iBAAT,CAA2B,MAA3B,EAAmC,GAAnC,EAAwC,MAAxC,EAAgD,OAAhD,EAAyD;AACvD,MAAI,WAAW,QAAQ,KAAR,IAAiB,IAAhC,EAAsC;AACpC,QAAI,QAAQ,KAAR,GAAgB,IAAI,MAAxB,EAAgC;AAC9B,YAAM,IAAI,KAAJ,CAAU,mBAAmB,QAAQ,KAA3B,GAAmC,gBAAnC,GAAsD,oCAAtD,GAA6F,IAAI,MAAjG,GAA0G,GAApH,CAAN;AACD;AACD,QAAI,QAAQ,KAAR,GAAgB,CAApB,EAAuB;AACrB,YAAM,IAAI,KAAJ,CAAU,mBAAmB,QAAQ,KAA3B,GAAmC,gBAAnC,GAAsD,UAAhE,CAAN;AACD;AACD,QAAI,QAAQ,GAAR,IAAe,IAAf,IAAuB,QAAQ,GAAR,GAAc,QAAQ,KAAjD,EAAwD;AACtD,YAAM,IAAI,KAAJ,CAAU,mBAAmB,QAAQ,KAA3B,GAAmC,gBAAnC,GAAsD,2BAAtD,GAAoF,QAAQ,GAA5F,GAAkG,GAA5G,CAAN;AACD;;AAED,WAAO,IAAP,CAAY,KAAK,KAAL,CAAW,QAAQ,KAAR,GAAgB,IAAI,SAA/B,CAAZ;;AAEA,WAAO,CAAP,CAAS,SAAT,GAAqB,KAAK,KAAL,CAAW,QAAQ,KAAR,GAAgB,IAAI,SAA/B,IAA4C,IAAI,SAArE;AACA,WAAO,CAAP,CAAS,QAAT,GAAoB,KAAK,KAAL,CAAW,QAAQ,KAAR,GAAgB,IAAI,SAA/B,CAApB;;AAEA,WAAO,QAAQ,KAAR,GAAgB,OAAO,CAAP,CAAS,SAAhC;AACD;AACF;;AAED;;;;AAIA,SAAS,eAAT,CAAyB,MAAzB,EAAiC,GAAjC,EAAsC,MAAtC,EAA8C,OAA9C,EAAuD;AACrD,MAAI,WAAW,QAAQ,GAAR,IAAe,IAA9B,EAAoC;AAClC,QAAI,QAAQ,GAAR,GAAc,IAAI,MAAtB,EAA8B;AAC5B,YAAM,IAAI,KAAJ,CAAU,iBAAiB,QAAQ,GAAzB,GAA+B,gBAA/B,GAAkD,oCAAlD,GAAyF,IAAI,MAA7F,GAAsG,GAAhH,CAAN;AACD;AACD,QAAI,QAAQ,KAAR,GAAgB,CAApB,EAAuB;AACrB,YAAM,IAAI,KAAJ,CAAU,iBAAiB,QAAQ,GAAzB,GAA+B,gBAA/B,GAAkD,UAA5D,CAAN;AACD;;AAED,QAAI,QAAQ,QAAQ,KAAR,IAAiB,IAAjB,GAAwB,KAAK,KAAL,CAAW,QAAQ,KAAR,GAAgB,IAAI,SAA/B,CAAxB,GAAoE,CAAhF;;AAEA,WAAO,KAAP,CAAa,KAAK,IAAL,CAAU,QAAQ,GAAR,GAAc,IAAI,SAA5B,IAAyC,KAAtD;;AAEA,WAAO,CAAP,CAAS,WAAT,GAAuB,KAAK,IAAL,CAAU,QAAQ,GAAR,GAAc,IAAI,SAA5B,CAAvB;;AAEA,WAAO,KAAK,IAAL,CAAU,QAAQ,GAAR,GAAc,IAAI,SAA5B,IAAyC,IAAI,SAA7C,GAAyD,QAAQ,GAAxE;AACD;AACF;;AAED;;;;AAIA,SAAS,aAAT,CAAuB,KAAvB,EAA8B,KAA9B,EAAqC;AACnC,QAAM,IAAN,CAAW,OAAX,EAAoB,KAApB;AACD;;AAED","file":"download-compiled-compiled.js","sourcesContent":["var stream = require('stream'),\n    util = require('util');\n\nmodule.exports = GridFSBucketReadStream;\n\n/**\n * A readable stream that enables you to read buffers from GridFS.\n *\n * Do not instantiate this class directly. Use `openDownloadStream()` instead.\n *\n * @class\n * @param {Collection} chunks Handle for chunks collection\n * @param {Collection} files Handle for files collection\n * @param {Object} readPreference The read preference to use\n * @param {Object} filter The query to use to find the file document\n * @param {Object} [options=null] Optional settings.\n * @param {Number} [options.sort=null] Optional sort for the file find query\n * @param {Number} [options.skip=null] Optional skip for the file find query\n * @param {Number} [options.start=null] Optional 0-based offset in bytes to start streaming from\n * @param {Number} [options.end=null] Optional 0-based offset in bytes to stop streaming before\n * @fires GridFSBucketReadStream#error\n * @fires GridFSBucketReadStream#file\n * @return {GridFSBucketReadStream} a GridFSBucketReadStream instance.\n */\n\nfunction GridFSBucketReadStream(chunks, files, readPreference, filter, options) {\n  this.s = {\n    bytesRead: 0,\n    chunks: chunks,\n    cursor: null,\n    expected: 0,\n    files: files,\n    filter: filter,\n    init: false,\n    expectedEnd: 0,\n    file: null,\n    options: options,\n    readPreference: readPreference\n  };\n\n  stream.Readable.call(this);\n}\n\nutil.inherits(GridFSBucketReadStream, stream.Readable);\n\n/**\n * An error occurred\n *\n * @event GridFSBucketReadStream#error\n * @type {Error}\n */\n\n/**\n * Fires when the stream loaded the file document corresponding to the\n * provided id.\n *\n * @event GridFSBucketReadStream#file\n * @type {object}\n */\n\n/**\n * Emitted when a chunk of data is available to be consumed.\n *\n * @event GridFSBucketReadStream#data\n * @type {object}\n */\n\n/**\n * Fired when the stream is exhausted (no more data events).\n *\n * @event GridFSBucketReadStream#end\n * @type {object}\n */\n\n/**\n * Fired when the stream is exhausted and the underlying cursor is killed\n *\n * @event GridFSBucketReadStream#close\n * @type {object}\n */\n\n/**\n * Reads from the cursor and pushes to the stream.\n * @method\n */\n\nGridFSBucketReadStream.prototype._read = function () {\n  var _this = this;\n  if (this.destroyed) {\n    return;\n  }\n\n  waitForFile(_this, function () {\n    doRead(_this);\n  });\n};\n\n/**\n * Sets the 0-based offset in bytes to start streaming from. Throws\n * an error if this stream has entered flowing mode\n * (e.g. if you've already called `on('data')`)\n * @method\n * @param {Number} start Offset in bytes to start reading at\n * @return {GridFSBucketReadStream}\n */\n\nGridFSBucketReadStream.prototype.start = function (start) {\n  throwIfInitialized(this);\n  this.s.options.start = start;\n  return this;\n};\n\n/**\n * Sets the 0-based offset in bytes to start streaming from. Throws\n * an error if this stream has entered flowing mode\n * (e.g. if you've already called `on('data')`)\n * @method\n * @param {Number} end Offset in bytes to stop reading at\n * @return {GridFSBucketReadStream}\n */\n\nGridFSBucketReadStream.prototype.end = function (end) {\n  throwIfInitialized(this);\n  this.s.options.end = end;\n  return this;\n};\n\n/**\n * Marks this stream as aborted (will never push another `data` event)\n * and kills the underlying cursor. Will emit the 'end' event, and then\n * the 'close' event once the cursor is successfully killed.\n *\n * @method\n * @param {GridFSBucket~errorCallback} [callback] called when the cursor is successfully closed or an error occurred.\n * @fires GridFSBucketWriteStream#close\n * @fires GridFSBucketWriteStream#end\n */\n\nGridFSBucketReadStream.prototype.abort = function (callback) {\n  var _this = this;\n  this.push(null);\n  this.destroyed = true;\n  if (this.s.cursor) {\n    this.s.cursor.close(function (error) {\n      _this.emit('close');\n      callback && callback(error);\n    });\n  } else {\n    if (!this.s.init) {\n      // If not initialized, fire close event because we will never\n      // get a cursor\n      _this.emit('close');\n    }\n    callback && callback();\n  }\n};\n\n/**\n * @ignore\n */\n\nfunction throwIfInitialized(self) {\n  if (self.s.init) {\n    throw new Error('You cannot change options after the stream has entered' + 'flowing mode!');\n  }\n}\n\n/**\n * @ignore\n */\n\nfunction doRead(_this) {\n  if (_this.destroyed) {\n    return;\n  }\n\n  _this.s.cursor.next(function (error, doc) {\n    if (_this.destroyed) {\n      return;\n    }\n    if (error) {\n      return __handleError(_this, error);\n    }\n    if (!doc) {\n      _this.push(null);\n      return _this.s.cursor.close(function (error) {\n        if (error) {\n          return __handleError(_this, error);\n        }\n        _this.emit('close');\n      });\n    }\n\n    var bytesRemaining = _this.s.file.length - _this.s.bytesRead;\n    var expectedN = _this.s.expected++;\n    var expectedLength = Math.min(_this.s.file.chunkSize, bytesRemaining);\n\n    if (doc.n > expectedN) {\n      var errmsg = 'ChunkIsMissing: Got unexpected n: ' + doc.n + ', expected: ' + expectedN;\n      return __handleError(_this, new Error(errmsg));\n    }\n\n    if (doc.n < expectedN) {\n      errmsg = 'ExtraChunk: Got unexpected n: ' + doc.n + ', expected: ' + expectedN;\n      return __handleError(_this, new Error(errmsg));\n    }\n\n    if (doc.data.length() !== expectedLength) {\n      if (bytesRemaining <= 0) {\n        errmsg = 'ExtraChunk: Got unexpected n: ' + doc.n;\n        return __handleError(_this, new Error(errmsg));\n      }\n\n      errmsg = 'ChunkIsWrongSize: Got unexpected length: ' + doc.data.length() + ', expected: ' + expectedLength;\n      return __handleError(_this, new Error(errmsg));\n    }\n\n    _this.s.bytesRead += doc.data.length();\n\n    if (doc.data.buffer.length === 0) {\n      return _this.push(null);\n    }\n\n    var sliceStart = null;\n    var sliceEnd = null;\n    var buf = doc.data.buffer;\n\n    if (_this.s.bytesToSkip != null) {\n      sliceStart = _this.s.bytesToSkip;\n      _this.s.bytesToSkip = 0;\n    }\n\n    if (expectedN === _this.s.expectedEnd && _this.s.bytesToTrim != null) {\n      sliceEnd = _this.s.bytesToTrim;\n    }\n\n    // If the remaining amount of data left is < chunkSize read the right amount of data\n    if (_this.s.options.end && _this.s.options.end - _this.s.bytesToSkip < doc.data.length()) {\n      sliceEnd = _this.s.options.end - _this.s.bytesToSkip;\n    }\n\n    if (sliceStart != null || sliceEnd != null) {\n      buf = buf.slice(sliceStart || 0, sliceEnd || buf.length);\n    }\n\n    _this.push(buf);\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction init(self) {\n  var findOneOptions = {};\n  if (self.s.readPreference) {\n    findOneOptions.readPreference = self.s.readPreference;\n  }\n  if (self.s.options && self.s.options.sort) {\n    findOneOptions.sort = self.s.options.sort;\n  }\n  if (self.s.options && self.s.options.skip) {\n    findOneOptions.skip = self.s.options.skip;\n  }\n\n  self.s.files.findOne(self.s.filter, findOneOptions, function (error, doc) {\n    if (error) {\n      return __handleError(self, error);\n    }\n    if (!doc) {\n      var identifier = self.s.filter._id ? self.s.filter._id.toString() : self.s.filter.filename;\n      var errmsg = 'FileNotFound: file ' + identifier + ' was not found';\n      var err = new Error(errmsg);\n      err.code = 'ENOENT';\n      return __handleError(self, err);\n    }\n\n    // If document is empty, kill the stream immediately and don't\n    // execute any reads\n    if (doc.length <= 0) {\n      self.push(null);\n      return;\n    }\n\n    if (self.destroyed) {\n      // If user destroys the stream before we have a cursor, wait\n      // until the query is done to say we're 'closed' because we can't\n      // cancel a query.\n      self.emit('close');\n      return;\n    }\n\n    self.s.cursor = self.s.chunks.find({ files_id: doc._id }).sort({ n: 1 });\n    if (self.s.readPreference) {\n      self.s.cursor.setReadPreference(self.s.readPreference);\n    }\n\n    self.s.expectedEnd = Math.ceil(doc.length / doc.chunkSize);\n    self.s.file = doc;\n    self.s.bytesToSkip = handleStartOption(self, doc, self.s.cursor, self.s.options);\n    self.s.bytesToTrim = handleEndOption(self, doc, self.s.cursor, self.s.options);\n    self.emit('file', doc);\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction waitForFile(_this, callback) {\n  if (_this.s.file) {\n    return callback();\n  }\n\n  if (!_this.s.init) {\n    init(_this);\n    _this.s.init = true;\n  }\n\n  _this.once('file', function () {\n    callback();\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction handleStartOption(stream, doc, cursor, options) {\n  if (options && options.start != null) {\n    if (options.start > doc.length) {\n      throw new Error('Stream start (' + options.start + ') must not be ' + 'more than the length of the file (' + doc.length + ')');\n    }\n    if (options.start < 0) {\n      throw new Error('Stream start (' + options.start + ') must not be ' + 'negative');\n    }\n    if (options.end != null && options.end < options.start) {\n      throw new Error('Stream start (' + options.start + ') must not be ' + 'greater than stream end (' + options.end + ')');\n    }\n\n    cursor.skip(Math.floor(options.start / doc.chunkSize));\n\n    stream.s.bytesRead = Math.floor(options.start / doc.chunkSize) * doc.chunkSize;\n    stream.s.expected = Math.floor(options.start / doc.chunkSize);\n\n    return options.start - stream.s.bytesRead;\n  }\n}\n\n/**\n * @ignore\n */\n\nfunction handleEndOption(stream, doc, cursor, options) {\n  if (options && options.end != null) {\n    if (options.end > doc.length) {\n      throw new Error('Stream end (' + options.end + ') must not be ' + 'more than the length of the file (' + doc.length + ')');\n    }\n    if (options.start < 0) {\n      throw new Error('Stream end (' + options.end + ') must not be ' + 'negative');\n    }\n\n    var start = options.start != null ? Math.floor(options.start / doc.chunkSize) : 0;\n\n    cursor.limit(Math.ceil(options.end / doc.chunkSize) - start);\n\n    stream.s.expectedEnd = Math.ceil(options.end / doc.chunkSize);\n\n    return Math.ceil(options.end / doc.chunkSize) * doc.chunkSize - options.end;\n  }\n}\n\n/**\n * @ignore\n */\n\nfunction __handleError(_this, error) {\n  _this.emit('error', error);\n}\n\n//# sourceMappingURL=download-compiled.js.map"]}