{"version":3,"sources":["grid_store-compiled.js"],"names":[],"mappings":"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","file":"grid_store-compiled-compiled.js","sourcesContent":["\"use strict\";\n\n/**\n * @fileOverview GridFS is a tool for MongoDB to store files to the database.\n * Because of the restrictions of the object size the database can hold, a\n * facility to split a file into several chunks is needed. The {@link GridStore}\n * class offers a simplified api to interact with files while managing the\n * chunks of split files behind the scenes. More information about GridFS can be\n * found <a href=\"http://www.mongodb.org/display/DOCS/GridFS\">here</a>.\n *\n * @example\n * var MongoClient = require('mongodb').MongoClient,\n *   GridStore = require('mongodb').GridStore,\n *   ObjectID = require('mongodb').ObjectID,\n *   test = require('assert');\n *\n * // Connection url\n * var url = 'mongodb://localhost:27017/test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, db) {\n *   var gridStore = new GridStore(db, null, \"w\");\n *   gridStore.open(function(err, gridStore) {\n *     gridStore.write(\"hello world!\", function(err, gridStore) {\n *       gridStore.close(function(err, result) {\n *\n *         // Let's read the file using object Id\n *         GridStore.read(db, result._id, function(err, data) {\n *           test.equal('hello world!', data);\n *           db.close();\n *           test.done();\n *         });\n *       });\n *     });\n *   });\n * });\n */\n\nvar Chunk = require('./chunk'),\n    ObjectID = require('mongodb-core').BSON.ObjectID,\n    ReadPreference = require('../read_preference'),\n    Buffer = require('buffer').Buffer,\n    Collection = require('../collection'),\n    fs = require('fs'),\n    f = require('util').format,\n    util = require('util'),\n    Define = require('../metadata'),\n    MongoError = require('mongodb-core').MongoError,\n    inherits = util.inherits,\n    Duplex = require('stream').Duplex || require('readable-stream').Duplex,\n    shallowClone = require('../utils').shallowClone;\n\nvar REFERENCE_BY_FILENAME = 0,\n    REFERENCE_BY_ID = 1;\n\n/**\n * Namespace provided by the mongodb-core and node.js\n * @external Duplex\n */\n\n/**\n * Create a new GridStore instance\n *\n * Modes\n *  - **\"r\"** - read only. This is the default mode.\n *  - **\"w\"** - write in truncate mode. Existing data will be overwriten.\n *\n * @class\n * @param {Db} db A database instance to interact with.\n * @param {object} [id] optional unique id for this file\n * @param {string} [filename] optional filename for this file, no unique constrain on the field\n * @param {string} mode set the mode for this file.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.fsync=false] Specify a file sync write concern.\n * @param {string} [options.root=null] Root collection to use. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n * @param {string} [options.content_type=null] MIME type of the file. Defaults to **{GridStore.DEFAULT_CONTENT_TYPE}**.\n * @param {number} [options.chunk_size=261120] Size for the chunk. Defaults to **{Chunk.DEFAULT_CHUNK_SIZE}**.\n * @param {object} [options.metadata=null] Arbitrary data the user wants to store.\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @property {number} chunkSize Get the gridstore chunk size.\n * @property {number} md5 The md5 checksum for this file.\n * @property {number} chunkNumber The current chunk number the gridstore has materialized into memory\n * @return {GridStore} a GridStore instance.\n * @deprecated Use GridFSBucket API instead\n */\nvar GridStore = function GridStore(db, id, filename, mode, options) {\n  if (!(this instanceof GridStore)) return new GridStore(db, id, filename, mode, options);\n  this.db = db;\n\n  // Handle options\n  if (typeof options === 'undefined') options = {};\n  // Handle mode\n  if (typeof mode === 'undefined') {\n    mode = filename;\n    filename = undefined;\n  } else if (typeof mode == 'object') {\n    options = mode;\n    mode = filename;\n    filename = undefined;\n  }\n\n  if (id && id._bsontype == 'ObjectID') {\n    this.referenceBy = REFERENCE_BY_ID;\n    this.fileId = id;\n    this.filename = filename;\n  } else if (typeof filename == 'undefined') {\n    this.referenceBy = REFERENCE_BY_FILENAME;\n    this.filename = id;\n    if (mode.indexOf('w') != null) {\n      this.fileId = new ObjectID();\n    }\n  } else {\n    this.referenceBy = REFERENCE_BY_ID;\n    this.fileId = id;\n    this.filename = filename;\n  }\n\n  // Set up the rest\n  this.mode = mode == null ? \"r\" : mode;\n  this.options = options || {};\n\n  // Opened\n  this.isOpen = false;\n\n  // Set the root if overridden\n  this.root = this.options['root'] == null ? GridStore.DEFAULT_ROOT_COLLECTION : this.options['root'];\n  this.position = 0;\n  this.readPreference = this.options.readPreference || db.options.readPreference || ReadPreference.PRIMARY;\n  this.writeConcern = _getWriteConcern(db, this.options);\n  // Set default chunk size\n  this.internalChunkSize = this.options['chunkSize'] == null ? Chunk.DEFAULT_CHUNK_SIZE : this.options['chunkSize'];\n\n  // Get the promiseLibrary\n  var promiseLibrary = this.options.promiseLibrary;\n\n  // No promise library selected fall back\n  if (!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ? global.Promise : require('es6-promise').Promise;\n  }\n\n  // Set the promiseLibrary\n  this.promiseLibrary = promiseLibrary;\n\n  Object.defineProperty(this, \"chunkSize\", { enumerable: true,\n    get: function () {\n      return this.internalChunkSize;\n    },\n    set: function (value) {\n      if (!(this.mode[0] == \"w\" && this.position == 0 && this.uploadDate == null)) {\n        this.internalChunkSize = this.internalChunkSize;\n      } else {\n        this.internalChunkSize = value;\n      }\n    }\n  });\n\n  Object.defineProperty(this, \"md5\", { enumerable: true,\n    get: function () {\n      return this.internalMd5;\n    }\n  });\n\n  Object.defineProperty(this, \"chunkNumber\", { enumerable: true,\n    get: function () {\n      return this.currentChunk && this.currentChunk.chunkNumber ? this.currentChunk.chunkNumber : null;\n    }\n  });\n};\n\nvar define = GridStore.define = new Define('Gridstore', GridStore, true);\n\n/**\n * The callback format for the Gridstore.open method\n * @callback GridStore~openCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {GridStore} gridStore The GridStore instance if the open method was successful.\n */\n\n/**\n * Opens the file from the database and initialize this object. Also creates a\n * new one if file does not exist.\n *\n * @method\n * @param {GridStore~openCallback} [callback] this will be called after executing this method\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.open = function (callback) {\n  var self = this;\n  if (this.mode != \"w\" && this.mode != \"w+\" && this.mode != \"r\") {\n    throw MongoError.create({ message: \"Illegal mode \" + this.mode, driver: true });\n  }\n\n  // We provided a callback leg\n  if (typeof callback == 'function') return open(self, callback);\n  // Return promise\n  return new self.promiseLibrary(function (resolve, reject) {\n    open(self, function (err, store) {\n      if (err) return reject(err);\n      resolve(store);\n    });\n  });\n};\n\nvar open = function (self, callback) {\n  // Get the write concern\n  var writeConcern = _getWriteConcern(self.db, self.options);\n\n  // If we are writing we need to ensure we have the right indexes for md5's\n  if (self.mode == \"w\" || self.mode == \"w+\") {\n    // Get files collection\n    var collection = self.collection();\n    // Put index on filename\n    collection.ensureIndex([['filename', 1]], writeConcern, function () {\n      // Get chunk collection\n      var chunkCollection = self.chunkCollection();\n      // Make an unique index for compatibility with mongo-cxx-driver:legacy\n      var chunkIndexOptions = shallowClone(writeConcern);\n      chunkIndexOptions.unique = true;\n      // Ensure index on chunk collection\n      chunkCollection.ensureIndex([['files_id', 1], ['n', 1]], chunkIndexOptions, function () {\n        // Open the connection\n        _open(self, writeConcern, function (err, r) {\n          if (err) return callback(err);\n          self.isOpen = true;\n          callback(err, r);\n        });\n      });\n    });\n  } else {\n    // Open the gridstore\n    _open(self, writeConcern, function (err, r) {\n      if (err) return callback(err);\n      self.isOpen = true;\n      callback(err, r);\n    });\n  }\n};\n\n// Push the definition for open\ndefine.classMethod('open', { callback: true, promise: true });\n\n/**\n * Verify if the file is at EOF.\n *\n * @method\n * @return {boolean} true if the read/write head is at the end of this file.\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.eof = function () {\n  return this.position == this.length ? true : false;\n};\n\ndefine.classMethod('eof', { callback: false, promise: false, returns: [Boolean] });\n\n/**\n * The callback result format.\n * @callback GridStore~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result from the callback.\n */\n\n/**\n * Retrieves a single character from this file.\n *\n * @method\n * @param {GridStore~resultCallback} [callback] this gets called after this method is executed. Passes null to the first parameter and the character read to the second or null to the second if the read/write head is at the end of the file.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.getc = function (callback) {\n  var self = this;\n  // We provided a callback leg\n  if (typeof callback == 'function') return eof(self, callback);\n  // Return promise\n  return new self.promiseLibrary(function (resolve, reject) {\n    eof(self, function (err, r) {\n      if (err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar eof = function (self, callback) {\n  if (self.eof()) {\n    callback(null, null);\n  } else if (self.currentChunk.eof()) {\n    nthChunk(self, self.currentChunk.chunkNumber + 1, function (err, chunk) {\n      self.currentChunk = chunk;\n      self.position = self.position + 1;\n      callback(err, self.currentChunk.getc());\n    });\n  } else {\n    self.position = self.position + 1;\n    callback(null, self.currentChunk.getc());\n  }\n};\n\ndefine.classMethod('getc', { callback: true, promise: true });\n\n/**\n * Writes a string to the file with a newline character appended at the end if\n * the given string does not have one.\n *\n * @method\n * @param {string} string the string to write.\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.puts = function (string, callback) {\n  var self = this;\n  var finalString = string.match(/\\n$/) == null ? string + \"\\n\" : string;\n  // We provided a callback leg\n  if (typeof callback == 'function') return this.write(finalString, callback);\n  // Return promise\n  return new self.promiseLibrary(function (resolve, reject) {\n    self.write(finalString, function (err, r) {\n      if (err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\ndefine.classMethod('puts', { callback: true, promise: true });\n\n/**\n * Return a modified Readable stream including a possible transform method.\n *\n * @method\n * @return {GridStoreStream}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.stream = function () {\n  return new GridStoreStream(this);\n};\n\ndefine.classMethod('stream', { callback: false, promise: false, returns: [GridStoreStream] });\n\n/**\n * Writes some data. This method will work properly only if initialized with mode \"w\" or \"w+\".\n *\n * @method\n * @param {(string|Buffer)} data the data to write.\n * @param {boolean} [close] closes this file after writing if set to true.\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.write = function write(data, close, callback) {\n  var self = this;\n  // We provided a callback leg\n  if (typeof callback == 'function') return _writeNormal(this, data, close, callback);\n  // Return promise\n  return new self.promiseLibrary(function (resolve, reject) {\n    _writeNormal(self, data, close, function (err, r) {\n      if (err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\ndefine.classMethod('write', { callback: true, promise: true });\n\n/**\n * Handles the destroy part of a stream\n *\n * @method\n * @result {null}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.destroy = function destroy() {\n  // close and do not emit any more events. queued data is not sent.\n  if (!this.writable) return;\n  this.readable = false;\n  if (this.writable) {\n    this.writable = false;\n    this._q.length = 0;\n    this.emit('close');\n  }\n};\n\ndefine.classMethod('destroy', { callback: false, promise: false });\n\n/**\n * Stores a file from the file system to the GridFS database.\n *\n * @method\n * @param {(string|Buffer|FileHandle)} file the file to store.\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.writeFile = function (file, callback) {\n  var self = this;\n  // We provided a callback leg\n  if (typeof callback == 'function') return writeFile(self, file, callback);\n  // Return promise\n  return new self.promiseLibrary(function (resolve, reject) {\n    writeFile(self, file, function (err, r) {\n      if (err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar writeFile = function (self, file, callback) {\n  if (typeof file === 'string') {\n    fs.open(file, 'r', function (err, fd) {\n      if (err) return callback(err);\n      self.writeFile(fd, callback);\n    });\n    return;\n  }\n\n  self.open(function (err, self) {\n    if (err) return callback(err, self);\n\n    fs.fstat(file, function (err, stats) {\n      if (err) return callback(err, self);\n\n      var offset = 0;\n      var index = 0;\n\n      // Write a chunk\n      var writeChunk = function () {\n        fs.read(file, self.chunkSize, offset, 'binary', function (err, data, bytesRead) {\n          if (err) return callback(err, self);\n\n          offset = offset + bytesRead;\n\n          // Create a new chunk for the data\n          var chunk = new Chunk(self, { n: index++ }, self.writeConcern);\n          chunk.write(data, function (err, chunk) {\n            if (err) return callback(err, self);\n\n            chunk.save({}, function (err) {\n              if (err) return callback(err, self);\n\n              self.position = self.position + data.length;\n\n              // Point to current chunk\n              self.currentChunk = chunk;\n\n              if (offset >= stats.size) {\n                fs.close(file);\n                self.close(function (err) {\n                  if (err) return callback(err, self);\n                  return callback(null, self);\n                });\n              } else {\n                return process.nextTick(writeChunk);\n              }\n            });\n          });\n        });\n      };\n\n      // Process the first write\n      process.nextTick(writeChunk);\n    });\n  });\n};\n\ndefine.classMethod('writeFile', { callback: true, promise: true });\n\n/**\n * Saves this file to the database. This will overwrite the old entry if it\n * already exists. This will work properly only if mode was initialized to\n * \"w\" or \"w+\".\n *\n * @method\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.close = function (callback) {\n  var self = this;\n  // We provided a callback leg\n  if (typeof callback == 'function') return close(self, callback);\n  // Return promise\n  return new self.promiseLibrary(function (resolve, reject) {\n    close(self, function (err, r) {\n      if (err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar close = function (self, callback) {\n  if (self.mode[0] == \"w\") {\n    // Set up options\n    var options = self.writeConcern;\n\n    if (self.currentChunk != null && self.currentChunk.position > 0) {\n      self.currentChunk.save({}, function (err) {\n        if (err && typeof callback == 'function') return callback(err);\n\n        self.collection(function (err, files) {\n          if (err && typeof callback == 'function') return callback(err);\n\n          // Build the mongo object\n          if (self.uploadDate != null) {\n            buildMongoObject(self, function (err, mongoObject) {\n              if (err) {\n                if (typeof callback == 'function') return callback(err);else throw err;\n              }\n\n              files.save(mongoObject, options, function (err) {\n                if (typeof callback == 'function') callback(err, mongoObject);\n              });\n            });\n          } else {\n            self.uploadDate = new Date();\n            buildMongoObject(self, function (err, mongoObject) {\n              if (err) {\n                if (typeof callback == 'function') return callback(err);else throw err;\n              }\n\n              files.save(mongoObject, options, function (err) {\n                if (typeof callback == 'function') callback(err, mongoObject);\n              });\n            });\n          }\n        });\n      });\n    } else {\n      self.collection(function (err, files) {\n        if (err && typeof callback == 'function') return callback(err);\n\n        self.uploadDate = new Date();\n        buildMongoObject(self, function (err, mongoObject) {\n          if (err) {\n            if (typeof callback == 'function') return callback(err);else throw err;\n          }\n\n          files.save(mongoObject, options, function (err) {\n            if (typeof callback == 'function') callback(err, mongoObject);\n          });\n        });\n      });\n    }\n  } else if (self.mode[0] == \"r\") {\n    if (typeof callback == 'function') callback(null, null);\n  } else {\n    if (typeof callback == 'function') callback(MongoError.create({ message: f(\"Illegal mode %s\", self.mode), driver: true }));\n  }\n};\n\ndefine.classMethod('close', { callback: true, promise: true });\n\n/**\n * The collection callback format.\n * @callback GridStore~collectionCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection} collection The collection from the command execution.\n */\n\n/**\n * Retrieve this file's chunks collection.\n *\n * @method\n * @param {GridStore~collectionCallback} callback the command callback.\n * @return {Collection}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.chunkCollection = function (callback) {\n  if (typeof callback == 'function') return this.db.collection(this.root + \".chunks\", callback);\n  return this.db.collection(this.root + \".chunks\");\n};\n\ndefine.classMethod('chunkCollection', { callback: true, promise: false, returns: [Collection] });\n\n/**\n * Deletes all the chunks of this file in the database.\n *\n * @method\n * @param {GridStore~resultCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.unlink = function (callback) {\n  var self = this;\n  // We provided a callback leg\n  if (typeof callback == 'function') return unlink(self, callback);\n  // Return promise\n  return new self.promiseLibrary(function (resolve, reject) {\n    unlink(self, function (err, r) {\n      if (err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar unlink = function (self, callback) {\n  deleteChunks(self, function (err) {\n    if (err !== null) {\n      err.message = \"at deleteChunks: \" + err.message;\n      return callback(err);\n    }\n\n    self.collection(function (err, collection) {\n      if (err !== null) {\n        err.message = \"at collection: \" + err.message;\n        return callback(err);\n      }\n\n      collection.remove({ '_id': self.fileId }, self.writeConcern, function (err) {\n        callback(err, self);\n      });\n    });\n  });\n};\n\ndefine.classMethod('unlink', { callback: true, promise: true });\n\n/**\n * Retrieves the file collection associated with this object.\n *\n * @method\n * @param {GridStore~collectionCallback} callback the command callback.\n * @return {Collection}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.collection = function (callback) {\n  if (typeof callback == 'function') this.db.collection(this.root + \".files\", callback);\n  return this.db.collection(this.root + \".files\");\n};\n\ndefine.classMethod('collection', { callback: true, promise: false, returns: [Collection] });\n\n/**\n * The readlines callback format.\n * @callback GridStore~readlinesCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {string[]} strings The array of strings returned.\n */\n\n/**\n * Read the entire file as a list of strings splitting by the provided separator.\n *\n * @method\n * @param {string} [separator] The character to be recognized as the newline separator.\n * @param {GridStore~readlinesCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.readlines = function (separator, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  if (typeof callback != 'function') args.push(callback);\n  separator = args.length ? args.shift() : \"\\n\";\n  separator = separator || \"\\n\";\n\n  // We provided a callback leg\n  if (typeof callback == 'function') return readlines(self, separator, callback);\n\n  // Return promise\n  return new self.promiseLibrary(function (resolve, reject) {\n    readlines(self, separator, function (err, r) {\n      if (err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar readlines = function (self, separator, callback) {\n  self.read(function (err, data) {\n    if (err) return callback(err);\n\n    var items = data.toString().split(separator);\n    items = items.length > 0 ? items.splice(0, items.length - 1) : [];\n    for (var i = 0; i < items.length; i++) {\n      items[i] = items[i] + separator;\n    }\n\n    callback(null, items);\n  });\n};\n\ndefine.classMethod('readlines', { callback: true, promise: true });\n\n/**\n * Deletes all the chunks of this file in the database if mode was set to \"w\" or\n * \"w+\" and resets the read/write head to the initial position.\n *\n * @method\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.rewind = function (callback) {\n  var self = this;\n  // We provided a callback leg\n  if (typeof callback == 'function') return rewind(self, callback);\n  // Return promise\n  return new self.promiseLibrary(function (resolve, reject) {\n    rewind(self, function (err, r) {\n      if (err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar rewind = function (self, callback) {\n  if (self.currentChunk.chunkNumber != 0) {\n    if (self.mode[0] == \"w\") {\n      deleteChunks(self, function (err) {\n        if (err) return callback(err);\n        self.currentChunk = new Chunk(self, { 'n': 0 }, self.writeConcern);\n        self.position = 0;\n        callback(null, self);\n      });\n    } else {\n      self.currentChunk(0, function (err, chunk) {\n        if (err) return callback(err);\n        self.currentChunk = chunk;\n        self.currentChunk.rewind();\n        self.position = 0;\n        callback(null, self);\n      });\n    }\n  } else {\n    self.currentChunk.rewind();\n    self.position = 0;\n    callback(null, self);\n  }\n};\n\ndefine.classMethod('rewind', { callback: true, promise: true });\n\n/**\n * The read callback format.\n * @callback GridStore~readCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Buffer} data The data read from the GridStore object\n */\n\n/**\n * Retrieves the contents of this file and advances the read/write head. Works with Buffers only.\n *\n * There are 3 signatures for this method:\n *\n * (callback)\n * (length, callback)\n * (length, buffer, callback)\n *\n * @method\n * @param {number} [length] the number of characters to read. Reads all the characters from the read/write head to the EOF if not specified.\n * @param {(string|Buffer)} [buffer] a string to hold temporary data. This is used for storing the string data read so far when recursively calling this method.\n * @param {GridStore~readCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.read = function (length, buffer, callback) {\n  var self = this;\n\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  if (typeof callback != 'function') args.push(callback);\n  length = args.length ? args.shift() : null;\n  buffer = args.length ? args.shift() : null;\n  // We provided a callback leg\n  if (typeof callback == 'function') return read(self, length, buffer, callback);\n  // Return promise\n  return new self.promiseLibrary(function (resolve, reject) {\n    read(self, length, buffer, function (err, r) {\n      if (err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar read = function (self, length, buffer, callback) {\n  // The data is a c-terminated string and thus the length - 1\n  var finalLength = length == null ? self.length - self.position : length;\n  var finalBuffer = buffer == null ? new Buffer(finalLength) : buffer;\n  // Add a index to buffer to keep track of writing position or apply current index\n  finalBuffer._index = buffer != null && buffer._index != null ? buffer._index : 0;\n\n  if (self.currentChunk.length() - self.currentChunk.position + finalBuffer._index >= finalLength) {\n    var slice = self.currentChunk.readSlice(finalLength - finalBuffer._index);\n    // Copy content to final buffer\n    slice.copy(finalBuffer, finalBuffer._index);\n    // Update internal position\n    self.position = self.position + finalBuffer.length;\n    // Check if we don't have a file at all\n    if (finalLength == 0 && finalBuffer.length == 0) return callback(MongoError.create({ message: \"File does not exist\", driver: true }), null);\n    // Else return data\n    return callback(null, finalBuffer);\n  }\n\n  // Read the next chunk\n  slice = self.currentChunk.readSlice(self.currentChunk.length() - self.currentChunk.position);\n  // Copy content to final buffer\n  slice.copy(finalBuffer, finalBuffer._index);\n  // Update index position\n  finalBuffer._index += slice.length;\n\n  // Load next chunk and read more\n  nthChunk(self, self.currentChunk.chunkNumber + 1, function (err, chunk) {\n    if (err) return callback(err);\n\n    if (chunk.length() > 0) {\n      self.currentChunk = chunk;\n      self.read(length, finalBuffer, callback);\n    } else {\n      if (finalBuffer._index > 0) {\n        callback(null, finalBuffer);\n      } else {\n        callback(MongoError.create({ message: \"no chunks found for file, possibly corrupt\", driver: true }), null);\n      }\n    }\n  });\n};\n\ndefine.classMethod('read', { callback: true, promise: true });\n\n/**\n * The tell callback format.\n * @callback GridStore~tellCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {number} position The current read position in the GridStore.\n */\n\n/**\n * Retrieves the position of the read/write head of this file.\n *\n * @method\n * @param {number} [length] the number of characters to read. Reads all the characters from the read/write head to the EOF if not specified.\n * @param {(string|Buffer)} [buffer] a string to hold temporary data. This is used for storing the string data read so far when recursively calling this method.\n * @param {GridStore~tellCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.tell = function (callback) {\n  var self = this;\n  // We provided a callback leg\n  if (typeof callback == 'function') return callback(null, this.position);\n  // Return promise\n  return new self.promiseLibrary(function (resolve) {\n    resolve(self.position);\n  });\n};\n\ndefine.classMethod('tell', { callback: true, promise: true });\n\n/**\n * The tell callback format.\n * @callback GridStore~gridStoreCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {GridStore} gridStore The gridStore.\n */\n\n/**\n * Moves the read/write head to a new location.\n *\n * There are 3 signatures for this method\n *\n * Seek Location Modes\n *  - **GridStore.IO_SEEK_SET**, **(default)** set the position from the start of the file.\n *  - **GridStore.IO_SEEK_CUR**, set the position from the current position in the file.\n *  - **GridStore.IO_SEEK_END**, set the position from the end of the file.\n *\n * @method\n * @param {number} [position] the position to seek to\n * @param {number} [seekLocation] seek mode. Use one of the Seek Location modes.\n * @param {GridStore~gridStoreCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.seek = function (position, seekLocation, callback) {\n  var self = this;\n\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if (typeof callback != 'function') args.push(callback);\n  seekLocation = args.length ? args.shift() : null;\n\n  // We provided a callback leg\n  if (typeof callback == 'function') return seek(self, position, seekLocation, callback);\n  // Return promise\n  return new self.promiseLibrary(function (resolve, reject) {\n    seek(self, position, seekLocation, function (err, r) {\n      if (err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar seek = function (self, position, seekLocation, callback) {\n  // Seek only supports read mode\n  if (self.mode != 'r') {\n    return callback(MongoError.create({ message: \"seek is only supported for mode r\", driver: true }));\n  }\n\n  var seekLocationFinal = seekLocation == null ? GridStore.IO_SEEK_SET : seekLocation;\n  var finalPosition = position;\n  var targetPosition = 0;\n\n  // Calculate the position\n  if (seekLocationFinal == GridStore.IO_SEEK_CUR) {\n    targetPosition = self.position + finalPosition;\n  } else if (seekLocationFinal == GridStore.IO_SEEK_END) {\n    targetPosition = self.length + finalPosition;\n  } else {\n    targetPosition = finalPosition;\n  }\n\n  // Get the chunk\n  var newChunkNumber = Math.floor(targetPosition / self.chunkSize);\n  var seekChunk = function () {\n    nthChunk(self, newChunkNumber, function (err, chunk) {\n      if (err) return callback(err, null);\n      if (chunk == null) return callback(new Error('no chunk found'));\n\n      // Set the current chunk\n      self.currentChunk = chunk;\n      self.position = targetPosition;\n      self.currentChunk.position = self.position % self.chunkSize;\n      callback(err, self);\n    });\n  };\n\n  seekChunk();\n};\n\ndefine.classMethod('seek', { callback: true, promise: true });\n\n/**\n * @ignore\n */\nvar _open = function (self, options, callback) {\n  var collection = self.collection();\n  // Create the query\n  var query = self.referenceBy == REFERENCE_BY_ID ? { _id: self.fileId } : { filename: self.filename };\n  query = null == self.fileId && self.filename == null ? null : query;\n  options.readPreference = self.readPreference;\n\n  // Fetch the chunks\n  if (query != null) {\n    collection.findOne(query, options, function (err, doc) {\n      if (err) return error(err);\n\n      // Check if the collection for the files exists otherwise prepare the new one\n      if (doc != null) {\n        self.fileId = doc._id;\n        // Prefer a new filename over the existing one if this is a write\n        self.filename = self.mode == 'r' || self.filename == undefined ? doc.filename : self.filename;\n        self.contentType = doc.contentType;\n        self.internalChunkSize = doc.chunkSize;\n        self.uploadDate = doc.uploadDate;\n        self.aliases = doc.aliases;\n        self.length = doc.length;\n        self.metadata = doc.metadata;\n        self.internalMd5 = doc.md5;\n      } else if (self.mode != 'r') {\n        self.fileId = self.fileId == null ? new ObjectID() : self.fileId;\n        self.contentType = GridStore.DEFAULT_CONTENT_TYPE;\n        self.internalChunkSize = self.internalChunkSize == null ? Chunk.DEFAULT_CHUNK_SIZE : self.internalChunkSize;\n        self.length = 0;\n      } else {\n        self.length = 0;\n        var txtId = self.fileId._bsontype == \"ObjectID\" ? self.fileId.toHexString() : self.fileId;\n        return error(MongoError.create({ message: f(\"file with id %s not opened for writing\", self.referenceBy == REFERENCE_BY_ID ? txtId : self.filename), driver: true }), self);\n      }\n\n      // Process the mode of the object\n      if (self.mode == \"r\") {\n        nthChunk(self, 0, options, function (err, chunk) {\n          if (err) return error(err);\n          self.currentChunk = chunk;\n          self.position = 0;\n          callback(null, self);\n        });\n      } else if (self.mode == \"w\" && doc) {\n        // Delete any existing chunks\n        deleteChunks(self, options, function (err) {\n          if (err) return error(err);\n          self.currentChunk = new Chunk(self, { 'n': 0 }, self.writeConcern);\n          self.contentType = self.options['content_type'] == null ? self.contentType : self.options['content_type'];\n          self.internalChunkSize = self.options['chunk_size'] == null ? self.internalChunkSize : self.options['chunk_size'];\n          self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n          self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n          self.position = 0;\n          callback(null, self);\n        });\n      } else if (self.mode == \"w\") {\n        self.currentChunk = new Chunk(self, { 'n': 0 }, self.writeConcern);\n        self.contentType = self.options['content_type'] == null ? self.contentType : self.options['content_type'];\n        self.internalChunkSize = self.options['chunk_size'] == null ? self.internalChunkSize : self.options['chunk_size'];\n        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n        self.position = 0;\n        callback(null, self);\n      } else if (self.mode == \"w+\") {\n        nthChunk(self, lastChunkNumber(self), options, function (err, chunk) {\n          if (err) return error(err);\n          // Set the current chunk\n          self.currentChunk = chunk == null ? new Chunk(self, { 'n': 0 }, self.writeConcern) : chunk;\n          self.currentChunk.position = self.currentChunk.data.length();\n          self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n          self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n          self.position = self.length;\n          callback(null, self);\n        });\n      }\n    });\n  } else {\n    // Write only mode\n    self.fileId = null == self.fileId ? new ObjectID() : self.fileId;\n    self.contentType = GridStore.DEFAULT_CONTENT_TYPE;\n    self.internalChunkSize = self.internalChunkSize == null ? Chunk.DEFAULT_CHUNK_SIZE : self.internalChunkSize;\n    self.length = 0;\n\n    // No file exists set up write mode\n    if (self.mode == \"w\") {\n      // Delete any existing chunks\n      deleteChunks(self, options, function (err) {\n        if (err) return error(err);\n        self.currentChunk = new Chunk(self, { 'n': 0 }, self.writeConcern);\n        self.contentType = self.options['content_type'] == null ? self.contentType : self.options['content_type'];\n        self.internalChunkSize = self.options['chunk_size'] == null ? self.internalChunkSize : self.options['chunk_size'];\n        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n        self.position = 0;\n        callback(null, self);\n      });\n    } else if (self.mode == \"w+\") {\n      nthChunk(self, lastChunkNumber(self), options, function (err, chunk) {\n        if (err) return error(err);\n        // Set the current chunk\n        self.currentChunk = chunk == null ? new Chunk(self, { 'n': 0 }, self.writeConcern) : chunk;\n        self.currentChunk.position = self.currentChunk.data.length();\n        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n        self.position = self.length;\n        callback(null, self);\n      });\n    }\n  }\n\n  // only pass error to callback once\n  function error(err) {\n    if (error.err) return;\n    callback(error.err = err);\n  }\n};\n\n/**\n * @ignore\n */\nvar writeBuffer = function (self, buffer, close, callback) {\n  if (typeof close === \"function\") {\n    callback = close;close = null;\n  }\n  var finalClose = typeof close == 'boolean' ? close : false;\n\n  if (self.mode != \"w\") {\n    callback(MongoError.create({ message: f(\"file with id %s not opened for writing\", self.referenceBy == REFERENCE_BY_ID ? self.referenceBy : self.filename), driver: true }), null);\n  } else {\n    if (self.currentChunk.position + buffer.length >= self.chunkSize) {\n      // Write out the current Chunk and then keep writing until we have less data left than a chunkSize left\n      // to a new chunk (recursively)\n      var previousChunkNumber = self.currentChunk.chunkNumber;\n      var leftOverDataSize = self.chunkSize - self.currentChunk.position;\n      var firstChunkData = buffer.slice(0, leftOverDataSize);\n      var leftOverData = buffer.slice(leftOverDataSize);\n      // A list of chunks to write out\n      var chunksToWrite = [self.currentChunk.write(firstChunkData)];\n      // If we have more data left than the chunk size let's keep writing new chunks\n      while (leftOverData.length >= self.chunkSize) {\n        // Create a new chunk and write to it\n        var newChunk = new Chunk(self, { 'n': previousChunkNumber + 1 }, self.writeConcern);\n        firstChunkData = leftOverData.slice(0, self.chunkSize);\n        leftOverData = leftOverData.slice(self.chunkSize);\n        // Update chunk number\n        previousChunkNumber = previousChunkNumber + 1;\n        // Write data\n        newChunk.write(firstChunkData);\n        // Push chunk to save list\n        chunksToWrite.push(newChunk);\n      }\n\n      // Set current chunk with remaining data\n      self.currentChunk = new Chunk(self, { 'n': previousChunkNumber + 1 }, self.writeConcern);\n      // If we have left over data write it\n      if (leftOverData.length > 0) self.currentChunk.write(leftOverData);\n\n      // Update the position for the gridstore\n      self.position = self.position + buffer.length;\n      // Total number of chunks to write\n      var numberOfChunksToWrite = chunksToWrite.length;\n\n      for (var i = 0; i < chunksToWrite.length; i++) {\n        chunksToWrite[i].save({}, function (err) {\n          if (err) return callback(err);\n\n          numberOfChunksToWrite = numberOfChunksToWrite - 1;\n\n          if (numberOfChunksToWrite <= 0) {\n            // We care closing the file before returning\n            if (finalClose) {\n              return self.close(function (err) {\n                callback(err, self);\n              });\n            }\n\n            // Return normally\n            return callback(null, self);\n          }\n        });\n      }\n    } else {\n      // Update the position for the gridstore\n      self.position = self.position + buffer.length;\n      // We have less data than the chunk size just write it and callback\n      self.currentChunk.write(buffer);\n      // We care closing the file before returning\n      if (finalClose) {\n        return self.close(function (err) {\n          callback(err, self);\n        });\n      }\n      // Return normally\n      return callback(null, self);\n    }\n  }\n};\n\n/**\n * Creates a mongoDB object representation of this object.\n *\n *        <pre><code>\n *        {\n *          '_id' : , // {number} id for this file\n *          'filename' : , // {string} name for this file\n *          'contentType' : , // {string} mime type for this file\n *          'length' : , // {number} size of this file?\n *          'chunksize' : , // {number} chunk size used by this file\n *          'uploadDate' : , // {Date}\n *          'aliases' : , // {array of string}\n *          'metadata' : , // {string}\n *        }\n *        </code></pre>\n *\n * @ignore\n */\nvar buildMongoObject = function (self, callback) {\n  // Calcuate the length\n  var mongoObject = {\n    '_id': self.fileId,\n    'filename': self.filename,\n    'contentType': self.contentType,\n    'length': self.position ? self.position : 0,\n    'chunkSize': self.chunkSize,\n    'uploadDate': self.uploadDate,\n    'aliases': self.aliases,\n    'metadata': self.metadata\n  };\n\n  var md5Command = { filemd5: self.fileId, root: self.root };\n  self.db.command(md5Command, function (err, results) {\n    if (err) return callback(err);\n\n    mongoObject.md5 = results.md5;\n    callback(null, mongoObject);\n  });\n};\n\n/**\n * Gets the nth chunk of this file.\n * @ignore\n */\nvar nthChunk = function (self, chunkNumber, options, callback) {\n  if (typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || self.writeConcern;\n  options.readPreference = self.readPreference;\n  // Get the nth chunk\n  self.chunkCollection().findOne({ 'files_id': self.fileId, 'n': chunkNumber }, options, function (err, chunk) {\n    if (err) return callback(err);\n\n    var finalChunk = chunk == null ? {} : chunk;\n    callback(null, new Chunk(self, finalChunk, self.writeConcern));\n  });\n};\n\n/**\n * @ignore\n */\nvar lastChunkNumber = function (self) {\n  return Math.floor((self.length ? self.length - 1 : 0) / self.chunkSize);\n};\n\n/**\n * Deletes all the chunks of this file in the database.\n *\n * @ignore\n */\nvar deleteChunks = function (self, options, callback) {\n  if (typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || self.writeConcern;\n\n  if (self.fileId != null) {\n    self.chunkCollection().remove({ 'files_id': self.fileId }, options, function (err) {\n      if (err) return callback(err, false);\n      callback(null, true);\n    });\n  } else {\n    callback(null, true);\n  }\n};\n\n/**\n* The collection to be used for holding the files and chunks collection.\n*\n* @classconstant DEFAULT_ROOT_COLLECTION\n**/\nGridStore.DEFAULT_ROOT_COLLECTION = 'fs';\n\n/**\n* Default file mime type\n*\n* @classconstant DEFAULT_CONTENT_TYPE\n**/\nGridStore.DEFAULT_CONTENT_TYPE = 'binary/octet-stream';\n\n/**\n* Seek mode where the given length is absolute.\n*\n* @classconstant IO_SEEK_SET\n**/\nGridStore.IO_SEEK_SET = 0;\n\n/**\n* Seek mode where the given length is an offset to the current read/write head.\n*\n* @classconstant IO_SEEK_CUR\n**/\nGridStore.IO_SEEK_CUR = 1;\n\n/**\n* Seek mode where the given length is an offset to the end of the file.\n*\n* @classconstant IO_SEEK_END\n**/\nGridStore.IO_SEEK_END = 2;\n\n/**\n * Checks if a file exists in the database.\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {string} name The name of the file to look for.\n * @param {string} [rootCollection] The root collection that holds the files and chunks collection. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {GridStore~resultCallback} [callback] result from exists.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.exist = function (db, fileIdObject, rootCollection, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  if (typeof callback != 'function') args.push(callback);\n  rootCollection = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary;\n\n  // No promise library selected fall back\n  if (!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ? global.Promise : require('es6-promise').Promise;\n  }\n\n  // We provided a callback leg\n  if (typeof callback == 'function') return exists(db, fileIdObject, rootCollection, options, callback);\n  // Return promise\n  return new promiseLibrary(function (resolve, reject) {\n    exists(db, fileIdObject, rootCollection, options, function (err, r) {\n      if (err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar exists = function (db, fileIdObject, rootCollection, options, callback) {\n  // Establish read preference\n  var readPreference = options.readPreference || ReadPreference.PRIMARY;\n  // Fetch collection\n  var rootCollectionFinal = rootCollection != null ? rootCollection : GridStore.DEFAULT_ROOT_COLLECTION;\n  db.collection(rootCollectionFinal + \".files\", function (err, collection) {\n    if (err) return callback(err);\n\n    // Build query\n    var query = typeof fileIdObject == 'string' || Object.prototype.toString.call(fileIdObject) == '[object RegExp]' ? { 'filename': fileIdObject } : { '_id': fileIdObject }; // Attempt to locate file\n\n    // We have a specific query\n    if (fileIdObject != null && typeof fileIdObject == 'object' && Object.prototype.toString.call(fileIdObject) != '[object RegExp]') {\n      query = fileIdObject;\n    }\n\n    // Check if the entry exists\n    collection.findOne(query, { readPreference: readPreference }, function (err, item) {\n      if (err) return callback(err);\n      callback(null, item == null ? false : true);\n    });\n  });\n};\n\ndefine.staticMethod('exist', { callback: true, promise: true });\n\n/**\n * Gets the list of files stored in the GridFS.\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {string} [rootCollection] The root collection that holds the files and chunks collection. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {GridStore~resultCallback} [callback] result from exists.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.list = function (db, rootCollection, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if (typeof callback != 'function') args.push(callback);\n  rootCollection = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary;\n\n  // No promise library selected fall back\n  if (!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ? global.Promise : require('es6-promise').Promise;\n  }\n\n  // We provided a callback leg\n  if (typeof callback == 'function') return list(db, rootCollection, options, callback);\n  // Return promise\n  return new promiseLibrary(function (resolve, reject) {\n    list(db, rootCollection, options, function (err, r) {\n      if (err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar list = function (db, rootCollection, options, callback) {\n  // Ensure we have correct values\n  if (rootCollection != null && typeof rootCollection == 'object') {\n    options = rootCollection;\n    rootCollection = null;\n  }\n\n  // Establish read preference\n  var readPreference = options.readPreference || ReadPreference.PRIMARY;\n  // Check if we are returning by id not filename\n  var byId = options['id'] != null ? options['id'] : false;\n  // Fetch item\n  var rootCollectionFinal = rootCollection != null ? rootCollection : GridStore.DEFAULT_ROOT_COLLECTION;\n  var items = [];\n  db.collection(rootCollectionFinal + \".files\", function (err, collection) {\n    if (err) return callback(err);\n\n    collection.find({}, { readPreference: readPreference }, function (err, cursor) {\n      if (err) return callback(err);\n\n      cursor.each(function (err, item) {\n        if (item != null) {\n          items.push(byId ? item._id : item.filename);\n        } else {\n          callback(err, items);\n        }\n      });\n    });\n  });\n};\n\ndefine.staticMethod('list', { callback: true, promise: true });\n\n/**\n * Reads the contents of a file.\n *\n * This method has the following signatures\n *\n * (db, name, callback)\n * (db, name, length, callback)\n * (db, name, length, offset, callback)\n * (db, name, length, offset, options, callback)\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {string} name The name of the file.\n * @param {number} [length] The size of data to read.\n * @param {number} [offset] The offset from the head of the file of which to start reading from.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {GridStore~readCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.read = function (db, name, length, offset, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  if (typeof callback != 'function') args.push(callback);\n  length = args.length ? args.shift() : null;\n  offset = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : null;\n  options = options || {};\n\n  // Get the promiseLibrary\n  var promiseLibrary = options ? options.promiseLibrary : null;\n\n  // No promise library selected fall back\n  if (!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ? global.Promise : require('es6-promise').Promise;\n  }\n\n  // We provided a callback leg\n  if (typeof callback == 'function') return readStatic(db, name, length, offset, options, callback);\n  // Return promise\n  return new promiseLibrary(function (resolve, reject) {\n    readStatic(db, name, length, offset, options, function (err, r) {\n      if (err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar readStatic = function (db, name, length, offset, options, callback) {\n  new GridStore(db, name, \"r\", options).open(function (err, gridStore) {\n    if (err) return callback(err);\n    // Make sure we are not reading out of bounds\n    if (offset && offset >= gridStore.length) return callback(\"offset larger than size of file\", null);\n    if (length && length > gridStore.length) return callback(\"length is larger than the size of the file\", null);\n    if (offset && length && offset + length > gridStore.length) return callback(\"offset and length is larger than the size of the file\", null);\n\n    if (offset != null) {\n      gridStore.seek(offset, function (err, gridStore) {\n        if (err) return callback(err);\n        gridStore.read(length, callback);\n      });\n    } else {\n      gridStore.read(length, callback);\n    }\n  });\n};\n\ndefine.staticMethod('read', { callback: true, promise: true });\n\n/**\n * Read the entire file as a list of strings splitting by the provided separator.\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {(String|object)} name the name of the file.\n * @param {string} [separator] The character to be recognized as the newline separator.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {GridStore~readlinesCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.readlines = function (db, name, separator, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  if (typeof callback != 'function') args.push(callback);\n  separator = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : null;\n  options = options || {};\n\n  // Get the promiseLibrary\n  var promiseLibrary = options ? options.promiseLibrary : null;\n\n  // No promise library selected fall back\n  if (!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ? global.Promise : require('es6-promise').Promise;\n  }\n\n  // We provided a callback leg\n  if (typeof callback == 'function') return readlinesStatic(db, name, separator, options, callback);\n  // Return promise\n  return new promiseLibrary(function (resolve, reject) {\n    readlinesStatic(db, name, separator, options, function (err, r) {\n      if (err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar readlinesStatic = function (db, name, separator, options, callback) {\n  var finalSeperator = separator == null ? \"\\n\" : separator;\n  new GridStore(db, name, \"r\", options).open(function (err, gridStore) {\n    if (err) return callback(err);\n    gridStore.readlines(finalSeperator, callback);\n  });\n};\n\ndefine.staticMethod('readlines', { callback: true, promise: true });\n\n/**\n * Deletes the chunks and metadata information of a file from GridFS.\n *\n * @method\n * @static\n * @param {Db} db The database to query.\n * @param {(string|array)} names The name/names of the files to delete.\n * @param {object} [options=null] Optional settings.\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {GridStore~resultCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.unlink = function (db, names, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  if (typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary;\n\n  // No promise library selected fall back\n  if (!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ? global.Promise : require('es6-promise').Promise;\n  }\n\n  // We provided a callback leg\n  if (typeof callback == 'function') return unlinkStatic(self, db, names, options, callback);\n\n  // Return promise\n  return new promiseLibrary(function (resolve, reject) {\n    unlinkStatic(self, db, names, options, function (err, r) {\n      if (err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar unlinkStatic = function (self, db, names, options, callback) {\n  // Get the write concern\n  var writeConcern = _getWriteConcern(db, options);\n\n  // List of names\n  if (names.constructor == Array) {\n    var tc = 0;\n    for (var i = 0; i < names.length; i++) {\n      ++tc;\n      GridStore.unlink(db, names[i], options, function () {\n        if (--tc == 0) {\n          callback(null, self);\n        }\n      });\n    }\n  } else {\n    new GridStore(db, names, \"w\", options).open(function (err, gridStore) {\n      if (err) return callback(err);\n      deleteChunks(gridStore, function (err) {\n        if (err) return callback(err);\n        gridStore.collection(function (err, collection) {\n          if (err) return callback(err);\n          collection.remove({ '_id': gridStore.fileId }, writeConcern, function (err) {\n            callback(err, self);\n          });\n        });\n      });\n    });\n  }\n};\n\ndefine.staticMethod('unlink', { callback: true, promise: true });\n\n/**\n *  @ignore\n */\nvar _writeNormal = function (self, data, close, callback) {\n  // If we have a buffer write it using the writeBuffer method\n  if (Buffer.isBuffer(data)) {\n    return writeBuffer(self, data, close, callback);\n  } else {\n    return writeBuffer(self, new Buffer(data, 'binary'), close, callback);\n  }\n};\n\n/**\n * @ignore\n */\nvar _setWriteConcernHash = function (options) {\n  var finalOptions = {};\n  if (options.w != null) finalOptions.w = options.w;\n  if (options.journal == true) finalOptions.j = options.journal;\n  if (options.j == true) finalOptions.j = options.j;\n  if (options.fsync == true) finalOptions.fsync = options.fsync;\n  if (options.wtimeout != null) finalOptions.wtimeout = options.wtimeout;\n  return finalOptions;\n};\n\n/**\n * @ignore\n */\nvar _getWriteConcern = function (self, options) {\n  // Final options\n  var finalOptions = { w: 1 };\n  options = options || {};\n\n  // Local options verification\n  if (options.w != null || typeof options.j == 'boolean' || typeof options.journal == 'boolean' || typeof options.fsync == 'boolean') {\n    finalOptions = _setWriteConcernHash(options);\n  } else if (options.safe != null && typeof options.safe == 'object') {\n    finalOptions = _setWriteConcernHash(options.safe);\n  } else if (typeof options.safe == \"boolean\") {\n    finalOptions = { w: options.safe ? 1 : 0 };\n  } else if (self.options.w != null || typeof self.options.j == 'boolean' || typeof self.options.journal == 'boolean' || typeof self.options.fsync == 'boolean') {\n    finalOptions = _setWriteConcernHash(self.options);\n  } else if (self.safe && (self.safe.w != null || typeof self.safe.j == 'boolean' || typeof self.safe.journal == 'boolean' || typeof self.safe.fsync == 'boolean')) {\n    finalOptions = _setWriteConcernHash(self.safe);\n  } else if (typeof self.safe == \"boolean\") {\n    finalOptions = { w: self.safe ? 1 : 0 };\n  }\n\n  // Ensure we don't have an invalid combination of write concerns\n  if (finalOptions.w < 1 && (finalOptions.journal == true || finalOptions.j == true || finalOptions.fsync == true)) throw MongoError.create({ message: \"No acknowledgement using w < 1 cannot be combined with journal:true or fsync:true\", driver: true });\n\n  // Return the options\n  return finalOptions;\n};\n\n/**\n * Create a new GridStoreStream instance (INTERNAL TYPE, do not instantiate directly)\n *\n * @class\n * @extends external:Duplex\n * @return {GridStoreStream} a GridStoreStream instance.\n * @deprecated Use GridFSBucket API instead\n */\nvar GridStoreStream = function (gs) {\n  // Initialize the duplex stream\n  Duplex.call(this);\n\n  // Get the gridstore\n  this.gs = gs;\n\n  // End called\n  this.endCalled = false;\n\n  // If we have a seek\n  this.totalBytesToRead = this.gs.length - this.gs.position;\n  this.seekPosition = this.gs.position;\n};\n\n//\n// Inherit duplex\ninherits(GridStoreStream, Duplex);\n\nGridStoreStream.prototype._pipe = GridStoreStream.prototype.pipe;\n\n// Set up override\nGridStoreStream.prototype.pipe = function (destination) {\n  var self = this;\n\n  // Only open gridstore if not already open\n  if (!self.gs.isOpen) {\n    self.gs.open(function (err) {\n      if (err) return self.emit('error', err);\n      self.totalBytesToRead = self.gs.length - self.gs.position;\n      self._pipe.apply(self, [destination]);\n    });\n  } else {\n    self.totalBytesToRead = self.gs.length - self.gs.position;\n    self._pipe.apply(self, [destination]);\n  }\n\n  return destination;\n};\n\n// Called by stream\nGridStoreStream.prototype._read = function () {\n  var self = this;\n\n  var read = function () {\n    // Read data\n    self.gs.read(length, function (err, buffer) {\n      if (err && !self.endCalled) return self.emit('error', err);\n\n      // Stream is closed\n      if (self.endCalled || buffer == null) return self.push(null);\n      // Remove bytes read\n      if (buffer.length <= self.totalBytesToRead) {\n        self.totalBytesToRead = self.totalBytesToRead - buffer.length;\n        self.push(buffer);\n      } else if (buffer.length > self.totalBytesToRead) {\n        self.totalBytesToRead = self.totalBytesToRead - buffer._index;\n        self.push(buffer.slice(0, buffer._index));\n      }\n\n      // Finished reading\n      if (self.totalBytesToRead <= 0) {\n        self.endCalled = true;\n      }\n    });\n  };\n\n  // Set read length\n  var length = self.gs.length < self.gs.chunkSize ? self.gs.length - self.seekPosition : self.gs.chunkSize;\n  if (!self.gs.isOpen) {\n    self.gs.open(function (err) {\n      self.totalBytesToRead = self.gs.length - self.gs.position;\n      if (err) return self.emit('error', err);\n      read();\n    });\n  } else {\n    read();\n  }\n};\n\nGridStoreStream.prototype.destroy = function () {\n  this.pause();\n  this.endCalled = true;\n  this.gs.close();\n  this.emit('end');\n};\n\nGridStoreStream.prototype.write = function (chunk) {\n  var self = this;\n  if (self.endCalled) return self.emit('error', MongoError.create({ message: 'attempting to write to stream after end called', driver: true }));\n  // Do we have to open the gridstore\n  if (!self.gs.isOpen) {\n    self.gs.open(function () {\n      self.gs.isOpen = true;\n      self.gs.write(chunk, function () {\n        process.nextTick(function () {\n          self.emit('drain');\n        });\n      });\n    });\n    return false;\n  } else {\n    self.gs.write(chunk, function () {\n      self.emit('drain');\n    });\n    return true;\n  }\n};\n\nGridStoreStream.prototype.end = function (chunk, encoding, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  if (typeof callback != 'function') args.push(callback);\n  chunk = args.length ? args.shift() : null;\n  encoding = args.length ? args.shift() : null;\n  self.endCalled = true;\n\n  if (chunk) {\n    self.gs.write(chunk, function () {\n      self.gs.close(function () {\n        if (typeof callback == 'function') callback();\n        self.emit('end');\n      });\n    });\n  }\n\n  self.gs.close(function () {\n    if (typeof callback == 'function') callback();\n    self.emit('end');\n  });\n};\n\n/**\n * The read() method pulls some data out of the internal buffer and returns it. If there is no data available, then it will return null.\n * @function external:Duplex#read\n * @param {number} size Optional argument to specify how much data to read.\n * @return {(String | Buffer | null)}\n */\n\n/**\n * Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects.\n * @function external:Duplex#setEncoding\n * @param {string} encoding The encoding to use.\n * @return {null}\n */\n\n/**\n * This method will cause the readable stream to resume emitting data events.\n * @function external:Duplex#resume\n * @return {null}\n */\n\n/**\n * This method will cause a stream in flowing-mode to stop emitting data events. Any data that becomes available will remain in the internal buffer.\n * @function external:Duplex#pause\n * @return {null}\n */\n\n/**\n * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream.\n * @function external:Duplex#pipe\n * @param {Writable} destination The destination for writing data\n * @param {object} [options] Pipe options\n * @return {null}\n */\n\n/**\n * This method will remove the hooks set up for a previous pipe() call.\n * @function external:Duplex#unpipe\n * @param {Writable} [destination] The destination for writing data\n * @return {null}\n */\n\n/**\n * This is useful in certain cases where a stream is being consumed by a parser, which needs to \"un-consume\" some data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party.\n * @function external:Duplex#unshift\n * @param {(Buffer|string)} chunk Chunk of data to unshift onto the read queue.\n * @return {null}\n */\n\n/**\n * Versions of Node prior to v0.10 had streams that did not implement the entire Streams API as it is today. (See \"Compatibility\" below for more information.)\n * @function external:Duplex#wrap\n * @param {Stream} stream An \"old style\" readable stream.\n * @return {null}\n */\n\n/**\n * This method writes some data to the underlying system, and calls the supplied callback once the data has been fully handled.\n * @function external:Duplex#write\n * @param {(string|Buffer)} chunk The data to write\n * @param {string} encoding The encoding, if chunk is a String\n * @param {function} callback Callback for when this chunk of data is flushed\n * @return {boolean}\n */\n\n/**\n * Call this method when no more data will be written to the stream. If supplied, the callback is attached as a listener on the finish event.\n * @function external:Duplex#end\n * @param {(string|Buffer)} chunk The data to write\n * @param {string} encoding The encoding, if chunk is a String\n * @param {function} callback Callback for when this chunk of data is flushed\n * @return {null}\n */\n\n/**\n * GridStoreStream stream data event, fired for each document in the cursor.\n *\n * @event GridStoreStream#data\n * @type {object}\n */\n\n/**\n * GridStoreStream stream end event\n *\n * @event GridStoreStream#end\n * @type {null}\n */\n\n/**\n * GridStoreStream stream close event\n *\n * @event GridStoreStream#close\n * @type {null}\n */\n\n/**\n * GridStoreStream stream readable event\n *\n * @event GridStoreStream#readable\n * @type {null}\n */\n\n/**\n * GridStoreStream stream drain event\n *\n * @event GridStoreStream#drain\n * @type {null}\n */\n\n/**\n * GridStoreStream stream finish event\n *\n * @event GridStoreStream#finish\n * @type {null}\n */\n\n/**\n * GridStoreStream stream pipe event\n *\n * @event GridStoreStream#pipe\n * @type {null}\n */\n\n/**\n * GridStoreStream stream unpipe event\n *\n * @event GridStoreStream#unpipe\n * @type {null}\n */\n\n/**\n * GridStoreStream stream error event\n *\n * @event GridStoreStream#error\n * @type {null}\n */\n\n/**\n * @ignore\n */\nmodule.exports = GridStore;\n\n//# sourceMappingURL=grid_store-compiled.js.map"]}