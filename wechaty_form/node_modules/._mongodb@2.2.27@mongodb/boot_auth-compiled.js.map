{"version":3,"sources":["boot_auth.js"],"names":[],"mappings":"AAAA,IAAI,iBAAiB,QAAQ,0BAAR,EAAoC,OAAzD;AAAA,IACE,IAAI,QAAQ,MAAR,EAAgB,MADtB;;AAGA,IAAI,YAAY;AACd,UAAQ;AACN,aAAS,YAAY,mCADf;AAEN,UAAM,IAFA;AAGN,aAAS;AAHH,GADM;AAMd,UAAQ;AACN,aAAS;AADH;AANM,CAAhB;;AAWA;AACA,IAAI,QAAQ,CAAC;AACX,WAAS;AACP,aAAS,WADF,EACe,MAAM,KADrB;AAEP,YAAQ,EAAE,gBAAF,EAAoB,SAApB;AAFD;AADE,CAAD,EAKT;AACD,WAAS;AACP,aAAS,WADF,EACe,MAAM,KADrB;AAEP,YAAQ,EAAE,gBAAF,EAAoB,SAApB;AAFD;AADR,CALS,EAUT;AACD,WAAS;AACP,aAAS,WADF,EACe,MAAM,KADrB;AAEP,YAAQ,EAAE,gBAAF,EAAoB,SAApB;AAFD;AADR,CAVS,CAAZ;;AAiBA;AACA,KAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,MAAM,MAAzB,EAAiC,GAAjC,EAAsC;AACpC,OAAI,IAAI,IAAR,IAAgB,UAAU,MAA1B,EAAkC;AAChC,UAAM,CAAN,EAAS,OAAT,CAAiB,IAAjB,IAAyB,UAAU,MAAV,CAAiB,IAAjB,CAAzB;AACD;AACF;;AAED;AACA,IAAI,oBAAoB,IAAI,cAAJ,CAAmB,QAAnB,EAA6B,KAA7B,EAAoC,UAAU,MAA9C,CAAxB;AACA;AACA,kBAAkB,KAAlB,GAA0B,IAA1B,CAA+B,YAAW;AACxC;AACA,oBAAkB,KAAlB,GAA0B,IAA1B,CAA+B,YAAW;AACxC,YAAQ,IAAR,CAAa,CAAb;AACD,GAFD,EAEG,KAFH,CAES,UAAS,CAAT,EAAY;AACnB,YAAQ,GAAR,CAAY,SAAZ;AACA,YAAQ,GAAR,CAAY,CAAZ;AACA;AACD,GAND;AAOD,CATD","file":"boot_auth-compiled.js","sourcesContent":["var ReplSetManager = require('mongodb-topology-manager').ReplSet,\n  f = require('util').format;\n\nvar rsOptions = {\n  server: {\n    keyFile: __dirname + '/test/functional/data/keyfile.txt',\n    auth: null,\n    replSet: 'rs'\n  },\n  client: {\n    replSet: 'rs'\n  }\n}\n\n// Set up the nodes\nvar nodes = [{\n  options: {\n    bind_ip: 'localhost', port: 31000,\n    dbpath: f('%s/../db/31000', __dirname),\n  }\n}, {\n  options: {\n    bind_ip: 'localhost', port: 31001,\n    dbpath: f('%s/../db/31001', __dirname),\n  }\n}, {\n  options: {\n    bind_ip: 'localhost', port: 31002,\n    dbpath: f('%s/../db/31002', __dirname),\n  }\n}]\n\n// Merge in any node start up options\nfor(var i = 0; i < nodes.length; i++) {\n  for(var name in rsOptions.server) {\n    nodes[i].options[name] = rsOptions.server[name];\n  }\n}\n\n// Create a manager\nvar replicasetManager = new ReplSetManager('mongod', nodes, rsOptions.client);\n// Purge the set\nreplicasetManager.purge().then(function() {\n  // Start the server\n  replicasetManager.start().then(function() {\n    process.exit(0);\n  }).catch(function(e) {\n    console.log(\"====== \")\n    console.dir(e)\n    // // console.dir(e);\n  });\n});\n"]}