{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["//filter will reemit the data if cb(err,pass) pass is truthy\n\n// reduce is more tricky\n// maybe we want to group the reductions or emit progress updates occasionally\n// the most basic reduce just emits one 'data' event after it has recieved 'end'\n\nvar Stream = require('stream').Stream\n  , es = exports\n  , through = require('through')\n  , from = require('from')\n  , duplex = require('duplexer')\n  , map = require('map-stream')\n  , pause = require('pause-stream')\n  , split = require('split')\n  , pipeline = require('stream-combiner')\n  , immediately = global.setImmediate || process.nextTick;\n\nes.Stream = Stream //re-export Stream from core\nes.through = through\nes.from = from\nes.duplex = duplex\nes.map = map\nes.pause = pause\nes.split = split\nes.pipeline = es.connect = es.pipe = pipeline\n// merge / concat\n//\n// combine multiple streams into a single stream.\n// will emit end only once\n\nes.concat = //actually this should be called concat\nes.merge = function (/*streams...*/) {\n  var toMerge = [].slice.call(arguments)\n  if (toMerge.length === 1 && (toMerge[0] instanceof Array)) {\n    toMerge = toMerge[0] //handle array as arguments object\n  }\n  var stream = new Stream()\n  stream.setMaxListeners(0) // allow adding more than 11 streams\n  var endCount = 0\n  stream.writable = stream.readable = true\n\n  if (toMerge.length) {\n    toMerge.forEach(function (e) {\n      e.pipe(stream, {end: false})\n      var ended = false\n      e.on('end', function () {\n        if(ended) return\n        ended = true\n        endCount ++\n        if(endCount == toMerge.length)\n          stream.emit('end')\n      })\n    })\n  } else {\n    process.nextTick(function () {\n      stream.emit('end')\n    })\n  }\n  \n  stream.write = function (data) {\n    this.emit('data', data)\n  }\n  stream.destroy = function () {\n    toMerge.forEach(function (e) {\n      if(e.destroy) e.destroy()\n    })\n  }\n  return stream\n}\n\n\n// writable stream, collects all events into an array\n// and calls back when 'end' occurs\n// mainly I'm using this to test the other functions\n\nes.writeArray = function (done) {\n  if ('function' !== typeof done)\n    throw new Error('function writeArray (done): done must be function')\n\n  var a = new Stream ()\n    , array = [], isDone = false\n  a.write = function (l) {\n    array.push(l)\n  }\n  a.end = function () {\n    isDone = true\n    done(null, array)\n  }\n  a.writable = true\n  a.readable = false\n  a.destroy = function () {\n    a.writable = a.readable = false\n    if(isDone) return\n    done(new Error('destroyed before end'), array)\n  }\n  return a\n}\n\n//return a Stream that reads the properties of an object\n//respecting pause() and resume()\n\nes.readArray = function (array) {\n  var stream = new Stream()\n    , i = 0\n    , paused = false\n    , ended = false\n\n  stream.readable = true\n  stream.writable = false\n\n  if(!Array.isArray(array))\n    throw new Error('event-stream.read expects an array')\n\n  stream.resume = function () {\n    if(ended) return\n    paused = false\n    var l = array.length\n    while(i < l && !paused && !ended) {\n      stream.emit('data', array[i++])\n    }\n    if(i == l && !ended)\n      ended = true, stream.readable = false, stream.emit('end')\n  }\n  process.nextTick(stream.resume)\n  stream.pause = function () {\n     paused = true\n  }\n  stream.destroy = function () {\n    ended = true\n    stream.emit('close')\n  }\n  return stream\n}\n\n//\n// readable (asyncFunction)\n// return a stream that calls an async function while the stream is not paused.\n//\n// the function must take: (count, callback) {...\n//\n\nes.readable =\nfunction (func, continueOnError) {\n  var stream = new Stream()\n    , i = 0\n    , paused = false\n    , ended = false\n    , reading = false\n\n  stream.readable = true\n  stream.writable = false\n\n  if('function' !== typeof func)\n    throw new Error('event-stream.readable expects async function')\n\n  stream.on('end', function () { ended = true })\n\n  function get (err, data) {\n\n    if(err) {\n      stream.emit('error', err)\n      if(!continueOnError) stream.emit('end')\n    } else if (arguments.length > 1)\n      stream.emit('data', data)\n\n    immediately(function () {\n      if(ended || paused || reading) return\n      try {\n        reading = true\n        func.call(stream, i++, function () {\n          reading = false\n          get.apply(null, arguments)\n        })\n      } catch (err) {\n        stream.emit('error', err)\n      }\n    })\n  }\n  stream.resume = function () {\n    paused = false\n    get()\n  }\n  process.nextTick(get)\n  stream.pause = function () {\n     paused = true\n  }\n  stream.destroy = function () {\n    stream.emit('end')\n    stream.emit('close')\n    ended = true\n  }\n  return stream\n}\n\n\n//\n// map sync\n//\n\nes.mapSync = function (sync) {\n  return es.through(function write(data) {\n    var mappedData\n    try {\n      mappedData = sync(data)\n    } catch (err) {\n      return this.emit('error', err)\n    }\n    if (mappedData !== undefined)\n      this.emit('data', mappedData)\n  })\n}\n\n//\n// log just print out what is coming through the stream, for debugging\n//\n\nes.log = function (name) {\n  return es.through(function (data) {\n    var args = [].slice.call(arguments)\n    if(name) console.error(name, data)\n    else     console.error(data)\n    this.emit('data', data)\n  })\n}\n\n\n//\n// child -- pipe through a child process\n//\n\nes.child = function (child) {\n\n  return es.duplex(child.stdin, child.stdout)\n\n}\n\n//\n// parse\n//\n// must be used after es.split() to ensure that each chunk represents a line\n// source.pipe(es.split()).pipe(es.parse())\n\nes.parse = function (options) {\n  var emitError = !!(options ? options.error : false)\n  return es.through(function (data) {\n    var obj\n    try {\n      if(data) //ignore empty lines\n        obj = JSON.parse(data.toString())\n    } catch (err) {\n      if (emitError)\n        return this.emit('error', err)\n      return console.error(err, 'attempting to parse:', data)\n    }\n    //ignore lines that where only whitespace.\n    if(obj !== undefined)\n      this.emit('data', obj)\n  })\n}\n//\n// stringify\n//\n\nes.stringify = function () {\n  var Buffer = require('buffer').Buffer\n  return es.mapSync(function (e){\n    return JSON.stringify(Buffer.isBuffer(e) ? e.toString() : e) + '\\n'\n  })\n}\n\n//\n// replace a string within a stream.\n//\n// warn: just concatenates the string and then does str.split().join().\n// probably not optimal.\n// for smallish responses, who cares?\n// I need this for shadow-npm so it's only relatively small json files.\n\nes.replace = function (from, to) {\n  return es.pipeline(es.split(from), es.join(to))\n}\n\n//\n// join chunks with a joiner. just like Array#join\n// also accepts a callback that is passed the chunks appended together\n// this is still supported for legacy reasons.\n//\n\nes.join = function (str) {\n\n  //legacy api\n  if('function' === typeof str)\n    return es.wait(str)\n\n  var first = true\n  return es.through(function (data) {\n    if(!first)\n      this.emit('data', str)\n    first = false\n    this.emit('data', data)\n    return true\n  })\n}\n\n\n//\n// wait. callback when 'end' is emitted, with all chunks appended as string.\n//\n\nes.wait = function (callback) {\n  var arr = []\n  return es.through(function (data) { arr.push(data) },\n    function () {\n      var body = Buffer.isBuffer(arr[0]) ? Buffer.concat(arr)\n        : arr.join('')\n      this.emit('data', body)\n      this.emit('end')\n      if(callback) callback(null, body)\n    })\n}\n\nes.pipeable = function () {\n  throw new Error('[EVENT-STREAM] es.pipeable is deprecated')\n}\n"]}