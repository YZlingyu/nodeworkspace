{"version":3,"sources":["shared.js"],"names":[],"mappings":"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","file":"shared-compiled.js","sourcesContent":["\"use strict\"\n\nvar os = require('os'),\n  f = require('util').format;\n\n/**\n * Emit event if it exists\n * @method\n */\nfunction emitSDAMEvent(self, event, description) {\n  if(self.listeners(event).length > 0) {\n    self.emit(event, description);\n  }\n}\n\n// Get package.json variable\nvar driverVersion = require('../../package.json').version;\nvar nodejsversion = f('Node.js %s, %s', process.version, os.endianness());\nvar type = os.type();\nvar name = process.platform;\nvar architecture = process.arch;\nvar release = os.release();\n\nfunction createClientInfo(options) {\n  // Build default client information\n  var clientInfo = options.clientInfo ? clone(options.clientInfo) : {\n    driver: {\n      name: \"nodejs-core\",\n      version: driverVersion\n    },\n    os: {\n      type: type,\n      name: name,\n      architecture: architecture,\n      version: release\n    }\n  }\n\n  // Is platform specified\n  if(clientInfo.platform && clientInfo.platform.indexOf('mongodb-core') == -1) {\n    clientInfo.platform = f('%s, mongodb-core: %s', clientInfo.platform, driverVersion);\n  } else if(!clientInfo.platform){\n    clientInfo.platform = nodejsversion;\n  }\n\n  // Do we have an application specific string\n  if(options.appname) {\n    // Cut at 128 bytes\n    var buffer = new Buffer(options.appname);\n    // Return the truncated appname\n    var appname = buffer.length > 128 ? buffer.slice(0, 128).toString('utf8') : options.appname;\n    // Add to the clientInfo\n    clientInfo.application = { name: appname };\n  }\n\n  return clientInfo;\n}\n\nfunction clone(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n\nvar getPreviousDescription = function(self) {\n  if(!self.s.serverDescription) {\n    self.s.serverDescription = {\n      address: self.name,\n      arbiters: [], hosts: [], passives: [], type: 'Unknown'\n    }\n  }\n\n  return self.s.serverDescription;\n}\n\nvar emitServerDescriptionChanged = function(self, description) {\n  if(self.listeners('serverDescriptionChanged').length > 0) {\n    // Emit the server description changed events\n    self.emit('serverDescriptionChanged', {\n      topologyId: self.s.topologyId != -1 ? self.s.topologyId : self.id, address: self.name,\n      previousDescription: getPreviousDescription(self),\n      newDescription: description\n    });\n\n    self.s.serverDescription = description;\n  }\n}\n\nvar getPreviousTopologyDescription = function(self) {\n  if(!self.s.topologyDescription) {\n    self.s.topologyDescription = {\n      topologyType: 'Unknown',\n      servers: [{\n        address: self.name, arbiters: [], hosts: [], passives: [], type: 'Unknown'\n      }]\n    }\n  }\n\n  return self.s.topologyDescription;\n}\n\nvar emitTopologyDescriptionChanged = function(self, description) {\n  if(self.listeners('topologyDescriptionChanged').length > 0) {\n    // Emit the server description changed events\n    self.emit('topologyDescriptionChanged', {\n      topologyId: self.s.topologyId != -1 ? self.s.topologyId : self.id, address: self.name,\n      previousDescription: getPreviousTopologyDescription(self),\n      newDescription: description\n    });\n\n    self.s.serverDescription = description;\n  }\n}\n\nvar changedIsMaster = function(self, currentIsmaster, ismaster) {\n  var currentType = getTopologyType(self, currentIsmaster);\n  var newType = getTopologyType(self, ismaster);\n  if(newType != currentType) return true;\n  return false;\n}\n\nvar getTopologyType = function(self, ismaster) {\n  if(!ismaster) {\n    ismaster = self.ismaster;\n  }\n\n  if(!ismaster) return 'Unknown';\n  if(ismaster.ismaster && !ismaster.hosts) return 'Standalone';\n  if(ismaster.ismaster && ismaster.msg == 'isdbgrid') return 'Mongos';\n  if(ismaster.ismaster) return 'RSPrimary';\n  if(ismaster.secondary) return 'RSSecondary';\n  if(ismaster.arbiterOnly) return 'RSArbiter';\n  return 'Unknown';\n}\n\nvar inquireServerState = function(self) {\n  return function(callback) {\n    if(self.s.state == 'destroyed') return;\n    // Record response time\n    var start = new Date().getTime();\n\n    // emitSDAMEvent\n    emitSDAMEvent(self, 'serverHeartbeatStarted', { connectionId: self.name });\n\n    // Attempt to execute ismaster command\n    self.command('admin.$cmd', { ismaster:true },  { monitoring:true }, function(err, r) {\n      if(!err) {\n        // Legacy event sender\n        self.emit('ismaster', r, self);\n\n        // Calculate latencyMS\n        var latencyMS = new Date().getTime() - start;\n\n        // Server heart beat event\n        emitSDAMEvent(self, 'serverHeartbeatSucceeded', { durationMS: latencyMS, reply: r.result, connectionId: self.name });\n\n        // Did the server change\n        if(changedIsMaster(self, self.s.ismaster, r.result)) {\n          // Emit server description changed if something listening\n          emitServerDescriptionChanged(self, {\n            address: self.name, arbiters: [], hosts: [], passives: [], type: !self.s.inTopology ? 'Standalone' : getTopologyType(self)\n          });\n        }\n\n        // Updat ismaster view\n        self.s.ismaster = r.result;\n\n        // Set server response time\n        self.s.isMasterLatencyMS = latencyMS;\n      } else {\n        emitSDAMEvent(self, 'serverHeartbeatFailed', { durationMS: latencyMS, failure: err, connectionId: self.name });\n      }\n\n      // Peforming an ismaster monitoring callback operation\n      if(typeof callback == 'function') {\n        return callback(err, r);\n      }\n\n      // Perform another sweep\n      self.s.inquireServerStateTimeout = setTimeout(inquireServerState(self), self.s.haInterval);\n    });\n  };\n}\n\n// Object.assign method or polyfille\nvar assign = Object.assign ? Object.assign : function assign(target) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\n//\n// Clone the options\nvar cloneOptions = function(options) {\n  var opts = {};\n  for(var name in options) {\n    opts[name] = options[name];\n  }\n  return opts;\n}\n\nfunction Interval(fn, time) {\n  var timer = false;\n\n  this.start = function () {\n    if (!this.isRunning()) {\n      timer = setInterval(fn, time);\n    }\n\n    return this;\n  };\n\n  this.stop = function () {\n    clearInterval(timer);\n    timer = false;\n    return this;\n  };\n\n  this.isRunning = function () {\n    return timer !== false;\n  };  \n}\n\nfunction Timeout(fn, time) {\n  var timer = false;\n\n  this.start = function () {\n    if (!this.isRunning()) {\n      timer = setTimeout(fn, time);\n    }\n    return this;\n  };\n\n  this.stop = function () {\n    clearTimeout(timer);\n    timer = false;\n    return this;\n  };\n\n  this.isRunning = function () {\n    if(timer && timer._called) return false;\n    return timer !== false;\n  };  \n}\n\nmodule.exports.inquireServerState = inquireServerState\nmodule.exports.getTopologyType = getTopologyType;\nmodule.exports.emitServerDescriptionChanged = emitServerDescriptionChanged;\nmodule.exports.emitTopologyDescriptionChanged = emitTopologyDescriptionChanged;\nmodule.exports.cloneOptions = cloneOptions;\nmodule.exports.assign = assign;\nmodule.exports.createClientInfo = createClientInfo;\nmodule.exports.clone = clone;\nmodule.exports.Interval = Interval;\nmodule.exports.Timeout = Timeout;\n"]}