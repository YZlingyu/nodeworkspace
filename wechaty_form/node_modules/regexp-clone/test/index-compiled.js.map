{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\nvar assert = require('assert')\nvar clone = require('../');\n\ndescribe('regexp-clone', function(){\n  function hasEqualSource (a, b) {\n    assert.ok(a !== b);\n    assert.equal(a.source, b.source);\n  }\n\n  function isInsensitive (a) {\n    assert.ok(a.ignoreCase);\n  }\n\n  function isGlobal (a) {\n    assert.ok(a.global);\n  }\n\n  function isMultiline (a) {\n    assert.ok(a.multiline);\n  }\n\n  function insensitiveFlag (a) {\n    var b = clone(a);\n    hasEqualSource(a, b);\n    isInsensitive(a);\n    isInsensitive(b);\n  }\n\n  function globalFlag (a) {\n    var b = clone(a);\n    hasEqualSource(a, b);\n    isGlobal(a);\n    isGlobal(b);\n  }\n\n  function multilineFlag (a) {\n    var b = clone(a);\n    hasEqualSource(a, b);\n    isMultiline(a);\n    isMultiline(b);\n  }\n\n  describe('literals', function(){\n    it('insensitive flag', function(done){\n      var a = /hello/i;\n      insensitiveFlag(a);\n      done();\n    })\n    it('global flag', function(done){\n      var a = /hello/g;\n      globalFlag(a);\n      done();\n    })\n    it('multiline flag', function(done){\n      var a = /hello/m;\n      multilineFlag(a);\n      done();\n    })\n    it('no flags', function(done){\n      var a = /hello/;\n      var b = clone(a);\n      hasEqualSource(a, b);\n      assert.ok(!a.insensitive);\n      assert.ok(!a.global);\n      assert.ok(!a.global);\n      done();\n    })\n    it('all flags', function(done){\n      var a = /hello/gim;\n      insensitiveFlag(a);\n      globalFlag(a);\n      multilineFlag(a);\n      done();\n    })\n  })\n\n  describe('instances', function(){\n    it('insensitive flag', function(done){\n      var a = new RegExp('hello', 'i');\n      insensitiveFlag(a);\n      done();\n    })\n    it('global flag', function(done){\n      var a = new RegExp('hello', 'g');\n      globalFlag(a);\n      done();\n    })\n    it('multiline flag', function(done){\n      var a = new RegExp('hello', 'm');\n      multilineFlag(a);\n      done();\n    })\n    it('no flags', function(done){\n      var a = new RegExp('hmm');\n      var b = clone(a);\n      hasEqualSource(a, b);\n      assert.ok(!a.insensitive);\n      assert.ok(!a.global);\n      assert.ok(!a.global);\n      done();\n    })\n    it('all flags', function(done){\n      var a = new RegExp('hello', 'gim');\n      insensitiveFlag(a);\n      globalFlag(a);\n      multilineFlag(a);\n      done();\n    })\n  })\n})\n\n"]}