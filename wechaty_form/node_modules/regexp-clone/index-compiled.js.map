{"version":3,"sources":["index.js"],"names":[],"mappings":";AACA,IAAI,WAAW,OAAO,SAAP,CAAiB,QAAhC;;AAEA,SAAS,QAAT,CAAmB,CAAnB,EAAsB;AACpB,SAAO,YAAY,OAAO,CAAnB,IACA,qBAAqB,SAAS,IAAT,CAAc,CAAd,CAD5B;AAED;;AAED,OAAO,OAAP,GAAiB,UAAU,UAAU,MAAV,EAAkB;AAC3C,MAAI,CAAC,SAAS,MAAT,CAAL,EAAuB;AACrB,UAAM,IAAI,SAAJ,CAAc,cAAd,CAAN;AACD;;AAED,MAAI,QAAQ,EAAZ;AACA,MAAI,OAAO,MAAX,EAAmB,MAAM,IAAN,CAAW,GAAX;AACnB,MAAI,OAAO,SAAX,EAAsB,MAAM,IAAN,CAAW,GAAX;AACtB,MAAI,OAAO,UAAX,EAAuB,MAAM,IAAN,CAAW,GAAX;AACvB,SAAO,IAAI,MAAJ,CAAW,OAAO,MAAlB,EAA0B,MAAM,IAAN,CAAW,EAAX,CAA1B,CAAP;AACD,CAVD","file":"index-compiled.js","sourcesContent":["\nvar toString = Object.prototype.toString;\n\nfunction isRegExp (o) {\n  return 'object' == typeof o\n      && '[object RegExp]' == toString.call(o);\n}\n\nmodule.exports = exports = function (regexp) {\n  if (!isRegExp(regexp)) {\n    throw new TypeError('Not a RegExp');\n  }\n\n  var flags = [];\n  if (regexp.global) flags.push('g');\n  if (regexp.multiline) flags.push('m');\n  if (regexp.ignoreCase) flags.push('i');\n  return new RegExp(regexp.source, flags.join(''));\n}\n\n"]}