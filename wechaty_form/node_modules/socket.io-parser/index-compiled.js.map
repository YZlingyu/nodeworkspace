{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar json = require('json3');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n  var str = '';\n  var nsp = false;\n\n  // first is type\n  str += obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    str += obj.attachments;\n    str += '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' != obj.nsp) {\n    nsp = true;\n    str += obj.nsp;\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    if (nsp) {\n      str += ',';\n      nsp = false;\n    }\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    if (nsp) str += ',';\n    str += json.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if ('string' == typeof obj) {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var p = {};\n  var i = 0;\n\n  // look up type\n  p.type = Number(str.charAt(0));\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n    var buf = '';\n    while (str.charAt(++i) != '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) != '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' == str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' == c) break;\n      p.nsp += c;\n      if (i == str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i == str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    p = tryParse(p, str.substr(i));\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(p, str) {\n  try {\n    p.data = json.parse(str);\n  } catch(e){\n    return error();\n  }\n  return p; \n};\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(data){\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n"]}