{"version":3,"sources":["browser.js"],"names":[],"mappings":"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","file":"browser-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('wtf-8');\n\nvar base64encoder;\nif (global && global.ArrayBuffer) {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if ('function' == typeof supportsBinary) {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if ('function' == typeof utf8encode) {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data == 'string') {\n    if (data.charAt(0) == 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data);\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary == 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data != 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data == '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = ''\n    , n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (':' != chr) {\n      length += chr;\n    } else {\n      if ('' == length || (length != (n = Number(length)))) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      msg = data.substr(i + 1, n);\n\n      if (length != msg.length) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      if (msg.length) {\n        packet = exports.decodePacket(msg, binaryType, true);\n\n        if (err.type == packet.type && err.data == packet.data) {\n          // parser error in individual packet - ignoring payload\n          return callback(err, 0, 1);\n        }\n\n        var ret = callback(packet, i + n, l);\n        if (false === ret) return;\n      }\n\n      // advance cursor\n      i += n;\n      length = '';\n    }\n  }\n\n  if (length != '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  var numberTooLong = false;\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] == 255) break;\n\n      if (msgLength.length > 310) {\n        numberTooLong = true;\n        break;\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    if(numberTooLong) return callback(err, 0, 1);\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n"]}