{"version":3,"sources":["XMLHttpRequest.js"],"names":[],"mappings":"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","file":"XMLHttpRequest-compiled.js","sourcesContent":["/**\n * Wrapper for built-in http.js to emulate the browser XMLHttpRequest object.\n *\n * This can be used with JS designed for browsers to improve reuse of code and\n * allow the use of existing libraries.\n *\n * Usage: include(\"XMLHttpRequest.js\") and use XMLHttpRequest per W3C specs.\n *\n * @author Dan DeFelippi <dan@driverdan.com>\n * @contributor David Ellis <d.f.ellis@ieee.org>\n * @license MIT\n */\n\nvar fs = require('fs');\nvar Url = require('url');\nvar spawn = require('child_process').spawn;\n\n/**\n * Module exports.\n */\n\nmodule.exports = XMLHttpRequest;\n\n// backwards-compat\nXMLHttpRequest.XMLHttpRequest = XMLHttpRequest;\n\n/**\n * `XMLHttpRequest` constructor.\n *\n * Supported options for the `opts` object are:\n *\n *  - `agent`: An http.Agent instance; http.globalAgent may be used; if 'undefined', agent usage is disabled\n *\n * @param {Object} opts optional \"options\" object\n */\n\nfunction XMLHttpRequest(opts) {\n  \"use strict\";\n\n  /**\n   * Private variables\n   */\n  var self = this;\n  var http = require('http');\n  var https = require('https');\n\n  // Holds http.js objects\n  var request;\n  var response;\n\n  // Request settings\n  var settings = {};\n\n  // Disable header blacklist.\n  // Not part of XHR specs.\n  var disableHeaderCheck = false;\n\n  // Set some default headers\n  var defaultHeaders = {\n    \"User-Agent\": \"node-XMLHttpRequest\",\n    \"Accept\": \"*/*\"\n  };\n\n  var headers = defaultHeaders;\n\n  // These headers are not user setable.\n  // The following are allowed but banned in the spec:\n  // * user-agent\n  var forbiddenRequestHeaders = [\n    \"accept-charset\",\n    \"accept-encoding\",\n    \"access-control-request-headers\",\n    \"access-control-request-method\",\n    \"connection\",\n    \"content-length\",\n    \"content-transfer-encoding\",\n    \"cookie\",\n    \"cookie2\",\n    \"date\",\n    \"expect\",\n    \"host\",\n    \"keep-alive\",\n    \"origin\",\n    \"referer\",\n    \"te\",\n    \"trailer\",\n    \"transfer-encoding\",\n    \"upgrade\",\n    \"via\"\n  ];\n\n  // These request methods are not allowed\n  var forbiddenRequestMethods = [\n    \"TRACE\",\n    \"TRACK\",\n    \"CONNECT\"\n  ];\n\n  // Send flag\n  var sendFlag = false;\n  // Error flag, used when errors occur or abort is called\n  var errorFlag = false;\n\n  // Event listeners\n  var listeners = {};\n\n  /**\n   * Constants\n   */\n\n  this.UNSENT = 0;\n  this.OPENED = 1;\n  this.HEADERS_RECEIVED = 2;\n  this.LOADING = 3;\n  this.DONE = 4;\n\n  /**\n   * Public vars\n   */\n\n  // Current state\n  this.readyState = this.UNSENT;\n\n  // default ready state change handler in case one is not set or is set late\n  this.onreadystatechange = null;\n\n  // Result & response\n  this.responseText = \"\";\n  this.responseXML = \"\";\n  this.status = null;\n  this.statusText = null;\n\n  /**\n   * Private methods\n   */\n\n  /**\n   * Check if the specified header is allowed.\n   *\n   * @param string header Header to validate\n   * @return boolean False if not allowed, otherwise true\n   */\n  var isAllowedHttpHeader = function(header) {\n    return disableHeaderCheck || (header && forbiddenRequestHeaders.indexOf(header.toLowerCase()) === -1);\n  };\n\n  /**\n   * Check if the specified method is allowed.\n   *\n   * @param string method Request method to validate\n   * @return boolean False if not allowed, otherwise true\n   */\n  var isAllowedHttpMethod = function(method) {\n    return (method && forbiddenRequestMethods.indexOf(method) === -1);\n  };\n\n  /**\n   * Public methods\n   */\n\n  /**\n   * Open the connection. Currently supports local server requests.\n   *\n   * @param string method Connection method (eg GET, POST)\n   * @param string url URL for the connection.\n   * @param boolean async Asynchronous connection. Default is true.\n   * @param string user Username for basic authentication (optional)\n   * @param string password Password for basic authentication (optional)\n   */\n  this.open = function(method, url, async, user, password) {\n    this.abort();\n    errorFlag = false;\n\n    // Check for valid request method\n    if (!isAllowedHttpMethod(method)) {\n      throw \"SecurityError: Request method not allowed\";\n    }\n\n    settings = {\n      \"method\": method,\n      \"url\": url.toString(),\n      \"async\": (typeof async !== \"boolean\" ? true : async),\n      \"user\": user || null,\n      \"password\": password || null\n    };\n\n    setState(this.OPENED);\n  };\n\n  /**\n   * Disables or enables isAllowedHttpHeader() check the request. Enabled by default.\n   * This does not conform to the W3C spec.\n   *\n   * @param boolean state Enable or disable header checking.\n   */\n  this.setDisableHeaderCheck = function(state) {\n    disableHeaderCheck = state;\n  };\n\n  /**\n   * Sets a header for the request.\n   *\n   * @param string header Header name\n   * @param string value Header value\n   * @return boolean Header added\n   */\n  this.setRequestHeader = function(header, value) {\n    if (this.readyState != this.OPENED) {\n      throw \"INVALID_STATE_ERR: setRequestHeader can only be called when state is OPEN\";\n      return false;\n    }\n    if (!isAllowedHttpHeader(header)) {\n      console.warn('Refused to set unsafe header \"' + header + '\"');\n      return false;\n    }\n    if (sendFlag) {\n      throw \"INVALID_STATE_ERR: send flag is true\";\n      return false;\n    }\n    headers[header] = value;\n    return true;\n  };\n\n  /**\n   * Gets a header from the server response.\n   *\n   * @param string header Name of header to get.\n   * @return string Text of the header or null if it doesn't exist.\n   */\n  this.getResponseHeader = function(header) {\n    if (typeof header === \"string\"\n      && this.readyState > this.OPENED\n      && response.headers[header.toLowerCase()]\n      && !errorFlag\n    ) {\n      return response.headers[header.toLowerCase()];\n    }\n\n    return null;\n  };\n\n  /**\n   * Gets all the response headers.\n   *\n   * @return string A string with all response headers separated by CR+LF\n   */\n  this.getAllResponseHeaders = function() {\n    if (this.readyState < this.HEADERS_RECEIVED || errorFlag) {\n      return \"\";\n    }\n    var result = \"\";\n\n    for (var i in response.headers) {\n      // Cookie headers are excluded\n      if (i !== \"set-cookie\" && i !== \"set-cookie2\") {\n        result += i + \": \" + response.headers[i] + \"\\r\\n\";\n      }\n    }\n    return result.substr(0, result.length - 2);\n  };\n\n  /**\n   * Gets a request header\n   *\n   * @param string name Name of header to get\n   * @return string Returns the request header or empty string if not set\n   */\n  this.getRequestHeader = function(name) {\n    // @TODO Make this case insensitive\n    if (typeof name === \"string\" && headers[name]) {\n      return headers[name];\n    }\n\n    return \"\";\n  };\n\n  /**\n   * Sends the request to the server.\n   *\n   * @param string data Optional data to send as request body.\n   */\n  this.send = function(data) {\n    if (this.readyState != this.OPENED) {\n      throw \"INVALID_STATE_ERR: connection must be opened before send() is called\";\n    }\n\n    if (sendFlag) {\n      throw \"INVALID_STATE_ERR: send has already been called\";\n    }\n\n    var ssl = false, local = false;\n    var url = Url.parse(settings.url);\n    var host;\n    // Determine the server\n    switch (url.protocol) {\n      case 'https:':\n        ssl = true;\n        // SSL & non-SSL both need host, no break here.\n      case 'http:':\n        host = url.hostname;\n        break;\n\n      case 'file:':\n        local = true;\n        break;\n\n      case undefined:\n      case '':\n        host = \"localhost\";\n        break;\n\n      default:\n        throw \"Protocol not supported.\";\n    }\n\n    // Load files off the local filesystem (file://)\n    if (local) {\n      if (settings.method !== \"GET\") {\n        throw \"XMLHttpRequest: Only GET method is supported\";\n      }\n\n      if (settings.async) {\n        fs.readFile(url.pathname, 'utf8', function(error, data) {\n          if (error) {\n            self.handleError(error);\n          } else {\n            self.status = 200;\n            self.responseText = data;\n            setState(self.DONE);\n          }\n        });\n      } else {\n        try {\n          this.responseText = fs.readFileSync(url.pathname, 'utf8');\n          this.status = 200;\n          setState(self.DONE);\n        } catch(e) {\n          this.handleError(e);\n        }\n      }\n\n      return;\n    }\n\n    // Default to port 80. If accessing localhost on another port be sure\n    // to use http://localhost:port/path\n    var port = url.port || (ssl ? 443 : 80);\n    // Add query string if one is used\n    var uri = url.pathname + (url.search ? url.search : '');\n\n    // Set the Host header or the server may reject the request\n    headers[\"Host\"] = host;\n    if (!((ssl && port === 443) || port === 80)) {\n      headers[\"Host\"] += ':' + url.port;\n    }\n\n    // Set Basic Auth if necessary\n    if (settings.user) {\n      if (typeof settings.password == \"undefined\") {\n        settings.password = \"\";\n      }\n      var authBuf = new Buffer(settings.user + \":\" + settings.password);\n      headers[\"Authorization\"] = \"Basic \" + authBuf.toString(\"base64\");\n    }\n\n    // Set content length header\n    if (settings.method === \"GET\" || settings.method === \"HEAD\") {\n      data = null;\n    } else if (data) {\n      headers[\"Content-Length\"] = Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data);\n\n      if (!headers[\"Content-Type\"]) {\n        headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\n      }\n    } else if (settings.method === \"POST\") {\n      // For a post with no data set Content-Length: 0.\n      // This is required by buggy servers that don't meet the specs.\n      headers[\"Content-Length\"] = 0;\n    }\n\n    var agent = false;\n    if (opts && opts.agent) {\n      agent = opts.agent;\n    }\n    var options = {\n      host: host,\n      port: port,\n      path: uri,\n      method: settings.method,\n      headers: headers,\n      agent: agent\n    };\n\n    if (ssl) {\n      options.pfx = opts.pfx;\n      options.key = opts.key;\n      options.passphrase = opts.passphrase;\n      options.cert = opts.cert;\n      options.ca = opts.ca;\n      options.ciphers = opts.ciphers;\n      options.rejectUnauthorized = opts.rejectUnauthorized;\n    }\n\n    // Reset error flag\n    errorFlag = false;\n\n    // Handle async requests\n    if (settings.async) {\n      // Use the proper protocol\n      var doRequest = ssl ? https.request : http.request;\n\n      // Request is being sent, set send flag\n      sendFlag = true;\n\n      // As per spec, this is called here for historical reasons.\n      self.dispatchEvent(\"readystatechange\");\n\n      // Handler for the response\n      var responseHandler = function(resp) {\n        // Set response var to the response we got back\n        // This is so it remains accessable outside this scope\n        response = resp;\n        // Check for redirect\n        // @TODO Prevent looped redirects\n        if (response.statusCode === 302 || response.statusCode === 303 || response.statusCode === 307) {\n          // Change URL to the redirect location\n          settings.url = response.headers.location;\n          var url = Url.parse(settings.url);\n          // Set host var in case it's used later\n          host = url.hostname;\n          // Options for the new request\n          var newOptions = {\n            hostname: url.hostname,\n            port: url.port,\n            path: url.path,\n            method: response.statusCode === 303 ? 'GET' : settings.method,\n            headers: headers\n          };\n\n          if (ssl) {\n            newOptions.pfx = opts.pfx;\n            newOptions.key = opts.key;\n            newOptions.passphrase = opts.passphrase;\n            newOptions.cert = opts.cert;\n            newOptions.ca = opts.ca;\n            newOptions.ciphers = opts.ciphers;\n            newOptions.rejectUnauthorized = opts.rejectUnauthorized;\n          }\n\n          // Issue the new request\n          request = doRequest(newOptions, responseHandler).on('error', errorHandler);\n          request.end();\n          // @TODO Check if an XHR event needs to be fired here\n          return;\n        }\n\n        if (response && response.setEncoding) {\n          response.setEncoding(\"utf8\");\n        }\n\n        setState(self.HEADERS_RECEIVED);\n        self.status = response.statusCode;\n\n        response.on('data', function(chunk) {\n          // Make sure there's some data\n          if (chunk) {\n            self.responseText += chunk;\n          }\n          // Don't emit state changes if the connection has been aborted.\n          if (sendFlag) {\n            setState(self.LOADING);\n          }\n        });\n\n        response.on('end', function() {\n          if (sendFlag) {\n            // Discard the 'end' event if the connection has been aborted\n            setState(self.DONE);\n            sendFlag = false;\n          }\n        });\n\n        response.on('error', function(error) {\n          self.handleError(error);\n        });\n      }\n\n      // Error handler for the request\n      var errorHandler = function(error) {\n        self.handleError(error);\n      }\n\n      // Create the request\n      request = doRequest(options, responseHandler).on('error', errorHandler);\n\n      // Node 0.4 and later won't accept empty data. Make sure it's needed.\n      if (data) {\n        request.write(data);\n      }\n\n      request.end();\n\n      self.dispatchEvent(\"loadstart\");\n    } else { // Synchronous\n      // Create a temporary file for communication with the other Node process\n      var contentFile = \".node-xmlhttprequest-content-\" + process.pid;\n      var syncFile = \".node-xmlhttprequest-sync-\" + process.pid;\n      fs.writeFileSync(syncFile, \"\", \"utf8\");\n      // The async request the other Node process executes\n      var execString = \"var http = require('http'), https = require('https'), fs = require('fs');\"\n        + \"var doRequest = http\" + (ssl ? \"s\" : \"\") + \".request;\"\n        + \"var options = \" + JSON.stringify(options) + \";\"\n        + \"var responseText = '';\"\n        + \"var req = doRequest(options, function(response) {\"\n        + \"response.setEncoding('utf8');\"\n        + \"response.on('data', function(chunk) {\"\n        + \"  responseText += chunk;\"\n        + \"});\"\n        + \"response.on('end', function() {\"\n        + \"fs.writeFileSync('\" + contentFile + \"', 'NODE-XMLHTTPREQUEST-STATUS:' + response.statusCode + ',' + responseText, 'utf8');\"\n        + \"fs.unlinkSync('\" + syncFile + \"');\"\n        + \"});\"\n        + \"response.on('error', function(error) {\"\n        + \"fs.writeFileSync('\" + contentFile + \"', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');\"\n        + \"fs.unlinkSync('\" + syncFile + \"');\"\n        + \"});\"\n        + \"}).on('error', function(error) {\"\n        + \"fs.writeFileSync('\" + contentFile + \"', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');\"\n        + \"fs.unlinkSync('\" + syncFile + \"');\"\n        + \"});\"\n        + (data ? \"req.write('\" + data.replace(/'/g, \"\\\\'\") + \"');\":\"\")\n        + \"req.end();\";\n      // Start the other Node Process, executing this string\n      var syncProc = spawn(process.argv[0], [\"-e\", execString]);\n      var statusText;\n      while(fs.existsSync(syncFile)) {\n        // Wait while the sync file is empty\n      }\n      self.responseText = fs.readFileSync(contentFile, 'utf8');\n      // Kill the child process once the file has data\n      syncProc.stdin.end();\n      // Remove the temporary file\n      fs.unlinkSync(contentFile);\n      if (self.responseText.match(/^NODE-XMLHTTPREQUEST-ERROR:/)) {\n        // If the file returned an error, handle it\n        var errorObj = self.responseText.replace(/^NODE-XMLHTTPREQUEST-ERROR:/, \"\");\n        self.handleError(errorObj);\n      } else {\n        // If the file returned okay, parse its data and move to the DONE state\n        self.status = self.responseText.replace(/^NODE-XMLHTTPREQUEST-STATUS:([0-9]*),.*/, \"$1\");\n        self.responseText = self.responseText.replace(/^NODE-XMLHTTPREQUEST-STATUS:[0-9]*,(.*)/, \"$1\");\n        setState(self.DONE);\n      }\n    }\n  };\n\n  /**\n   * Called when an error is encountered to deal with it.\n   */\n  this.handleError = function(error) {\n    this.status = 503;\n    this.statusText = error;\n    this.responseText = error.stack;\n    errorFlag = true;\n    setState(this.DONE);\n  };\n\n  /**\n   * Aborts a request.\n   */\n  this.abort = function() {\n    if (request) {\n      request.abort();\n      request = null;\n    }\n\n    headers = defaultHeaders;\n    this.responseText = \"\";\n    this.responseXML = \"\";\n\n    errorFlag = true;\n\n    if (this.readyState !== this.UNSENT\n        && (this.readyState !== this.OPENED || sendFlag)\n        && this.readyState !== this.DONE) {\n      sendFlag = false;\n      setState(this.DONE);\n    }\n    this.readyState = this.UNSENT;\n  };\n\n  /**\n   * Adds an event listener. Preferred method of binding to events.\n   */\n  this.addEventListener = function(event, callback) {\n    if (!(event in listeners)) {\n      listeners[event] = [];\n    }\n    // Currently allows duplicate callbacks. Should it?\n    listeners[event].push(callback);\n  };\n\n  /**\n   * Remove an event callback that has already been bound.\n   * Only works on the matching funciton, cannot be a copy.\n   */\n  this.removeEventListener = function(event, callback) {\n    if (event in listeners) {\n      // Filter will return a new array with the callback removed\n      listeners[event] = listeners[event].filter(function(ev) {\n        return ev !== callback;\n      });\n    }\n  };\n\n  /**\n   * Dispatch any events, including both \"on\" methods and events attached using addEventListener.\n   */\n  this.dispatchEvent = function(event) {\n    if (typeof self[\"on\" + event] === \"function\") {\n      self[\"on\" + event]();\n    }\n    if (event in listeners) {\n      for (var i = 0, len = listeners[event].length; i < len; i++) {\n        listeners[event][i].call(self);\n      }\n    }\n  };\n\n  /**\n   * Changes readyState and calls onreadystatechange.\n   *\n   * @param int state New state\n   */\n  var setState = function(state) {\n    if (self.readyState !== state) {\n      self.readyState = state;\n\n      if (settings.async || self.readyState < self.OPENED || self.readyState === self.DONE) {\n        self.dispatchEvent(\"readystatechange\");\n      }\n\n      if (self.readyState === self.DONE && !errorFlag) {\n        self.dispatchEvent(\"load\");\n        // @TODO figure out InspectorInstrumentation::didLoadXHR(cookie)\n        self.dispatchEvent(\"loadend\");\n      }\n    }\n  };\n};\n"]}