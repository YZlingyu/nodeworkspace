{"version":3,"sources":["index.js"],"names":[],"mappings":";AACA;;;;AAIA,IAAI,UAAU,QAAQ,SAAR,CAAd;;AAEA;;;;AAIA,OAAO,OAAP,GAAiB,SAAjB;;AAEA;;;;;;;;;AASA,SAAS,SAAT,CAAmB,IAAnB,EAAyB;;AAEvB,WAAS,UAAT,CAAoB,GAApB,EAAyB;AACvB,QAAI,CAAC,GAAL,EAAU,OAAO,KAAP;;AAEV,QAAM,OAAO,MAAP,IAAiB,OAAO,MAAP,CAAc,QAA/B,IAA2C,OAAO,MAAP,CAAc,QAAd,CAAuB,GAAvB,CAA5C,IACC,OAAO,WAAP,IAAsB,eAAe,WADtC,IAEC,OAAO,IAAP,IAAe,eAAe,IAF/B,IAGC,OAAO,IAAP,IAAe,eAAe,IAHpC,EAIM;AACJ,aAAO,IAAP;AACD;;AAED,QAAI,QAAQ,GAAR,CAAJ,EAAkB;AAChB,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,IAAI,MAAxB,EAAgC,GAAhC,EAAqC;AACjC,YAAI,WAAW,IAAI,CAAJ,CAAX,CAAJ,EAAwB;AACpB,iBAAO,IAAP;AACH;AACJ;AACF,KAND,MAMO,IAAI,OAAO,YAAY,OAAO,GAA9B,EAAmC;AACxC;AACA,UAAI,IAAI,MAAJ,IAAc,cAAc,OAAO,IAAI,MAA3C,EAAmD;AACjD,cAAM,IAAI,MAAJ,EAAN;AACD;;AAED,WAAK,IAAI,GAAT,IAAgB,GAAhB,EAAqB;AACnB,YAAI,OAAO,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,GAArC,EAA0C,GAA1C,KAAkD,WAAW,IAAI,GAAJ,CAAX,CAAtD,EAA4E;AAC1E,iBAAO,IAAP;AACD;AACF;AACF;;AAED,WAAO,KAAP;AACD;;AAED,SAAO,WAAW,IAAX,CAAP;AACD","file":"index-compiled.js","sourcesContent":["\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      // see: https://github.com/Automattic/has-binary/pull/4\n      if (obj.toJSON && 'function' == typeof obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n"]}