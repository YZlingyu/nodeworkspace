{"version":3,"sources":["extension.js"],"names":[],"mappings":"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","file":"extension-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @fileoverview Utilities for working with Firefox extensions. */\n\n'use strict';\n\nconst AdmZip = require('adm-zip'),\n    fs = require('fs'),\n    path = require('path'),\n    xml = require('xml2js');\n\nconst io = require('../io');\n\n\n/**\n * Thrown when there an add-on is malformed.\n */\nclass AddonFormatError extends Error {\n  /** @param {string} msg The error message. */\n  constructor(msg) {\n    super(msg);\n    /** @override */\n    this.name = this.constructor.name;\n  }\n}\n\n\n\n/**\n * Installs an extension to the given directory.\n * @param {string} extension Path to the extension to install, as either a xpi\n *     file or a directory.\n * @param {string} dir Path to the directory to install the extension in.\n * @return {!Promise<string>} A promise for the add-on ID once\n *     installed.\n */\nfunction install(extension, dir) {\n  return getDetails(extension).then(function(details) {\n    var dst = path.join(dir, details.id);\n    if (extension.slice(-4) === '.xpi') {\n      if (!details.unpack) {\n        return io.copy(extension, dst + '.xpi').then(() => details.id);\n      } else {\n        return Promise.resolve().then(function() {\n          // TODO: find an async library for inflating a zip archive.\n          new AdmZip(extension).extractAllTo(dst, true);\n          return details.id;\n        });\n      }\n    } else {\n      return io.copyDir(extension, dst).then(() => details.id);\n    }\n  });\n}\n\n\n/**\n * Describes a Firefox add-on.\n * @typedef {{id: string, name: string, version: string, unpack: boolean}}\n */\nvar AddonDetails;\n\n/** @typedef {{$: !Object<string, string>}} */\nvar RdfRoot;\n\n\n\n/**\n * Extracts the details needed to install an add-on.\n * @param {string} addonPath Path to the extension directory.\n * @return {!Promise<!AddonDetails>} A promise for the add-on details.\n */\nfunction getDetails(addonPath) {\n  return readManifest(addonPath).then(function(doc) {\n    var em = getNamespaceId(doc, 'http://www.mozilla.org/2004/em-rdf#');\n    var rdf = getNamespaceId(\n        doc, 'http://www.w3.org/1999/02/22-rdf-syntax-ns#');\n\n    var description = doc[rdf + 'RDF'][rdf + 'Description'][0];\n    var details = {\n      id: getNodeText(description, em + 'id'),\n      name: getNodeText(description, em + 'name'),\n      version: getNodeText(description, em + 'version'),\n      unpack: getNodeText(description, em + 'unpack') || false\n    };\n\n    if (typeof details.unpack === 'string') {\n      details.unpack = details.unpack.toLowerCase() === 'true';\n    }\n\n    if (!details.id) {\n      throw new AddonFormatError('Could not find add-on ID for ' + addonPath);\n    }\n\n    return details;\n  });\n\n  function getNodeText(node, name) {\n    return node[name] && node[name][0] || '';\n  }\n\n  function getNamespaceId(doc, url) {\n    var keys = Object.keys(doc);\n    if (keys.length !== 1) {\n      throw new AddonFormatError('Malformed manifest for add-on ' + addonPath);\n    }\n\n    var namespaces = /** @type {!RdfRoot} */(doc[keys[0]]).$;\n    var id = '';\n    Object.keys(namespaces).some(function(ns) {\n      if (namespaces[ns] !== url) {\n        return false;\n      }\n\n      if (ns.indexOf(':') != -1) {\n        id = ns.split(':')[1] + ':';\n      }\n      return true;\n    });\n    return id;\n  }\n}\n\n\n/**\n * Reads the manifest for a Firefox add-on.\n * @param {string} addonPath Path to a Firefox add-on as a xpi or an extension.\n * @return {!Promise<!Object>} A promise for the parsed manifest.\n */\nfunction readManifest(addonPath) {\n  var manifest;\n\n  if (addonPath.slice(-4) === '.xpi') {\n    manifest = new Promise((resolve, reject) => {\n      let zip = new AdmZip(addonPath);\n\n      if (!zip.getEntry('install.rdf')) {\n        reject(new AddonFormatError(\n            'Could not find install.rdf in ' + addonPath));\n        return;\n      }\n\n      zip.readAsTextAsync('install.rdf', resolve);\n    });\n  } else {\n    manifest = io.stat(addonPath).then(function(stats) {\n      if (!stats.isDirectory()) {\n        throw Error(\n            'Add-on path is neither a xpi nor a directory: ' + addonPath);\n      }\n      return io.read(path.join(addonPath, 'install.rdf'));\n    });\n  }\n\n  return manifest.then(function(content) {\n    return new Promise((resolve, reject) => {\n      xml.parseString(content, (err, data) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  });\n}\n\n\n// PUBLIC API\n\n\nexports.install = install;\n"]}