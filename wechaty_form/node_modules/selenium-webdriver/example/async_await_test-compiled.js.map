{"version":3,"sources":["async_await_test.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;AAgBA;;AAEA,MAAM,SAAS,QAAQ,QAAR,CAAf;AACA,MAAM,EAAC,OAAD,EAAU,EAAV,EAAc,OAAd,EAAuB,KAAvB,KAAgC,QAAQ,IAAR,CAAtC;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,mBAAR,GAA8B,KAA9B;;AAEA,SAAS,eAAT,EAA0B,YAAW;AACnC,MAAI,MAAJ;;AAEA,aAAW,kBAAiB;AAC1B,aAAS,MAAM,IAAI,OAAJ,GAAc,UAAd,CAAyB,SAAzB,EAAoC,KAApC,EAAf;AACD,GAFD;;AAIA,YAAU,kBAAiB;AACzB,UAAM,OAAO,IAAP,EAAN;AACD,GAFD;;AAIA,KAAG,SAAH,EAAc,kBAAiB;AAC7B,UAAM,OAAO,GAAP,CAAW,4BAAX,CAAN;;AAEA,UAAM,OAAO,WAAP,CAAmB,GAAG,IAAH,CAAQ,GAAR,CAAnB,EAAiC,QAAjC,CAA0C,WAA1C,CAAN;AACA,UAAM,OAAO,WAAP,CAAmB,GAAG,IAAH,CAAQ,MAAR,CAAnB,EAAoC,KAApC,EAAN;;AAEA,UAAM,OAAO,IAAP,CAAY,MAAM,OAAN,CAAc,2BAAd,CAAZ,EAAwD,IAAxD,CAAN;;AAEA,QAAI,MAAM,MAAM,OAAO,aAAP,EAAhB;AACA,WAAO,KAAP,CAAa,GAAb,EAAkB,qCAAlB;AACD,GAVD;AAWD,CAtBD","file":"async_await_test-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Example Mocha tests using async/await.\n *\n * Usage:\n *\n *     mocha -t 20000 --harmony_async_await \\\n *         selenium-webdriver/example/async_await_test.js\n *\n * You can change which browser is started with the SELENIUM_BROWSER environment\n * variable:\n *\n *     SELENIUM_BROWSER=chrome \\\n *         mocha -t 20000 --harmony_async_await \\\n *         selenium-webdriver/example/async_await_test.js\n */\n\n'use strict';\n\nconst assert = require('assert');\nconst {Builder, By, promise, until} = require('..');\n\n// async/await do not work well when the promise manager is enabled.\n// See https://github.com/SeleniumHQ/selenium/issues/3037\n//\n// 3037 does not impact these specific examples, but it is still recommended\n// that you disable the promise manager when using async/await.\npromise.USE_PROMISE_MANAGER = false;\n\ndescribe('Google Search', function() {\n  let driver;\n\n  beforeEach(async function() {\n    driver = await new Builder().forBrowser('firefox').build();\n  });\n\n  afterEach(async function() {\n    await driver.quit();\n  });\n\n  it('example', async function() {\n    await driver.get('https://www.google.com/ncr');\n\n    await driver.findElement(By.name('q')).sendKeys('webdriver');\n    await driver.findElement(By.name('btnG')).click();\n\n    await driver.wait(until.titleIs('webdriver - Google Search'), 1000);\n\n    let url = await driver.getCurrentUrl();\n    assert.equal(url, 'https://www.google.com/#q=webdriver');\n  });\n});\n"]}