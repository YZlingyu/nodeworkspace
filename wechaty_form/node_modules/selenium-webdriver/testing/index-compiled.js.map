{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Provides wrappers around the following global functions from\n * [Mocha's BDD interface](https://github.com/mochajs/mocha):\n *\n * - after\n * - afterEach\n * - before\n * - beforeEach\n * - it\n * - it.only\n * - it.skip\n * - xit\n *\n * Each of the wrapped functions support generator functions. If the generator\n * {@linkplain ../lib/promise.consume yields a promise}, the test will wait\n * for that promise to resolve before invoking the next iteration of the\n * generator:\n *\n *     test.it('generators', function*() {\n *       let x = yield Promise.resolve(1);\n *       assert.equal(x, 1);\n *     });\n *\n * The provided wrappers leverage the {@link webdriver.promise.ControlFlow}\n * to simplify writing asynchronous tests:\n *\n *     var {Builder, By, until} = require('selenium-webdriver');\n *     var test = require('selenium-webdriver/testing');\n *\n *     test.describe('Google Search', function() {\n *       var driver;\n *\n *       test.before(function() {\n *         driver = new Builder().forBrowser('firefox').build();\n *       });\n *\n *       test.after(function() {\n *         driver.quit();\n *       });\n *\n *       test.it('should append query to title', function() {\n *         driver.get('http://www.google.com/ncr');\n *         driver.findElement(By.name('q')).sendKeys('webdriver');\n *         driver.findElement(By.name('btnG')).click();\n *         driver.wait(until.titleIs('webdriver - Google Search'), 1000);\n *       });\n *     });\n *\n * You may conditionally suppress a test function using the exported\n * \"ignore\" function. If the provided predicate returns true, the attached\n * test case will be skipped:\n *\n *     test.ignore(maybe()).it('is flaky', function() {\n *       if (Math.random() < 0.5) throw Error();\n *     });\n *\n *     function maybe() { return Math.random() < 0.5; }\n */\n\n'use strict';\n\nconst promise = require('..').promise;\nconst flow = (function() {\n  const initial = process.env['SELENIUM_PROMISE_MANAGER'];\n  try {\n    process.env['SELENIUM_PROMISE_MANAGER'] = '1';\n    return promise.controlFlow();\n  } finally {\n    if (initial === undefined) {\n      delete process.env['SELENIUM_PROMISE_MANAGER'];\n    } else {\n      process.env['SELENIUM_PROMISE_MANAGER'] = initial;\n    }\n  }\n})();\n\n\n/**\n * Wraps a function so that all passed arguments are ignored.\n * @param {!Function} fn The function to wrap.\n * @return {!Function} The wrapped function.\n */\nfunction seal(fn) {\n  return function() {\n    fn();\n  };\n}\n\n\n/**\n * Wraps a function on Mocha's BDD interface so it runs inside a\n * webdriver.promise.ControlFlow and waits for the flow to complete before\n * continuing.\n * @param {!Function} globalFn The function to wrap.\n * @return {!Function} The new function.\n */\nfunction wrapped(globalFn) {\n  return function() {\n    if (arguments.length === 1) {\n      return globalFn(wrapArgument(arguments[0]));\n\n    } else if (arguments.length === 2) {\n      return globalFn(arguments[0], wrapArgument(arguments[1]));\n\n    } else {\n      throw Error('Invalid # arguments: ' + arguments.length);\n    }\n  };\n}\n\n\nfunction wrapArgument(value) {\n  if (typeof value === 'function') {\n    return makeAsyncTestFn(value);\n  }\n  return value;\n}\n\n\n/**\n * Make a wrapper to invoke caller's test function, fn.  Run the test function\n * within a ControlFlow.\n *\n * Should preserve the semantics of Mocha's Runnable.prototype.run (See\n * https://github.com/mochajs/mocha/blob/master/lib/runnable.js#L192)\n *\n * @param {!Function} fn\n * @return {!Function}\n */\nfunction makeAsyncTestFn(fn) {\n  const isAsync = fn.length > 0;\n  const isGenerator = promise.isGenerator(fn);\n  if (isAsync && isGenerator) {\n    throw TypeError(\n        'generator-based tests must not take a callback; for async testing,'\n            + ' return a promise (or yield on a promise)');\n  }\n\n  var ret = /** @type {function(this: mocha.Context)}*/ (function(done) {\n    const runTest = (resolve, reject) => {\n      try {\n        if (isAsync) {\n          fn.call(this, err => err ? reject(err) : resolve());\n        } else if (isGenerator) {\n          resolve(promise.consume(fn, this));\n        } else {\n          resolve(fn.call(this));\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    };\n\n    if (!promise.USE_PROMISE_MANAGER) {\n      new Promise(runTest).then(seal(done), done);\n      return;\n    }\n\n    var runnable = this.runnable();\n    var mochaCallback = runnable.callback;\n    runnable.callback = function() {\n      flow.reset();\n      return mochaCallback.apply(this, arguments);\n    };\n\n    flow.execute(function controlFlowExecute() {\n      return new promise.Promise(function(fulfill, reject) {\n        return runTest(fulfill, reject);\n      }, flow);\n    }, runnable.fullTitle()).then(seal(done), done);\n  });\n\n  ret.toString = function() {\n    return fn.toString();\n  };\n\n  return ret;\n}\n\n\n/**\n * Ignores the test chained to this function if the provided predicate returns\n * true.\n * @param {function(): boolean} predicateFn A predicate to call to determine\n *     if the test should be suppressed. This function MUST be synchronous.\n * @return {!Object} An object with wrapped versions of {@link #it()} and\n *     {@link #describe()} that ignore tests as indicated by the predicate.\n */\nfunction ignore(predicateFn) {\n  var describe = wrap(exports.xdescribe, exports.describe);\n  describe.only = wrap(exports.xdescribe, exports.describe.only);\n\n  var it = wrap(exports.xit, exports.it);\n  it.only = wrap(exports.xit, exports.it.only);\n\n  return {\n    describe: describe,\n    it: it\n  };\n\n  function wrap(onSkip, onRun) {\n    return function(title, fn) {\n      if (predicateFn()) {\n        onSkip(title, fn);\n      } else {\n        onRun(title, fn);\n      }\n    };\n  }\n}\n\n\n/**\n * @param {string} name\n * @return {!Function}\n * @throws {TypeError}\n */\nfunction getMochaGlobal(name) {\n  let fn = global[name];\n  let type = typeof fn;\n  if (type !== 'function') {\n    throw TypeError(\n        `Expected global.${name} to be a function, but is ${type}. `\n            + 'This can happen if you try using this module when running '\n            + 'with node directly instead of using the mocha executable');\n  }\n  return fn;\n}\n\n\nconst WRAPPED = {\n  after: null,\n  afterEach: null,\n  before: null,\n  beforeEach: null,\n  it: null,\n  itOnly: null,\n  xit: null\n};\n\n\nfunction wrapIt() {\n  if (!WRAPPED.it) {\n    let it = getMochaGlobal('it');\n    WRAPPED.it = wrapped(it);\n    WRAPPED.itOnly = wrapped(it.only);\n  }\n}\n\n\n\n// PUBLIC API\n\n\n/**\n * @return {!promise.ControlFlow} the control flow instance used by this module\n *     to coordinate test actions.\n */\nexports.controlFlow = function(){\n  return flow;\n};\n\n\n/**\n * Registers a new test suite.\n * @param {string} name The suite name.\n * @param {function()=} opt_fn The suite function, or `undefined` to define\n *     a pending test suite.\n */\nexports.describe = function(name, opt_fn) {\n  let fn = getMochaGlobal('describe');\n  return opt_fn ? fn(name, opt_fn) : fn(name);\n};\n\n\n/**\n * An alias for {@link #describe()} that marks the suite as exclusive,\n * suppressing all other test suites.\n * @param {string} name The suite name.\n * @param {function()=} opt_fn The suite function, or `undefined` to define\n *     a pending test suite.\n */\nexports.describe.only = function(name, opt_fn) {\n  let desc = getMochaGlobal('describe');\n  return opt_fn ? desc.only(name, opt_fn) : desc.only(name);\n};\n\n\n/**\n * Defines a suppressed test suite.\n * @param {string} name The suite name.\n * @param {function()=} opt_fn The suite function, or `undefined` to define\n *     a pending test suite.\n */\nexports.describe.skip = function(name, opt_fn) {\n  let fn = getMochaGlobal('describe');\n  return opt_fn ? fn.skip(name, opt_fn) : fn.skip(name);\n};\n\n\n/**\n * Defines a suppressed test suite.\n * @param {string} name The suite name.\n * @param {function()=} opt_fn The suite function, or `undefined` to define\n *     a pending test suite.\n */\nexports.xdescribe = function(name, opt_fn) {\n  let fn = getMochaGlobal('xdescribe');\n  return opt_fn ? fn(name, opt_fn) : fn(name);\n};\n\n\n/**\n * Register a function to call after the current suite finishes.\n * @param {function()} fn .\n */\nexports.after = function(fn) {\n  if (!WRAPPED.after) {\n    WRAPPED.after = wrapped(getMochaGlobal('after'));\n  }\n  WRAPPED.after(fn);\n};\n\n\n/**\n * Register a function to call after each test in a suite.\n * @param {function()} fn .\n */\nexports.afterEach = function(fn) {\n  if (!WRAPPED.afterEach) {\n    WRAPPED.afterEach = wrapped(getMochaGlobal('afterEach'));\n  }\n  WRAPPED.afterEach(fn);\n};\n\n\n/**\n * Register a function to call before the current suite starts.\n * @param {function()} fn .\n */\nexports.before = function(fn) {\n  if (!WRAPPED.before) {\n    WRAPPED.before = wrapped(getMochaGlobal('before'));\n  }\n  WRAPPED.before(fn);\n};\n\n/**\n * Register a function to call before each test in a suite.\n * @param {function()} fn .\n */\nexports.beforeEach = function(fn) {\n  if (!WRAPPED.beforeEach) {\n    WRAPPED.beforeEach = wrapped(getMochaGlobal('beforeEach'));\n  }\n  WRAPPED.beforeEach(fn);\n};\n\n/**\n * Add a test to the current suite.\n * @param {string} name The test name.\n * @param {function()=} opt_fn The test function, or `undefined` to define\n *     a pending test case.\n */\nexports.it = function(name, opt_fn) {\n  wrapIt();\n  if (opt_fn) {\n    WRAPPED.it(name, opt_fn);\n  } else {\n    WRAPPED.it(name);\n  }\n};\n\n/**\n * An alias for {@link #it()} that flags the test as the only one that should\n * be run within the current suite.\n * @param {string} name The test name.\n * @param {function()=} opt_fn The test function, or `undefined` to define\n *     a pending test case.\n */\nexports.it.only = function(name, opt_fn) {\n  wrapIt();\n  if (opt_fn) {\n    WRAPPED.itOnly(name, opt_fn);\n  } else {\n    WRAPPED.itOnly(name);\n  }\n};\n\n\n/**\n * Adds a test to the current suite while suppressing it so it is not run.\n * @param {string} name The test name.\n * @param {function()=} opt_fn The test function, or `undefined` to define\n *     a pending test case.\n */\nexports.xit = function(name, opt_fn) {\n  if (!WRAPPED.xit) {\n    WRAPPED.xit = wrapped(getMochaGlobal('xit'));\n  }\n  if (opt_fn) {\n    WRAPPED.xit(name, opt_fn);\n  } else {\n    WRAPPED.xit(name);\n  }\n};\n\n\nexports.it.skip = exports.xit;\nexports.ignore = ignore;\n"]}