{"version":3,"sources":["capabilities.js"],"names":[],"mappings":"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","file":"capabilities-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\n/**\n * @fileoverview Defines types related to describing the capabilities of a\n * WebDriver session.\n */\n\nconst Symbols = require('./symbols');\n\n\n/**\n * Recognized browser names.\n * @enum {string}\n */\nconst Browser = {\n  ANDROID: 'android',\n  CHROME: 'chrome',\n  EDGE: 'MicrosoftEdge',\n  FIREFOX: 'firefox',\n  IE: 'internet explorer',\n  INTERNET_EXPLORER: 'internet explorer',\n  IPAD: 'iPad',\n  IPHONE: 'iPhone',\n  OPERA: 'opera',\n  PHANTOM_JS: 'phantomjs',\n  SAFARI: 'safari',\n  HTMLUNIT: 'htmlunit'\n};\n\n\n/**\n * Common Capability keys.\n * @enum {string}\n */\nconst Capability = {\n\n  /**\n   * Indicates whether a driver should accept all SSL certs by default. This\n   * capability only applies when requesting a new session. To query whether\n   * a driver can handle insecure SSL certs, see {@link #SECURE_SSL}.\n   */\n  ACCEPT_SSL_CERTS: 'acceptSslCerts',\n\n\n  /**\n   * The browser name. Common browser names are defined in the {@link Browser}\n   * enum.\n   */\n  BROWSER_NAME: 'browserName',\n\n  /**\n   * Defines how elements should be scrolled into the viewport for interaction.\n   * This capability will be set to zero (0) if elements are aligned with the\n   * top of the viewport, or one (1) if aligned with the bottom. The default\n   * behavior is to align with the top of the viewport.\n   */\n  ELEMENT_SCROLL_BEHAVIOR: 'elementScrollBehavior',\n\n  /**\n   * Whether the driver is capable of handling modal alerts (e.g. alert,\n   * confirm, prompt). To define how a driver <i>should</i> handle alerts,\n   * use {@link #UNEXPECTED_ALERT_BEHAVIOR}.\n   */\n  HANDLES_ALERTS: 'handlesAlerts',\n\n  /**\n   * Key for the logging driver logging preferences.\n   */\n  LOGGING_PREFS: 'loggingPrefs',\n\n  /**\n   * Whether this session generates native events when simulating user input.\n   */\n  NATIVE_EVENTS: 'nativeEvents',\n\n  /**\n   * Describes the platform the browser is running on. Will be one of\n   * ANDROID, IOS, LINUX, MAC, UNIX, or WINDOWS. When <i>requesting</i> a\n   * session, ANY may be used to indicate no platform preference (this is\n   * semantically equivalent to omitting the platform capability).\n   */\n  PLATFORM: 'platform',\n\n  /**\n   * Describes the proxy configuration to use for a new WebDriver session.\n   */\n  PROXY: 'proxy',\n\n  /** Whether the driver supports changing the browser's orientation. */\n  ROTATABLE: 'rotatable',\n\n  /**\n   * Whether a driver is only capable of handling secure SSL certs. To request\n   * that a driver accept insecure SSL certs by default, use\n   * {@link #ACCEPT_SSL_CERTS}.\n   */\n  SECURE_SSL: 'secureSsl',\n\n  /** Whether the driver supports manipulating the app cache. */\n  SUPPORTS_APPLICATION_CACHE: 'applicationCacheEnabled',\n\n  /** Whether the driver supports locating elements with CSS selectors. */\n  SUPPORTS_CSS_SELECTORS: 'cssSelectorsEnabled',\n\n  /** Whether the browser supports JavaScript. */\n  SUPPORTS_JAVASCRIPT: 'javascriptEnabled',\n\n  /** Whether the driver supports controlling the browser's location info. */\n  SUPPORTS_LOCATION_CONTEXT: 'locationContextEnabled',\n\n  /** Whether the driver supports taking screenshots. */\n  TAKES_SCREENSHOT: 'takesScreenshot',\n\n  /**\n   * Defines how the driver should handle unexpected alerts. The value should\n   * be one of \"accept\", \"dismiss\", or \"ignore\".\n   */\n  UNEXPECTED_ALERT_BEHAVIOR: 'unexpectedAlertBehavior',\n\n  /** Defines the browser version. */\n  VERSION: 'version'\n};\n\n\n/**\n * Describes how a proxy should be configured for a WebDriver session.\n * @record\n */\nfunction ProxyConfig() {}\n\n/**\n * The proxy type. Must be one of {\"manual\", \"pac\", \"system\"}.\n * @type {string}\n */\nProxyConfig.prototype.proxyType;\n\n/**\n * URL for the PAC file to use. Only used if {@link #proxyType} is \"pac\".\n * @type {(string|undefined)}\n */\nProxyConfig.prototype.proxyAutoconfigUrl;\n\n/**\n * The proxy host for FTP requests. Only used if {@link #proxyType} is \"manual\".\n * @type {(string|undefined)}\n */\nProxyConfig.prototype.ftpProxy;\n\n/**\n * The proxy host for HTTP requests. Only used if {@link #proxyType} is\n * \"manual\".\n * @type {(string|undefined)}\n */\nProxyConfig.prototype.httpProxy;\n\n/**\n * The proxy host for HTTPS requests. Only used if {@link #proxyType} is\n * \"manual\".\n * @type {(string|undefined)}\n */\nProxyConfig.prototype.sslProxy;\n\n/**\n * A comma delimited list of hosts which should bypass all proxies. Only used if\n * {@link #proxyType} is \"manual\".\n * @type {(string|undefined)}\n */\nProxyConfig.prototype.noProxy;\n\n\n/**\n * Converts a generic hash object to a map.\n * @param {!Object<string, ?>} hash The hash object.\n * @return {!Map<string, ?>} The converted map.\n */\nfunction toMap(hash) {\n  let m = new Map;\n  for (let key in hash) {\n    if (hash.hasOwnProperty(key)) {\n      m.set(key, hash[key]);\n    }\n  }\n  return m;\n}\n\n\n/**\n * Describes a set of capabilities for a WebDriver session.\n */\nclass Capabilities extends Map {\n  /**\n   * @param {(Capabilities|Map<string, ?>|Object)=} opt_other Another set of\n   *     capabilities to initialize this instance from.\n   */\n  constructor(opt_other) {\n    if (opt_other && !(opt_other instanceof Map)) {\n      opt_other = toMap(opt_other);\n    }\n    super(opt_other);\n  }\n\n  /**\n   * @return {!Capabilities} A basic set of capabilities for Android.\n   */\n  static android() {\n    return new Capabilities()\n        .set(Capability.BROWSER_NAME, Browser.ANDROID)\n        .set(Capability.PLATFORM, 'ANDROID');\n  }\n\n  /**\n   * @return {!Capabilities} A basic set of capabilities for Chrome.\n   */\n  static chrome() {\n    return new Capabilities().set(Capability.BROWSER_NAME, Browser.CHROME);\n  }\n\n  /**\n   * @return {!Capabilities} A basic set of capabilities for Microsoft Edge.\n   */\n  static edge() {\n    return new Capabilities()\n        .set(Capability.BROWSER_NAME, Browser.EDGE)\n        .set(Capability.PLATFORM, 'WINDOWS');\n  }\n\n  /**\n   * @return {!Capabilities} A basic set of capabilities for Firefox.\n   */\n  static firefox() {\n    return new Capabilities().set(Capability.BROWSER_NAME, Browser.FIREFOX);\n  }\n\n  /**\n   * @return {!Capabilities} A basic set of capabilities for Internet Explorer.\n   */\n  static ie() {\n    return new Capabilities().\n        set(Capability.BROWSER_NAME, Browser.INTERNET_EXPLORER).\n        set(Capability.PLATFORM, 'WINDOWS');\n  }\n\n  /**\n   * @return {!Capabilities} A basic set of capabilities for iPad.\n   */\n  static ipad() {\n    return new Capabilities().\n        set(Capability.BROWSER_NAME, Browser.IPAD).\n        set(Capability.PLATFORM, 'MAC');\n  }\n\n  /**\n   * @return {!Capabilities} A basic set of capabilities for iPhone.\n   */\n  static iphone() {\n    return new Capabilities().\n        set(Capability.BROWSER_NAME, Browser.IPHONE).\n        set(Capability.PLATFORM, 'MAC');\n  }\n\n  /**\n   * @return {!Capabilities} A basic set of capabilities for Opera.\n   */\n  static opera() {\n    return new Capabilities().\n        set(Capability.BROWSER_NAME, Browser.OPERA);\n  }\n\n  /**\n   * @return {!Capabilities} A basic set of capabilities for PhantomJS.\n   */\n  static phantomjs() {\n    return new Capabilities().\n        set(Capability.BROWSER_NAME, Browser.PHANTOM_JS);\n  }\n\n  /**\n   * @return {!Capabilities} A basic set of capabilities for Safari.\n   */\n  static safari() {\n    return new Capabilities().\n        set(Capability.BROWSER_NAME, Browser.SAFARI).\n        set(Capability.PLATFORM, 'MAC');\n  }\n\n  /**\n   * @return {!Capabilities} A basic set of capabilities for HTMLUnit.\n   */\n  static htmlunit() {\n    return new Capabilities().\n        set(Capability.BROWSER_NAME, Browser.HTMLUNIT);\n  }\n\n  /**\n   * @return {!Capabilities} A basic set of capabilities for HTMLUnit\n   *     with enabled Javascript.\n   */\n  static htmlunitwithjs() {\n    return new Capabilities().\n        set(Capability.BROWSER_NAME, Browser.HTMLUNIT).\n        set(Capability.SUPPORTS_JAVASCRIPT, true);\n  }\n\n  /**\n   * @return {!Object<string, ?>} The JSON representation of this instance.\n   *     Note, the returned object may contain nested promised values.\n   * @suppress {checkTypes} Suppress [] access on a struct (state inherited from\n   *     Map).\n   */\n  [Symbols.serialize]() {\n    return serialize(this);\n  }\n\n  /**\n   * Merges another set of capabilities into this instance.\n   * @param {!(Capabilities|Map<String, ?>|Object<string, ?>)} other The other\n   *     set of capabilities to merge.\n   * @return {!Capabilities} A self reference.\n   */\n  merge(other) {\n    if (!other) {\n      throw new TypeError('no capabilities provided for merge');\n    }\n\n    if (!(other instanceof Map)) {\n      other = toMap(other);\n    }\n\n    for (let key of other.keys()) {\n      this.set(key, other.get(key));\n    }\n\n    return this;\n  }\n\n  /**\n   * @param {string} key The capability key.\n   * @param {*} value The capability value.\n   * @return {!Capabilities} A self reference.\n   * @throws {TypeError} If the `key` is not a string.\n   * @override\n   */\n  set(key, value) {\n    if (typeof key !== 'string') {\n      throw new TypeError('Capability keys must be strings: ' + typeof key);\n    }\n    super.set(key, value);\n    return this;\n  }\n\n  /**\n   * Sets the logging preferences. Preferences may be specified as a\n   * {@link ./logging.Preferences} instance, or as a map of log-type to\n   * log-level.\n   * @param {!(./logging.Preferences|Object<string>)} prefs The logging\n   *     preferences.\n   * @return {!Capabilities} A self reference.\n   */\n  setLoggingPrefs(prefs) {\n    return this.set(Capability.LOGGING_PREFS, prefs);\n  }\n\n  /**\n   * Sets the proxy configuration for this instance.\n   * @param {ProxyConfig} proxy The desired proxy configuration.\n   * @return {!Capabilities} A self reference.\n   */\n  setProxy(proxy) {\n    return this.set(Capability.PROXY, proxy);\n  }\n\n  /**\n   * Sets whether native events should be used.\n   * @param {boolean} enabled Whether to enable native events.\n   * @return {!Capabilities} A self reference.\n   */\n  setEnableNativeEvents(enabled) {\n    return this.set(Capability.NATIVE_EVENTS, enabled);\n  }\n\n  /**\n   * Sets how elements should be scrolled into view for interaction.\n   * @param {number} behavior The desired scroll behavior: either 0 to align\n   *     with the top of the viewport or 1 to align with the bottom.\n   * @return {!Capabilities} A self reference.\n   */\n  setScrollBehavior(behavior) {\n    return this.set(Capability.ELEMENT_SCROLL_BEHAVIOR, behavior);\n  }\n\n  /**\n   * Sets the default action to take with an unexpected alert before returning\n   * an error.\n   * @param {string} behavior The desired behavior should be \"accept\",\n   *     \"dismiss\", or \"ignore\". Defaults to \"dismiss\".\n   * @return {!Capabilities} A self reference.\n   */\n  setAlertBehavior(behavior) {\n    return this.set(Capability.UNEXPECTED_ALERT_BEHAVIOR, behavior);\n  }\n}\n\n\n/**\n * Serializes a capabilities object. This is defined as a standalone function\n * so it may be type checked (where Capabilities[Symbols.serialize] has type\n * checking disabled since it is defined with [] access on a struct).\n *\n * @param {!Capabilities} caps The capabilities to serialize.\n * @return {!Object<string, ?>} The JSON representation of this instance.\n *     Note, the returned object may contain nested promised values.\n */\nfunction serialize(caps) {\n  let ret = {};\n  for (let key of caps.keys()) {\n    let cap = caps.get(key);\n    if (cap !== undefined && cap !== null) {\n      ret[key] = cap;\n    }\n  }\n  return ret;\n}\n\n\n// PUBLIC API\n\n\nmodule.exports = {\n  Browser: Browser,\n  Capabilities: Capabilities,\n  Capability: Capability,\n  ProxyConfig: ProxyConfig\n};\n"]}