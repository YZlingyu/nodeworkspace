{"version":3,"sources":["input.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;AAKA;;;;;AAIA,MAAM,SAAS;AACb,QAAM,CADO;AAEb,UAAQ,CAFK;AAGb,SAAO;AAHM,CAAf;;AAQA;;;;;;;AAOA,MAAM,MAAM;AACV,QAAc,QADJ;AAEV,UAAc,QAFJ,EAEe;AACzB,QAAc,QAHJ;AAIV,cAAc,QAJJ;AAKV,OAAc,QALJ;AAMV,SAAc,QANJ;AAOV,UAAc,QAPJ;AAQV,SAAc,QARJ;AASV,SAAc,QATJ;AAUV,WAAc,QAVJ;AAWV,OAAc,QAXJ;AAYV,SAAc,QAZJ;AAaV,UAAc,QAbJ;AAcV,SAAc,QAdJ;AAeV,WAAc,QAfJ;AAgBV,aAAc,QAhBJ;AAiBV,OAAc,QAjBJ;AAkBV,QAAc,QAlBJ;AAmBV,cAAc,QAnBJ;AAoBV,QAAc,QApBJ;AAqBV,YAAc,QArBJ;AAsBV,MAAc,QAtBJ;AAuBV,eAAc,QAvBJ;AAwBV,SAAc,QAxBJ;AAyBV,cAAc,QAzBJ;AA0BV,QAAc,QA1BJ;AA2BV,UAAc,QA3BJ;AA4BV,UAAc,QA5BJ;AA6BV,aAAc,QA7BJ;AA8BV,UAAc,QA9BJ;;AAgCV,WAAc,QAhCJ,EAgCe;AACzB,WAAc,QAjCJ;AAkCV,WAAc,QAlCJ;AAmCV,WAAc,QAnCJ;AAoCV,WAAc,QApCJ;AAqCV,WAAc,QArCJ;AAsCV,WAAc,QAtCJ;AAuCV,WAAc,QAvCJ;AAwCV,WAAc,QAxCJ;AAyCV,WAAc,QAzCJ;AA0CV,YAAc,QA1CJ;AA2CV,OAAc,QA3CJ;AA4CV,aAAc,QA5CJ;AA6CV,YAAc,QA7CJ;AA8CV,WAAc,QA9CJ;AA+CV,UAAc,QA/CJ;;AAiDV,MAAc,QAjDJ,EAiDe;AACzB,MAAc,QAlDJ;AAmDV,MAAc,QAnDJ;AAoDV,MAAc,QApDJ;AAqDV,MAAc,QArDJ;AAsDV,MAAc,QAtDJ;AAuDV,MAAc,QAvDJ;AAwDV,MAAc,QAxDJ;AAyDV,MAAc,QAzDJ;AA0DV,OAAc,QA1DJ;AA2DV,OAAc,QA3DJ;AA4DV,OAAc,QA5DJ;;AA8DV,WAAc,QA9DJ,EA8De;AACzB,QAAc,QA/DJ,CA+De;AA/Df,CAAZ;;AAmEA;;;;;;;;;;;;AAYA,IAAI,KAAJ,GAAY,UAAS,QAAT,EAAmB;AAC7B,SAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,EAAsC,CAAtC,EAAyC,IAAzC,CAA8C,EAA9C,IAAoD,IAAI,IAA/D;AACD,CAFD;;AAKA;;;;;;;;;;;;;;AAcA,MAAM,YAAN,CAAmB;;AAEjB;;;;;;;;;;;;;;AAcA,aAAW,MAAX,EAAmB,IAAnB,EAAyB;AACvB,WAAO,QAAQ,OAAR,CAAgB,IAAhB,CAAP;AACD;AAlBgB;;AAsBnB;;;AAGA,OAAO,OAAP,GAAiB;AACf,UAAQ,MADO;AAEf,OAAK,GAFU;AAGf,gBAAc;AAHC,CAAjB","file":"input-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\n/**\n * @fileoverview Defines types related to user input with the WebDriver API.\n */\n\n\n/**\n * Enumeration of the buttons used in the advanced interactions API.\n * @enum {number}\n */\nconst Button = {\n  LEFT: 0,\n  MIDDLE: 1,\n  RIGHT: 2\n};\n\n\n\n/**\n * Representations of pressable keys that aren't text.  These are stored in\n * the Unicode PUA (Private Use Area) code points, 0xE000-0xF8FF.  Refer to\n * http://www.google.com.au/search?&q=unicode+pua&btnG=Search\n *\n * @enum {string}\n */\nconst Key = {\n  NULL:         '\\uE000',\n  CANCEL:       '\\uE001',  // ^break\n  HELP:         '\\uE002',\n  BACK_SPACE:   '\\uE003',\n  TAB:          '\\uE004',\n  CLEAR:        '\\uE005',\n  RETURN:       '\\uE006',\n  ENTER:        '\\uE007',\n  SHIFT:        '\\uE008',\n  CONTROL:      '\\uE009',\n  ALT:          '\\uE00A',\n  PAUSE:        '\\uE00B',\n  ESCAPE:       '\\uE00C',\n  SPACE:        '\\uE00D',\n  PAGE_UP:      '\\uE00E',\n  PAGE_DOWN:    '\\uE00F',\n  END:          '\\uE010',\n  HOME:         '\\uE011',\n  ARROW_LEFT:   '\\uE012',\n  LEFT:         '\\uE012',\n  ARROW_UP:     '\\uE013',\n  UP:           '\\uE013',\n  ARROW_RIGHT:  '\\uE014',\n  RIGHT:        '\\uE014',\n  ARROW_DOWN:   '\\uE015',\n  DOWN:         '\\uE015',\n  INSERT:       '\\uE016',\n  DELETE:       '\\uE017',\n  SEMICOLON:    '\\uE018',\n  EQUALS:       '\\uE019',\n\n  NUMPAD0:      '\\uE01A',  // number pad keys\n  NUMPAD1:      '\\uE01B',\n  NUMPAD2:      '\\uE01C',\n  NUMPAD3:      '\\uE01D',\n  NUMPAD4:      '\\uE01E',\n  NUMPAD5:      '\\uE01F',\n  NUMPAD6:      '\\uE020',\n  NUMPAD7:      '\\uE021',\n  NUMPAD8:      '\\uE022',\n  NUMPAD9:      '\\uE023',\n  MULTIPLY:     '\\uE024',\n  ADD:          '\\uE025',\n  SEPARATOR:    '\\uE026',\n  SUBTRACT:     '\\uE027',\n  DECIMAL:      '\\uE028',\n  DIVIDE:       '\\uE029',\n\n  F1:           '\\uE031',  // function keys\n  F2:           '\\uE032',\n  F3:           '\\uE033',\n  F4:           '\\uE034',\n  F5:           '\\uE035',\n  F6:           '\\uE036',\n  F7:           '\\uE037',\n  F8:           '\\uE038',\n  F9:           '\\uE039',\n  F10:          '\\uE03A',\n  F11:          '\\uE03B',\n  F12:          '\\uE03C',\n\n  COMMAND:      '\\uE03D',  // Apple command key\n  META:         '\\uE03D'   // alias for Windows key\n};\n\n\n/**\n * Simulate pressing many keys at once in a \"chord\". Takes a sequence of\n * {@linkplain Key keys} or strings, appends each of the values to a string,\n * adds the chord termination key ({@link Key.NULL}) and returns the resulting\n * string.\n *\n * Note: when the low-level webdriver key handlers see Keys.NULL, active\n * modifier keys (CTRL/ALT/SHIFT/etc) release via a keyup event.\n *\n * @param {...string} var_args The key sequence to concatenate.\n * @return {string} The null-terminated key sequence.\n */\nKey.chord = function(var_args) {\n  return Array.prototype.slice.call(arguments, 0).join('') + Key.NULL;\n};\n\n\n/**\n * Used with {@link ./webelement.WebElement#sendKeys WebElement#sendKeys} on\n * file input elements (`<input type=\"file\">`) to detect when the entered key\n * sequence defines the path to a file.\n *\n * By default, {@linkplain ./webelement.WebElement WebElement's} will enter all\n * key sequences exactly as entered. You may set a\n * {@linkplain ./webdriver.WebDriver#setFileDetector file detector} on the\n * parent WebDriver instance to define custom behavior for handling file\n * elements. Of particular note is the\n * {@link selenium-webdriver/remote.FileDetector}, which should be used when\n * running against a remote\n * [Selenium Server](http://docs.seleniumhq.org/download/).\n */\nclass FileDetector {\n\n  /**\n   * Handles the file specified by the given path, preparing it for use with\n   * the current browser. If the path does not refer to a valid file, it will\n   * be returned unchanged, otherwise a path suitable for use with the current\n   * browser will be returned.\n   *\n   * This default implementation is a no-op. Subtypes may override this function\n   * for custom tailored file handling.\n   *\n   * @param {!./webdriver.WebDriver} driver The driver for the current browser.\n   * @param {string} path The path to process.\n   * @return {!Promise<string>} A promise for the processed file path.\n   * @package\n   */\n  handleFile(driver, path) {\n    return Promise.resolve(path);\n  }\n}\n\n\n// PUBLIC API\n\n\nmodule.exports = {\n  Button: Button,\n  Key: Key,\n  FileDetector: FileDetector\n};\n"]}