{"version":3,"sources":["build.js"],"names":[],"mappings":"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","file":"build-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nconst spawn = require('child_process').spawn,\n    fs = require('fs'),\n    path = require('path');\n\nconst isDevMode = require('../devmode');\n\nvar projectRoot = path.normalize(path.join(__dirname, '../../../../..'));\n\n\nfunction checkIsDevMode() {\n  if (!isDevMode) {\n    throw Error('Cannot execute build; not running in dev mode');\n  }\n}\n\n\n/**\n * Targets that have been previously built.\n * @type {!Object}\n */\nvar builtTargets = {};\n\n\n/**\n * @param {!Array.<string>} targets The targets to build.\n * @throws {Error} If not running in dev mode.\n * @constructor\n */\nvar Build = function(targets) {\n  checkIsDevMode();\n  this.targets_ = targets;\n};\n\n\n/** @private {boolean} */\nBuild.prototype.cacheResults_ = false;\n\n\n/**\n * Configures this build to only execute if it has not previously been\n * run during the life of the current process.\n * @return {!Build} A self reference.\n */\nBuild.prototype.onlyOnce = function() {\n  this.cacheResults_ = true;\n  return this;\n};\n\n\n/**\n * Executes the build.\n * @return {!Promise} A promise that will be resolved when\n *     the build has completed.\n * @throws {Error} If no targets were specified.\n */\nBuild.prototype.go = function() {\n  var targets = this.targets_;\n  if (!targets.length) {\n    throw Error('No targets specified');\n  }\n\n  // Filter out cached results.\n  if (this.cacheResults_) {\n    targets = targets.filter(function(target) {\n      return !builtTargets.hasOwnProperty(target);\n    });\n\n    if (!targets.length) {\n      return Promise.resolve();\n    }\n  }\n\n  console.log('\\nBuilding', targets.join(' '), '...');\n\n  var cmd, args = targets;\n  if (process.platform === 'win32') {\n    cmd = 'cmd.exe';\n    args.unshift('/c', path.join(projectRoot, 'go.bat'));\n  } else {\n    cmd = path.join(projectRoot, 'go');\n  }\n\n  return new Promise((resolve, reject) => {\n    spawn(cmd, args, {\n      cwd: projectRoot,\n      env: process.env,\n      stdio: ['ignore', process.stdout, process.stderr]\n    }).on('exit', function(code, signal) {\n      if (code === 0) {\n        targets.forEach(function(target) {\n          builtTargets[target] = 1;\n        });\n        return resolve();\n      }\n\n      var msg = 'Unable to build artifacts';\n      if (code) {  // May be null.\n        msg += '; code=' + code;\n      }\n      if (signal) {\n        msg += '; signal=' + signal;\n      }\n\n      reject(Error(msg));\n    });\n  });\n};\n\n\n// PUBLIC API\n\n\n/**\n * Creates a build of the listed targets.\n * @param {...string} var_args The targets to build.\n * @return {!Build} The new build.\n * @throws {Error} If not running in dev mode.\n */\nexports.of = function(var_args) {\n  var targets = Array.prototype.slice.call(arguments, 0);\n  return new Build(targets);\n};\n\n\n/**\n * @return {string} Absolute path of the project's root directory.\n * @throws {Error} If not running in dev mode.\n */\nexports.projectRoot = function() {\n  checkIsDevMode();\n  return projectRoot;\n};\n"]}