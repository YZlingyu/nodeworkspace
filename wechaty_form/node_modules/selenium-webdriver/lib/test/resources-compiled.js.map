{"version":3,"sources":["resources.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,KAAK,QAAQ,IAAR,CAAT;AAAA,IACI,OAAO,QAAQ,MAAR,CADX;;AAGA,IAAI,eAAe,QAAQ,YAAR,IACf,QAAQ,SAAR,EAAmB,WAAnB,EADe,GAEf,KAAK,IAAL,CAAU,SAAV,EAAqB,MAArB,CAFJ;;AAKA;;;AAGA;;;;;;;AAOA,QAAQ,MAAR,GAAiB,UAAS,QAAT,EAAmB;AAClC,MAAI,WAAW,KAAK,SAAL,CAAe,KAAK,IAAL,CAAU,YAAV,EAAwB,QAAxB,CAAf,CAAf;AACA,MAAI,CAAC,GAAG,UAAH,CAAc,QAAd,CAAL,EAA8B;AAC5B,UAAM,MAAM,0BAA0B,QAAhC,CAAN;AACD;AACD,SAAO,QAAP;AACD,CAND","file":"resources-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nvar fs = require('fs'),\n    path = require('path');\n\nvar resourceRoot = require('../devmode') ?\n    require('./build').projectRoot() :\n    path.join(__dirname, 'data');\n\n\n// PUBLIC API\n\n\n/**\n * Locates a test resource.\n * @param {string} resourcePath Path of the resource to locate.\n * @param {string} filePath The file to locate from the root of the project.\n * @return {string} The full path for the file, if it exists.\n * @throws {Error} If the file does not exist.\n */\nexports.locate = function(filePath) {\n  var fullPath = path.normalize(path.join(resourceRoot, filePath));\n  if (!fs.existsSync(fullPath)) {\n    throw Error('File does not exist: ' + filePath);\n  }\n  return fullPath;\n};\n"]}