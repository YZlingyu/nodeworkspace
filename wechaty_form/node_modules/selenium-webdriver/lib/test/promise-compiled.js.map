{"version":3,"sources":["promise.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;;;;;AAKA,SAAS,kBAAT,CAA4B,OAA5B,EAAqC,EAArC,EAAyC;AACvC,WAAU,6BAA2B,OAAQ,GAA7C,EAAgD,YAAW;AACzD,QAAI,KAAJ;;AAEA,aAAS,WAAT,GAAuB;AACrB,cAAQ,QAAQ,GAAR,CAAY,wBAApB;AACA,cAAQ,GAAR,CAAY,wBAAZ,GAAuC,OAAvC;AACD;;AAED,aAAS,YAAT,GAAwB;AACtB,UAAI,UAAU,SAAd,EAAyB;AACvB,eAAO,QAAQ,GAAR,CAAY,wBAAnB;AACD,OAFD,MAEO;AACL,gBAAQ,GAAR,CAAY,wBAAZ,GAAuC,KAAvC;AACD;AACF;;AAED,WAAO,WAAP;AACA,UAAM,YAAN;;AAEA,QAAI;AACF;AACA;AACD,KAHD,SAGU;AACR;AACD;AACF,GAzBD;AA0BD;;AAGD;;;;AAIA,QAAQ,mBAAR,GAA8B,UAAS,EAAT,EAAa;AACzC,qBAAmB,IAAnB,EAAyB,EAAzB;AACA,qBAAmB,KAAnB,EAA0B,EAA1B;AACD,CAHD;;AAMA;;;AAGA,QAAQ,oBAAR,GAA+B,UAAS,EAAT,EAAa;AAC1C,qBAAmB,IAAnB,EAAyB,EAAzB;AACD,CAFD;;AAKA;;;AAGA,QAAQ,qBAAR,GAAgC,UAAS,EAAT,EAAa;AAC3C,qBAAmB,KAAnB,EAA0B,EAA1B;AACD,CAFD","file":"promise-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\n\n/**\n * Configures a block of mocha tests, ensuring the promise manager is either\n * enabled or disabled for the tests' execution.\n * for their execution.\n */\nfunction withPromiseManager(enabled, fn) {\n  describe(`SELENIUM_PROMISE_MANAGER=${enabled}`, function() {\n    let saved;\n\n    function changeState() {\n      saved = process.env.SELENIUM_PROMISE_MANAGER;\n      process.env.SELENIUM_PROMISE_MANAGER = enabled;\n    }\n\n    function restoreState() {\n      if (saved === undefined) {\n        delete process.env.SELENIUM_PROMISE_MANAGER;\n      } else {\n        process.env.SELENIUM_PROMISE_MANAGER = saved;\n      }\n    }\n\n    before(changeState);\n    after(restoreState);\n\n    try {\n      changeState();\n      fn();\n    } finally {\n      restoreState();\n    }\n  });\n};\n\n\n/**\n * Defines a set of tests to run both with and without the promise manager\n * enabled.\n */\nexports.promiseManagerSuite = function(fn) {\n  withPromiseManager(true, fn);\n  withPromiseManager(false, fn);\n};\n\n\n/**\n * Ensures the promise manager is enabled when the provided tests run.\n */\nexports.enablePromiseManager = function(fn) {\n  withPromiseManager(true, fn);\n};\n\n\n/**\n * Ensures the promise manager is disabled when the provided tests run.\n */\nexports.disablePromiseManager = function(fn) {\n  withPromiseManager(false, fn);\n};\n"]}