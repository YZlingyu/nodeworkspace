{"version":3,"sources":["ie.js"],"names":[],"mappings":"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","file":"ie-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines a {@linkplain Driver WebDriver} client for Microsoft's\n * Internet Explorer. Before using the IEDriver, you must download the latest\n * [IEDriverServer](http://selenium-release.storage.googleapis.com/index.html)\n * and place it on your\n * [PATH](http://en.wikipedia.org/wiki/PATH_%28variable%29). You must also apply\n * the system configuration outlined on the Selenium project\n * [wiki](https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver)\n */\n\n'use strict';\n\nconst fs = require('fs'),\n    util = require('util');\n\nconst http = require('./http'),\n    io = require('./io'),\n    capabilities = require('./lib/capabilities'),\n    promise = require('./lib/promise'),\n    webdriver = require('./lib/webdriver'),\n    portprober = require('./net/portprober'),\n    remote = require('./remote');\n\n\nconst IEDRIVER_EXE = 'IEDriverServer.exe';\n\n\n\n/**\n * IEDriverServer logging levels.\n * @enum {string}\n */\nconst Level = {\n  FATAL: 'FATAL',\n  ERROR: 'ERROR',\n  WARN: 'WARN',\n  INFO: 'INFO',\n  DEBUG: 'DEBUG',\n  TRACE: 'TRACE'\n};\n\n\n\n/**\n * Option keys:\n * https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities#ie-specific\n * @enum {string}\n */\nconst Key = {\n  IGNORE_PROTECTED_MODE_SETTINGS: 'ignoreProtectedModeSettings',\n  IGNORE_ZOOM_SETTING: 'ignoreZoomSetting',\n  INITIAL_BROWSER_URL: 'initialBrowserUrl',\n  ENABLE_PERSISTENT_HOVER: 'enablePersistentHover',\n  ENABLE_ELEMENT_CACHE_CLEANUP: 'enableElementCacheCleanup',\n  REQUIRE_WINDOW_FOCUS: 'requireWindowFocus',\n  BROWSER_ATTACH_TIMEOUT: 'browserAttachTimeout',\n  FORCE_CREATE_PROCESS: 'ie.forceCreateProcessApi',\n  BROWSER_COMMAND_LINE_SWITCHES: 'ie.browserCommandLineSwitches',\n  USE_PER_PROCESS_PROXY: 'ie.usePerProcessProxy',\n  ENSURE_CLEAN_SESSION: 'ie.ensureCleanSession',\n  LOG_FILE: 'logFile',\n  LOG_LEVEL: 'logLevel',\n  HOST: 'host',\n  EXTRACT_PATH: 'extractPath',\n  SILENT: 'silent'\n};\n\n\n/**\n * Class for managing IEDriver specific options.\n */\nclass Options {\n  constructor() {\n    /** @private {!Object<(boolean|number|string|!Array<string>)>} */\n    this.options_ = {};\n\n    /** @private {(capabilities.ProxyConfig|null)} */\n    this.proxy_ = null;\n  }\n\n  /**\n   * Extracts the IEDriver specific options from the given capabilities\n   * object.\n   * @param {!capabilities.Capabilities} caps The capabilities object.\n   * @return {!Options} The IEDriver options.\n   */\n  static fromCapabilities(caps) {\n    var options = new Options();\n    var map = options.options_;\n\n    Object.keys(Key).forEach(function(key) {\n      key = Key[key];\n      if (caps.has(key)) {\n        map[key] = caps.get(key);\n      }\n    });\n\n    if (caps.has(capabilities.Capability.PROXY)) {\n      options.setProxy(caps.get(capabilities.Capability.PROXY));\n    }\n\n    return options;\n  }\n\n  /**\n   * Whether to disable the protected mode settings check when the session is\n   * created. Disbling this setting may lead to significant instability as the\n   * browser may become unresponsive/hang. Only \"best effort\" support is provided\n   * when using this capability.\n   *\n   * For more information, refer to the IEDriver's\n   * [required system configuration](http://goo.gl/eH0Yi3).\n   *\n   * @param {boolean} ignoreSettings Whether to ignore protected mode settings.\n   * @return {!Options} A self reference.\n   */\n  introduceFlakinessByIgnoringProtectedModeSettings(ignoreSettings) {\n    this.options_[Key.IGNORE_PROTECTED_MODE_SETTINGS] = !!ignoreSettings;\n    return this;\n  }\n\n  /**\n   * Indicates whether to skip the check that the browser's zoom level is set to\n   * 100%.\n   *\n   * @param {boolean} ignore Whether to ignore the browser's zoom level settings.\n   * @return {!Options} A self reference.\n   */\n  ignoreZoomSetting(ignore) {\n    this.options_[Key.IGNORE_ZOOM_SETTING] = !!ignore;\n    return this;\n  }\n\n  /**\n   * Sets the initial URL loaded when IE starts. This is intended to be used with\n   * {@link #ignoreProtectedModeSettings} to allow the user to initialize IE in\n   * the proper Protected Mode zone. Setting this option may cause browser\n   * instability or flaky and unresponsive code. Only \"best effort\" support is\n   * provided when using this option.\n   *\n   * @param {string} url The initial browser URL.\n   * @return {!Options} A self reference.\n   */\n  initialBrowserUrl(url) {\n    this.options_[Key.INITIAL_BROWSER_URL] = url;\n    return this;\n  }\n\n  /**\n   * Configures whether to enable persistent mouse hovering (true by default).\n   * Persistent hovering is achieved by continuously firing mouse over events at\n   * the last location the mouse cursor has been moved to.\n   *\n   * @param {boolean} enable Whether to enable persistent hovering.\n   * @return {!Options} A self reference.\n   */\n  enablePersistentHover(enable) {\n    this.options_[Key.ENABLE_PERSISTENT_HOVER] = !!enable;\n    return this;\n  }\n\n  /**\n   * Configures whether the driver should attempt to remove obsolete\n   * {@linkplain webdriver.WebElement WebElements} from its internal cache on\n   * page navigation (true by default). Disabling this option will cause the\n   * driver to run with a larger memory footprint.\n   *\n   * @param {boolean} enable Whether to enable element reference cleanup.\n   * @return {!Options} A self reference.\n   */\n  enableElementCacheCleanup(enable) {\n    this.options_[Key.ENABLE_ELEMENT_CACHE_CLEANUP] = !!enable;\n    return this;\n  }\n\n  /**\n   * Configures whether to require the IE window to have input focus before\n   * performing any user interactions (i.e. mouse or keyboard events). This\n   * option is disabled by default, but delivers much more accurate interaction\n   * events when enabled.\n   *\n   * @param {boolean} require Whether to require window focus.\n   * @return {!Options} A self reference.\n   */\n  requireWindowFocus(require) {\n    this.options_[Key.REQUIRE_WINDOW_FOCUS] = !!require;\n    return this;\n  }\n\n  /**\n   * Configures the timeout, in milliseconds, that the driver will attempt to\n   * located and attach to a newly opened instance of Internet Explorer. The\n   * default is zero, which indicates waiting indefinitely.\n   *\n   * @param {number} timeout How long to wait for IE.\n   * @return {!Options} A self reference.\n   */\n  browserAttachTimeout(timeout) {\n    this.options_[Key.BROWSER_ATTACH_TIMEOUT] = Math.max(timeout, 0);\n    return this;\n  }\n\n  /**\n   * Configures whether to launch Internet Explorer using the CreateProcess API.\n   * If this option is not specified, IE is launched using IELaunchURL, if\n   * available. For IE 8 and above, this option requires the TabProcGrowth\n   * registry value to be set to 0.\n   *\n   * @param {boolean} force Whether to use the CreateProcess API.\n   * @return {!Options} A self reference.\n   */\n  forceCreateProcessApi(force) {\n    this.options_[Key.FORCE_CREATE_PROCESS] = !!force;\n    return this;\n  }\n\n  /**\n   * Specifies command-line switches to use when launching Internet Explorer.\n   * This is only valid when used with {@link #forceCreateProcessApi}.\n   *\n   * @param {...(string|!Array.<string>)} var_args The arguments to add.\n   * @return {!Options} A self reference.\n   */\n  addArguments(var_args) {\n    var args = this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] || [];\n    args = args.concat.apply(args, arguments);\n    this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] = args;\n    return this;\n  }\n\n  /**\n   * Configures whether proxies should be configured on a per-process basis. If\n   * not set, setting a {@linkplain #setProxy proxy} will configure the system\n   * proxy. The default behavior is to use the system proxy.\n   *\n   * @param {boolean} enable Whether to enable per-process proxy settings.\n   * @return {!Options} A self reference.\n   */\n  usePerProcessProxy(enable) {\n    this.options_[Key.USE_PER_PROCESS_PROXY] = !!enable;\n    return this;\n  }\n\n  /**\n   * Configures whether to clear the cache, cookies, history, and saved form data\n   * before starting the browser. _Using this capability will clear session data\n   * for all running instances of Internet Explorer, including those started\n   * manually._\n   *\n   * @param {boolean} cleanSession Whether to clear all session data on startup.\n   * @return {!Options} A self reference.\n   */\n  ensureCleanSession(cleanSession) {\n    this.options_[Key.ENSURE_CLEAN_SESSION] = !!cleanSession;\n    return this;\n  }\n\n  /**\n   * Sets the path to the log file the driver should log to.\n   * @param {string} file The log file path.\n   * @return {!Options} A self reference.\n   */\n  setLogFile(file) {\n    this.options_[Key.LOG_FILE] = file;\n    return this;\n  }\n\n  /**\n   * Sets the IEDriverServer's logging {@linkplain Level level}.\n   * @param {Level} level The logging level.\n   * @return {!Options} A self reference.\n   */\n  setLogLevel(level) {\n    this.options_[Key.LOG_LEVEL] = level;\n    return this;\n  }\n\n  /**\n   * Sets the IP address of the driver's host adapter.\n   * @param {string} host The IP address to use.\n   * @return {!Options} A self reference.\n   */\n  setHost(host) {\n    this.options_[Key.HOST] = host;\n    return this;\n  }\n\n  /**\n   * Sets the path of the temporary data directory to use.\n   * @param {string} path The log file path.\n   * @return {!Options} A self reference.\n   */\n  setExtractPath(path) {\n    this.options_[Key.EXTRACT_PATH] = path;\n    return this;\n  }\n\n  /**\n   * Sets whether the driver should start in silent mode.\n   * @param {boolean} silent Whether to run in silent mode.\n   * @return {!Options} A self reference.\n   */\n  silent(silent) {\n    this.options_[Key.SILENT] = silent;\n    return this;\n  }\n\n  /**\n   * Sets the proxy settings for the new session.\n   * @param {capabilities.ProxyConfig} proxy The proxy configuration to use.\n   * @return {!Options} A self reference.\n   */\n  setProxy(proxy) {\n    this.proxy_ = proxy;\n    return this;\n  }\n\n  /**\n   * Converts this options instance to a {@link capabilities.Capabilities}\n   * object.\n   * @param {capabilities.Capabilities=} opt_capabilities The capabilities to\n   *     merge these options into, if any.\n   * @return {!capabilities.Capabilities} The capabilities.\n   */\n  toCapabilities(opt_capabilities) {\n    var caps = opt_capabilities || capabilities.Capabilities.ie();\n    if (this.proxy_) {\n      caps.set(capabilities.Capability.PROXY, this.proxy_);\n    }\n    Object.keys(this.options_).forEach(function(key) {\n      caps.set(key, this.options_[key]);\n    }, this);\n    return caps;\n  }\n}\n\n\nfunction createServiceFromCapabilities(capabilities) {\n  if (process.platform !== 'win32') {\n    throw Error(\n        'The IEDriver may only be used on Windows, but you appear to be on ' +\n        process.platform + '. Did you mean to run against a remote ' +\n        'WebDriver server?');\n  }\n\n  let exe = io.findInPath(IEDRIVER_EXE, true);\n  if (!exe || !fs.existsSync(exe)) {\n    throw Error(\n        `${IEDRIVER_EXE} could not be found on the current PATH. Please ` +\n        `download the latest version of ${IEDRIVER_EXE} from ` +\n        'http://selenium-release.storage.googleapis.com/index.html and ' +\n        'ensure it can be found on your system PATH.');\n  }\n\n  var args = [];\n  if (capabilities.has(Key.HOST)) {\n    args.push('--host=' + capabilities.get(Key.HOST));\n  }\n  if (capabilities.has(Key.LOG_FILE)) {\n    args.push('--log-file=' + capabilities.get(Key.LOG_FILE));\n  }\n  if (capabilities.has(Key.LOG_LEVEL)) {\n    args.push('--log-level=' + capabilities.get(Key.LOG_LEVEL));\n  }\n  if (capabilities.has(Key.EXTRACT_PATH)) {\n    args.push('--extract-path=' + capabilities.get(Key.EXTRACT_PATH));\n  }\n  if (capabilities.get(Key.SILENT)) {\n    args.push('--silent');\n  }\n\n  var port = portprober.findFreePort();\n  return new remote.DriverService(exe, {\n    loopback: true,\n    port: port,\n    args: port.then(function(port) {\n      return args.concat('--port=' + port);\n    }),\n    stdio: 'ignore'\n  });\n}\n\n\n/**\n * A WebDriver client for Microsoft's Internet Explorer.\n */\nclass Driver extends webdriver.WebDriver {\n  /**\n   * Creates a new session for Microsoft's Internet Explorer.\n   *\n   * @param {(capabilities.Capabilities|Options)=} opt_config The configuration\n   *     options.\n   * @param {promise.ControlFlow=} opt_flow The control flow to use,\n   *     or {@code null} to use the currently active flow.\n   * @return {!Driver} A new driver instance.\n   */\n  static createSession(opt_config, opt_flow) {\n    var caps = opt_config instanceof Options ?\n        opt_config.toCapabilities() :\n        (opt_config || capabilities.Capabilities.ie());\n\n    var service = createServiceFromCapabilities(caps);\n    var client = service.start().then(url => new http.HttpClient(url));\n    var executor = new http.Executor(client);\n\n    return /** @type {!Driver} */(webdriver.WebDriver.createSession(\n        executor, caps, opt_flow, this, () => service.kill()));\n  }\n\n  /**\n   * This function is a no-op as file detectors are not supported by this\n   * implementation.\n   * @override\n   */\n  setFileDetector() {}\n}\n\n\n// PUBLIC API\n\n\nexports.Driver = Driver;\nexports.Options = Options;\nexports.Level = Level;\n"]}