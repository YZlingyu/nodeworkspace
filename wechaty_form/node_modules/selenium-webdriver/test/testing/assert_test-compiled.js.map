{"version":3,"sources":["assert_test.js"],"names":[],"mappings":"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","file":"assert_test-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nconst assert = require('../../testing/assert');\n\nconst AssertionError = require('assert').AssertionError;\nconst assertTrue = require('assert').ok;\nconst assertEqual = require('assert').equal;\nconst assertThrows = require('assert').throws;\nconst fail = require('assert').fail;\n\n\ndescribe('assert', function() {\n  describe('atLeast', function() {\n    it('compares subject >= value', function() {\n      assert(1).atLeast(0);\n      assert(1).atLeast(1);\n      assertThrows(() => assert(1).atLeast(2));\n    });\n\n    it('accepts failure message', function() {\n      assertThrows(\n          () => assert(1).atLeast(2, 'hi there!'),\n          (error) => error.message.indexOf('hi there') != -1);\n    });\n\n    it('fails if given a non-numeric subject', function() {\n      assertThrows(() => assert('a').atLeast(1));\n    });\n\n    it('fails if given a non-numeric bound', function() {\n      assertThrows(() => assert(1).atLeast('a'));\n    });\n\n    it('waits for promised subject', function() {\n      return assert(Promise.resolve(123)).atLeast(100);\n    });\n\n    it('waits for promised subject (with failure)', function() {\n      return assert(Promise.resolve(100))\n          .atLeast(123)\n          .then(() => fail('should have failed'), function(e) {\n            assertInstanceOf(AssertionError, e);\n            assertEqual('100 >= 123', e.message);\n          });\n    });\n  });\n\n  describe('atMost', function() {\n    it('compares subject <= value', function() {\n      assertThrows(() => assert(1).atMost(0));\n      assert(1).atMost(1);\n      assert(1).atMost(2);\n    });\n\n    it('accepts failure message', function() {\n      assertThrows(\n          () => assert(1).atMost(0, 'hi there!'),\n          (error) => error.message.indexOf('hi there!') != -1);\n    });\n\n    it('fails if given a non-numeric subject', function() {\n      assertThrows(() => assert(1).atMost('a'));\n    });\n\n    it('fails if given a non-numeric bound', function() {\n      assertThrows(() => assert('a').atMost(1));\n    });\n\n    it('waits for promised subject', function() {\n      return assert(Promise.resolve(100)).atMost(123);\n    });\n\n    it('waits for promised subject (with failure)', function() {\n      return assert(Promise.resolve(123))\n          .atMost(100)\n          .then(() => fail('should have failed'), function(e) {\n            assertInstanceOf(AssertionError, e);\n            assertEqual('123 <= 100', e.message);\n          });\n    });\n  });\n\n  describe('greaterThan', function() {\n    it('compares subject > value', function() {\n      assertThrows(() => assert(1).greaterThan(1));\n      assertThrows(() => assert(1).greaterThan(2));\n      assert(2).greaterThan(1);\n    });\n\n    it('accepts failure message', function() {\n      assertThrows(\n          () => assert(0).greaterThan(1, 'hi there!'),\n          (error) => error.message.indexOf('hi there!') != -1);\n    });\n\n    it('fails if given a non-numeric subject', function() {\n      assertThrows(() => assert('a').atMost(1));\n    });\n\n    it('fails if given a non-numeric bound', function() {\n      assertThrows(() => assert(1).atMost('a'));\n    });\n\n    it('waits for promised subject', function() {\n      return assert(Promise.resolve(123)).greaterThan(100);\n    });\n\n    it('waits for promised subject (with failure)', function() {\n      return assert(Promise.resolve(100))\n          .greaterThan(123)\n          .then(() => fail('should have failed'), function(e) {\n            assertInstanceOf(AssertionError, e);\n            assertEqual('100 > 123', e.message);\n          });\n    });\n  });\n\n  describe('lessThan', function() {\n    it('compares subject < value', function() {\n      assertThrows(() => assert(1).lessThan(0));\n      assertThrows(() => assert(1).lessThan(1));\n      assert(1).lessThan(2);\n    });\n\n    it('accepts failure message', function() {\n      assertThrows(\n          () => assert(1).lessThan(0, 'hi there!'),\n          (error) => error.message.indexOf('hi there!') != -1);\n    });\n\n    it('fails if given a non-numeric subject', function() {\n      assertThrows(() => assert('a').lessThan(1));\n    });\n\n    it('fails if given a non-numeric bound', function() {\n      assertThrows(() => assert(1).lessThan('a'));\n    });\n\n    it('waits for promised subject', function() {\n      return assert(Promise.resolve(100)).lessThan(123);\n    });\n\n    it('waits for promised subject (with failure)', function() {\n      return assert(Promise.resolve(123))\n          .lessThan(100)\n          .then(() => fail('should have failed'), function(e) {\n            assertInstanceOf(AssertionError, e);\n            assertEqual('123 < 100', e.message);\n          });\n    });\n  });\n\n  describe('closeTo', function() {\n    it('accepts values within epislon of target', function() {\n      assert(123).closeTo(123, 0);\n      assert(123).closeTo(124, 1);\n      assert(125).closeTo(124, 1);\n\n      assertThrows(() => assert(123).closeTo(125, .1));\n      assertThrows(() => assert(1./3).closeTo(.8, .01));\n    });\n\n    it('waits for promised values', function() {\n      let p = new Promise(resolve => setTimeout(() => resolve(123), 10));\n      return assert(p).closeTo(124, 1);\n    });\n  });\n\n  describe('instanceOf', function() {\n    it('works with direct instances', function() {\n      assert(Error('foo')).instanceOf(Error);\n    });\n\n    it('works with sub-types', function() {\n      assert(TypeError('foo')).instanceOf(Error);\n    });\n\n    it('parent types are not instances of sub-types', function() {\n      assertThrows(() => assert(Error('foo')).instanceOf(TypeError));\n    });\n  });\n\n  describe('isNull', function() {\n    it('normal case', function() {\n      assert(null).isNull();\n      assertThrows(() => assert(1).isNull());\n    });\n\n    it('handles promised values', function() {\n      let p = new Promise(function(f) {\n        setTimeout(() => f(null), 10);\n      });\n      return assert(p).isNull();\n    });\n\n    it('does not match on undefined', function() {\n      assertThrows(() => assert(void(0)).isNull());\n    })\n  });\n\n  describe('isUndefined', function() {\n    it('normal case', function() {\n      assert(void(0)).isUndefined();\n      assertThrows(() => assert(1).isUndefined());\n    });\n\n    it('handles promised values', function() {\n      let p = new Promise(function(f) {\n        setTimeout(() => f(void(0)), 10);\n      });\n      return assert(p).isUndefined();\n    });\n\n    it('does not match on null', function() {\n      assertThrows(() => assert(null).isUndefined());\n    })\n  });\n\n  describe('contains', function() {\n    it('works with strings', function() {\n      assert('abc').contains('a');\n      assert('abc').contains('ab');\n      assert('abc').contains('abc');\n      assert('abc').contains('bc');\n      assert('abc').contains('c');\n      assertThrows(() => assert('abc').contains('d'));\n    });\n\n    it('works with arrays', function() {\n      assert([1, 2, 3]).contains(1);\n      assert([1, 2, 3]).contains(2);\n      assert([1, 2, 3]).contains(3);\n      assertThrows(() => assert([1, 2]).contains(3));\n    });\n\n    it('works with maps', function() {\n      let m = new Map;\n      m.set(1, 2);\n      assert(m).contains(1);\n      assertThrows(() => assert(m).contains(2));\n    });\n\n    it('works with sets', function() {\n      let s = new Set;\n      s.add(1);\n      assert(s).contains(1);\n      assertThrows(() => assert(s).contains(2));\n    });\n\n    it('requires an array, string, map, or set subject', function() {\n      assertThrows(() => assert(123).contains('a'));\n    });\n  });\n\n  describe('endsWith', function() {\n    it('works', function() {\n      assert('abc').endsWith('abc');\n      assert('abc').endsWith('bc');\n      assert('abc').endsWith('c');\n      assertThrows(() => assert('abc').endsWith('d'));\n    })\n  });\n\n  describe('startsWith', function() {\n    it('works', function() {\n      assert('abc').startsWith('abc');\n      assert('abc').startsWith('ab');\n      assert('abc').startsWith('a');\n      assertThrows(() => assert('abc').startsWith('d'));\n    })\n  });\n\n  describe('matches', function() {\n    it('requires a regex value', function() {\n      assertThrows(() => assert('abc').matches(1234));\n    });\n\n    it('requires a string value', function() {\n      assertThrows(() => assert(1234).matches(/abc/));\n    });\n\n    it('requires a string value (promise case)', function() {\n      return assert(Promise.resolve(1234))\n          .matches(/abc/)\n          .then(fail, function(error) {\n            assertEqual(\n                'Expected a string matching /abc/, got <1234> (number)',\n                error.message);\n          });\n    });\n\n    it('applies regex', function() {\n      assert('abc').matches(/abc/);\n      assertThrows(() => assert('def').matches(/abc/));\n    });\n  });\n\n  describe('isTrue', function() {\n    it('only accepts booleans', function() {\n      assertThrows(() => assert(123).isTrue());\n    });\n\n    it('accepts true values', function() {\n      assert(true).isTrue();\n      assert(Boolean('abc')).isTrue();\n      return assert(Promise.resolve(true)).isTrue();\n    });\n\n    it('rejects false values', function() {\n      assertThrows(() => assert(false).isTrue());\n      assertThrows(() => assert(Boolean(0)).isTrue());\n      return assert(Promise.resolve(false)).isTrue()\n          .then(fail, function() {/*no-op, ok*/});\n    });\n  });\n\n  describe('isFalse', function() {\n    it('only accepts booleans', function() {\n      assertThrows(() => assert(123).isFalse());\n    })\n\n    it('accepts false values', function() {\n      assert(false).isFalse();\n      assert(Boolean('')).isFalse();\n      return assert(Promise.resolve(false)).isFalse();\n    });\n\n    it('rejects true values', function() {\n      assertThrows(() => assert(true).isFalse());\n      assertThrows(() => assert(Boolean(1)).isFalse());\n      return assert(Promise.resolve(true)).isFalse()\n          .then(fail, function() {/*no-op, ok*/});\n    });\n  });\n\n  describe('isEqualTo', function() {\n    it('is strict equality', function() {\n      assert('abc').isEqualTo('abc');\n      assert('abc').equals('abc');\n      assert('abc').equalTo('abc');\n      assertThrows(() => assert('1').isEqualTo(1));\n    });\n  });\n\n  describe('notEqualTo', function() {\n    it('tests strict equality', function() {\n      assert('1').notEqualTo(1);\n      assert(1).notEqualTo('1');\n      assertThrows(() => assert('abc').notEqualTo('abc'));\n    });\n  });\n\n  function assertInstanceOf(ctor, value) {\n    assertTrue(value instanceof ctor);\n  }\n});\n"]}