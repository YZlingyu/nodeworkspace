{"version":3,"sources":["cookie_test.js"],"names":[],"mappings":"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","file":"cookie_test-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nvar assert = require('assert'),\n    url = require('url');\n\nvar test = require('../lib/test'),\n    fileserver = require('../lib/test/fileserver'),\n    Browser = require('..').Browser,\n    Pages = test.Pages;\n\n\ntest.suite(function(env) {\n  var driver;\n\n  test.before(function*() {\n    driver = yield env.builder().build();\n  });\n\n  test.after(function() {\n    return driver.quit();\n  });\n\n  // Cookie handling is broken.\n  test.ignore(env.browsers(Browser.PHANTOM_JS, Browser.SAFARI)).\n  describe('Cookie Management;', function() {\n\n    test.beforeEach(function*() {\n      yield driver.get(fileserver.Pages.ajaxyPage);\n      yield driver.manage().deleteAllCookies();\n      return assertHasCookies();\n    });\n\n    test.it('can add new cookies', function*() {\n      var cookie = createCookieSpec();\n\n      yield driver.manage().addCookie(cookie);\n      yield driver.manage().getCookie(cookie.name).then(function(actual) {\n        assert.equal(actual.value, cookie.value);\n      });\n    });\n\n    test.it('can get all cookies', function*() {\n      var cookie1 = createCookieSpec();\n      var cookie2 = createCookieSpec();\n\n      yield driver.manage().addCookie(cookie1);\n      yield driver.manage().addCookie(cookie2);\n\n      return assertHasCookies(cookie1, cookie2);\n    });\n\n    test.ignore(env.browsers(Browser.IE)).\n    it('only returns cookies visible to the current page', function*() {\n      var cookie1 = createCookieSpec();\n\n      yield driver.manage().addCookie(cookie1);\n\n      var pageUrl = fileserver.whereIs('page/1');\n      var cookie2 = createCookieSpec({\n        path: url.parse(pageUrl).pathname\n      });\n      yield driver.get(pageUrl);\n      yield driver.manage().addCookie(cookie2);\n      yield assertHasCookies(cookie1, cookie2);\n\n      yield driver.get(fileserver.Pages.ajaxyPage);\n      yield assertHasCookies(cookie1);\n\n      yield driver.get(pageUrl);\n      yield assertHasCookies(cookie1, cookie2);\n    });\n\n    test.it('can delete all cookies', function*() {\n      var cookie1 = createCookieSpec();\n      var cookie2 = createCookieSpec();\n\n      yield driver.executeScript(\n          'document.cookie = arguments[0] + \"=\" + arguments[1];' +\n          'document.cookie = arguments[2] + \"=\" + arguments[3];',\n          cookie1.name, cookie1.value, cookie2.name, cookie2.value);\n      yield assertHasCookies(cookie1, cookie2);\n\n      yield driver.manage().deleteAllCookies();\n      yield assertHasCookies();\n    });\n\n    test.it('can delete cookies by name', function*() {\n      var cookie1 = createCookieSpec();\n      var cookie2 = createCookieSpec();\n\n      yield driver.executeScript(\n          'document.cookie = arguments[0] + \"=\" + arguments[1];' +\n          'document.cookie = arguments[2] + \"=\" + arguments[3];',\n          cookie1.name, cookie1.value, cookie2.name, cookie2.value);\n      yield assertHasCookies(cookie1, cookie2);\n\n      yield driver.manage().deleteCookie(cookie1.name);\n      yield assertHasCookies(cookie2);\n    });\n\n    test.it('should only delete cookie with exact name', function*() {\n      var cookie1 = createCookieSpec();\n      var cookie2 = createCookieSpec();\n      var cookie3 = {name: cookie1.name + 'xx', value: cookie1.value};\n\n      yield driver.executeScript(\n          'document.cookie = arguments[0] + \"=\" + arguments[1];' +\n          'document.cookie = arguments[2] + \"=\" + arguments[3];' +\n          'document.cookie = arguments[4] + \"=\" + arguments[5];',\n          cookie1.name, cookie1.value, cookie2.name, cookie2.value,\n          cookie3.name, cookie3.value);\n      yield assertHasCookies(cookie1, cookie2, cookie3);\n\n      yield driver.manage().deleteCookie(cookie1.name);\n      yield assertHasCookies(cookie2, cookie3);\n    });\n\n    test.it('can delete cookies set higher in the path', function*() {\n      var cookie = createCookieSpec();\n      var childUrl = fileserver.whereIs('child/childPage.html');\n      var grandchildUrl = fileserver.whereIs(\n          'child/grandchild/grandchildPage.html');\n\n      yield driver.get(childUrl);\n      yield driver.manage().addCookie(cookie);\n      yield assertHasCookies(cookie);\n\n      yield driver.get(grandchildUrl);\n      yield assertHasCookies(cookie);\n\n      yield driver.manage().deleteCookie(cookie.name);\n      yield assertHasCookies();\n\n      yield driver.get(childUrl);\n      yield assertHasCookies();\n    });\n\n    test.ignore(env.browsers(\n        Browser.ANDROID,\n        Browser.FIREFOX,\n        'legacy-' + Browser.FIREFOX,\n        Browser.IE)).\n    it('should retain cookie expiry', function*() {\n      let expirationDelay = 5 * 1000;\n      let expiry = new Date(Date.now() + expirationDelay);\n      let cookie = createCookieSpec({expiry});\n\n      yield driver.manage().addCookie(cookie);\n      yield driver.manage().getCookie(cookie.name).then(function(actual) {\n        assert.equal(actual.value, cookie.value);\n        // expiry times are exchanged in seconds since January 1, 1970 UTC.\n        assert.equal(actual.expiry, Math.floor(expiry.getTime() / 1000));\n      });\n\n      yield driver.sleep(expirationDelay);\n      yield assertHasCookies();\n    });\n  });\n\n  function createCookieSpec(opt_options) {\n    let spec = {\n      name: getRandomString(),\n      value: getRandomString()\n    };\n    if (opt_options) {\n      spec = Object.assign(spec, opt_options);\n    }\n    return spec;\n  }\n\n  function buildCookieMap(cookies) {\n    var map = {};\n    cookies.forEach(function(cookie) {\n      map[cookie.name] = cookie;\n    });\n    return map;\n  }\n\n  function assertHasCookies(...expected) {\n    return driver.manage().getCookies().then(function(cookies) {\n      assert.equal(cookies.length, expected.length,\n          'Wrong # of cookies.' +\n          '\\n  Expected: ' + JSON.stringify(expected) +\n          '\\n  Was     : ' + JSON.stringify(cookies));\n\n      var map = buildCookieMap(cookies);\n      for (var i = 0; i < expected.length; ++i) {\n        assert.equal(expected[i].value, map[expected[i].name].value);\n      }\n    });\n  }\n\n  function getRandomString() {\n    var x = 1234567890;\n    return Math.floor(Math.random() * x).toString(36);\n  }\n});\n"]}