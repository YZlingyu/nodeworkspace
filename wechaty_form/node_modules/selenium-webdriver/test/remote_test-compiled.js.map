{"version":3,"sources":["remote_test.js"],"names":[],"mappings":"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","file":"remote_test-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nvar assert = require('assert'),\n    fs = require('fs'),\n    path = require('path');\n\nvar promise = require('../').promise,\n    io = require('../io'),\n    cmd = require('../lib/command'),\n    remote = require('../remote');\n\nconst {enablePromiseManager} = require('../lib/test/promise');\n\ndescribe('DriverService', function() {\n  describe('start()', function() {\n    var service;\n\n    beforeEach(function() {\n      service = new remote.DriverService(process.execPath, {\n        port: 1234,\n        args: ['-e', 'process.exit(1)']\n      });\n    });\n\n    afterEach(function() {\n      return service.kill();\n    });\n\n    it('fails if child-process dies', function() {\n      this.timeout(1000);\n      return service.start(500).then(expectFailure, verifyFailure);\n    });\n\n    enablePromiseManager(function() {\n      describe(\n          'failures propagate through control flow if child-process dies',\n          function() {\n            it('', function() {\n              this.timeout(1000);\n\n              return promise.controlFlow().execute(function() {\n                promise.controlFlow().execute(function() {\n                  return service.start(500);\n                });\n              }).then(expectFailure, verifyFailure);\n            });\n          });\n    });\n\n    function verifyFailure(e) {\n      assert.ok(!(e instanceof promise.CancellationError));\n      assert.equal('Server terminated early with status 1', e.message);\n    }\n\n    function expectFailure() {\n      throw Error('expected to fail');\n    }\n  });\n});\n\ndescribe('FileDetector', function() {\n  class ExplodingDriver {\n    schedule() {\n      throw Error('unexpected call');\n    }\n  }\n\n  it('returns the original path if the file does not exist', function() {\n    return io.tmpDir(dir => {\n      let theFile = path.join(dir, 'not-there');\n      return (new remote.FileDetector)\n          .handleFile(new ExplodingDriver, theFile)\n          .then(f => assert.equal(f, theFile));\n    });\n  });\n\n  it('returns the original path if it is a directory', function() {\n    return io.tmpDir(dir => {\n      return (new remote.FileDetector)\n          .handleFile(new ExplodingDriver, dir)\n          .then(f => assert.equal(f, dir));\n    });\n  });\n\n  it('attempts to upload valid files', function() {\n    return io.tmpFile(theFile => {\n      return (new remote.FileDetector)\n          .handleFile(\n              new (class FakeDriver {\n                schedule(command) {\n                  assert.equal(command.getName(), cmd.Name.UPLOAD_FILE);\n                  assert.equal(typeof command.getParameters()['file'], 'string');\n                  return Promise.resolve('success!');\n                }\n              }),\n              theFile)\n          .then(f => assert.equal(f, 'success!'));\n    });\n  });\n});\n"]}