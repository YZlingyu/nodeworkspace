{"version":3,"sources":["extension_test.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,SAAS,QAAQ,SAAR,CAAb;AAAA,IACI,SAAS,QAAQ,QAAR,CADb;AAAA,IAEI,SAAS,QAAQ,QAAR,CAFb;AAAA,IAGI,KAAK,QAAQ,IAAR,CAHT;AAAA,IAII,OAAO,QAAQ,MAAR,CAJX;;AAMA,IAAI,YAAY,QAAQ,yBAAR,CAAhB;AAAA,IACI,KAAK,QAAQ,UAAR,CADT;AAAA,IAEI,KAAK,QAAQ,eAAR,EAAyB,EAFlC;;AAKA,IAAI,oBAAoB,KAAK,IAAL,CAAU,SAAV,EACpB,gDADoB,CAAxB;AAEA,IAAI,mBAAmB,KAAK,IAAL,CAAU,SAAV,EACnB,wCADmB,CAAvB;;AAGA,IAAI,uBAAuB,6BAA3B;AACA,IAAI,sBAAsB,uBAA1B;;AAGA,SAAS,WAAT,EAAsB,YAAW;AAC/B,KAAG,gCAAH,EAAqC,YAAW;AAC9C,WAAO,GAAG,MAAH,GAAY,IAAZ,CAAiB,UAAS,GAAT,EAAc;AACpC,aAAO,UAAU,OAAV,CAAkB,iBAAlB,EAAqC,GAArC,EAA0C,IAA1C,CAA+C,UAAS,EAAT,EAAa;AACjE,eAAO,KAAP,CAAa,oBAAb,EAAmC,EAAnC;AACA,YAAI,OAAO,KAAK,IAAL,CAAU,GAAV,EAAe,KAAK,MAApB,CAAX;AACA,eAAO,EAAP,CAAU,GAAG,UAAH,CAAc,IAAd,CAAV,EAA+B,mBAAmB,IAAlD;AACA,eAAO,EAAP,CAAU,CAAC,GAAG,QAAH,CAAY,IAAZ,EAAkB,WAAlB,EAAX;;AAEA,YAAI,aAAa,OAAO,UAAP,CAAkB,MAAlB,EACZ,MADY,CACL,GAAG,YAAH,CAAgB,IAAhB,CADK,EAEZ,MAFY,CAEL,KAFK,CAAjB;;AAIA,YAAI,aAAa,OAAO,UAAP,CAAkB,MAAlB,EACZ,MADY,CACL,GAAG,YAAH,CAAgB,iBAAhB,CADK,EAEZ,MAFY,CAEL,KAFK,CAAjB;;AAIA,eAAO,KAAP,CAAa,UAAb,EAAyB,UAAzB;AACD,OAfM,CAAP;AAgBD,KAjBM,CAAP;AAkBD,GAnBD;;AAqBA,KAAG,+BAAH,EAAoC,YAAW;AAC7C,WAAO,GAAG,MAAH,GAAY,IAAZ,CAAiB,UAAS,GAAT,EAAc;AACpC,aAAO,UAAU,OAAV,CAAkB,gBAAlB,EAAoC,GAApC,EAAyC,IAAzC,CAA8C,UAAS,EAAT,EAAa;AAChE,eAAO,KAAP,CAAa,mBAAb,EAAkC,EAAlC;;AAEA,YAAI,OAAO,KAAK,IAAL,CAAU,GAAV,EAAe,mBAAf,CAAX;AACA,eAAO,EAAP,CAAU,GAAG,QAAH,CAAY,IAAZ,EAAkB,WAAlB,EAAV;;AAEA,eAAO,EAAP,CAAU,GAAG,UAAH,CAAc,KAAK,IAAL,CAAU,IAAV,EAAgB,iBAAhB,CAAd,CAAV;AACA,eAAO,EAAP,CAAU,GAAG,UAAH,CAAc,KAAK,IAAL,CAAU,IAAV,EAAgB,qBAAhB,CAAd,CAAV;AACA,eAAO,EAAP,CAAU,GAAG,UAAH,CAAc,KAAK,IAAL,CAAU,IAAV,EAAgB,oBAAhB,CAAd,CAAV;AACA,eAAO,EAAP,CAAU,GAAG,UAAH,CAAc,KAAK,IAAL,CAAU,IAAV,EAAgB,aAAhB,CAAd,CAAV;AACD,OAVM,CAAP;AAWD,KAZM,CAAP;AAaD,GAdD;;AAgBA,KAAG,2CAAH,EAAgD,YAAW;AACzD,WAAO,GAAG,MAAH,GAAY,IAAZ,CAAiB,UAAS,MAAT,EAAiB;AACvC,UAAI,MAAM,GAAG,YAAH,CAAgB,gBAAhB,CAAV;AACA,UAAI,MAAJ,CAAW,GAAX,EAAgB,YAAhB,CAA6B,MAA7B,EAAqC,IAArC;AACA,aAAO,GAAG,MAAH,GAAY,IAAZ,CAAiB,UAAS,MAAT,EAAiB;AACvC,eAAO,UAAU,OAAV,CAAkB,MAAlB,EAA0B,MAA1B,EAAkC,IAAlC,CAAuC,UAAS,EAAT,EAAa;AACzD,iBAAO,KAAP,CAAa,mBAAb,EAAkC,EAAlC;;AAEA,cAAI,MAAM,KAAK,IAAL,CAAU,MAAV,EAAkB,mBAAlB,CAAV;;AAEA,iBAAO,EAAP,CAAU,GAAG,UAAH,CAAc,KAAK,IAAL,CAAU,GAAV,EAAe,iBAAf,CAAd,CAAV;AACA,iBAAO,EAAP,CAAU,GAAG,UAAH,CAAc,KAAK,IAAL,CAAU,GAAV,EAAe,qBAAf,CAAd,CAAV;AACA,iBAAO,EAAP,CAAU,GAAG,UAAH,CAAc,KAAK,IAAL,CAAU,GAAV,EAAe,oBAAf,CAAd,CAAV;AACA,iBAAO,EAAP,CAAU,GAAG,UAAH,CAAc,KAAK,IAAL,CAAU,GAAV,EAAe,aAAf,CAAd,CAAV;AACD,SATM,CAAP;AAUD,OAXM,CAAP;AAYD,KAfM,CAAP;AAgBD,GAjBD;AAkBD,CAxDD","file":"extension_test-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nvar AdmZip = require('adm-zip'),\n    assert = require('assert'),\n    crypto = require('crypto'),\n    fs = require('fs'),\n    path = require('path');\n\nvar extension = require('../../firefox/extension'),\n    io = require('../../io'),\n    it = require('../../testing').it;\n\n\nvar JETPACK_EXTENSION = path.join(__dirname,\n    '../../lib/test/data/firefox/jetpack-sample.xpi');\nvar NORMAL_EXTENSION = path.join(__dirname,\n    '../../lib/test/data/firefox/sample.xpi');\n\nvar JETPACK_EXTENSION_ID = 'jid1-EaXX7k0wwiZR7w@jetpack';\nvar NORMAL_EXTENSION_ID = 'sample@seleniumhq.org';\n\n\ndescribe('extension', function() {\n  it('can install a jetpack xpi file', function() {\n    return io.tmpDir().then(function(dir) {\n      return extension.install(JETPACK_EXTENSION, dir).then(function(id) {\n        assert.equal(JETPACK_EXTENSION_ID, id);\n        var file = path.join(dir, id + '.xpi');\n        assert.ok(fs.existsSync(file), 'no such file: ' + file);\n        assert.ok(!fs.statSync(file).isDirectory());\n\n        var copiedSha1 = crypto.createHash('sha1')\n            .update(fs.readFileSync(file))\n            .digest('hex');\n\n        var goldenSha1 = crypto.createHash('sha1')\n            .update(fs.readFileSync(JETPACK_EXTENSION))\n            .digest('hex');\n\n        assert.equal(copiedSha1, goldenSha1);\n      });\n    });\n  });\n\n  it('can install a normal xpi file', function() {\n    return io.tmpDir().then(function(dir) {\n      return extension.install(NORMAL_EXTENSION, dir).then(function(id) {\n        assert.equal(NORMAL_EXTENSION_ID, id);\n\n        var file = path.join(dir, NORMAL_EXTENSION_ID);\n        assert.ok(fs.statSync(file).isDirectory());\n\n        assert.ok(fs.existsSync(path.join(file, 'chrome.manifest')));\n        assert.ok(fs.existsSync(path.join(file, 'content/overlay.xul')));\n        assert.ok(fs.existsSync(path.join(file, 'content/overlay.js')));\n        assert.ok(fs.existsSync(path.join(file, 'install.rdf')));\n      });\n    });\n  });\n\n  it('can install an extension from a directory', function() {\n    return io.tmpDir().then(function(srcDir) {\n      var buf = fs.readFileSync(NORMAL_EXTENSION);\n      new AdmZip(buf).extractAllTo(srcDir, true);\n      return io.tmpDir().then(function(dstDir) {\n        return extension.install(srcDir, dstDir).then(function(id) {\n          assert.equal(NORMAL_EXTENSION_ID, id);\n\n          var dir = path.join(dstDir, NORMAL_EXTENSION_ID);\n\n          assert.ok(fs.existsSync(path.join(dir, 'chrome.manifest')));\n          assert.ok(fs.existsSync(path.join(dir, 'content/overlay.xul')));\n          assert.ok(fs.existsSync(path.join(dir, 'content/overlay.js')));\n          assert.ok(fs.existsSync(path.join(dir, 'install.rdf')));\n        });\n      });\n    });\n  });\n});\n"]}