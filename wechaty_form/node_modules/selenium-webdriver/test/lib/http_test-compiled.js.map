{"version":3,"sources":["http_test.js"],"names":[],"mappings":"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","file":"http_test-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nvar assert = require('assert'),\n    sinon = require('sinon');\n\nvar Capabilities = require('../../lib/capabilities').Capabilities,\n    Command = require('../../lib/command').Command,\n    CommandName = require('../../lib/command').Name,\n    error = require('../../lib/error'),\n    http = require('../../lib/http'),\n    Session = require('../../lib/session').Session,\n    promise = require('../../lib/promise'),\n    WebElement = require('../../lib/webdriver').WebElement;\n\ndescribe('http', function() {\n  describe('buildPath', function() {\n    it('properly replaces path segments with command parameters', function() {\n      var parameters = {'sessionId':'foo', 'url':'http://www.google.com'};\n      var finalPath = http.buildPath('/session/:sessionId/url', parameters);\n      assert.equal(finalPath, '/session/foo/url');\n      assert.deepEqual(parameters,  {'url':'http://www.google.com'});\n    });\n\n    it('handles web element references', function() {\n      var parameters = {'sessionId':'foo', 'id': WebElement.buildId('bar')};\n\n      var finalPath = http.buildPath(\n          '/session/:sessionId/element/:id/click', parameters);\n      assert.equal(finalPath, '/session/foo/element/bar/click');\n      assert.deepEqual(parameters, {});\n    });\n\n    it('throws if missing a parameter', function() {\n      assert.throws(\n        () => http.buildPath('/session/:sessionId', {}),\n        function(err) {\n          return err instanceof error.InvalidArgumentError\n              && 'Missing required parameter: sessionId' === err.message;\n        });\n\n      assert.throws(\n        () => http.buildPath(\n            '/session/:sessionId/element/:id', {'sessionId': 'foo'}),\n        function(err) {\n          return err instanceof error.InvalidArgumentError\n              && 'Missing required parameter: id' === err.message;\n        });\n    });\n\n    it('does not match on segments that do not start with a colon', function() {\n      assert.equal(\n          http.buildPath('/session/foo:bar/baz', {}),\n          '/session/foo:bar/baz');\n    });\n  });\n\n  describe('Executor', function() {\n    let executor;\n    let client;\n    let send;\n\n    beforeEach(function setUp() {\n      client = new http.Client;\n      send = sinon.stub(client, 'send');\n      executor = new http.Executor(client);\n    });\n\n    describe('command routing', function() {\n      it('rejects unrecognized commands', function() {\n        return executor.execute(new Command('fake-name'))\n            .then(assert.fail, err => {\n              if (err instanceof error.UnknownCommandError\n                  && 'Unrecognized command: fake-name' === err.message) {\n                return;\n              }\n              throw err;\n            })\n      });\n\n      it('rejects promise if client fails to send request', function() {\n        let error = new Error('boom');\n        send.returns(Promise.reject(error));\n        return assertFailsToSend(new Command(CommandName.NEW_SESSION))\n            .then(function(e) {\n               assert.strictEqual(error, e);\n               assertSent(\n                   'POST', '/session', {},\n                   [['Accept', 'application/json; charset=utf-8']]);\n            });\n      });\n\n      it('can execute commands with no URL parameters', function() {\n        var resp = JSON.stringify({sessionId: 'abc123'});\n        send.returns(Promise.resolve(new http.Response(200, {}, resp)));\n\n        let command = new Command(CommandName.NEW_SESSION);\n        return assertSendsSuccessfully(command).then(function(response) {\n           assertSent(\n               'POST', '/session', {},\n               [['Accept', 'application/json; charset=utf-8']]);\n        });\n      });\n\n      it('rejects commands missing URL parameters', function() {\n        let command =\n            new Command(CommandName.FIND_CHILD_ELEMENT).\n                setParameter('sessionId', 's123').\n                // Let this be missing: setParameter('id', {'ELEMENT': 'e456'}).\n                setParameter('using', 'id').\n                setParameter('value', 'foo');\n\n        assert.throws(\n            () => executor.execute(command),\n            function(err) {\n              return err instanceof error.InvalidArgumentError\n                  && 'Missing required parameter: id' === err.message;\n            });\n        assert.ok(!send.called);\n      });\n\n      it('replaces URL parameters with command parameters', function() {\n        var command = new Command(CommandName.GET).\n            setParameter('sessionId', 's123').\n            setParameter('url', 'http://www.google.com');\n\n        send.returns(Promise.resolve(new http.Response(200, {}, '')));\n\n        return assertSendsSuccessfully(command).then(function(response) {\n           assertSent(\n               'POST', '/session/s123/url', {'url': 'http://www.google.com'},\n               [['Accept', 'application/json; charset=utf-8']]);\n        });\n      });\n\n      describe('uses correct URL', function() {\n        beforeEach(() => executor = new http.Executor(client));\n\n        describe('in legacy mode', function() {\n          test(CommandName.GET_WINDOW_SIZE, {sessionId:'s123'}, false,\n               'GET', '/session/s123/window/current/size');\n\n          test(CommandName.SET_WINDOW_SIZE,\n               {sessionId:'s123', width: 1, height: 1}, false,\n               'POST', '/session/s123/window/current/size',\n               {width: 1, height: 1});\n\n          test(CommandName.MAXIMIZE_WINDOW, {sessionId:'s123'}, false,\n               'POST', '/session/s123/window/current/maximize');\n\n          // This is consistent b/w legacy and W3C, just making sure.\n          test(CommandName.GET,\n               {sessionId:'s123', url: 'http://www.example.com'}, false,\n               'POST', '/session/s123/url', {url: 'http://www.example.com'});\n        });\n\n        describe('in W3C mode', function() {\n          test(CommandName.GET_WINDOW_SIZE,\n               {sessionId:'s123'}, true,\n               'GET', '/session/s123/window/size');\n\n          test(CommandName.SET_WINDOW_SIZE,\n               {sessionId:'s123', width: 1, height: 1}, true,\n               'POST', '/session/s123/window/size', {width: 1, height: 1});\n\n          test(CommandName.MAXIMIZE_WINDOW, {sessionId:'s123'}, true,\n               'POST', '/session/s123/window/maximize');\n\n          // This is consistent b/w legacy and W3C, just making sure.\n          test(CommandName.GET,\n               {sessionId:'s123', url: 'http://www.example.com'}, true,\n               'POST', '/session/s123/url', {url: 'http://www.example.com'});\n        });\n\n        function test(command, parameters, w3c,\n            expectedMethod, expectedUrl, opt_expectedParams) {\n          it(`command=${command}`, function() {\n            var resp = JSON.stringify({sessionId: 'abc123'});\n            send.returns(Promise.resolve(new http.Response(200, {}, resp)));\n\n            let cmd = new Command(command).setParameters(parameters);\n            executor.w3c = w3c;\n            return executor.execute(cmd).then(function() {\n               assertSent(\n                   expectedMethod, expectedUrl, opt_expectedParams || {},\n                   [['Accept', 'application/json; charset=utf-8']]);\n            });\n          });\n        }\n      });\n    });\n\n    describe('response parsing', function() {\n      it('extracts value from JSON response', function() {\n        var responseObj = {\n          'status': error.ErrorCode.SUCCESS,\n          'value': 'http://www.google.com'\n        };\n\n        var command = new Command(CommandName.GET_CURRENT_URL)\n            .setParameter('sessionId', 's123');\n\n        send.returns(Promise.resolve(\n            new http.Response(200, {}, JSON.stringify(responseObj))));\n\n        return executor.execute(command).then(function(response) {\n           assertSent('GET', '/session/s123/url', {},\n               [['Accept', 'application/json; charset=utf-8']]);\n           assert.strictEqual(response, 'http://www.google.com');\n        });\n      });\n\n      describe('extracts Session from NEW_SESSION response', function() {\n        beforeEach(() => executor = new http.Executor(client));\n\n        const command = new Command(CommandName.NEW_SESSION);\n\n        describe('fails if server returns invalid response', function() {\n          describe('(empty response)', function() {\n            test(true);\n            test(false);\n\n            function test(w3c) {\n              it('w3c === ' + w3c, function() {\n                send.returns(Promise.resolve(new http.Response(200, {}, '')));\n                executor.w3c = w3c;\n                return executor.execute(command).then(\n                    () => assert.fail('expected to fail'),\n                    (e) => {\n                      if (!e.message.startsWith('Unable to parse')) {\n                        throw e;\n                      }\n                    });\n              });\n            }\n          });\n\n          describe('(no session ID)', function() {\n            test(true);\n            test(false);\n\n            function test(w3c) {\n              it('w3c === ' + w3c, function() {\n                let resp = {value:{name: 'Bob'}};\n                send.returns(Promise.resolve(\n                    new http.Response(200, {}, JSON.stringify(resp))));\n                executor.w3c = w3c;\n                return executor.execute(command).then(\n                    () => assert.fail('expected to fail'),\n                    (e) => {\n                      if (!e.message.startsWith('Unable to parse')) {\n                        throw e;\n                      }\n                    });\n              });\n            }\n          });\n        });\n\n        it('handles legacy response', function() {\n          var rawResponse = {sessionId: 's123', status: 0, value: {name: 'Bob'}};\n\n          send.returns(Promise.resolve(\n              new http.Response(200, {}, JSON.stringify(rawResponse))));\n\n          assert.ok(!executor.w3c);\n          return executor.execute(command).then(function(response) {\n            assert.ok(response instanceof Session);\n            assert.equal(response.getId(), 's123');\n\n            let caps = response.getCapabilities();\n            assert.ok(caps instanceof Capabilities);\n            assert.equal(caps.get('name'), 'Bob');\n\n            assert.ok(!executor.w3c);\n          });\n        });\n\n        it('auto-upgrades on W3C response', function() {\n          let rawResponse = {\n            value: {\n              sessionId: 's123',\n              value: {\n                name: 'Bob'\n              }\n            }\n          };\n\n          send.returns(Promise.resolve(\n              new http.Response(200, {}, JSON.stringify(rawResponse))));\n\n          assert.ok(!executor.w3c);\n          return executor.execute(command).then(function(response) {\n            assert.ok(response instanceof Session);\n            assert.equal(response.getId(), 's123');\n\n            let caps = response.getCapabilities();\n            assert.ok(caps instanceof Capabilities);\n            assert.equal(caps.get('name'), 'Bob');\n\n            assert.ok(executor.w3c);\n          });\n        });\n\n        it('if w3c, does not downgrade on legacy response', function() {\n          var rawResponse = {sessionId: 's123', status: 0, value: null};\n\n          send.returns(Promise.resolve(\n              new http.Response(200, {}, JSON.stringify(rawResponse))));\n\n          executor.w3c = true;\n          return executor.execute(command).then(function(response) {\n            assert.ok(response instanceof Session);\n            assert.equal(response.getId(), 's123');\n            assert.equal(response.getCapabilities().size, 0);\n            assert.ok(executor.w3c, 'should never downgrade');\n          });\n        });\n\n        it('handles legacy new session failures', function() {\n          let rawResponse = {\n            status: error.ErrorCode.NO_SUCH_ELEMENT,\n            value: {message: 'hi'}\n          };\n\n          send.returns(Promise.resolve(\n              new http.Response(500, {}, JSON.stringify(rawResponse))));\n\n          return executor.execute(command)\n              .then(() => assert.fail('should have failed'),\n                    e => {\n                      assert.ok(e instanceof error.NoSuchElementError);\n                      assert.equal(e.message, 'hi');\n                    });\n        });\n\n        it('handles w3c new session failures', function() {\n          let rawResponse =\n              {value: {error: 'no such element', message: 'oops'}};\n\n          send.returns(Promise.resolve(\n              new http.Response(500, {}, JSON.stringify(rawResponse))));\n\n          return executor.execute(command)\n              .then(() => assert.fail('should have failed'),\n                    e => {\n                      assert.ok(e instanceof error.NoSuchElementError);\n                      assert.equal(e.message, 'oops');\n                    });\n        });\n      });\n\n      describe('extracts Session from DESCRIBE_SESSION response', function() {\n        let command;\n\n        beforeEach(function() {\n          executor = new http.Executor(client);\n          command = new Command(CommandName.DESCRIBE_SESSION)\n              .setParameter('sessionId', 'foo');\n        });\n\n        describe('fails if server returns invalid response', function() {\n          describe('(empty response)', function() {\n            test(true);\n            test(false);\n\n            function test(w3c) {\n              it('w3c === ' + w3c, function() {\n                send.returns(Promise.resolve(new http.Response(200, {}, '')));\n                executor.w3c = w3c;\n                return executor.execute(command).then(\n                    () => assert.fail('expected to fail'),\n                    (e) => {\n                      if (!e.message.startsWith('Unable to parse')) {\n                        throw e;\n                      }\n                    });\n              });\n            }\n          });\n\n          describe('(no session ID)', function() {\n            test(true);\n            test(false);\n\n            function test(w3c) {\n              it('w3c === ' + w3c, function() {\n                let resp = {value:{name: 'Bob'}};\n                send.returns(Promise.resolve(\n                    new http.Response(200, {}, JSON.stringify(resp))));\n                executor.w3c = w3c;\n                return executor.execute(command).then(\n                    () => assert.fail('expected to fail'),\n                    (e) => {\n                      if (!e.message.startsWith('Unable to parse')) {\n                        throw e;\n                      }\n                    });\n              });\n            }\n          });\n        });\n\n        it('handles legacy response', function() {\n          var rawResponse = {sessionId: 's123', status: 0, value: {name: 'Bob'}};\n\n          send.returns(Promise.resolve(\n              new http.Response(200, {}, JSON.stringify(rawResponse))));\n\n          assert.ok(!executor.w3c);\n          return executor.execute(command).then(function(response) {\n            assert.ok(response instanceof Session);\n            assert.equal(response.getId(), 's123');\n\n            let caps = response.getCapabilities();\n            assert.ok(caps instanceof Capabilities);\n            assert.equal(caps.get('name'), 'Bob');\n\n            assert.ok(!executor.w3c);\n          });\n        });\n\n        it('does not auto-upgrade on W3C response', function() {\n          var rawResponse = {value: {sessionId: 's123', value: {name: 'Bob'}}};\n\n          send.returns(Promise.resolve(\n              new http.Response(200, {}, JSON.stringify(rawResponse))));\n\n          assert.ok(!executor.w3c);\n          return executor.execute(command).then(function(response) {\n            assert.ok(response instanceof Session);\n            assert.equal(response.getId(), 's123');\n\n            let caps = response.getCapabilities();\n            assert.ok(caps instanceof Capabilities);\n            assert.equal(caps.get('name'), 'Bob');\n\n            assert.ok(!executor.w3c);\n          });\n        });\n\n        it('if w3c, does not downgrade on legacy response', function() {\n          var rawResponse = {sessionId: 's123', status: 0, value: null};\n\n          send.returns(Promise.resolve(\n              new http.Response(200, {}, JSON.stringify(rawResponse))));\n\n          executor.w3c = true;\n          return executor.execute(command).then(function(response) {\n            assert.ok(response instanceof Session);\n            assert.equal(response.getId(), 's123');\n            assert.equal(response.getCapabilities().size, 0);\n            assert.ok(executor.w3c, 'should never downgrade');\n          });\n        });\n      });\n\n      it('handles JSON null', function() {\n        var command = new Command(CommandName.GET_CURRENT_URL)\n            .setParameter('sessionId', 's123');\n\n        send.returns(Promise.resolve(new http.Response(200, {}, 'null')));\n\n        return executor.execute(command).then(function(response) {\n           assertSent('GET', '/session/s123/url', {},\n               [['Accept', 'application/json; charset=utf-8']]);\n           assert.strictEqual(response, null);\n        });\n      });\n\n      describe('falsy values', function() {\n        test(0);\n        test(false);\n        test('');\n\n        function test(value) {\n          it(`value=${value}`, function() {\n            var command = new Command(CommandName.GET_CURRENT_URL)\n                .setParameter('sessionId', 's123');\n\n            send.returns(Promise.resolve(\n                new http.Response(200, {},\n                    JSON.stringify({status: 0, value: value}))));\n\n            return executor.execute(command).then(function(response) {\n               assertSent('GET', '/session/s123/url', {},\n                   [['Accept', 'application/json; charset=utf-8']]);\n               assert.strictEqual(response, value);\n            });\n          });\n        }\n      });\n\n      it('handles non-object JSON', function() {\n        var command = new Command(CommandName.GET_CURRENT_URL)\n            .setParameter('sessionId', 's123');\n\n        send.returns(Promise.resolve(new http.Response(200, {}, '123')));\n\n        return executor.execute(command).then(function(response) {\n           assertSent('GET', '/session/s123/url', {},\n               [['Accept', 'application/json; charset=utf-8']]);\n           assert.strictEqual(response, 123);\n        });\n      });\n\n      it('returns body text when 2xx but not JSON', function() {\n        var command = new Command(CommandName.GET_CURRENT_URL)\n            .setParameter('sessionId', 's123');\n\n        send.returns(Promise.resolve(\n            new http.Response(200, {}, 'hello, world\\r\\ngoodbye, world!')));\n\n        return executor.execute(command).then(function(response) {\n           assertSent('GET', '/session/s123/url', {},\n               [['Accept', 'application/json; charset=utf-8']]);\n           assert.strictEqual(response, 'hello, world\\ngoodbye, world!');\n        });\n      });\n\n      it('returns body text when 2xx but invalid JSON', function() {\n        var command = new Command(CommandName.GET_CURRENT_URL)\n            .setParameter('sessionId', 's123');\n\n        send.returns(Promise.resolve(\n            new http.Response(200, {}, '[')));\n\n        return executor.execute(command).then(function(response) {\n           assertSent('GET', '/session/s123/url', {},\n               [['Accept', 'application/json; charset=utf-8']]);\n           assert.strictEqual(response, '[');\n        });\n      });\n\n      it('returns null if no body text and 2xx', function() {\n        var command = new Command(CommandName.GET_CURRENT_URL)\n            .setParameter('sessionId', 's123');\n\n        send.returns(Promise.resolve(new http.Response(200, {}, '')));\n\n        return executor.execute(command).then(function(response) {\n           assertSent('GET', '/session/s123/url', {},\n               [['Accept', 'application/json; charset=utf-8']]);\n           assert.strictEqual(response, null);\n        });\n      });\n\n      it('returns normalized body text when 2xx but not JSON', function() {\n        var command = new Command(CommandName.GET_CURRENT_URL)\n            .setParameter('sessionId', 's123');\n\n        send.returns(Promise.resolve(new http.Response(200, {}, '\\r\\n\\n\\n\\r\\n')));\n\n        return executor.execute(command).then(function(response) {\n           assertSent('GET', '/session/s123/url', {},\n               [['Accept', 'application/json; charset=utf-8']]);\n           assert.strictEqual(response, '\\n\\n\\n\\n');\n        });\n      });\n\n      it('throws UnsupportedOperationError for 404 and body not JSON',\n          function() {\n            var command = new Command(CommandName.GET_CURRENT_URL)\n                .setParameter('sessionId', 's123');\n\n            send.returns(Promise.resolve(\n                new http.Response(404, {}, 'hello, world\\r\\ngoodbye, world!')));\n\n            return executor.execute(command)\n                .then(\n                    () => assert.fail('should have failed'),\n                    checkError(\n                        error.UnsupportedOperationError,\n                        'hello, world\\ngoodbye, world!'));\n          });\n\n      it('throws WebDriverError for generic 4xx when body not JSON',\n          function() {\n            var command = new Command(CommandName.GET_CURRENT_URL)\n                .setParameter('sessionId', 's123');\n\n            send.returns(Promise.resolve(\n                new http.Response(500, {}, 'hello, world\\r\\ngoodbye, world!')));\n\n            return executor.execute(command)\n                .then(\n                    () => assert.fail('should have failed'),\n                    checkError(\n                        error.WebDriverError,\n                        'hello, world\\ngoodbye, world!'))\n                .then(function() {\n                   assertSent('GET', '/session/s123/url', {},\n                       [['Accept', 'application/json; charset=utf-8']]);\n                });\n          });\n    });\n\n    it('canDefineNewCommands', function() {\n      executor.defineCommand('greet', 'GET', '/person/:name');\n\n      var command = new Command('greet').\n          setParameter('name', 'Bob');\n\n      send.returns(Promise.resolve(new http.Response(200, {}, '')));\n\n      return assertSendsSuccessfully(command).then(function(response) {\n         assertSent('GET', '/person/Bob', {},\n             [['Accept', 'application/json; charset=utf-8']]);\n      });\n    });\n\n    it('canRedefineStandardCommands', function() {\n      executor.defineCommand(CommandName.GO_BACK, 'POST', '/custom/back');\n\n      var command = new Command(CommandName.GO_BACK).\n          setParameter('times', 3);\n\n      send.returns(Promise.resolve(new http.Response(200, {}, '')));\n\n      return assertSendsSuccessfully(command).then(function(response) {\n         assertSent('POST', '/custom/back', {'times': 3},\n             [['Accept', 'application/json; charset=utf-8']]);\n      });\n    });\n\n    it('accepts promised http clients', function() {\n      executor = new http.Executor(Promise.resolve(client));\n\n      var resp = JSON.stringify({sessionId: 'abc123'});\n      send.returns(Promise.resolve(new http.Response(200, {}, resp)));\n\n      let command = new Command(CommandName.NEW_SESSION);\n      return executor.execute(command).then(response => {\n         assertSent(\n             'POST', '/session', {},\n             [['Accept', 'application/json; charset=utf-8']]);\n      });\n    });\n\n    function entries(map) {\n      let entries = [];\n      for (let e of map.entries()) {\n        entries.push(e);\n      }\n      return entries;\n    }\n\n    function checkError(type, message) {\n      return function(e) {\n        if (e instanceof type) {\n          assert.strictEqual(e.message, message);\n        } else {\n          throw e;\n        }\n      };\n    }\n\n    function assertSent(method, path, data, headers) {\n      assert.ok(send.calledWith(sinon.match(function(value) {\n        assert.equal(value.method, method);\n        assert.equal(value.path, path);\n        assert.deepEqual(value.data, data);\n        assert.deepEqual(entries(value.headers), headers);\n        return true;\n      })));\n    }\n\n    function assertSendsSuccessfully(command) {\n      return executor.execute(command).then(function(response) {\n        return response;\n      });\n    }\n\n    function assertFailsToSend(command, opt_onError) {\n      return executor.execute(command).then(\n          () => {throw Error('should have failed')},\n          (e) => {return e});\n    }\n  });\n});\n"]}