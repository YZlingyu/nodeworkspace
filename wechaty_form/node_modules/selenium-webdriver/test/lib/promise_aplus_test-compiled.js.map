{"version":3,"sources":["promise_aplus_test.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAM,UAAU,QAAQ,mBAAR,CAAhB;AACA,MAAM,EAAC,oBAAD,KAAyB,QAAQ,wBAAR,CAA/B;;AAEA,SAAS,8BAAT,EAAyC,YAAW;AAClD,uBAAqB,MAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,QAAI,OAAO,IAAI,QAAQ,WAAZ,EAAX;AACA,SAAK,+BAAL,CAAqC,KAArC;;AAEA;AACA,QAAI,eAAe,OAAO,QAA1B;AACA,WAAO,QAAP,GAAkB,UAAS,IAAT,EAAe,EAAf,EAAmB;AACnC,mBAAa,IAAb,EAAmB,YAAW;AAC5B,YAAI,SAAS,kCACP,uCADO,GAEP,0DAFN;AAGA,YAAI,SAAS,uDAAb;AACA,YAAI,KAAK,SAAL,GAAiB,UAAjB,CAA4B,MAA5B,KACG,KAAK,SAAL,GAAiB,QAAjB,CAA0B,MAA1B,CADP,EAC0C;AACxC,cAAI,cAAc,OAAO,OAAzB;AACA,cAAI;AACF,mBAAO,OAAP,GAAiB,UAAS,IAAT,EAAe;AAC9B,0BAAY,IAAZ;AACD,aAFD;AAGA;AACD,WALD,SAKU;AACR,mBAAO,OAAP,GAAiB,WAAjB;AACD;AACF,SAXD,MAWO;AACL;AACD;AACF,OAnBD;AAoBD,KArBD;;AAuBA,YAAQ,sBAAR,EAAgC,KAAhC,CAAsC;AACpC,gBAAU,UAAS,KAAT,EAAgB;AACxB,eAAO,IAAI,QAAQ,OAAZ,CAAqB,OAAD,IAAa,QAAQ,KAAR,CAAjC,EAAiD,IAAjD,CAAP;AACD,OAHmC;AAIpC,gBAAU,UAAS,KAAT,EAAgB;AACxB,eAAO,IAAI,QAAQ,OAAZ,CAAoB,CAAC,CAAD,EAAI,MAAJ,KAAe,OAAO,KAAP,CAAnC,EAAkD,IAAlD,CAAP;AACD,OANmC;AAOpC,gBAAU,YAAW;AACnB,YAAI,IAAI,IAAI,QAAQ,QAAZ,CAAqB,IAArB,CAAR;AACA,eAAO;AACL,mBAAS,EAAE,OADN;AAEL,kBAAQ,EAAE,MAFL;AAGL,mBAAS,EAAE;AAHN,SAAP;AAKD;AAdmC,KAAtC;;AAiBA,WAAO,QAAP,GAAkB,YAAlB;AACD,GArDD;AAsDD,CAvDD","file":"promise_aplus_test-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nconst promise = require('../../lib/promise');\nconst {enablePromiseManager} = require('../../lib/test/promise');\n\ndescribe('Promises/A+ Compliance Tests', function() {\n  enablePromiseManager(() => {\n    // The promise spec does not define behavior for unhandled rejections and\n    // assumes they are effectively swallowed. This is not the case with our\n    // implementation, so we have to disable error propagation to test that the\n    // rest of our behavior is compliant.\n    // We run the tests with a separate instance of the control flow to ensure\n    // disablign error propagation does not impact other tests.\n    var flow = new promise.ControlFlow();\n    flow.setPropagateUnhandledRejections(false);\n\n    // Skip the tests in 2.2.6.1/2. We are not compliant in these scenarios.\n    var realDescribe = global.describe;\n    global.describe = function(name, fn) {\n      realDescribe(name, function() {\n        var prefix = 'Promises/A+ Compliance Tests '\n            + 'SELENIUM_PROMISE_MANAGER=true 2.2.6: '\n            + '`then` may be called multiple times on the same promise.';\n        var suffix = 'even when one handler is added inside another handler';\n        if (this.fullTitle().startsWith(prefix)\n            && this.fullTitle().endsWith(suffix)) {\n          var realSpecify = global.specify;\n          try {\n            global.specify = function(name) {\n              realSpecify(name);\n            };\n            fn();\n          } finally {\n            global.specify = realSpecify;\n          }\n        } else {\n          fn();\n        }\n      });\n    };\n\n    require('promises-aplus-tests').mocha({\n      resolved: function(value) {\n        return new promise.Promise((fulfill) => fulfill(value), flow);\n      },\n      rejected: function(error) {\n        return new promise.Promise((_, reject) => reject(error), flow);\n      },\n      deferred: function() {\n        var d = new promise.Deferred(flow);\n        return {\n          resolve: d.fulfill,\n          reject: d.reject,\n          promise: d.promise\n        };\n      }\n    });\n\n    global.describe = realDescribe;\n  });\n});\n"]}