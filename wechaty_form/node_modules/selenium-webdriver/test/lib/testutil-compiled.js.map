{"version":3,"sources":["testutil.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAM,SAAS,QAAQ,QAAR,CAAf;AACA,MAAM,QAAQ,QAAQ,OAAR,CAAd;;AAGA,MAAM,SAAN,SAAwB,KAAxB,CAA8B;AAC5B,cAAY,OAAZ,EAAqB;AACnB,UAAM,OAAN;AACA,SAAK,IAAL,GAAY,KAAK,WAAL,CAAiB,IAA7B;AACD;AAJ2B;AAM9B,QAAQ,SAAR,GAAoB,SAApB;;AAEA,QAAQ,cAAR,GAAyB,YAAW;AAClC,QAAM,IAAI,SAAJ,EAAN;AACD,CAFD;;AAIA,QAAQ,iBAAR,GAA4B,UAAS,KAAT,EAAgB;AAC1C,SAAO,EAAP,CAAU,iBAAiB,SAA3B,EAAsC,QAAQ,YAAR,GAAuB,UAAU,IAAvE;AACD,CAFD;;AAIA,QAAQ,gBAAR,GAA2B,UAAS,IAAT,EAAe,KAAf,EAAsB;AAC/C,SAAO,EAAP,CAAU,iBAAiB,IAA3B,EAAiC,WAAW,KAAK,IAAhB,GAAuB,IAAvB,GAA8B,KAA/D;AACD,CAFD;;AAIA,SAAS,YAAT,CAAsB,EAAtB,EAA0B,EAA1B,EAA8B;AAC5B,MAAI,MAAM,EAAV,EAAc;AACZ,UAAM,IAAI,SAAJ,CAAc,6CAAd,CAAN;AACD;;AAED,MAAI,WAAW,KAAK,MAAM,GAAN,CAAU,EAAV,CAAL,GAAqB,MAAM,GAAN,EAApC;AACA,MAAI,UAAU,KAAK,MAAM,GAAN,CAAU,EAAV,CAAL,GAAqB,MAAM,GAAN,EAAnC;;AAEA,WAAS,cAAT,GAA0B;AACxB,WAAO,EAAP,CAAU,SAAS,MAAnB,EAA2B,qBAA3B;AACA,WAAO,EAAP,CAAU,CAAC,QAAQ,MAAnB,EAA2B,gBAA3B;AACA,QAAI,SAAS,KAAT,EAAJ,EAAsB;AACpB,YAAM,SAAS,UAAT,CAAoB,CAApB,CAAN;AACD;AACF;;AAED,WAAS,aAAT,GAAyB;AACvB,WAAO,EAAP,CAAU,CAAC,SAAS,MAApB,EAA4B,iBAA5B;AACA,WAAO,EAAP,CAAU,QAAQ,MAAlB,EAA0B,oBAA1B;AACA,QAAI,QAAQ,KAAR,EAAJ,EAAqB;AACnB,YAAM,QAAQ,UAAR,CAAmB,CAAnB,CAAN;AACD;AACF;;AAED,WAAS,aAAT,GAAyB;AACvB,WAAO,EAAP,CAAU,CAAC,SAAS,MAApB,EAA4B,iBAA5B;AACA,WAAO,EAAP,CAAU,CAAC,QAAQ,MAAnB,EAA2B,gBAA3B;AACD;;AAED,SAAO;AACL,YADK;AAEL,WAFK;AAGL,kBAHK;AAIL,iBAJK;AAKL;AALK,GAAP;AAOD;AACD,QAAQ,YAAR,GAAuB,YAAvB;;AAGA,QAAQ,cAAR,GAAyB,UAAS,EAAT,EAAa;AACpC,MAAI,OAAO,aAAa,EAAb,CAAX;AACA,MAAI,UAAU,KAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB,CAAd;AACA,UAAQ,YAAR,GAAuB,MAAM,KAAK,cAAL,EAA7B;AACA,UAAQ,eAAR,GAA0B,MAAM,KAAK,aAAL,EAAhC;AACA,SAAO,OAAP;AACD,CAND","file":"testutil-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nconst assert = require('assert');\nconst sinon = require('sinon');\n\n\nclass StubError extends Error {\n  constructor(opt_msg) {\n    super(opt_msg);\n    this.name = this.constructor.name;\n  }\n}\nexports.StubError = StubError;\n\nexports.throwStubError = function() {\n  throw new StubError;\n};\n\nexports.assertIsStubError = function(value) {\n  assert.ok(value instanceof StubError, value + ' is not a ' + StubError.name);\n};\n\nexports.assertIsInstance = function(ctor, value) {\n  assert.ok(value instanceof ctor, 'Not a ' + ctor.name + ': ' + value);\n};\n\nfunction callbackPair(cb, eb) {\n  if (cb && eb) {\n    throw new TypeError('can only specify one of callback or errback');\n  }\n\n  let callback = cb ? sinon.spy(cb) : sinon.spy();\n  let errback = eb ? sinon.spy(eb) : sinon.spy();\n\n  function assertCallback() {\n    assert.ok(callback.called, 'callback not called');\n    assert.ok(!errback.called, 'errback called');\n    if (callback.threw()) {\n      throw callback.exceptions[0];\n    }\n  }\n\n  function assertErrback() {\n    assert.ok(!callback.called, 'callback called');\n    assert.ok(errback.called, 'errback not called');\n    if (errback.threw()) {\n      throw errback.exceptions[0];\n    }\n  }\n\n  function assertNeither() {\n    assert.ok(!callback.called, 'callback called');\n    assert.ok(!errback.called, 'errback called');\n  }\n\n  return {\n    callback,\n    errback,\n    assertCallback,\n    assertErrback,\n    assertNeither\n  };\n}\nexports.callbackPair = callbackPair;\n\n\nexports.callbackHelper = function(cb) {\n  let pair = callbackPair(cb);\n  let wrapped = pair.callback.bind(null);\n  wrapped.assertCalled = () => pair.assertCallback();\n  wrapped.assertNotCalled = () => pair.assertNeither();\n  return wrapped;\n};\n"]}