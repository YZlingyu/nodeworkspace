{"version":3,"sources":["execute_phantomjs_test.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,OAAO,QAAQ,gBAAR,CAAX;;AAEA,KAAK,KAAL,CAAW,UAAS,GAAT,EAAc;AACvB,MAAI,MAAJ;;AAEA,OAAK,MAAL,CAAY,aAAY;AACtB,aAAS,MAAM,IAAI,OAAJ,GAAc,KAAd,EAAf;AACD,GAFD;;AAIA,OAAK,KAAL,CAAW,YAAW;AACpB,WAAO,OAAO,IAAP,EAAP;AACD,GAFD;;AAIA,MAAI,cACA,8BAA8B,KAAK,QAAL,CAAc,UAAd,CAA9B,GAA0D,cAD9D;;AAGA,OAAK,UAAL,CAAgB,YAAW;AACzB,WAAO,OAAO,GAAP,CAAW,WAAX,CAAP;AACD,GAFD;;AAIA,WAAS,kBAAT,EAA6B,YAAW;AACtC,aAAS,qBAAT,EAAgC,YAAW;;AAEzC,WAAK,EAAL,CAAQ,yCAAR,EAAmD,aAAY;AAC7D,YAAI,MAAM,MAAM,OAAO,gBAAP,CAAwB,kBAAxB,CAAhB;AACA,eAAO,KAAP,CAAa,WAAb,EAA0B,mBAAmB,GAAnB,CAA1B;AACD,OAHD;;AAKA,WAAK,EAAL,CAAQ,kCAAR,EAA4C,aAAY;AACtD,YAAI,SAAS,MAAM,OAAO,gBAAP,CAAwB,UAAS,CAAT,EAAY,CAAZ,EAAe;AACxD,iBAAO,IAAI,CAAX;AACD,SAFkB,EAEhB,CAFgB,EAEb,CAFa,CAAnB;;AAIA,eAAO,KAAP,CAAa,CAAb,EAAgB,MAAhB;AACD,OAND;AAOD,KAdD;AAeD,GAhBD;AAiBD,CAnCD,EAmCG,EAAC,UAAU,CAAC,WAAD,CAAX,EAnCH","file":"execute_phantomjs_test-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nvar assert = require('assert');\nvar path = require('path');\nvar test = require('../../lib/test');\n\ntest.suite(function(env) {\n  var driver;\n\n  test.before(function*() {\n    driver = yield env.builder().build();\n  });\n\n  test.after(function() {\n    return driver.quit();\n  });\n\n  var testPageUrl =\n      'data:text/html,<html><h1>' + path.basename(__filename) + '</h1></html>';\n\n  test.beforeEach(function() {\n    return driver.get(testPageUrl);\n  });\n\n  describe('phantomjs.Driver', function() {\n    describe('#executePhantomJS()', function() {\n\n      test.it('can execute scripts using PhantomJS API', function*() {\n        let url = yield driver.executePhantomJS('return this.url;');\n        assert.equal(testPageUrl, decodeURIComponent(url));\n      });\n\n      test.it('can execute scripts as functions', function*() {\n        let result = yield driver.executePhantomJS(function(a, b) {\n          return a + b;\n        }, 1, 2);\n\n        assert.equal(3, result);\n      });\n    });\n  });\n}, {browsers: ['phantomjs']});\n"]}