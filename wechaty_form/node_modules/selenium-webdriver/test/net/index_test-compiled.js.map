{"version":3,"sources":["index_test.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,SAAS,QAAQ,QAAR,CAAb;;AAEA,IAAI,MAAM,QAAQ,WAAR,CAAV;;AAEA,SAAS,sBAAT,EAAiC,YAAW;AAC1C,KAAG,uBAAH,EAA4B,YAAW;AACrC,WAAO,SAAP,CACI,IAAI,gBAAJ,CAAqB,iBAArB,CADJ,EAEI,EAAC,MAAM,iBAAP,EAA0B,MAAM,IAAhC,EAFJ;AAGD,GAJD;;AAMA,KAAG,oBAAH,EAAyB,YAAW;AAClC,WAAO,SAAP,CACI,IAAI,gBAAJ,CAAqB,oBAArB,CADJ,EAEI,EAAC,MAAM,iBAAP,EAA0B,MAAM,EAAhC,EAFJ;AAGD,GAJD;;AAMA,KAAG,mBAAH,EAAwB,YAAW;AACjC,WAAO,SAAP,CACI,IAAI,gBAAJ,CAAqB,WAArB,CADJ,EAEI,EAAC,MAAM,WAAP,EAAoB,MAAM,IAA1B,EAFJ;AAGD,GAJD;;AAMA,KAAG,gBAAH,EAAqB,YAAW;AAC9B,WAAO,SAAP,CACI,IAAI,gBAAJ,CAAqB,gBAArB,CADJ,EAEI,EAAC,MAAM,WAAP,EAAoB,MAAM,IAA1B,EAFJ;AAGD,GAJD;;AAMA,KAAG,mBAAH,EAAwB,YAAW;AACjC,WAAO,SAAP,CACI,IAAI,gBAAJ,CAAqB,+BAArB,CADJ,EAEI,EAAC,MAAM,+BAAP,EAAwC,MAAM,IAA9C,EAFJ;AAGD,GAJD;;AAMA,KAAG,gBAAH,EAAqB,YAAW;AAC9B,WAAO,SAAP,CACI,IAAI,gBAAJ,CAAqB,sCAArB,CADJ,EAEI,EAAC,MAAM,+BAAP,EAAwC,MAAM,IAA9C,EAFJ;AAGD,GAJD;AAKD,CApCD","file":"index_test-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nvar assert = require('assert');\n\nvar net = require('../../net');\n\ndescribe('net.splitHostAndPort', function() {\n  it('hostname with no port', function() {\n    assert.deepEqual(\n        net.splitHostAndPort('www.example.com'),\n        {host: 'www.example.com', port: null});\n  });\n\n  it('hostname with port', function() {\n    assert.deepEqual(\n        net.splitHostAndPort('www.example.com:80'),\n        {host: 'www.example.com', port: 80});\n  });\n\n  it('IPv4 with no port', function() {\n    assert.deepEqual(\n        net.splitHostAndPort('127.0.0.1'),\n        {host: '127.0.0.1', port: null});\n  });\n\n  it('IPv4 with port', function() {\n    assert.deepEqual(\n        net.splitHostAndPort('127.0.0.1:1234'),\n        {host: '127.0.0.1', port: 1234});\n  });\n\n  it('IPv6 with no port', function() {\n    assert.deepEqual(\n        net.splitHostAndPort('1234:0:1000:5768:1234:5678:90'),\n        {host: '1234:0:1000:5768:1234:5678:90', port: null});\n  });\n\n  it('IPv6 with port', function() {\n    assert.deepEqual(\n        net.splitHostAndPort('[1234:0:1000:5768:1234:5678:90]:1234'),\n        {host: '1234:0:1000:5768:1234:5678:90', port: 1234});\n  });\n});\n"]}