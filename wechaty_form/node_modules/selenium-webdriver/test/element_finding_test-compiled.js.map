{"version":3,"sources":["element_finding_test.js"],"names":[],"mappings":"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","file":"element_finding_test-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nvar fail = require('assert').fail;\n\nvar Browser = require('..').Browser,\n    By = require('..').By,\n    error = require('..').error,\n    until = require('..').until,\n    promise = require('../lib/promise'),\n    test = require('../lib/test'),\n    assert = require('../testing/assert'),\n    Pages = test.Pages;\n\n\ntest.suite(function(env) {\n  var browsers = env.browsers;\n\n  var driver;\n\n  test.before(function*() {\n    driver = yield env.builder().build();\n  });\n\n  after(function() {\n    return driver.quit();\n  });\n\n  describe('finding elements', function() {\n    test.it(\n        'should work after loading multiple pages in a row',\n        function*() {\n          yield driver.get(Pages.formPage);\n          yield driver.get(Pages.xhtmlTestPage);\n          yield driver.findElement(By.linkText('click me')).click();\n          yield driver.wait(until.titleIs('We Arrive Here'), 5000);\n        });\n\n    describe('By.id()', function() {\n      test.it('should work', function*() {\n        yield driver.get(Pages.xhtmlTestPage);\n        yield driver.findElement(By.id('linkId')).click();\n        yield driver.wait(until.titleIs('We Arrive Here'), 5000);\n      });\n\n      test.it('should fail if ID not present on page', function*() {\n        yield driver.get(Pages.formPage);\n        return driver.findElement(By.id('nonExistantButton')).\n            then(fail, function(e) {\n              assert(e).instanceOf(error.NoSuchElementError);\n            });\n      });\n\n      test.it(\n          'should find multiple elements by ID even though that is ' +\n              'malformed HTML',\n          function*() {\n            yield driver.get(Pages.nestedPage);\n\n            let elements = yield driver.findElements(By.id('2'));\n            assert(elements.length).equalTo(8);\n          });\n    });\n\n    describe('By.linkText()', function() {\n      test.it('should be able to click on link identified by text', function*() {\n        yield driver.get(Pages.xhtmlTestPage);\n        yield driver.findElement(By.linkText('click me')).click();\n        yield driver.wait(until.titleIs('We Arrive Here'), 5000);\n      });\n\n      test.it(\n          'should be able to find elements by partial link text',\n          function*() {\n            yield driver.get(Pages.xhtmlTestPage);\n            yield driver.findElement(By.partialLinkText('ick me')).click();\n            yield driver.wait(until.titleIs('We Arrive Here'), 5000);\n          });\n\n      test.it('should work when link text contains equals sign', function*() {\n        yield driver.get(Pages.xhtmlTestPage);\n        let el = yield driver.findElement(By.linkText('Link=equalssign'));\n\n        let id = yield el.getAttribute('id');\n        assert(id).equalTo('linkWithEqualsSign');\n      });\n\n      test.it('matches by partial text when containing equals sign',\n        function*() {\n          yield driver.get(Pages.xhtmlTestPage);\n          let link = yield driver.findElement(By.partialLinkText('Link='));\n\n          let id = yield link.getAttribute('id');\n          assert(id).equalTo('linkWithEqualsSign');\n        });\n\n      test.it('works when searching for multiple and text contains =',\n          function*() {\n            yield driver.get(Pages.xhtmlTestPage);\n            let elements =\n                yield driver.findElements(By.linkText('Link=equalssign'));\n\n            assert(elements.length).equalTo(1);\n\n            let id = yield elements[0].getAttribute('id');\n            assert(id).equalTo('linkWithEqualsSign');\n          });\n\n      test.it(\n          'works when searching for multiple with partial text containing =',\n          function*() {\n            yield driver.get(Pages.xhtmlTestPage);\n            let elements =\n                yield driver.findElements(By.partialLinkText('Link='));\n\n            assert(elements.length).equalTo(1);\n\n            let id = yield elements[0].getAttribute('id');\n            assert(id).equalTo('linkWithEqualsSign');\n          });\n\n      test.it('should be able to find multiple exact matches',\n          function*() {\n            yield driver.get(Pages.xhtmlTestPage);\n            let elements = yield driver.findElements(By.linkText('click me'));\n            assert(elements.length).equalTo(2);\n          });\n\n      test.it('should be able to find multiple partial matches',\n          function*() {\n            yield driver.get(Pages.xhtmlTestPage);\n            let elements =\n                yield driver.findElements(By.partialLinkText('ick me'));\n            assert(elements.length).equalTo(2);\n          });\n\n      test.ignore(browsers(Browser.SAFARI)).\n      it('works on XHTML pages', function*() {\n        yield driver.get(test.whereIs('actualXhtmlPage.xhtml'));\n\n        let el = yield driver.findElement(By.linkText('Foo'));\n        return assert(el.getText()).equalTo('Foo');\n      });\n    });\n\n    describe('By.name()', function() {\n      test.it('should work', function*() {\n        yield driver.get(Pages.formPage);\n\n        let el = yield driver.findElement(By.name('checky'));\n        yield assert(el.getAttribute('value')).equalTo('furrfu');\n      });\n\n      test.it('should find multiple elements with same name', function*() {\n        yield driver.get(Pages.nestedPage);\n\n        let elements = yield driver.findElements(By.name('checky'));\n        assert(elements.length).greaterThan(1);\n      });\n\n      test.it(\n          'should be able to find elements that do not support name property',\n          function*() {\n            yield driver.get(Pages.nestedPage);\n            yield driver.findElement(By.name('div1'));\n            // Pass if this does not return an error.\n          });\n\n      test.it('shoudl be able to find hidden elements by name', function*() {\n        yield driver.get(Pages.formPage);\n        yield driver.findElement(By.name('hidden'));\n        // Pass if this does not return an error.\n      });\n    });\n\n    describe('By.className()', function() {\n      test.it('should work', function*() {\n        yield driver.get(Pages.xhtmlTestPage);\n\n        let el = yield driver.findElement(By.className('extraDiv'));\n        yield assert(el.getText()).startsWith('Another div starts here.');\n      });\n\n      test.it('should work when name is first name among many', function*() {\n        yield driver.get(Pages.xhtmlTestPage);\n\n        let el = yield driver.findElement(By.className('nameA'));\n        yield assert(el.getText()).equalTo('An H2 title');\n      });\n\n      test.it('should work when name is last name among many', function*() {\n        yield driver.get(Pages.xhtmlTestPage);\n\n        let el = yield driver.findElement(By.className('nameC'));\n        yield assert(el.getText()).equalTo('An H2 title');\n      });\n\n      test.it('should work when name is middle of many', function*() {\n        yield driver.get(Pages.xhtmlTestPage);\n\n        let el = yield driver.findElement(By.className('nameBnoise'));\n        yield assert(el.getText()).equalTo('An H2 title');\n      });\n\n      test.it('should work when name surrounded by whitespace', function*() {\n        yield driver.get(Pages.xhtmlTestPage);\n\n        let el = yield driver.findElement(By.className('spaceAround'));\n        yield assert(el.getText()).equalTo('Spaced out');\n      });\n\n      test.it('should fail if queried name only partially matches', function*() {\n        yield driver.get(Pages.xhtmlTestPage);\n        return driver.findElement(By.className('nameB')).\n            then(fail, function(e) {\n              assert(e).instanceOf(error.NoSuchElementError);\n            });\n      });\n\n      test.it('should implicitly wait', function*() {\n        var TIMEOUT_IN_MS = 1000;\n        var EPSILON = TIMEOUT_IN_MS / 2;\n\n        yield driver.manage().timeouts().implicitlyWait(TIMEOUT_IN_MS);\n        yield driver.get(Pages.formPage);\n\n        var start = new Date();\n        return driver.findElement(By.id('nonExistantButton')).\n            then(fail, function(e) {\n              var end = new Date();\n              assert(e).instanceOf(error.NoSuchElementError);\n              assert(end - start).closeTo(TIMEOUT_IN_MS, EPSILON);\n            });\n      });\n\n      test.it('should be able to find multiple matches', function*() {\n        yield driver.get(Pages.xhtmlTestPage);\n\n        let elements = yield driver.findElements(By.className('nameC'));\n        assert(elements.length).greaterThan(1);\n      });\n\n      test.it('permits compound class names', function() {\n        return driver.get(Pages.xhtmlTestPage)\n            .then(() => driver.findElement(By.className('nameA nameC')))\n            .then(el => el.getText())\n            .then(text => assert(text).equalTo('An H2 title'));\n      });\n    });\n\n    describe('By.xpath()', function() {\n      test.it('should work with multiple matches', function*() {\n        yield driver.get(Pages.xhtmlTestPage);\n        let elements = yield driver.findElements(By.xpath('//div'));\n        assert(elements.length).greaterThan(1);\n      });\n\n      test.it('should work for selectors using contains keyword', function*() {\n        yield driver.get(Pages.nestedPage);\n        yield driver.findElement(By.xpath('//a[contains(., \"hello world\")]'));\n        // Pass if no error.\n      });\n    });\n\n    describe('By.tagName()', function() {\n      test.it('works', function*() {\n        yield driver.get(Pages.formPage);\n\n        let el = yield driver.findElement(By.tagName('input'));\n        yield assert(el.getTagName()).equalTo('input');\n      });\n\n      test.it('can find multiple elements', function*() {\n        yield driver.get(Pages.formPage);\n\n        let elements = yield driver.findElements(By.tagName('input'));\n        assert(elements.length).greaterThan(1);\n      });\n    });\n\n    describe('By.css()', function() {\n      test.it('works', function*() {\n        yield driver.get(Pages.xhtmlTestPage);\n        yield driver.findElement(By.css('div.content'));\n        // Pass if no error.\n      });\n\n      test.it('can find multiple elements', function*() {\n        yield driver.get(Pages.xhtmlTestPage);\n\n        let elements = yield driver.findElements(By.css('p'));\n        assert(elements.length).greaterThan(1);\n        // Pass if no error.\n      });\n\n      test.it(\n          'should find first matching element when searching by ' +\n              'compound CSS selector',\n          function*() {\n            yield driver.get(Pages.xhtmlTestPage);\n\n            let el =\n                yield driver.findElement(By.css('div.extraDiv, div.content'));\n            yield assert(el.getAttribute('class')).equalTo('content');\n          });\n\n      test.it('should be able to find multiple elements by compound selector',\n          function*() {\n            yield driver.get(Pages.xhtmlTestPage);\n            let elements =\n                yield driver.findElements(By.css('div.extraDiv, div.content'));\n\n            return Promise.all([\n              assertClassIs(elements[0], 'content'),\n              assertClassIs(elements[1], 'extraDiv')\n            ]);\n\n            function assertClassIs(el, expected) {\n              return assert(el.getAttribute('class')).equalTo(expected);\n            }\n          });\n\n      // IE only supports short version option[selected].\n      test.ignore(browsers(Browser.IE)).\n      it('should be able to find element by boolean attribute', function*() {\n        yield driver.get(test.whereIs(\n            'locators_tests/boolean_attribute_selected.html'));\n\n        let el = yield driver.findElement(By.css('option[selected=\"selected\"]'));\n        yield assert(el.getAttribute('value')).equalTo('two');\n      });\n\n      test.it(\n          'should be able to find element with short ' +\n              'boolean attribute selector',\n          function*() {\n            yield driver.get(test.whereIs(\n                'locators_tests/boolean_attribute_selected.html'));\n\n            let el = yield driver.findElement(By.css('option[selected]'));\n            yield assert(el.getAttribute('value')).equalTo('two');\n          });\n\n      test.it(\n          'should be able to find element with short boolean attribute ' +\n              'selector on HTML4 page',\n          function*() {\n            yield driver.get(test.whereIs(\n                'locators_tests/boolean_attribute_selected_html4.html'));\n\n            let el = yield driver.findElement(By.css('option[selected]'));\n            yield assert(el.getAttribute('value')).equalTo('two');\n          });\n    });\n\n    describe('by custom locator', function() {\n      test.it('handles single element result', function*() {\n        yield driver.get(Pages.javascriptPage);\n\n        let link = yield driver.findElement(function(driver) {\n          let links = driver.findElements(By.tagName('a'));\n          return promise.filter(links, function(link) {\n            return link.getAttribute('id').then(id => id === 'updatediv');\n          }).then(links => links[0]);\n        });\n\n        yield assert(link.getText()).matches(/Update\\s+a\\s+div/);\n      });\n\n      test.it('uses first element if locator resolves to list', function*() {\n        yield driver.get(Pages.javascriptPage);\n\n        let link = yield driver.findElement(function() {\n          return driver.findElements(By.tagName('a'));\n        });\n\n        yield assert(link.getText()).isEqualTo('Change the page title!');\n      });\n\n      test.it('fails if locator returns non-webelement value', function*() {\n        yield driver.get(Pages.javascriptPage);\n\n        let link = driver.findElement(function() {\n          return driver.getTitle();\n        });\n\n        return link.then(\n            () => fail('Should have failed'),\n            (e) => assert(e).instanceOf(TypeError));\n      });\n    });\n\n    describe('switchTo().activeElement()', function() {\n      // SAFARI's new session response does not identify it as a W3C browser,\n      // so the command is sent in the unsupported wire protocol format.\n      test.ignore(browsers(Browser.SAFARI)).\n      it('returns document.activeElement', function*() {\n        yield driver.get(Pages.formPage);\n\n        let email = yield driver.findElement(By.css('#email'));\n        yield driver.executeScript('arguments[0].focus()', email);\n\n        let ae = yield driver.switchTo().activeElement();\n        let equal = yield driver.executeScript(\n            'return arguments[0] === arguments[1]', email, ae);\n        assert(equal).isTrue();\n      });\n    });\n  });\n});\n"]}