{"version":3,"sources":["upload_test.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,KAAK,QAAQ,IAAR,CAAT;;AAEA,IAAI,UAAU,QAAQ,IAAR,EAAc,OAA5B;AAAA,IACI,KAAK,QAAQ,IAAR,EAAc,EADvB;AAAA,IAEI,QAAQ,QAAQ,IAAR,EAAc,KAF1B;AAAA,IAGI,KAAK,QAAQ,OAAR,CAHT;AAAA,IAII,SAAS,QAAQ,WAAR,CAJb;AAAA,IAKI,SAAS,QAAQ,mBAAR,CALb;AAAA,IAMI,OAAO,QAAQ,aAAR,CANX;AAAA,IAOI,QAAQ,KAAK,KAPjB;;AASA,KAAK,KAAL,CAAW,UAAS,GAAT,EAAc;AACvB,MAAI,mBAAmB,4BAAvB;AACA,MAAI,YAAY,yBAAyB,gBAAzB,GAA4C,QAA5D;;AAEA,MAAI,EAAJ;AACA,OAAK,MAAL,CAAY,YAAW;AACrB,WAAO,KAAK,GAAG,OAAH,GAAa,IAAb,CAAkB,UAAS,EAAT,EAAa;AACzC,SAAG,aAAH,CAAiB,EAAjB,EAAqB,SAArB;AACA,aAAO,EAAP;AACD,KAHW,CAAZ;AAID,GALD;;AAOA,MAAI,MAAJ;AACA,OAAK,MAAL,CAAY,aAAY;AACtB,aAAS,MAAM,IAAI,OAAJ,GAAc,KAAd,EAAf;AACD,GAFD;;AAIA,OAAK,KAAL,CAAW,YAAW;AACpB,QAAI,MAAJ,EAAY;AACV,aAAO,OAAO,IAAP,EAAP;AACD;AACF,GAJD;;AAMA,OAAK,MAAL,CAAY,IAAI,QAAJ,CACR,QAAQ,IADA,EAER,QAAQ,MAFA;AAGR;AACA;AACA,UAAQ,UALA,EAMR,QAAQ,MANA,CAAZ,EAOA,EAPA,CAOG,kBAPH,EAOuB,aAAY;AACjC,WAAO,eAAP,CAAuB,IAAI,OAAO,YAAX,EAAvB;;AAEA,UAAM,OAAO,GAAP,CAAW,MAAM,UAAjB,CAAN;;AAEA,QAAI,KAAK,MAAM,OAAO,IAAP,CAAY,YAAW;AACpC,aAAO,GAAG,OAAH,GAAa,IAAb,CAAkB,UAAS,EAAT,EAAa;AACpC,WAAG,aAAH,CAAiB,EAAjB,EAAqB,SAArB;AACA,eAAO,EAAP;AACD,OAHM,CAAP;AAID,KALc,CAAf;;AAOA,UAAM,OAAO,WAAP,CAAmB,GAAG,EAAH,CAAM,QAAN,CAAnB,EAAoC,QAApC,CAA6C,EAA7C,CAAN;AACA,UAAM,OAAO,WAAP,CAAmB,GAAG,EAAH,CAAM,IAAN,CAAnB,EAAgC,KAAhC,EAAN;;AAEA;AACA,QAAI,QAAQ,MAAM,OAAO,WAAP,CAAmB,GAAG,EAAH,CAAM,cAAN,CAAnB,CAAlB;AACA,UAAM,OAAO,IAAP,CAAY,MAAM,mBAAN,CAA0B,KAA1B,CAAZ,EACF,KAAK,IADH,EACS,6CADT,CAAN;;AAGA,QAAI,QAAQ,MAAM,OAAO,WAAP,CAAmB,GAAG,EAAH,CAAM,eAAN,CAAnB,CAAlB;AACA,UAAM,OAAO,QAAP,GAAkB,KAAlB,CAAwB,KAAxB,CAAN;AACA,UAAM,OAAO,OAAO,WAAP,CAAmB,GAAG,GAAH,CAAO,MAAP,CAAnB,EAAmC,OAAnC,EAAP,EACD,OADC,CACO,gBADP,CAAN;AAED,GA/BD;AAgCD,CAvDD","file":"upload_test-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nvar fs = require('fs');\n\nvar Browser = require('..').Browser,\n    By = require('..').By,\n    until = require('..').until,\n    io = require('../io'),\n    remote = require('../remote'),\n    assert = require('../testing/assert'),\n    test = require('../lib/test'),\n    Pages = test.Pages;\n\ntest.suite(function(env) {\n  var LOREM_IPSUM_TEXT = 'lorem ipsum dolor sit amet';\n  var FILE_HTML = '<!DOCTYPE html><div>' + LOREM_IPSUM_TEXT + '</div>';\n\n  var fp;\n  test.before(function() {\n    return fp = io.tmpFile().then(function(fp) {\n      fs.writeFileSync(fp, FILE_HTML);\n      return fp;\n    });\n  })\n\n  var driver;\n  test.before(function*() {\n    driver = yield env.builder().build();\n  });\n\n  test.after(function() {\n    if (driver) {\n      return driver.quit();\n    }\n  });\n\n  test.ignore(env.browsers(\n      Browser.IPAD,\n      Browser.IPHONE,\n      // Uploads broken in PhantomJS 2.0.\n      // See https://github.com/ariya/phantomjs/issues/12506\n      Browser.PHANTOM_JS,\n      Browser.SAFARI)).\n  it('can upload files', function*() {\n    driver.setFileDetector(new remote.FileDetector);\n\n    yield driver.get(Pages.uploadPage);\n\n    var fp = yield driver.call(function() {\n      return io.tmpFile().then(function(fp) {\n        fs.writeFileSync(fp, FILE_HTML);\n        return fp;\n      });\n    });\n\n    yield driver.findElement(By.id('upload')).sendKeys(fp);\n    yield driver.findElement(By.id('go')).click();\n\n    // Uploading files across a network may take a while, even if they're small.\n    var label = yield driver.findElement(By.id('upload_label'));\n    yield driver.wait(until.elementIsNotVisible(label),\n        10 * 1000, 'File took longer than 10 seconds to upload!');\n\n    var frame = yield driver.findElement(By.id('upload_target'));\n    yield driver.switchTo().frame(frame);\n    yield assert(driver.findElement(By.css('body')).getText())\n        .equalTo(LOREM_IPSUM_TEXT);\n  });\n});\n"]}