{"version":3,"sources":["safari_test.js"],"names":[],"mappings":"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","file":"safari_test-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nconst webdriver = require('..'),\n  proxy = require('../proxy'),\n  safari = require('../safari'),\n  assert = require('../testing/assert'),\n  test = require('../lib/test');\n\n\ndescribe('safari.Options', function() {\n  describe('fromCapabilities', function() {\n    it('returns a new Options instance  if none were defined', function() {\n      let options = safari.Options.fromCapabilities(\n        new webdriver.Capabilities());\n      assert(options).instanceOf(safari.Options);\n    });\n\n    it('returns the options instance if present', function() {\n      let options = new safari.Options().setCleanSession(true),\n        caps = options.toCapabilities();\n      assert(safari.Options.fromCapabilities(caps)).equalTo(options);\n    });\n\n    it('extracts supported WebDriver capabilities', function() {\n      let proxyPrefs = proxy.direct(),\n        logPrefs = {},\n        caps = webdriver.Capabilities.chrome()\n          .set(webdriver.Capability.PROXY, proxyPrefs)\n          .set(webdriver.Capability.LOGGING_PREFS, logPrefs);\n\n      let options = safari.Options.fromCapabilities(caps);\n      assert(options.proxy_).equalTo(proxyPrefs);\n      assert(options.logPrefs_).equalTo(logPrefs);\n    });\n  });\n\n  describe('toCapabilities', function() {\n    let options;\n\n    before(function() {\n      options = new safari.Options()\n        .setCleanSession(true);\n    });\n\n    it('returns a new capabilities object if one is not provided', function() {\n      let caps = options.toCapabilities();\n      assert(caps).instanceOf(webdriver.Capabilities);\n      assert(caps.get('browserName')).equalTo('safari');\n      assert(caps.get('safari.options')).equalTo(options);\n    });\n\n    it('adds to input capabilities object', function() {\n      let caps = webdriver.Capabilities.safari();\n      assert(options.toCapabilities(caps)).equalTo(caps);\n      assert(caps.get('safari.options')).equalTo(options);\n    });\n\n    it('sets generic driver capabilities', function() {\n      let proxyPrefs = proxy.direct(),\n        loggingPrefs = {};\n\n      options\n        .setLoggingPrefs(loggingPrefs)\n        .setProxy(proxyPrefs);\n\n      let caps = options.toCapabilities();\n      assert(caps.get('proxy')).equalTo(proxyPrefs);\n      assert(caps.get('loggingPrefs')).equalTo(loggingPrefs);\n    });\n  });\n});\n\ntest.suite(function(env) {\n  describe('safaridriver', function() {\n    let service;\n\n    afterEach(function() {\n      if (service) {\n        return service.kill();\n      }\n    });\n\n    it('can start safaridriver', function() {\n      service = new safari.ServiceBuilder().build();\n\n      return service.start().then(function(url) {\n        assert(url).matches(/127\\.0\\.0\\.1/);\n      });\n    });\n  });\n}, {browsers: ['safari']});\n"]}