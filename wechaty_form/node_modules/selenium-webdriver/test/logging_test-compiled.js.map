{"version":3,"sources":["logging_test.js"],"names":[],"mappings":"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","file":"logging_test-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nvar Browser = require('..').Browser,\n    By = require('..').By,\n    logging = require('..').logging,\n    assert = require('../testing/assert'),\n    test = require('../lib/test');\n\ntest.suite(function(env) {\n  // Logging API has numerous issues with PhantomJS:\n  //   - does not support adjusting log levels for type \"browser\".\n  //   - does not return proper log level for \"browser\" messages.\n  //   - does not delete logs after retrieval\n  // Logging API is not supported in IE.\n  // Logging API not supported in Marionette.\n  // Tests depend on opening data URLs, which is broken in Safari (issue 7586)\n  test.ignore(env.browsers(\n      Browser.PHANTOM_JS, Browser.IE, Browser.SAFARI, Browser.FIREFOX)).\n  describe('logging', function() {\n    var driver;\n\n    test.beforeEach(function() {\n      driver = null;\n    });\n\n    test.afterEach(function*() {\n      if (driver) {\n        return driver.quit();\n      }\n    });\n\n    test.it('can be disabled', function*() {\n      var prefs = new logging.Preferences();\n      prefs.setLevel(logging.Type.BROWSER, logging.Level.OFF);\n\n      driver = yield env.builder()\n          .setLoggingPrefs(prefs)\n          .build();\n\n      yield driver.get(dataUrl(\n          '<!DOCTYPE html><script>',\n          'console.info(\"hello\");',\n          'console.warn(\"this is a warning\");',\n          'console.error(\"and this is an error\");',\n          '</script>'));\n      return driver.manage().logs().get(logging.Type.BROWSER)\n          .then(entries => assert(entries.length).equalTo(0));\n    });\n\n    // Firefox does not capture JS error console log messages.\n    test.ignore(env.browsers(Browser.FIREFOX, 'legacy-firefox')).\n    it('can be turned down', function*() {\n      var prefs = new logging.Preferences();\n      prefs.setLevel(logging.Type.BROWSER, logging.Level.SEVERE);\n\n      driver = yield env.builder()\n          .setLoggingPrefs(prefs)\n          .build();\n\n      yield driver.get(dataUrl(\n          '<!DOCTYPE html><script>',\n          'console.info(\"hello\");',\n          'console.warn(\"this is a warning\");',\n          'console.error(\"and this is an error\");',\n          '</script>'));\n      return driver.manage().logs().get(logging.Type.BROWSER)\n          .then(function(entries) {\n            assert(entries.length).equalTo(1);\n            assert(entries[0].level.name).equalTo('SEVERE');\n            assert(entries[0].message).matches(/.*\\\"?and this is an error\\\"?/);\n          });\n    });\n\n    // Firefox does not capture JS error console log messages.\n    test.ignore(env.browsers(Browser.FIREFOX, 'legacy-firefox')).\n    it('can be made verbose', function*() {\n      var prefs = new logging.Preferences();\n      prefs.setLevel(logging.Type.BROWSER, logging.Level.DEBUG);\n\n      driver = yield env.builder()\n          .setLoggingPrefs(prefs)\n          .build();\n\n      yield driver.get(dataUrl(\n          '<!DOCTYPE html><script>',\n          'console.debug(\"hello\");',\n          'console.warn(\"this is a warning\");',\n          'console.error(\"and this is an error\");',\n          '</script>'));\n      return driver.manage().logs().get(logging.Type.BROWSER)\n          .then(function(entries) {\n            assert(entries.length).equalTo(3);\n            assert(entries[0].level.name).equalTo('DEBUG');\n            assert(entries[0].message).matches(/.*\\\"?hello\\\"?/);\n\n            assert(entries[1].level.name).equalTo('WARNING');\n            assert(entries[1].message).matches(/.*\\\"?this is a warning\\\"?/);\n\n            assert(entries[2].level.name).equalTo('SEVERE');\n            assert(entries[2].message).matches(/.*\\\"?and this is an error\\\"?/);\n          });\n    });\n\n    // Firefox does not capture JS error console log messages.\n    test.ignore(env.browsers(Browser.FIREFOX, 'legacy-firefox')).\n    it('clears records after retrieval', function*() {\n      var prefs = new logging.Preferences();\n      prefs.setLevel(logging.Type.BROWSER, logging.Level.DEBUG);\n\n      driver = yield env.builder()\n          .setLoggingPrefs(prefs)\n          .build();\n\n      yield driver.get(dataUrl(\n          '<!DOCTYPE html><script>',\n          'console.debug(\"hello\");',\n          'console.warn(\"this is a warning\");',\n          'console.error(\"and this is an error\");',\n          '</script>'));\n      yield driver.manage().logs().get(logging.Type.BROWSER)\n          .then(entries => assert(entries.length).equalTo(3));\n      return driver.manage().logs().get(logging.Type.BROWSER)\n          .then(entries => assert(entries.length).equalTo(0));\n    });\n\n    test.it('does not mix log types', function*() {\n      var prefs = new logging.Preferences();\n      prefs.setLevel(logging.Type.BROWSER, logging.Level.DEBUG);\n      prefs.setLevel(logging.Type.DRIVER, logging.Level.SEVERE);\n\n      driver = yield env.builder()\n          .setLoggingPrefs(prefs)\n          .build();\n\n      yield driver.get(dataUrl(\n          '<!DOCTYPE html><script>',\n          'console.debug(\"hello\");',\n          'console.warn(\"this is a warning\");',\n          'console.error(\"and this is an error\");',\n          '</script>'));\n      return driver.manage().logs().get(logging.Type.DRIVER)\n          .then(entries => assert(entries.length).equalTo(0));\n    });\n  });\n\n  function dataUrl(var_args) {\n    return 'data:text/html,'\n        + Array.prototype.slice.call(arguments, 0).join('');\n  }\n});\n"]}