{"version":3,"sources":["options_test.js"],"names":[],"mappings":"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","file":"options_test-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nvar fs = require('fs');\n\nvar webdriver = require('../..'),\n    chrome = require('../../chrome'),\n    symbols = require('../../lib/symbols'),\n    proxy = require('../../proxy'),\n    assert = require('../../testing/assert');\n\nvar test = require('../../lib/test');\n\n\ndescribe('chrome.Options', function() {\n  describe('fromCapabilities', function() {\n\n    it('should return a new Options instance if none were defined',\n       function() {\n         var options = chrome.Options.fromCapabilities(\n             new webdriver.Capabilities());\n         assert(options).instanceOf(chrome.Options);\n       });\n\n    it('should return options instance if present', function() {\n      var options = new chrome.Options();\n      var caps = options.toCapabilities();\n      assert(caps).instanceOf(webdriver.Capabilities);\n      assert(chrome.Options.fromCapabilities(caps)).equalTo(options);\n    });\n\n    it('should rebuild options from wire representation', function() {\n      var expectedExtension = fs.readFileSync(__filename, 'base64');\n      var caps = webdriver.Capabilities.chrome().set('chromeOptions', {\n        args: ['a', 'b'],\n        extensions: [__filename],\n        binary: 'binaryPath',\n        logPath: 'logFilePath',\n        detach: true,\n        localState: 'localStateValue',\n        prefs: 'prefsValue'\n      });\n\n      var options = chrome.Options.fromCapabilities(caps);\n      var json = options[symbols.serialize]();\n\n      assert(json.args.length).equalTo(2);\n      assert(json.args[0]).equalTo('a');\n      assert(json.args[1]).equalTo('b');\n      assert(json.extensions.length).equalTo(1);\n      assert(json.extensions[0]).equalTo(expectedExtension);\n      assert(json.binary).equalTo('binaryPath');\n      assert(json.logPath).equalTo('logFilePath');\n      assert(json.detach).equalTo(true);\n      assert(json.localState).equalTo('localStateValue');\n      assert(json.prefs).equalTo('prefsValue');\n    });\n\n    it('should rebuild options from incomplete wire representation',\n        function() {\n          var caps = webdriver.Capabilities.chrome().set('chromeOptions', {\n            logPath: 'logFilePath'\n          });\n\n          var options = chrome.Options.fromCapabilities(caps);\n          var json = options[symbols.serialize]();\n          assert(json.args).isUndefined();\n          assert(json.binary).isUndefined();\n          assert(json.detach).isUndefined();\n          assert(json.excludeSwitches).isUndefined();\n          assert(json.extensions).isUndefined();\n          assert(json.localState).isUndefined();\n          assert(json.logPath).equalTo('logFilePath');\n          assert(json.prefs).isUndefined();\n          assert(json.minidumpPath).isUndefined();\n          assert(json.mobileEmulation).isUndefined();\n          assert(json.perfLoggingPrefs).isUndefined();\n        });\n\n    it('should extract supported WebDriver capabilities', function() {\n      var proxyPrefs = proxy.direct();\n      var logPrefs = {};\n      var caps = webdriver.Capabilities.chrome().\n          set(webdriver.Capability.PROXY, proxyPrefs).\n          set(webdriver.Capability.LOGGING_PREFS, logPrefs);\n\n      var options = chrome.Options.fromCapabilities(caps);\n      assert(options.proxy_).equalTo(proxyPrefs);\n      assert(options.logPrefs_).equalTo(logPrefs);\n    });\n  });\n\n  describe('addArguments', function() {\n    it('takes var_args', function() {\n      var options = new chrome.Options();\n      assert(options[symbols.serialize]().args).isUndefined();\n\n      options.addArguments('a', 'b');\n      var json = options[symbols.serialize]();\n      assert(json.args.length).equalTo(2);\n      assert(json.args[0]).equalTo('a');\n      assert(json.args[1]).equalTo('b');\n    });\n\n    it('flattens input arrays', function() {\n      var options = new chrome.Options();\n      assert(options[symbols.serialize]().args).isUndefined();\n\n      options.addArguments(['a', 'b'], 'c', [1, 2], 3);\n      var json = options[symbols.serialize]();\n      assert(json.args.length).equalTo(6);\n      assert(json.args[0]).equalTo('a');\n      assert(json.args[1]).equalTo('b');\n      assert(json.args[2]).equalTo('c');\n      assert(json.args[3]).equalTo(1);\n      assert(json.args[4]).equalTo(2);\n      assert(json.args[5]).equalTo(3);\n    });\n  });\n\n  describe('addExtensions', function() {\n    it('takes var_args', function() {\n      var options = new chrome.Options();\n      assert(options.extensions_.length).equalTo(0);\n\n      options.addExtensions('a', 'b');\n      assert(options.extensions_.length).equalTo(2);\n      assert(options.extensions_[0]).equalTo('a');\n      assert(options.extensions_[1]).equalTo('b');\n    });\n\n    it('flattens input arrays', function() {\n      var options = new chrome.Options();\n      assert(options.extensions_.length).equalTo(0);\n\n      options.addExtensions(['a', 'b'], 'c', [1, 2], 3);\n      assert(options.extensions_.length).equalTo(6);\n      assert(options.extensions_[0]).equalTo('a');\n      assert(options.extensions_[1]).equalTo('b');\n      assert(options.extensions_[2]).equalTo('c');\n      assert(options.extensions_[3]).equalTo(1);\n      assert(options.extensions_[4]).equalTo(2);\n      assert(options.extensions_[5]).equalTo(3);\n    });\n  });\n\n  describe('serialize', function() {\n    it('base64 encodes extensions', function() {\n      var expected = fs.readFileSync(__filename, 'base64');\n      var wire = new chrome.Options()\n          .addExtensions(__filename)\n          [symbols.serialize]();\n      assert(wire.extensions.length).equalTo(1);\n      assert(wire.extensions[0]).equalTo(expected);\n    });\n  });\n\n  describe('toCapabilities', function() {\n    it('returns a new capabilities object if one is not provided', function() {\n      var options = new chrome.Options();\n      var caps = options.toCapabilities();\n      assert(caps.get('browserName')).equalTo('chrome');\n      assert(caps.get('chromeOptions')).equalTo(options);\n    });\n\n    it('adds to input capabilities object', function() {\n      var caps = webdriver.Capabilities.firefox();\n      var options = new chrome.Options();\n      assert(options.toCapabilities(caps)).equalTo(caps);\n      assert(caps.get('browserName')).equalTo('firefox');\n      assert(caps.get('chromeOptions')).equalTo(options);\n    });\n\n    it('sets generic driver capabilities', function() {\n      var proxyPrefs = {};\n      var loggingPrefs = {};\n      var options = new chrome.Options().\n          setLoggingPrefs(loggingPrefs).\n          setProxy(proxyPrefs);\n\n      var caps = options.toCapabilities();\n      assert(caps.get('proxy')).equalTo(proxyPrefs);\n      assert(caps.get('loggingPrefs')).equalTo(loggingPrefs);\n    });\n  });\n});\n\ntest.suite(function(env) {\n  var driver;\n\n  test.afterEach(function() {\n    return driver.quit();\n  });\n\n  describe('Chrome options', function() {\n    test.it('can start Chrome with custom args', function*() {\n      var options = new chrome.Options().\n          addArguments('user-agent=foo;bar');\n\n      driver = yield env.builder()\n          .setChromeOptions(options)\n          .build();\n\n      yield driver.get(test.Pages.ajaxyPage);\n\n      var userAgent =\n          yield driver.executeScript('return window.navigator.userAgent');\n      assert(userAgent).equalTo('foo;bar');\n    });\n  });\n}, {browsers: ['chrome']});\n"]}