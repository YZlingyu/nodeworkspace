{"version":3,"sources":["service_test.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,YAAY,QAAQ,OAAR,CAAhB;AAAA,IACI,SAAS,QAAQ,cAAR,CADb;AAAA,IAEI,SAAS,QAAQ,sBAAR,CAFb;;AAIA,IAAI,OAAO,QAAQ,gBAAR,CAAX;;AAGA,KAAK,KAAL,CAAW,UAAS,GAAT,EAAc;AACvB,WAAS,cAAT,EAAyB,YAAW;AAClC,QAAI,OAAJ;AACA,SAAK,SAAL,CAAe,YAAW;AACxB,UAAI,OAAJ,EAAa;AACX,eAAO,QAAQ,IAAR,EAAP;AACD;AACF,KAJD;;AAMA,SAAK,EAAL,CAAQ,iCAAR,EAA2C,YAAW;AACpD,gBAAU,IAAI,OAAO,cAAX,GACL,OADK,CACG,cADH,EAEL,KAFK,EAAV;AAGA,aAAO,QAAQ,KAAR,GAAgB,IAAhB,CAAqB,UAAS,GAAT,EAAc;AACxC,eAAO,GAAP,EAAY,QAAZ,CAAqB,cAArB;AACD,OAFM,CAAP;AAGD,KAPD;AAQD,GAhBD;AAiBD,CAlBD,EAkBG,EAAC,UAAU,CAAC,QAAD,CAAX,EAlBH","file":"service_test-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nvar webdriver = require('../..'),\n    chrome = require('../../chrome'),\n    assert = require('../../testing/assert');\n\nvar test = require('../../lib/test');\n\n\ntest.suite(function(env) {\n  describe('chromedriver', function() {\n    var service;\n    test.afterEach(function() {\n      if (service) {\n        return service.kill();\n      }\n    });\n\n    test.it('can be started on a custom path', function() {\n      service = new chrome.ServiceBuilder()\n          .setPath('/foo/bar/baz')\n          .build();\n      return service.start().then(function(url) {\n        assert(url).endsWith('/foo/bar/baz');\n      });\n    });\n  });\n}, {browsers: ['chrome']});\n"]}