{"version":3,"sources":["session_test.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,YAAY,QAAQ,IAAR,EAAc,SAA9B;AAAA,IACI,SAAS,QAAQ,mBAAR,CADb;AAAA,IAEI,OAAO,QAAQ,aAAR,CAFX;AAAA,IAGI,QAAQ,KAAK,KAHjB;;AAMA,KAAK,KAAL,CAAW,UAAS,GAAT,EAAc;AACvB,MAAI,WAAW,IAAI,QAAnB;;AAEA,MAAI,MAAJ;AACA,OAAK,MAAL,CAAY,aAAY;AACtB,aAAS,MAAM,IAAI,OAAJ,GAAc,KAAd,EAAf;AACD,GAFD;;AAIA,OAAK,KAAL,CAAW,YAAW;AACpB,WAAO,OAAO,IAAP,EAAP;AACD,GAFD;;AAIA,OAAK,EAAL,CAAQ,oCAAR,EAA8C,aAAY;AACxD,UAAM,OAAO,GAAP,CAAW,MAAM,cAAjB,CAAN;AACA,UAAM,OAAO,OAAO,QAAP,EAAP,EAA0B,OAA1B,CAAkC,iBAAlC,CAAN;;AAEA,WAAO,OAAO,UAAP,GAAoB,IAApB,CAAyB,YAAY;AAC1C,UAAI,UAAU,UAAU,eAAV,CACV,OAAO,WAAP,EADU,EAEV,SAAS,KAAT,EAFU,CAAd;;AAIA,aAAO,OAAO,QAAQ,QAAR,EAAP,EAA2B,OAA3B,CAAmC,iBAAnC,EACF,IADE,CACG,KAAK;AACT,YAAI,aAAa,QAAQ,UAAR,GAAqB,IAArB,CAA0B,KAAK,EAAE,KAAF,EAA/B,CAAjB;AACA,eAAO,OAAO,UAAP,EAAmB,OAAnB,CAA2B,SAAS,KAAT,EAA3B,CAAP;AACD,OAJE,CAAP;AAKD,KAVM,CAAP;AAWD,GAfD;AAgBD,CA5BD","file":"session_test-compiled.js","sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nvar WebDriver = require('..').WebDriver,\n    assert = require('../testing/assert'),\n    test = require('../lib/test'),\n    Pages = test.Pages;\n\n\ntest.suite(function(env) {\n  var browsers = env.browsers;\n\n  var driver;\n  test.before(function*() {\n    driver = yield env.builder().build();\n  });\n\n  test.after(function() {\n    return driver.quit();\n  });\n\n  test.it('can connect to an existing session', function*() {\n    yield driver.get(Pages.simpleTestPage);\n    yield assert(driver.getTitle()).equalTo('Hello WebDriver');\n\n    return driver.getSession().then(session1 => {\n      let driver2 = WebDriver.attachToSession(\n          driver.getExecutor(),\n          session1.getId());\n\n      return assert(driver2.getTitle()).equalTo('Hello WebDriver')\n          .then(_ => {\n            let session2Id = driver2.getSession().then(s => s.getId());\n            return assert(session2Id).equalTo(session1.getId());\n          });\n    });\n  });\n});\n"]}