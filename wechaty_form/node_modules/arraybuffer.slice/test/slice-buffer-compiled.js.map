{"version":3,"sources":["slice-buffer.js"],"names":[],"mappings":"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","file":"slice-buffer-compiled.js","sourcesContent":["/*\n * Test dependencies\n */\n\nvar sliceBuffer = require('../index.js');\nvar expect = require('expect.js');\n\n/**\n * Tests\n */\n\ndescribe('sliceBuffer', function() {\n  describe('using standard slice', function() {\n    it('should slice correctly with only start provided', function() {\n      var abv = new Uint8Array(10);\n      for (var i = 0; i < abv.length; i++) {\n        abv[i] = i;\n      }\n\n      var sliced = sliceBuffer(abv.buffer, 3);\n      var sabv = new Uint8Array(sliced);\n      for (var i = 3, ii = 0; i < abv.length; i++, ii++) {\n        expect(abv[i]).to.equal(sabv[ii]);\n      }\n    });\n\n    it('should slice correctly with start and end provided', function() {\n      var abv = new Uint8Array(10);\n      for (var i = 0; i < abv.length; i++) {\n        abv[i] = i;\n      }\n\n      var sliced = sliceBuffer(abv.buffer, 3, 8);\n      var sabv = new Uint8Array(sliced);\n      for (var i = 3, ii = 0; i < 8; i++, ii++) {\n        expect(abv[i]).to.equal(sabv[ii]);\n      }\n    });\n\n    it('should slice correctly with negative start', function() {\n      var abv = new Uint8Array(10);\n      for (var i = 0; i < abv.length; i++) {\n        abv[i] = i;\n      }\n\n      var sliced = sliceBuffer(abv.buffer, -3);\n      var sabv = new Uint8Array(sliced);\n      for (var i = abv.length - 3, ii = 0; i < abv.length; i++, ii++) {\n        expect(abv[i]).to.equal(sabv[ii]);\n      }\n    });\n\n    it('should slice correctly with negative end', function() {\n      var abv = new Uint8Array(10);\n      for (var i = 0; i < abv.length; i++) {\n        abv[i] = i;\n      }\n\n      var sliced = sliceBuffer(abv.buffer, 0, -3);\n      var sabv = new Uint8Array(sliced);\n      for (var i = 0, ii = 0; i < abv.length - 3; i++, ii++) {\n        expect(abv[i]).to.equal(sabv[ii]);\n      }\n    });\n\n    it('should slice correctly with negative start and end', function() {\n      var abv = new Uint8Array(10);\n      for (var i = 0; i < abv.length; i++) {\n        abv[i] = i;\n      }\n\n      var sliced = sliceBuffer(abv.buffer, -6, -3);\n      var sabv = new Uint8Array(sliced);\n      for (var i = abv.length - 6, ii = 0; i < abv.length - 3; i++, ii++) {\n        expect(abv[i]).to.equal(sabv[ii]);\n      }\n    });\n\n    it('should slice correctly with equal start and end', function() {\n      var abv = new Uint8Array(10);\n      for (var i = 0; i < abv.length; i++) {\n        abv[i] = i;\n      }\n\n      var sliced = sliceBuffer(abv.buffer, 1, 1);\n      expect(sliced.byteLength).to.equal(0);\n    });\n    \n    it('should slice correctly when end larger than buffer', function() {\n      var abv = new Uint8Array(10);\n      for (var i = 0; i < abv.length; i++) {\n        abv[i] = i;\n      }\n\n      var sliced = sliceBuffer(abv.buffer, 0, 100);\n      expect(new Uint8Array(sliced)).to.eql(abv);\n    });\n\n    it('shoud slice correctly when start larger than end', function() {\n      var abv = new Uint8Array(10);\n      for (var i = 0; i < abv.length; i++) {\n        abv[i] = i;\n      }\n\n      var sliced = sliceBuffer(abv.buffer, 6, 5);\n      expect(sliced.byteLength).to.equal(0);\n    });\n  });\n\n  describe('using fallback', function() {\n    it('should slice correctly with only start provided', function() {\n      var abv = new Uint8Array(10);\n      for (var i = 0; i < abv.length; i++) {\n        abv[i] = i;\n      }\n      var ab = abv.buffer;\n      ab.slice = undefined;\n\n      var sliced = sliceBuffer(ab, 3);\n      var sabv = new Uint8Array(sliced);\n      for (var i = 3, ii = 0; i < abv.length; i++, ii++) {\n        expect(abv[i]).to.equal(sabv[ii]);\n      }\n    });\n\n    it('should slice correctly with start and end provided', function() {\n      var abv = new Uint8Array(10);\n      for (var i = 0; i < abv.length; i++) {\n        abv[i] = i;\n      }\n      var ab = abv.buffer;\n      ab.slice = undefined;\n\n\n      var sliced = sliceBuffer(ab, 3, 8);\n      var sabv = new Uint8Array(sliced);\n      for (var i = 3, ii = 0; i < 8; i++, ii++) {\n        expect(abv[i]).to.equal(sabv[ii]);\n      }\n    });\n\n    it('should slice correctly with negative start', function() {\n      var abv = new Uint8Array(10);\n      for (var i = 0; i < abv.length; i++) {\n        abv[i] = i;\n      }\n      var ab = abv.buffer;\n      ab.slice = undefined;\n\n\n      var sliced = sliceBuffer(ab, -3);\n      var sabv = new Uint8Array(sliced);\n      for (var i = abv.length - 3, ii = 0; i < abv.length; i++, ii++) {\n        expect(abv[i]).to.equal(sabv[ii]);\n      }\n    });\n\n    it('should slice correctly with negative end', function() {\n      var abv = new Uint8Array(10);\n      for (var i = 0; i < abv.length; i++) {\n        abv[i] = i;\n      }\n      var ab = abv.buffer;\n      ab.slice = undefined;\n\n      var sliced = sliceBuffer(ab, 0, -3);\n      var sabv = new Uint8Array(sliced);\n      for (var i = 0, ii = 0; i < abv.length - 3; i++, ii++) {\n        expect(abv[i]).to.equal(sabv[ii]);\n      }\n    });\n\n    it('should slice correctly with negative start and end', function() {\n      var abv = new Uint8Array(10);\n      for (var i = 0; i < abv.length; i++) {\n        abv[i] = i;\n      }\n      var ab = abv.buffer;\n      ab.slice = undefined;\n\n      var sliced = sliceBuffer(ab, -6, -3);\n      var sabv = new Uint8Array(sliced);\n      for (var i = abv.length - 6, ii = 0; i < abv.length - 3; i++, ii++) {\n        expect(abv[i]).to.equal(sabv[ii]);\n      }\n    });\n\n    it('should slice correctly with equal start and end', function() {\n      var abv = new Uint8Array(10);\n      for (var i = 0; i < abv.length; i++) {\n        abv[i] = i;\n      }\n      var ab = abv.buffer;\n      ab.slice = undefined;\n\n      var sliced = sliceBuffer(ab, 1, 1);\n      expect(sliced.byteLength).to.equal(0);\n    });\n\n    it('should slice correctly when end larger than buffer', function() {\n      var abv = new Uint8Array(10);\n      for (var i = 0; i < abv.length; i++) {\n        abv[i] = i;\n      }\n      var ab = abv.buffer;\n      ab.slice = undefined;\n\n      var sliced = sliceBuffer(ab, 0, 100);\n      var sabv = new Uint8Array(sliced);\n      for (var i = 0; i < abv.length; i++) {\n        expect(abv[i]).to.equal(sabv[i]);\n      }\n    });\n\n    it('shoud slice correctly when start larger than end', function() {\n      var abv = new Uint8Array(10);\n      for (var i = 0; i < abv.length; i++) {\n        abv[i] = i;\n      }\n      var ab = abv.buffer;\n      ab.slice = undefined;\n\n      var sliced = sliceBuffer(ab, 6, 5);\n      expect(sliced.byteLength).to.equal(0);\n    });\n  });\n});\n"]}