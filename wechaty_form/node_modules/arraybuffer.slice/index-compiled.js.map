{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA,OAAO,OAAP,GAAiB,UAAS,WAAT,EAAsB,KAAtB,EAA6B,GAA7B,EAAkC;AACjD,MAAI,QAAQ,YAAY,UAAxB;AACA,UAAQ,SAAS,CAAjB;AACA,QAAM,OAAO,KAAb;;AAEA,MAAI,YAAY,KAAhB,EAAuB;AAAE,WAAO,YAAY,KAAZ,CAAkB,KAAlB,EAAyB,GAAzB,CAAP;AAAuC;;AAEhE,MAAI,QAAQ,CAAZ,EAAe;AAAE,aAAS,KAAT;AAAiB;AAClC,MAAI,MAAM,CAAV,EAAa;AAAE,WAAO,KAAP;AAAe;AAC9B,MAAI,MAAM,KAAV,EAAiB;AAAE,UAAM,KAAN;AAAc;;AAEjC,MAAI,SAAS,KAAT,IAAkB,SAAS,GAA3B,IAAkC,UAAU,CAAhD,EAAmD;AACjD,WAAO,IAAI,WAAJ,CAAgB,CAAhB,CAAP;AACD;;AAED,MAAI,MAAM,IAAI,UAAJ,CAAe,WAAf,CAAV;AACA,MAAI,SAAS,IAAI,UAAJ,CAAe,MAAM,KAArB,CAAb;AACA,OAAK,IAAI,IAAI,KAAR,EAAe,KAAK,CAAzB,EAA4B,IAAI,GAAhC,EAAqC,KAAK,IAA1C,EAAgD;AAC9C,WAAO,EAAP,IAAa,IAAI,CAAJ,CAAb;AACD;AACD,SAAO,OAAO,MAAd;AACD,CArBD","file":"index-compiled.js","sourcesContent":["/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n"]}