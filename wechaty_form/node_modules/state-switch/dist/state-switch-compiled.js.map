{"version":3,"sources":["state-switch.js"],"names":[],"mappings":"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","file":"state-switch-compiled.js","sourcesContent":["\"use strict\";\n/**\n *\n * Wechaty: Wechat for Bot. and for human who talk to bot/robot\n *\n * Class StateSwitch\n * Licenst: Apache-2.0\n * https://github.com/zixia/state-switcher\n *\n * Helper Class for Manage State Change\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A - State A\n * B - State B\n */\nclass StateSwitch {\n    constructor(_client, initState, logInstance) {\n        this._client = _client;\n        if (logInstance) {\n            this.setLog(logInstance); // init log, should be a Brolog or Npmlog instance\n        }\n        else {\n            this.setLog(null);\n        }\n        this.log.silly('StateSwitch', 'constructor(%s, %s)', _client, initState);\n        this._target = initState;\n        this._current = initState;\n        this._stable = true;\n    }\n    setLog(logInstance) {\n        if (logInstance) {\n            this.log = logInstance;\n        }\n        else {\n            this.log = {\n                silly(...args) { },\n                verbose(...args) { },\n                warn(...args) { },\n                error(...args) { },\n            };\n        }\n    }\n    /**\n     * set/get target state\n     */\n    target(newState) {\n        if (newState) {\n            this.log.verbose('StateSwitch', '%s:target(%s) <- (%s)', this._client, newState, this._target);\n            this._target = newState;\n        }\n        else {\n            this.log.silly('StateSwitch', '%s:target() is %s', this._client, this._target);\n        }\n        return this._target;\n    }\n    /**\n     * set/get current state\n     * @param stable boolean  true for stable, false for inprocess\n     */\n    current(newState, stable = true) {\n        if (newState) {\n            this.log.verbose('StateSwitch', '%s:current(%s,%s) <- (%s,%s)', this._client, newState, stable, this._current, this._stable);\n            /**\n             * strict check current is equal to target\n             */\n            if (this._target !== newState) {\n                this.log.warn('StateSwitch', '%s:current(%s,%s) current is different with target. call state.target(%s) first.', this._client, newState, stable, newState);\n                const e = new Error('current not match target');\n                this.log.verbose('StateSwitch', e.stack);\n                throw e;\n            }\n            /**\n             * warn for inprocess current state change twice, mostly like a logic bug outside\n             */\n            if (this._current === newState && this._stable === stable\n                && stable === false) {\n                this.log.warn('StateSwitch', '%s:current(%s,%s) called but there are already in the same state', this._client, newState, stable);\n                const e = new Error('current unchange');\n                this.log.verbose('StateSwitch', e.stack);\n            }\n            this._current = newState;\n            this._stable = stable;\n        }\n        else {\n            this.log.silly('StateSwitch', '%s:current() is %s', this._client, this._current);\n        }\n        return this._current;\n    }\n    /**\n     * does the current state be stable(not inprocess)?\n     */\n    stable() {\n        this.log.silly('StateSwitch', '%s:stable() is %s', this._client, this._stable);\n        return this._stable;\n    }\n    /**\n     * does the current state be inprocess(not stable)?\n     */\n    inprocess() {\n        this.log.silly('StateSwitch', '%s:inprocess() is %s', this._client, !this._stable);\n        return !this._stable;\n    }\n    /**\n     * get the client name\n     */\n    client() {\n        return this._client;\n    }\n}\nexports.StateSwitch = StateSwitch;\nexports.default = StateSwitch;\n//# sourceMappingURL=state-switch.js.map"]}