{"version":3,"sources":["thenables.js"],"names":[],"mappings":"AAAA;;AACA,OAAO,OAAP,GAAiB,UAAS,OAAT,EAAkB,QAAlB,EAA4B;AAC7C,QAAI,OAAO,QAAQ,WAAR,CAAX;AACA,QAAI,WAAW,KAAK,QAApB;AACA,QAAI,WAAW,KAAK,QAApB;;AAEA,aAAS,mBAAT,CAA6B,GAA7B,EAAkC,OAAlC,EAA2C;AACvC,YAAI,SAAS,GAAT,CAAJ,EAAmB;AACf,gBAAI,eAAe,OAAnB,EAA4B;AACxB,uBAAO,GAAP;AACH,aAFD,MAGK,IAAI,qBAAqB,GAArB,CAAJ,EAA+B;AAChC,oBAAI,MAAM,IAAI,OAAJ,CAAY,QAAZ,CAAV;AACA,oBAAI,KAAJ,CACI,IAAI,iBADR,EAEI,IAAI,0BAFR,EAGI,IAAI,kBAHR,EAII,GAJJ,EAKI,IALJ;AAOA,uBAAO,GAAP;AACH;AACD,gBAAI,OAAO,KAAK,QAAL,CAAc,OAAd,EAAuB,GAAvB,CAAX;AACA,gBAAI,SAAS,QAAb,EAAuB;AACnB,oBAAI,OAAJ,EAAa,QAAQ,YAAR;AACb,oBAAI,MAAM,QAAQ,MAAR,CAAe,KAAK,CAApB,CAAV;AACA,oBAAI,OAAJ,EAAa,QAAQ,WAAR;AACb,uBAAO,GAAP;AACH,aALD,MAKO,IAAI,OAAO,IAAP,KAAgB,UAApB,EAAgC;AACnC,uBAAO,WAAW,GAAX,EAAgB,IAAhB,EAAsB,OAAtB,CAAP;AACH;AACJ;AACD,eAAO,GAAP;AACH;;AAED,aAAS,OAAT,CAAiB,GAAjB,EAAsB;AAClB,eAAO,IAAI,IAAX;AACH;;AAED,QAAI,UAAU,GAAG,cAAjB;AACA,aAAS,oBAAT,CAA8B,GAA9B,EAAmC;AAC/B,eAAO,QAAQ,IAAR,CAAa,GAAb,EAAkB,WAAlB,CAAP;AACH;;AAED,aAAS,UAAT,CAAoB,CAApB,EAAuB,IAAvB,EAA6B,OAA7B,EAAsC;AAClC,YAAI,UAAU,IAAI,OAAJ,CAAY,QAAZ,CAAd;AACA,YAAI,MAAM,OAAV;AACA,YAAI,OAAJ,EAAa,QAAQ,YAAR;AACb,gBAAQ,kBAAR;AACA,YAAI,OAAJ,EAAa,QAAQ,WAAR;AACb,YAAI,cAAc,IAAlB;AACA,YAAI,SAAS,KAAK,QAAL,CAAc,IAAd,EAAoB,IAApB,CAAyB,CAAzB,EACuB,mBADvB,EAEuB,kBAFvB,EAGuB,oBAHvB,CAAb;AAIA,sBAAc,KAAd;AACA,YAAI,WAAW,WAAW,QAA1B,EAAoC;AAChC,oBAAQ,eAAR,CAAwB,OAAO,CAA/B,EAAkC,IAAlC,EAAwC,IAAxC;AACA,sBAAU,IAAV;AACH;;AAED,iBAAS,mBAAT,CAA6B,KAA7B,EAAoC;AAChC,gBAAI,CAAC,OAAL,EAAc;AACd,oBAAQ,gBAAR,CAAyB,KAAzB;AACA,sBAAU,IAAV;AACH;;AAED,iBAAS,kBAAT,CAA4B,MAA5B,EAAoC;AAChC,gBAAI,CAAC,OAAL,EAAc;AACd,oBAAQ,eAAR,CAAwB,MAAxB,EAAgC,WAAhC,EAA6C,IAA7C;AACA,sBAAU,IAAV;AACH;;AAED,iBAAS,oBAAT,CAA8B,KAA9B,EAAqC;AACjC,gBAAI,CAAC,OAAL,EAAc;AACd,gBAAI,OAAO,QAAQ,SAAf,KAA6B,UAAjC,EAA6C;AACzC,wBAAQ,SAAR,CAAkB,KAAlB;AACH;AACJ;AACD,eAAO,GAAP;AACH;;AAED,WAAO,mBAAP;AACC,CAlFD","file":"thenables-compiled.js","sourcesContent":["\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar util = require(\"./util.js\");\nvar errorObj = util.errorObj;\nvar isObject = util.isObject;\n\nfunction tryConvertToPromise(obj, context) {\n    if (isObject(obj)) {\n        if (obj instanceof Promise) {\n            return obj;\n        }\n        else if (isAnyBluebirdPromise(obj)) {\n            var ret = new Promise(INTERNAL);\n            obj._then(\n                ret._fulfillUnchecked,\n                ret._rejectUncheckedCheckError,\n                ret._progressUnchecked,\n                ret,\n                null\n            );\n            return ret;\n        }\n        var then = util.tryCatch(getThen)(obj);\n        if (then === errorObj) {\n            if (context) context._pushContext();\n            var ret = Promise.reject(then.e);\n            if (context) context._popContext();\n            return ret;\n        } else if (typeof then === \"function\") {\n            return doThenable(obj, then, context);\n        }\n    }\n    return obj;\n}\n\nfunction getThen(obj) {\n    return obj.then;\n}\n\nvar hasProp = {}.hasOwnProperty;\nfunction isAnyBluebirdPromise(obj) {\n    return hasProp.call(obj, \"_promise0\");\n}\n\nfunction doThenable(x, then, context) {\n    var promise = new Promise(INTERNAL);\n    var ret = promise;\n    if (context) context._pushContext();\n    promise._captureStackTrace();\n    if (context) context._popContext();\n    var synchronous = true;\n    var result = util.tryCatch(then).call(x,\n                                        resolveFromThenable,\n                                        rejectFromThenable,\n                                        progressFromThenable);\n    synchronous = false;\n    if (promise && result === errorObj) {\n        promise._rejectCallback(result.e, true, true);\n        promise = null;\n    }\n\n    function resolveFromThenable(value) {\n        if (!promise) return;\n        promise._resolveCallback(value);\n        promise = null;\n    }\n\n    function rejectFromThenable(reason) {\n        if (!promise) return;\n        promise._rejectCallback(reason, synchronous, true);\n        promise = null;\n    }\n\n    function progressFromThenable(value) {\n        if (!promise) return;\n        if (typeof promise._progress === \"function\") {\n            promise._progress(value);\n        }\n    }\n    return ret;\n}\n\nreturn tryConvertToPromise;\n};\n"]}