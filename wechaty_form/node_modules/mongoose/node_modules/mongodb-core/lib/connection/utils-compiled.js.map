{"version":3,"sources":["utils.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,IAAI,QAAQ,MAAR,EAAgB,MAAxB;AAAA,IACE,mBAAmB,QAAQ,kBAAR,CADrB;;AAGA;AACA,IAAI,cAAc,UAAS,GAAT,EAAc,IAAd,EAAoB,IAApB,EAA0B,MAA1B,EAAkC;AAClD,SAAO,cAAP,CAAsB,GAAtB,EAA2B,KAAK,IAAhC,EAAsC;AAClC,gBAAW,IADuB;AAElC,SAAK,UAAS,KAAT,EAAgB;AACnB,UAAG,OAAO,KAAP,IAAgB,SAAnB,EAA8B,MAAM,IAAI,KAAJ,CAAU,EAAE,uBAAF,EAA2B,KAAK,IAAhC,CAAV,CAAN;AAC9B;AACA,UAAG,SAAS,IAAZ,EAAkB,OAAO,KAAP,IAAgB,IAAhB;AAClB;AACA,UAAG,SAAS,KAAT,IAAkB,CAAC,OAAO,KAAP,GAAe,IAAhB,KAAyB,IAA9C,EAAoD,OAAO,KAAP,IAAgB,IAAhB;AACpD,WAAK,KAAL,GAAa,KAAb;AACD,KATiC;AAUlC,SAAK,YAAW;AAAE,aAAO,KAAK,KAAZ;AAAoB;AAVJ,GAAtC;AAYD,CAbD;;AAeA;AACA,IAAI,cAAc,UAAS,GAAT,EAAc,QAAd,EAAwB,SAAxB,EAAmC,MAAnC,EAA2C,IAA3C,EAAiD;AACjE,SAAO,cAAP,CAAsB,GAAtB,EAA2B,QAA3B,EAAqC;AACnC,gBAAW,IADwB;AAEnC,SAAK,YAAW;AACd;AACA,UAAG,OAAO,SAAP,KAAqB,IAArB,IAA6B,IAAI,QAAjC,IAA6C,CAAC,IAAI,QAAJ,EAAjD,EAAiE;AAC/D,YAAI,KAAJ;AACD;;AAED;AACA,UAAG,OAAO,IAAP,IAAe,UAAlB,EAA8B,OAAO,KAAK,OAAO,SAAP,CAAL,CAAP;AAC9B;AACA,aAAO,OAAO,SAAP,CAAP;AACD;AAZkC,GAArC;AAcD,CAfD;;AAiBA;AACA,IAAI,oBAAoB,UAAS,GAAT,EAAc,IAAd,EAAoB,KAApB,EAA2B;AACjD,SAAO,cAAP,CAAsB,GAAtB,EAA2B,IAA3B,EAAiC;AAC/B,gBAAW,IADoB;AAE/B,SAAK,YAAW;AACd,aAAO,KAAP;AACD;AAJ8B,GAAjC;AAMD,CAPD;;AASA;AACA,IAAI,OAAO,UAAS,IAAT,EAAe,IAAf,EAAqB;AAC9B,SAAO,QAAQ,EAAf;AACA,OAAI,IAAI,IAAR,IAAgB,IAAhB,EAAsB,KAAK,IAAL,IAAa,KAAK,IAAL,CAAb;AACtB,SAAO,IAAP;AACD,CAJD;;AAMA,IAAI,eAAe,UAAS,WAAT,EAAsB,OAAtB,EAA+B;AAChD,MAAI,eAAe,EAAnB;AACA,cAAY,OAAZ,CAAoB,UAAS,CAAT,EAAY;AAC9B,iBAAa,CAAb,IAAkB,QAAQ,CAAR,CAAlB;AACD,GAFD;;AAIA,SAAO,YAAP;AACD,CAPD;;AASA,IAAI,eAAe,YAAW;AAC5B,MAAI,OAAO,QAAQ,MAAR,CAAX;AACA,OAAK,MAAL,GAAc,KAAd;;AAEA,MAAI;AACF;AACA;AACA;AACA;AACE,QAAI,eAAe,iBAAiB,UAAjB,CAAnB;AACA,QAAG,YAAH,EAAiB;AACf,mBAAa,MAAb,GAAsB,IAAtB;AACA,aAAO,YAAP;AACD;AACH;AACD,GAXD,CAWE,OAAM,GAAN,EAAW,CAAE;;AAEf,SAAO,IAAP;AACD,CAlBD;;AAoBA,QAAQ,WAAR,GAAsB,WAAtB;AACA,QAAQ,WAAR,GAAsB,WAAtB;AACA,QAAQ,iBAAR,GAA4B,iBAA5B;AACA,QAAQ,IAAR,GAAe,IAAf;AACA,QAAQ,YAAR,GAAuB,YAAvB;AACA,QAAQ,YAAR,GAAuB,YAAvB","file":"utils-compiled.js","sourcesContent":["\"use strict\";\n\nvar f = require('util').format,\n  require_optional = require('require_optional');\n\n// Set property function\nvar setProperty = function(obj, prop, flag, values) {\n  Object.defineProperty(obj, prop.name, {\n      enumerable:true,\n      set: function(value) {\n        if(typeof value != 'boolean') throw new Error(f(\"%s required a boolean\", prop.name));\n        // Flip the bit to 1\n        if(value == true) values.flags |= flag;\n        // Flip the bit to 0 if it's set, otherwise ignore\n        if(value == false && (values.flags & flag) == flag) values.flags ^= flag;\n        prop.value = value;\n      }\n    , get: function() { return prop.value; }\n  });\n}\n\n// Set property function\nvar getProperty = function(obj, propName, fieldName, values, func) {\n  Object.defineProperty(obj, propName, {\n    enumerable:true,\n    get: function() {\n      // Not parsed yet, parse it\n      if(values[fieldName] == null && obj.isParsed && !obj.isParsed()) {\n        obj.parse();\n      }\n\n      // Do we have a post processing function\n      if(typeof func == 'function') return func(values[fieldName]);\n      // Return raw value\n      return values[fieldName];\n    }\n  });\n}\n\n// Set simple property\nvar getSingleProperty = function(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    enumerable:true,\n    get: function() {\n      return value\n    }\n  });\n}\n\n// Shallow copy\nvar copy = function(fObj, tObj) {\n  tObj = tObj || {};\n  for(var name in fObj) tObj[name] = fObj[name];\n  return tObj;\n}\n\nvar debugOptions = function(debugFields, options) {\n  var finaloptions = {};\n  debugFields.forEach(function(n) {\n    finaloptions[n] = options[n];\n  });\n\n  return finaloptions;\n}\n\nvar retrieveBSON = function() {\n  var BSON = require('bson');\n  BSON.native = false;\n\n  try {\n    // try {\n    //   BSON = require('bson-ext');\n    //   BSON.native = true;\n    // } catch(err) {\n      var optionalBSON = require_optional('bson-ext');\n      if(optionalBSON) {\n        optionalBSON.native = true;\n        return optionalBSON;\n      }\n    // }\n  } catch(err) {}\n\n  return BSON;\n}\n\nexports.setProperty = setProperty;\nexports.getProperty = getProperty;\nexports.getSingleProperty = getSingleProperty;\nexports.copy = copy;\nexports.debugOptions = debugOptions;\nexports.retrieveBSON = retrieveBSON;\n"]}