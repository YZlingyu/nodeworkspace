{"version":3,"sources":["2_6_support.js"],"names":[],"mappings":"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","file":"2_6_support-compiled.js","sourcesContent":["\"use strict\";\n\nvar copy = require('../connection/utils').copy\n  , retrieveBSON = require('../connection/utils').retrieveBSON\n  , KillCursor = require('../connection/commands').KillCursor\n  , GetMore = require('../connection/commands').GetMore\n  , Query = require('../connection/commands').Query\n  , f = require('util').format\n  , MongoError = require('../error')\n  , getReadPreference = require('./shared').getReadPreference;\n\nvar BSON = retrieveBSON(),\n  Long = BSON.Long;\n\nvar WireProtocol = function() {}\n\n//\n// Execute a write operation\nvar executeWrite = function(pool, bson, type, opsField, ns, ops, options, callback) {\n  if(ops.length == 0) throw new MongoError(\"insert must contain at least one document\");\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n    options = options || {};\n  }\n\n  // Split the ns up to get db and collection\n  var p = ns.split(\".\");\n  var d = p.shift();\n  // Options\n  var ordered = typeof options.ordered == 'boolean' ? options.ordered : true;\n  var writeConcern = options.writeConcern;\n\n  // return skeleton\n  var writeCommand = {};\n  writeCommand[type] = p.join('.');\n  writeCommand[opsField] = ops;\n  writeCommand.ordered = ordered;\n\n  // Did we specify a write concern\n  if(writeConcern && Object.keys(writeConcern).length > 0) {\n    writeCommand.writeConcern = writeConcern;\n  }\n\n  // Do we have bypassDocumentValidation set, then enable it on the write command\n  if(typeof options.bypassDocumentValidation == 'boolean') {\n    writeCommand.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // Options object\n  var opts = { command: true };\n  var queryOptions = { checkKeys : false, numberToSkip: 0, numberToReturn: 1 };\n  if(type == 'insert') queryOptions.checkKeys = true;\n  if(typeof options.checkKeys == 'boolean') queryOptions.checkKeys = options.checkKeys;\n  // Ensure we support serialization of functions\n  if(options.serializeFunctions) queryOptions.serializeFunctions = options.serializeFunctions;\n  // Do not serialize the undefined fields\n  if(options.ignoreUndefined) queryOptions.ignoreUndefined = options.ignoreUndefined;\n\n  try {\n    // Create write command\n    var cmd = new Query(bson, f(\"%s.$cmd\", d), writeCommand, queryOptions);\n    // Execute command\n    pool.write(cmd, opts, callback);\n  } catch(err) {\n    callback(err);\n  }\n}\n\n//\n// Needs to support legacy mass insert as well as ordered/unordered legacy\n// emulation\n//\nWireProtocol.prototype.insert = function(pool, ismaster, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'insert', 'documents', ns, ops, options, callback);\n}\n\nWireProtocol.prototype.update = function(pool, ismaster, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'update', 'updates', ns, ops, options, callback);\n}\n\nWireProtocol.prototype.remove = function(pool, ismaster, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'delete', 'deletes', ns, ops, options, callback);\n}\n\nWireProtocol.prototype.killCursor = function(bson, ns, cursorId, pool, callback) {\n  // Create a kill cursor command\n  var killCursor = new KillCursor(bson, [cursorId]);\n  // Execute the kill cursor command\n  if(pool && pool.isConnected()) {\n    pool.write(killCursor, {\n      immediateRelease:true, noResponse: true\n    });\n  }\n\n  // Callback\n  if(typeof callback == 'function') callback(null, null);\n}\n\nWireProtocol.prototype.getMore = function(bson, ns, cursorState, batchSize, raw, connection, options, callback) {\n  // Create getMore command\n  var getMore = new GetMore(bson, ns, cursorState.cursorId, {numberToReturn: batchSize});\n\n  // Query callback\n  var queryCallback = function(err, result) {\n    if(err) return callback(err);\n    // Get the raw message\n    var r = result.message;\n\n    // If we have a timed out query or a cursor that was killed\n    if((r.responseFlags & (1 << 0)) != 0) {\n      return callback(new MongoError(\"cursor does not exist, was killed or timed out\"), null);\n    }\n\n    // Ensure we have a Long valie cursor id\n    var cursorId = typeof r.cursorId == 'number'\n      ? Long.fromNumber(r.cursorId)\n      : r.cursorId;\n\n    // Set all the values\n    cursorState.documents = r.documents;\n    cursorState.cursorId = cursorId;\n\n    // Return\n    callback(null, null, r.connection);\n  }\n\n  // Contains any query options\n  var queryOptions = {};\n\n  // If we have a raw query decorate the function\n  if(raw) {\n    queryOptions.raw = raw;\n  }\n\n  // Check if we need to promote longs\n  if(typeof cursorState.promoteLongs == 'boolean') {\n    queryOptions.promoteLongs = cursorState.promoteLongs;\n  }\n\n  if(typeof cursorState.promoteValues == 'boolean') {\n    queryOptions.promoteValues = cursorState.promoteValues;\n  }\n\n  if(typeof cursorState.promoteBuffers == 'boolean') {\n    queryOptions.promoteBuffers = cursorState.promoteBuffers;\n  }\n\n  // Write out the getMore command\n  connection.write(getMore, queryOptions, queryCallback);\n}\n\nWireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) {\n  // Establish type of command\n  if(cmd.find) {\n    return setupClassicFind(bson, ns, cmd, cursorState, topology, options)\n  } else if(cursorState.cursorId != null) {\n    return;\n  } else if(cmd) {\n    return setupCommand(bson, ns, cmd, cursorState, topology, options);\n  } else {\n    throw new MongoError(f(\"command %s does not return a cursor\", JSON.stringify(cmd)));\n  }\n}\n\n//\n// Execute a find command\nvar setupClassicFind = function(bson, ns, cmd, cursorState, topology, options) {\n  // Ensure we have at least some options\n  options = options || {};\n  // Get the readPreference\n  var readPreference = getReadPreference(cmd, options);\n  // Set the optional batchSize\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n  var numberToReturn = 0;\n\n  // Unpack the limit and batchSize values\n  if(cursorState.limit == 0) {\n    numberToReturn = cursorState.batchSize;\n  } else if(cursorState.limit < 0 || cursorState.limit < cursorState.batchSize || (cursorState.limit > 0 && cursorState.batchSize == 0)) {\n    numberToReturn = cursorState.limit;\n  } else {\n    numberToReturn = cursorState.batchSize;\n  }\n\n  var numberToSkip = cursorState.skip || 0;\n  // Build actual find command\n  var findCmd = {};\n  // Using special modifier\n  var usesSpecialModifier = false;\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if(topology.type == 'mongos' && readPreference) {\n    findCmd['$readPreference'] = readPreference.toJSON();\n    usesSpecialModifier = true;\n  }\n\n  // Add special modifiers to the query\n  if(cmd.sort) findCmd['orderby'] = cmd.sort, usesSpecialModifier = true;\n  if(cmd.hint) findCmd['$hint'] = cmd.hint, usesSpecialModifier = true;\n  if(cmd.snapshot) findCmd['$snapshot'] = cmd.snapshot, usesSpecialModifier = true;\n  if(cmd.returnKey) findCmd['$returnKey'] = cmd.returnKey, usesSpecialModifier = true;\n  if(cmd.maxScan) findCmd['$maxScan'] = cmd.maxScan, usesSpecialModifier = true;\n  if(cmd.min) findCmd['$min'] = cmd.min, usesSpecialModifier = true;\n  if(cmd.max) findCmd['$max'] = cmd.max, usesSpecialModifier = true;\n  if(cmd.showDiskLoc) findCmd['$showDiskLoc'] = cmd.showDiskLoc, usesSpecialModifier = true;\n  if(cmd.comment) findCmd['$comment'] = cmd.comment, usesSpecialModifier = true;\n  if(cmd.maxTimeMS) findCmd['$maxTimeMS'] = cmd.maxTimeMS, usesSpecialModifier = true;\n\n  if(cmd.explain) {\n\t// nToReturn must be 0 (match all) or negative (match N and close cursor)\n\t// nToReturn > 0 will give explain results equivalent to limit(0)\n    numberToReturn = -Math.abs(cmd.limit || 0);\n    usesSpecialModifier = true;\n    findCmd['$explain'] = true;\n  }\n\n  // If we have a special modifier\n  if(usesSpecialModifier) {\n    findCmd['$query'] = cmd.query;\n  } else {\n    findCmd = cmd.query;\n  }\n\n  // Throw on majority readConcern passed in\n  if(cmd.readConcern && cmd.readConcern.level != 'local') {\n    throw new MongoError(f('server find command does not support a readConcern level of %s', cmd.readConcern.level));\n  }\n\n  // Remove readConcern, ensure no failing commands\n  if(cmd.readConcern) {\n    cmd = copy(cmd);\n    delete cmd['readConcern'];\n  }\n\n  // Serialize functions\n  var serializeFunctions = typeof options.serializeFunctions == 'boolean'\n    ? options.serializeFunctions : false;\n  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'\n    ? options.ignoreUndefined : false;\n\n  // Build Query object\n  var query = new Query(bson, ns, findCmd, {\n      numberToSkip: numberToSkip, numberToReturn: numberToReturn\n    , checkKeys: false, returnFieldSelector: cmd.fields\n    , serializeFunctions: serializeFunctions\n    , ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Set up the option bits for wire protocol\n  if(typeof cmd.tailable == 'boolean') {\n    query.tailable = cmd.tailable;\n  }\n\n  if(typeof cmd.oplogReplay == 'boolean') {\n    query.oplogReplay = cmd.oplogReplay;\n  }\n\n  if(typeof cmd.noCursorTimeout == 'boolean') {\n    query.noCursorTimeout = cmd.noCursorTimeout;\n  }\n\n  if(typeof cmd.awaitData == 'boolean') {\n    query.awaitData = cmd.awaitData;\n  }\n\n  if(typeof cmd.partial == 'boolean') {\n    query.partial = cmd.partial;\n  }\n\n  // Return the query\n  return query;\n}\n\n//\n// Set up a command cursor\nvar setupCommand = function(bson, ns, cmd, cursorState, topology, options) {\n  // Set empty options object\n  options = options || {}\n  // Get the readPreference\n  var readPreference = getReadPreference(cmd, options);\n\n  // Final query\n  var finalCmd = {};\n  for(var name in cmd) {\n    finalCmd[name] = cmd[name];\n  }\n\n  // Build command namespace\n  var parts = ns.split(/\\./);\n\n  // Serialize functions\n  var serializeFunctions = typeof options.serializeFunctions == 'boolean'\n    ? options.serializeFunctions : false;\n\n  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'\n    ? options.ignoreUndefined : false;\n\n  // Throw on majority readConcern passed in\n  if(cmd.readConcern && cmd.readConcern.level != 'local') {\n    throw new MongoError(f('server %s command does not support a readConcern level of %s', JSON.stringify(cmd), cmd.readConcern.level));\n  }\n\n  // Remove readConcern, ensure no failing commands\n  if(cmd.readConcern) delete cmd['readConcern'];\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if(topology.type == 'mongos'\n    && readPreference\n    && readPreference.preference != 'primary') {\n    finalCmd = {\n      '$query': finalCmd,\n      '$readPreference': readPreference.toJSON()\n    };\n  }\n\n  // Build Query object\n  var query = new Query(bson, f('%s.$cmd', parts.shift()), finalCmd, {\n      numberToSkip: 0, numberToReturn: -1\n    , checkKeys: false, serializeFunctions: serializeFunctions\n    , ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n}\n\nmodule.exports = WireProtocol;\n"]}