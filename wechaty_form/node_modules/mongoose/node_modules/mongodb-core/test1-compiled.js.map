{"version":3,"sources":["test1.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,yBAAR,CAAb;;AAEA;AACA,IAAI,SAAS,IAAI,MAAJ,CAAW;AACtB,QAAM,WADgB,EACH,MAAM,KADH,EACU,eAAe;AADzB,CAAX,CAAb;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,EAAP,CAAU,SAAV,EAAqB,UAAS,OAAT,EAAkB;;AAErC,cAAY,YAAW;AACrB,YAAQ,MAAR,CAAe,WAAf,EAA4B,CAAC,EAAC,GAAE,CAAH,EAAD,CAA5B,EAAqC,UAAS,GAAT,EAAc,CAAd,EAAiB;AACpD,cAAQ,GAAR,CAAY,QAAZ;AACD,KAFD;AAGD,GAJD,EAIG,IAJH;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CA3CD;;AA6CA,OAAO,OAAP","file":"test1-compiled.js","sourcesContent":["var Server = require('./lib/topologies/server');\n\n// Attempt to connect\nvar server = new Server({\n  host: 'localhost', port: 27017, socketTimeout: 500\n});\n\n// function executeCursors(_server, cb) {\n//   var count = 100;\n//\n//   for(var i = 0; i < 100; i++) {\n//     // Execute the write\n//     var cursor = _server.cursor('test.test', {\n//         find: 'test.test'\n//       , query: {a:1}\n//     }, {readPreference: new ReadPreference('secondary')});\n//\n//     // Get the first document\n//     cursor.next(function(err, doc) {\n//       count = count - 1;\n//       if(err) console.dir(err)\n//       if(count == 0) return cb();\n//     });\n//   }\n// }\n\nserver.on('connect', function(_server) {\n\n  setInterval(function() {\n    _server.insert('test.test', [{a:1}], function(err, r) {\n      console.log(\"insert\")\n    });\n  }, 1000)\n  // console.log(\"---------------------------------- 0\")\n  // // Attempt authentication\n  // _server.auth('scram-sha-1', 'admin', 'root', 'root', function(err, r) {\n  //   console.log(\"---------------------------------- 1\")\n  //   // console.dir(err)\n  //   // console.dir(r)\n  //\n  //   _server.insert('test.test', [{a:1}], function(err, r) {\n  //     console.log(\"---------------------------------- 2\")\n  //     console.dir(err)\n  //     if(r)console.dir(r.result)\n  //     var name = null;\n  //\n  //     _server.on('joined', function(_t, _server) {\n  //       if(name == _server.name) {\n  //         console.log(\"=========== joined :: \" + _t + \" :: \" + _server.name)\n  //         executeCursors(_server, function() {\n  //         });\n  //       }\n  //     })\n  //\n  //     // var s = _server.s.replicaSetState.secondaries[0];\n  //     // s.destroy({emitClose:true});\n  //     executeCursors(_server, function() {\n  //       console.log(\"============== 0\")\n  //       // Attempt to force a server reconnect\n  //       var s = _server.s.replicaSetState.secondaries[0];\n  //       name = s.name;\n  //       s.destroy({emitClose:true});\n  //       // console.log(\"============== 1\")\n  //\n  //       // _server.destroy();\n  //       // test.done();\n  //     });\n  //   });\n  // });\n});\n\nserver.connect();\n"]}