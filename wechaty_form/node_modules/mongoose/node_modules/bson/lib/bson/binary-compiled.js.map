{"version":3,"sources":["binary.js"],"names":[],"mappings":"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","file":"binary-compiled.js","sourcesContent":["/**\n * Module dependencies.\n * @ignore\n */\n\n// Test if we're in Node via presence of \"global\" not absence of \"window\"\n// to support hybrid environments like Electron\nif(typeof global !== 'undefined') {\n  var Buffer = require('buffer').Buffer; // TODO just use global Buffer\n}\n\n/**\n * A class representation of the BSON Binary type.\n *\n * Sub types\n *  - **BSON.BSON_BINARY_SUBTYPE_DEFAULT**, default BSON type.\n *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type.\n *  - **BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY**, BSON byte array type.\n *  - **BSON.BSON_BINARY_SUBTYPE_UUID**, BSON uuid type.\n *  - **BSON.BSON_BINARY_SUBTYPE_MD5**, BSON md5 type.\n *  - **BSON.BSON_BINARY_SUBTYPE_USER_DEFINED**, BSON user defined type.\n *\n * @class\n * @param {Buffer} buffer a buffer object containing the binary data.\n * @param {Number} [subType] the option binary type.\n * @return {Binary}\n */\nfunction Binary(buffer, subType) {\n  if(!(this instanceof Binary)) return new Binary(buffer, subType);\n\n  this._bsontype = 'Binary';\n\n  if(buffer instanceof Number) {\n    this.sub_type = buffer;\n    this.position = 0;\n  } else {\n    this.sub_type = subType == null ? BSON_BINARY_SUBTYPE_DEFAULT : subType;\n    this.position = 0;\n  }\n\n  if(buffer != null && !(buffer instanceof Number)) {\n    // Only accept Buffer, Uint8Array or Arrays\n    if(typeof buffer == 'string') {\n      // Different ways of writing the length of the string for the different types\n      if(typeof Buffer != 'undefined') {\n        this.buffer = new Buffer(buffer);\n      } else if(typeof Uint8Array != 'undefined' || (Object.prototype.toString.call(buffer) == '[object Array]')) {\n        this.buffer = writeStringToArray(buffer);\n      } else {\n        throw new Error(\"only String, Buffer, Uint8Array or Array accepted\");\n      }\n    } else {\n      this.buffer = buffer;\n    }\n    this.position = buffer.length;\n  } else {\n    if(typeof Buffer != 'undefined') {\n      this.buffer =  new Buffer(Binary.BUFFER_SIZE);\n    } else if(typeof Uint8Array != 'undefined'){\n      this.buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE));\n    } else {\n      this.buffer = new Array(Binary.BUFFER_SIZE);\n    }\n    // Set position to start of buffer\n    this.position = 0;\n  }\n};\n\n/**\n * Updates this binary with byte_value.\n *\n * @method\n * @param {string} byte_value a single byte we wish to write.\n */\nBinary.prototype.put = function put(byte_value) {\n  // If it's a string and a has more than one character throw an error\n  if(byte_value['length'] != null && typeof byte_value != 'number' && byte_value.length != 1) throw new Error(\"only accepts single character String, Uint8Array or Array\");\n  if(typeof byte_value != 'number' && byte_value < 0 || byte_value > 255) throw new Error(\"only accepts number in a valid unsigned byte range 0-255\");\n\n  // Decode the byte value once\n  var decoded_byte = null;\n  if(typeof byte_value == 'string') {\n    decoded_byte = byte_value.charCodeAt(0);\n  } else if(byte_value['length'] != null) {\n    decoded_byte = byte_value[0];\n  } else {\n    decoded_byte = byte_value;\n  }\n\n  if(this.buffer.length > this.position) {\n    this.buffer[this.position++] = decoded_byte;\n  } else {\n    if(typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer)) {\n      // Create additional overflow buffer\n      var buffer = new Buffer(Binary.BUFFER_SIZE + this.buffer.length);\n      // Combine the two buffers together\n      this.buffer.copy(buffer, 0, 0, this.buffer.length);\n      this.buffer = buffer;\n      this.buffer[this.position++] = decoded_byte;\n    } else {\n      var buffer = null;\n      // Create a new buffer (typed or normal array)\n      if(Object.prototype.toString.call(this.buffer) == '[object Uint8Array]') {\n        buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE + this.buffer.length));\n      } else {\n        buffer = new Array(Binary.BUFFER_SIZE + this.buffer.length);\n      }\n\n      // We need to copy all the content to the new array\n      for(var i = 0; i < this.buffer.length; i++) {\n        buffer[i] = this.buffer[i];\n      }\n\n      // Reassign the buffer\n      this.buffer = buffer;\n      // Write the byte\n      this.buffer[this.position++] = decoded_byte;\n    }\n  }\n};\n\n/**\n * Writes a buffer or string to the binary.\n *\n * @method\n * @param {(Buffer|string)} string a string or buffer to be written to the Binary BSON object.\n * @param {number} offset specify the binary of where to write the content.\n * @return {null}\n */\nBinary.prototype.write = function write(string, offset) {\n  offset = typeof offset == 'number' ? offset : this.position;\n\n  // If the buffer is to small let's extend the buffer\n  if(this.buffer.length < offset + string.length) {\n    var buffer = null;\n    // If we are in node.js\n    if(typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer)) {\n      buffer = new Buffer(this.buffer.length + string.length);\n      this.buffer.copy(buffer, 0, 0, this.buffer.length);\n    } else if(Object.prototype.toString.call(this.buffer) == '[object Uint8Array]') {\n      // Create a new buffer\n      buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length))\n      // Copy the content\n      for(var i = 0; i < this.position; i++) {\n        buffer[i] = this.buffer[i];\n      }\n    }\n\n    // Assign the new buffer\n    this.buffer = buffer;\n  }\n\n  if(typeof Buffer != 'undefined' && Buffer.isBuffer(string) && Buffer.isBuffer(this.buffer)) {\n    string.copy(this.buffer, offset, 0, string.length);\n    this.position = (offset + string.length) > this.position ? (offset + string.length) : this.position;\n    // offset = string.length\n  } else if(typeof Buffer != 'undefined' && typeof string == 'string' && Buffer.isBuffer(this.buffer)) {\n    this.buffer.write(string, offset, 'binary');\n    this.position = (offset + string.length) > this.position ? (offset + string.length) : this.position;\n    // offset = string.length;\n  } else if(Object.prototype.toString.call(string) == '[object Uint8Array]'\n    || Object.prototype.toString.call(string) == '[object Array]' && typeof string != 'string') {\n    for(var i = 0; i < string.length; i++) {\n      this.buffer[offset++] = string[i];\n    }\n\n    this.position = offset > this.position ? offset : this.position;\n  } else if(typeof string == 'string') {\n    for(var i = 0; i < string.length; i++) {\n      this.buffer[offset++] = string.charCodeAt(i);\n    }\n\n    this.position = offset > this.position ? offset : this.position;\n  }\n};\n\n/**\n * Reads **length** bytes starting at **position**.\n *\n * @method\n * @param {number} position read from the given position in the Binary.\n * @param {number} length the number of bytes to read.\n * @return {Buffer}\n */\nBinary.prototype.read = function read(position, length) {\n  length = length && length > 0\n    ? length\n    : this.position;\n\n  // Let's return the data based on the type we have\n  if(this.buffer['slice']) {\n    return this.buffer.slice(position, position + length);\n  } else {\n    // Create a buffer to keep the result\n    var buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(length)) : new Array(length);\n    for(var i = 0; i < length; i++) {\n      buffer[i] = this.buffer[position++];\n    }\n  }\n  // Return the buffer\n  return buffer;\n};\n\n/**\n * Returns the value of this binary as a string.\n *\n * @method\n * @return {string}\n */\nBinary.prototype.value = function value(asRaw) {\n  asRaw = asRaw == null ? false : asRaw;\n\n  // Optimize to serialize for the situation where the data == size of buffer\n  if(asRaw && typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer) && this.buffer.length == this.position)\n    return this.buffer;\n\n  // If it's a node.js buffer object\n  if(typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer)) {\n    return asRaw ? this.buffer.slice(0, this.position) : this.buffer.toString('binary', 0, this.position);\n  } else {\n    if(asRaw) {\n      // we support the slice command use it\n      if(this.buffer['slice'] != null) {\n        return this.buffer.slice(0, this.position);\n      } else {\n        // Create a new buffer to copy content to\n        var newBuffer = Object.prototype.toString.call(this.buffer) == '[object Uint8Array]' ? new Uint8Array(new ArrayBuffer(this.position)) : new Array(this.position);\n        // Copy content\n        for(var i = 0; i < this.position; i++) {\n          newBuffer[i] = this.buffer[i];\n        }\n        // Return the buffer\n        return newBuffer;\n      }\n    } else {\n      return convertArraytoUtf8BinaryString(this.buffer, 0, this.position);\n    }\n  }\n};\n\n/**\n * Length.\n *\n * @method\n * @return {number} the length of the binary.\n */\nBinary.prototype.length = function length() {\n  return this.position;\n};\n\n/**\n * @ignore\n */\nBinary.prototype.toJSON = function() {\n  return this.buffer != null ? this.buffer.toString('base64') : '';\n}\n\n/**\n * @ignore\n */\nBinary.prototype.toString = function(format) {\n  return this.buffer != null ? this.buffer.slice(0, this.position).toString(format) : '';\n}\n\n/**\n * Binary default subtype\n * @ignore\n */\nvar BSON_BINARY_SUBTYPE_DEFAULT = 0;\n\n/**\n * @ignore\n */\nvar writeStringToArray = function(data) {\n  // Create a buffer\n  var buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(data.length)) : new Array(data.length);\n  // Write the content to the buffer\n  for(var i = 0; i < data.length; i++) {\n    buffer[i] = data.charCodeAt(i);\n  }\n  // Write the string to the buffer\n  return buffer;\n}\n\n/**\n * Convert Array ot Uint8Array to Binary String\n *\n * @ignore\n */\nvar convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) {\n  var result = \"\";\n  for(var i = startIndex; i < endIndex; i++) {\n   result = result + String.fromCharCode(byteArray[i]);\n  }\n  return result;\n};\n\nBinary.BUFFER_SIZE = 256;\n\n/**\n * Default BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_DEFAULT = 0;\n/**\n * Function BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_FUNCTION = 1;\n/**\n * Byte Array BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_BYTE_ARRAY = 2;\n/**\n * OLD UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID_OLD = 3;\n/**\n * UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID = 4;\n/**\n * MD5 BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_MD5 = 5;\n/**\n * User BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_USER_DEFINED = 128;\n\n/**\n * Expose.\n */\nmodule.exports = Binary;\nmodule.exports.Binary = Binary;\n"]}