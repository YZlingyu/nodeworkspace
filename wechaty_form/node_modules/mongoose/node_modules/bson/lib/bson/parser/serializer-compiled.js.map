{"version":3,"sources":["serializer.js"],"names":[],"mappings":"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","file":"serializer-compiled.js","sourcesContent":["\"use strict\"\n\nvar writeIEEE754 = require('../float_parser').writeIEEE754,\n  readIEEE754 = require('../float_parser').readIEEE754,\n  Long = require('../long').Long,\n  Map = require('../map'),\n  Double = require('../double').Double,\n  Timestamp = require('../timestamp').Timestamp,\n  ObjectID = require('../objectid').ObjectID,\n  Symbol = require('../symbol').Symbol,\n  Code = require('../code').Code,\n  BSONRegExp = require('../regexp').BSONRegExp,\n  Int32 = require('../int_32').Int32,\n  MinKey = require('../min_key').MinKey,\n  MaxKey = require('../max_key').MaxKey,\n  Decimal128 = require('../decimal128'),\n  DBRef = require('../db_ref').DBRef,\n  Binary = require('../binary').Binary;\n\ntry {\n  var _Buffer = Uint8Array;\n} catch(e) {\n  var _Buffer = Buffer;\n}\n\nvar regexp = /\\x00/\n\n// To ensure that 0.4 of node works correctly\nvar isDate = function isDate(d) {\n  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';\n}\n\nvar isRegExp = function isRegExp(d) {\n  return Object.prototype.toString.call(d) === '[object RegExp]';\n}\n\nvar serializeString = function(buffer, key, value, index, isArray) {\n  // Encode String type\n  buffer[index++] = BSON.BSON_DATA_STRING;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes + 1;\n  buffer[index - 1] = 0;\n  // Write the string\n  var size = buffer.write(value, index + 4, 'utf8');\n  // Write the size of the string to buffer\n  buffer[index + 3] = (size + 1 >> 24) & 0xff;\n  buffer[index + 2] = (size + 1 >> 16) & 0xff;\n  buffer[index + 1] = (size + 1 >> 8) & 0xff;\n  buffer[index] = size + 1 & 0xff;\n  // Update index\n  index = index + 4 + size;\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n}\n\nvar serializeNumber = function(buffer, key, value, index, isArray) {\n  // We have an integer value\n  if(Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n    // If the value fits in 32 bits encode as int, if it fits in a double\n    // encode it as a double, otherwise long\n    if(value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) {\n      // Set int type 32 bits or less\n      buffer[index++] = BSON.BSON_DATA_INT;\n      // Number of written bytes\n      var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      // Write the int value\n      buffer[index++] = value & 0xff;\n      buffer[index++] = (value >> 8) & 0xff;\n      buffer[index++] = (value >> 16) & 0xff;\n      buffer[index++] = (value >> 24) & 0xff;\n    } else if(value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n      // Encode as double\n      buffer[index++] = BSON.BSON_DATA_NUMBER;\n      // Number of written bytes\n      var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      // Write float\n      writeIEEE754(buffer, value, index, 'little', 52, 8);\n      // Ajust index\n      index = index + 8;\n    } else {\n      // Set long type\n      buffer[index++] = BSON.BSON_DATA_LONG;\n      // Number of written bytes\n      var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      var longVal = Long.fromNumber(value);\n      var lowBits = longVal.getLowBits();\n      var highBits = longVal.getHighBits();\n      // Encode low bits\n      buffer[index++] = lowBits & 0xff;\n      buffer[index++] = (lowBits >> 8) & 0xff;\n      buffer[index++] = (lowBits >> 16) & 0xff;\n      buffer[index++] = (lowBits >> 24) & 0xff;\n      // Encode high bits\n      buffer[index++] = highBits & 0xff;\n      buffer[index++] = (highBits >> 8) & 0xff;\n      buffer[index++] = (highBits >> 16) & 0xff;\n      buffer[index++] = (highBits >> 24) & 0xff;\n    }\n  } else {\n    // Encode as double\n    buffer[index++] = BSON.BSON_DATA_NUMBER;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write float\n    writeIEEE754(buffer, value, index, 'little', 52, 8);\n    // Ajust index\n    index = index + 8;\n  }\n\n  return index;\n}\n\nvar serializeNull = function(buffer, key, value, index, isArray) {\n  // Set long type\n  buffer[index++] = BSON.BSON_DATA_NULL;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  return index;\n}\n\nvar serializeBoolean = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BOOLEAN;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Encode the boolean value\n  buffer[index++] = value ? 1 : 0;\n  return index;\n}\n\nvar serializeDate = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_DATE;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write the date\n  var dateInMilis = Long.fromNumber(value.getTime());\n  var lowBits = dateInMilis.getLowBits();\n  var highBits = dateInMilis.getHighBits();\n  // Encode low bits\n  buffer[index++] = lowBits & 0xff;\n  buffer[index++] = (lowBits >> 8) & 0xff;\n  buffer[index++] = (lowBits >> 16) & 0xff;\n  buffer[index++] = (lowBits >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = highBits & 0xff;\n  buffer[index++] = (highBits >> 8) & 0xff;\n  buffer[index++] = (highBits >> 16) & 0xff;\n  buffer[index++] = (highBits >> 24) & 0xff;\n  return index;\n}\n\nvar serializeRegExp = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_REGEXP;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  if (value.source && value.source.match(regexp) != null) {\n    throw Error(\"value \" + value.source + \" must not contain null bytes\");\n  }\n  // Adjust the index\n  index = index + buffer.write(value.source, index, 'utf8');\n  // Write zero\n  buffer[index++] = 0x00;\n  // Write the parameters\n  if(value.global) buffer[index++] = 0x73; // s\n  if(value.ignoreCase) buffer[index++] = 0x69; // i\n  if(value.multiline) buffer[index++] = 0x6d; // m\n  // Add ending zero\n  buffer[index++] = 0x00;\n  return index;\n}\n\nvar serializeBSONRegExp = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_REGEXP;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Check the pattern for 0 bytes\n  if (value.pattern.match(regexp) != null) {\n    // The BSON spec doesn't allow keys with null bytes because keys are\n    // null-terminated.\n    throw Error(\"pattern \" + value.pattern + \" must not contain null bytes\");\n  }\n\n  // Adjust the index\n  index = index + buffer.write(value.pattern, index, 'utf8');\n  // Write zero\n  buffer[index++] = 0x00;\n  // Write the options\n  index = index + buffer.write(value.options.split('').sort().join(''), index, 'utf8');\n  // Add ending zero\n  buffer[index++] = 0x00;\n  return index;\n}\n\nvar serializeMinMax = function(buffer, key, value, index, isArray) {\n  // Write the type of either min or max key\n  if(value === null) {\n    buffer[index++] = BSON.BSON_DATA_NULL;\n  } else if(value instanceof MinKey) {\n    buffer[index++] = BSON.BSON_DATA_MIN_KEY;\n  } else {\n    buffer[index++] = BSON.BSON_DATA_MAX_KEY;\n  }\n\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  return index;\n}\n\nvar serializeObjectId = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_OID;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write the objectId into the shared buffer\n  if(typeof value.id == 'string') {\n    buffer.write(value.id, index, 'binary')\n  } else if(value.id && value.id.copy){\n    value.id.copy(buffer, index, 0, 12);\n  } else {\n    throw new Error('object [' + JSON.stringify(value) + \"] is not a valid ObjectId\");\n  }\n\n  // Ajust index\n  return index + 12;\n}\n\nvar serializeBuffer = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BINARY;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Get size of the buffer (current write point)\n  var size = value.length;\n  // Write the size of the string to buffer\n  buffer[index++] = size & 0xff;\n  buffer[index++] = (size >> 8) & 0xff;\n  buffer[index++] = (size >> 16) & 0xff;\n  buffer[index++] = (size >> 24) & 0xff;\n  // Write the default subtype\n  buffer[index++] = BSON.BSON_BINARY_SUBTYPE_DEFAULT;\n  // Copy the content form the binary field to the buffer\n  value.copy(buffer, index, 0, size);\n  // Adjust the index\n  index = index + size;\n  return index;\n}\n\nvar serializeObject = function(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, isArray, path) {\n  for(var i = 0; i < path.length; i++) {\n    if(path[i] === value) throw new Error('cyclic dependency detected');\n  }\n\n  // Push value to stack\n  path.push(value);\n  // Write the type\n  buffer[index++] = Array.isArray(value) ? BSON.BSON_DATA_ARRAY : BSON.BSON_DATA_OBJECT;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  var endIndex = serializeInto(buffer, value, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined, path);\n  // Pop stack\n  path.pop();\n  // Write size\n  var size = endIndex - index;\n  return endIndex;\n}\n\nvar serializeDecimal128 = function(buffer, key, value, index, isArray) {\n  buffer[index++] = BSON.BSON_DATA_DECIMAL128;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the data from the value\n  value.bytes.copy(buffer, index, 0, 16);\n  return index + 16;\n}\n\nvar serializeLong = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = value._bsontype == 'Long' ? BSON.BSON_DATA_LONG : BSON.BSON_DATA_TIMESTAMP;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the date\n  var lowBits = value.getLowBits();\n  var highBits = value.getHighBits();\n  // Encode low bits\n  buffer[index++] = lowBits & 0xff;\n  buffer[index++] = (lowBits >> 8) & 0xff;\n  buffer[index++] = (lowBits >> 16) & 0xff;\n  buffer[index++] = (lowBits >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = highBits & 0xff;\n  buffer[index++] = (highBits >> 8) & 0xff;\n  buffer[index++] = (highBits >> 16) & 0xff;\n  buffer[index++] = (highBits >> 24) & 0xff;\n  return index;\n}\n\nvar serializeInt32 = function(buffer, key, value, index, isArray) {\n  // Set int type 32 bits or less\n  buffer[index++] = BSON.BSON_DATA_INT;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the int value\n  buffer[index++] = value & 0xff;\n  buffer[index++] = (value >> 8) & 0xff;\n  buffer[index++] = (value >> 16) & 0xff;\n  buffer[index++] = (value >> 24) & 0xff;\n  return index;\n}\n\nvar serializeDouble = function(buffer, key, value, index, isArray) {\n  // Encode as double\n  buffer[index++] = BSON.BSON_DATA_NUMBER;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write float\n  writeIEEE754(buffer, value, index, 'little', 52, 8);\n  // Ajust index\n  index = index + 8;\n  return index;\n}\n\nvar serializeFunction = function(buffer, key, value, index, checkKeys, depth, isArray) {\n  buffer[index++] = BSON.BSON_DATA_CODE;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Function string\n  var functionString = value.toString();\n  // Write the string\n  var size = buffer.write(functionString, index + 4, 'utf8') + 1;\n  // Write the size of the string to buffer\n  buffer[index] = size & 0xff;\n  buffer[index + 1] = (size >> 8) & 0xff;\n  buffer[index + 2] = (size >> 16) & 0xff;\n  buffer[index + 3] = (size >> 24) & 0xff;\n  // Update index\n  index = index + 4 + size - 1;\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n}\n\nvar serializeCode = function(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, isArray) {\n  if(value.scope && typeof value.scope == 'object') {\n    // Write the type\n    buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n\n    // Starting index\n    var startIndex = index;\n\n    // Serialize the function\n    // Get the function string\n    var functionString = typeof value.code == 'string' ? value.code : value.code.toString();\n    // Index adjustment\n    index = index + 4;\n    // Write string into buffer\n    var codeSize = buffer.write(functionString, index + 4, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = codeSize & 0xff;\n    buffer[index + 1] = (codeSize >> 8) & 0xff;\n    buffer[index + 2] = (codeSize >> 16) & 0xff;\n    buffer[index + 3] = (codeSize >> 24) & 0xff;\n    // Write end 0\n    buffer[index + 4 + codeSize - 1] = 0;\n    // Write the\n    index = index + codeSize + 4;\n\n    //\n    // Serialize the scope value\n    var endIndex = serializeInto(buffer, value.scope, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined)\n    index = endIndex - 1;\n\n    // Writ the total\n    var totalSize = endIndex - startIndex;\n\n    // Write the total size of the object\n    buffer[startIndex++] = totalSize & 0xff;\n    buffer[startIndex++] = (totalSize >> 8) & 0xff;\n    buffer[startIndex++] = (totalSize >> 16) & 0xff;\n    buffer[startIndex++] = (totalSize >> 24) & 0xff;\n    // Write trailing zero\n    buffer[index++] = 0;\n  } else {\n    buffer[index++] = BSON.BSON_DATA_CODE;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Function string\n    var functionString = value.code.toString();\n    // Write the string\n    var size = buffer.write(functionString, index + 4, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    // Update index\n    index = index + 4 + size - 1;\n    // Write zero\n    buffer[index++] = 0;\n  }\n\n  return index;\n}\n\nvar serializeBinary = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BINARY;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Extract the buffer\n  var data = value.value(true);\n  // Calculate size\n  var size = value.position;\n  // Add the deprecated 02 type 4 bytes of size to total\n  if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) size = size + 4;\n  // Write the size of the string to buffer\n  buffer[index++] = size & 0xff;\n  buffer[index++] = (size >> 8) & 0xff;\n  buffer[index++] = (size >> 16) & 0xff;\n  buffer[index++] = (size >> 24) & 0xff;\n  // Write the subtype to the buffer\n  buffer[index++] = value.sub_type;\n\n  // If we have binary type 2 the 4 first bytes are the size\n  if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) {\n    size = size - 4;\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n  }\n\n  // Write the data to the object\n  data.copy(buffer, index, 0, value.position);\n  // Adjust the index\n  index = index + value.position;\n  return index;\n}\n\nvar serializeSymbol = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_SYMBOL;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the string\n  var size = buffer.write(value.value, index + 4, 'utf8') + 1;\n  // Write the size of the string to buffer\n  buffer[index] = size & 0xff;\n  buffer[index + 1] = (size >> 8) & 0xff;\n  buffer[index + 2] = (size >> 16) & 0xff;\n  buffer[index + 3] = (size >> 24) & 0xff;\n  // Update index\n  index = index + 4 + size - 1;\n  // Write zero\n  buffer[index++] = 0x00;\n  return index;\n}\n\nvar serializeDBRef = function(buffer, key, value, index, depth, serializeFunctions, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_OBJECT;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  var startIndex = index;\n  var endIndex;\n\n  // Serialize object\n  if(null != value.db) {\n    endIndex = serializeInto(buffer, {\n        '$ref': value.namespace\n      , '$id' : value.oid\n      , '$db' : value.db\n    }, false, index, depth + 1, serializeFunctions);\n  } else {\n    endIndex = serializeInto(buffer, {\n        '$ref': value.namespace\n      , '$id' : value.oid\n    }, false, index, depth + 1, serializeFunctions);\n  }\n\n  // Calculate object size\n  var size = endIndex - startIndex;\n  // Write the size\n  buffer[startIndex++] = size & 0xff;\n  buffer[startIndex++] = (size >> 8) & 0xff;\n  buffer[startIndex++] = (size >> 16) & 0xff;\n  buffer[startIndex++] = (size >> 24) & 0xff;\n  // Set index\n  return endIndex;\n}\n\nvar serializeInto = function serializeInto(buffer, object, checkKeys, startingIndex, depth, serializeFunctions, ignoreUndefined, path) {\n  startingIndex = startingIndex || 0;\n  path = path || [];\n\n  // Push the object to the path\n  path.push(object);\n\n  // Start place to serialize into\n  var index = startingIndex + 4;\n  var self = this;\n\n  // Special case isArray\n  if(Array.isArray(object)) {\n    // Get object keys\n    for(var i = 0; i < object.length; i++) {\n      var key = \"\" + i;\n      var value = object[i];\n\n      // Is there an override value\n      if(value && value.toBSON) {\n        if(typeof value.toBSON != 'function') throw new Error(\"toBSON is not a function\");\n        value = value.toBSON();\n      }\n\n      var type = typeof value;\n      if(type == 'string') {\n        index = serializeString(buffer, key, value, index, true);\n      } else if(type == 'number') {\n        index = serializeNumber(buffer, key, value, index, true);\n      } else if(type == 'boolean') {\n        index = serializeBoolean(buffer, key, value, index, true);\n      } else if(value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index, true);\n      } else if(value === undefined) {\n        index = serializeNull(buffer, key, value, index, true);\n      } else if(value === null) {\n        index = serializeNull(buffer, key, value, index, true);\n      } else if(value['_bsontype'] == 'ObjectID') {\n        index = serializeObjectId(buffer, key, value, index, true);\n      } else if(Buffer.isBuffer(value)) {\n        index = serializeBuffer(buffer, key, value, index, true);\n      } else if(value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index, true);\n      } else if(type == 'object' && value['_bsontype'] == null) {\n        index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, true, path);\n      } else if(type == 'object' && value['_bsontype'] == 'Decimal128') {\n        index = serializeDecimal128(buffer, key, value, index, true);\n      } else if(value['_bsontype'] == 'Long' || value['_bsontype'] == 'Timestamp') {\n        index = serializeLong(buffer, key, value, index, true);\n      } else if(value['_bsontype'] == 'Double') {\n        index = serializeDouble(buffer, key, value, index, true);\n      } else if(typeof value == 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions, true);\n      } else if(value['_bsontype'] == 'Code') {\n        index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, true);\n      } else if(value['_bsontype'] == 'Binary') {\n        index = serializeBinary(buffer, key, value, index, true);\n      } else if(value['_bsontype'] == 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index, true);\n      } else if(value['_bsontype'] == 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, true);\n      } else if(value['_bsontype'] == 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index, true);\n      } else if(value['_bsontype'] == 'Int32') {\n        index = serializeInt32(buffer, key, value, index, true);\n      } else if(value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index, true);\n      }\n    }\n  } else if(object instanceof Map) {\n    var iterator = object.entries();\n    var done = false;\n\n    while(!done) {\n      // Unpack the next entry\n      var entry = iterator.next();\n      done = entry.done;\n      // Are we done, then skip and terminate\n      if(done) continue;\n\n      // Get the entry values\n      var key = entry.value[0];\n      var value = entry.value[1];\n\n      // Check the type of the value\n      var type = typeof value;\n\n      // Check the key and throw error if it's illegal\n      if(key != '$db' && key != '$ref' && key != '$id') {\n        if (key.match(regexp) != null) {\n          // The BSON spec doesn't allow keys with null bytes because keys are\n          // null-terminated.\n          throw Error(\"key \" + key + \" must not contain null bytes\");\n        }\n\n        if (checkKeys) {\n          if('$' == key[0]) {\n            throw Error(\"key \" + key + \" must not start with '$'\");\n          } else if (!!~key.indexOf('.')) {\n            throw Error(\"key \" + key + \" must not contain '.'\");\n          }\n        }\n      }\n\n      if(type == 'string') {\n        index = serializeString(buffer, key, value, index);\n      } else if(type == 'number') {\n        index = serializeNumber(buffer, key, value, index);\n      } else if(type == 'boolean') {\n        index = serializeBoolean(buffer, key, value, index);\n      } else if(value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index);\n      } else if(value === undefined && ignoreUndefined == true) {\n      } else if(value === null || value === undefined) {\n        index = serializeNull(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'ObjectID') {\n        index = serializeObjectId(buffer, key, value, index);\n      } else if(Buffer.isBuffer(value)) {\n        index = serializeBuffer(buffer, key, value, index);\n      } else if(value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index);\n      } else if(type == 'object' && value['_bsontype'] == null) {\n        index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, false, path);\n      } else if(type == 'object' && value['_bsontype'] == 'Decimal128') {\n        index = serializeDecimal128(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'Long' || value['_bsontype'] == 'Timestamp') {\n        index = serializeLong(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'Double') {\n        index = serializeDouble(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'Code') {\n        index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);\n      } else if(typeof value == 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n      } else if(value['_bsontype'] == 'Binary') {\n        index = serializeBinary(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n      } else if(value['_bsontype'] == 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'Int32') {\n        index = serializeInt32(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index);\n      }\n    }\n  } else {\n    // Did we provide a custom serialization method\n    if(object.toBSON) {\n      if(typeof object.toBSON != 'function') throw new Error(\"toBSON is not a function\");\n      object = object.toBSON();\n      if(object != null && typeof object != 'object') throw new Error(\"toBSON function did not return an object\");\n    }\n\n    // Iterate over all the keys\n    for(var key in object) {\n      var value = object[key];\n      // Is there an override value\n      if(value && value.toBSON) {\n        if(typeof value.toBSON != 'function') throw new Error(\"toBSON is not a function\");\n        value = value.toBSON();\n      }\n\n      // Check the type of the value\n      var type = typeof value;\n\n      // Check the key and throw error if it's illegal\n      if(key != '$db' && key != '$ref' && key != '$id') {\n        if (key.match(regexp) != null) {\n          // The BSON spec doesn't allow keys with null bytes because keys are\n          // null-terminated.\n          throw Error(\"key \" + key + \" must not contain null bytes\");\n        }\n\n        if (checkKeys) {\n          if('$' == key[0]) {\n            throw Error(\"key \" + key + \" must not start with '$'\");\n          } else if (!!~key.indexOf('.')) {\n            throw Error(\"key \" + key + \" must not contain '.'\");\n          }\n        }\n      }\n\n      if(type == 'string') {\n        index = serializeString(buffer, key, value, index);\n      } else if(type == 'number') {\n        index = serializeNumber(buffer, key, value, index);\n      } else if(type == 'boolean') {\n        index = serializeBoolean(buffer, key, value, index);\n      } else if(value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index);\n      } else if(value === undefined && ignoreUndefined == true) {\n      } else if(value === null || value === undefined) {\n        index = serializeNull(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'ObjectID') {\n        index = serializeObjectId(buffer, key, value, index);\n      } else if(Buffer.isBuffer(value)) {\n        index = serializeBuffer(buffer, key, value, index);\n      } else if(value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index);\n      } else if(type == 'object' && value['_bsontype'] == null) {\n        index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, false, path);\n      } else if(type == 'object' && value['_bsontype'] == 'Decimal128') {\n        index = serializeDecimal128(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'Long' || value['_bsontype'] == 'Timestamp') {\n        index = serializeLong(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'Double') {\n        index = serializeDouble(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'Code') {\n        index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);\n      } else if(typeof value == 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n      } else if(value['_bsontype'] == 'Binary') {\n        index = serializeBinary(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n      } else if(value['_bsontype'] == 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'Int32') {\n        index = serializeInt32(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index);\n      }\n    }\n  }\n\n  // Remove the path\n  path.pop();\n\n  // Final padding byte for object\n  buffer[index++] = 0x00;\n\n  // Final size\n  var size = index - startingIndex;\n  // Write the size of the object\n  buffer[startingIndex++] = size & 0xff;\n  buffer[startingIndex++] = (size >> 8) & 0xff;\n  buffer[startingIndex++] = (size >> 16) & 0xff;\n  buffer[startingIndex++] = (size >> 24) & 0xff;\n  return index;\n}\n\nvar BSON = {};\n\n/**\n * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5\n *\n * @ignore\n * @api private\n */\nvar functionCache = BSON.functionCache = {};\n\n/**\n * Number BSON Type\n *\n * @classconstant BSON_DATA_NUMBER\n **/\nBSON.BSON_DATA_NUMBER = 1;\n/**\n * String BSON Type\n *\n * @classconstant BSON_DATA_STRING\n **/\nBSON.BSON_DATA_STRING = 2;\n/**\n * Object BSON Type\n *\n * @classconstant BSON_DATA_OBJECT\n **/\nBSON.BSON_DATA_OBJECT = 3;\n/**\n * Array BSON Type\n *\n * @classconstant BSON_DATA_ARRAY\n **/\nBSON.BSON_DATA_ARRAY = 4;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_BINARY\n **/\nBSON.BSON_DATA_BINARY = 5;\n/**\n * ObjectID BSON Type, deprecated\n *\n * @classconstant BSON_DATA_UNDEFINED\n **/\nBSON.BSON_DATA_UNDEFINED = 6;\n/**\n * ObjectID BSON Type\n *\n * @classconstant BSON_DATA_OID\n **/\nBSON.BSON_DATA_OID = 7;\n/**\n * Boolean BSON Type\n *\n * @classconstant BSON_DATA_BOOLEAN\n **/\nBSON.BSON_DATA_BOOLEAN = 8;\n/**\n * Date BSON Type\n *\n * @classconstant BSON_DATA_DATE\n **/\nBSON.BSON_DATA_DATE = 9;\n/**\n * null BSON Type\n *\n * @classconstant BSON_DATA_NULL\n **/\nBSON.BSON_DATA_NULL = 10;\n/**\n * RegExp BSON Type\n *\n * @classconstant BSON_DATA_REGEXP\n **/\nBSON.BSON_DATA_REGEXP = 11;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_CODE\n **/\nBSON.BSON_DATA_CODE = 13;\n/**\n * Symbol BSON Type\n *\n * @classconstant BSON_DATA_SYMBOL\n **/\nBSON.BSON_DATA_SYMBOL = 14;\n/**\n * Code with Scope BSON Type\n *\n * @classconstant BSON_DATA_CODE_W_SCOPE\n **/\nBSON.BSON_DATA_CODE_W_SCOPE = 15;\n/**\n * 32 bit Integer BSON Type\n *\n * @classconstant BSON_DATA_INT\n **/\nBSON.BSON_DATA_INT = 16;\n/**\n * Timestamp BSON Type\n *\n * @classconstant BSON_DATA_TIMESTAMP\n **/\nBSON.BSON_DATA_TIMESTAMP = 17;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_LONG\n **/\nBSON.BSON_DATA_LONG = 18;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_DECIMAL128\n **/\nBSON.BSON_DATA_DECIMAL128 = 19;\n/**\n * MinKey BSON Type\n *\n * @classconstant BSON_DATA_MIN_KEY\n **/\nBSON.BSON_DATA_MIN_KEY = 0xff;\n/**\n * MaxKey BSON Type\n *\n * @classconstant BSON_DATA_MAX_KEY\n **/\nBSON.BSON_DATA_MAX_KEY = 0x7f;\n/**\n * Binary Default Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_DEFAULT\n **/\nBSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/**\n * Binary Function Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_FUNCTION\n **/\nBSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/**\n * Binary Byte Array Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY\n **/\nBSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/**\n * Binary UUID Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_UUID\n **/\nBSON.BSON_BINARY_SUBTYPE_UUID = 3;\n/**\n * Binary MD5 Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_MD5\n **/\nBSON.BSON_BINARY_SUBTYPE_MD5 = 4;\n/**\n * Binary User Defined Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED\n **/\nBSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7FFFFFFF;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.\n\n// Internal long versions\nvar JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.\nvar JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.\n\nmodule.exports = serializeInto;\n"]}