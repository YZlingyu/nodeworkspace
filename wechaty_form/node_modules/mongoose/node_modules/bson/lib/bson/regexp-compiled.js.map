{"version":3,"sources":["regexp.js"],"names":[],"mappings":"AAAA;;;;;;AAMA,SAAS,UAAT,CAAoB,OAApB,EAA6B,OAA7B,EAAsC;AACpC,MAAG,EAAE,gBAAgB,UAAlB,CAAH,EAAkC,OAAO,IAAI,UAAJ,EAAP;;AAElC;AACA,OAAK,SAAL,GAAiB,YAAjB;AACA,OAAK,OAAL,GAAe,WAAW,EAA1B;AACA,OAAK,OAAL,GAAe,WAAW,EAA1B;;AAEA;AACA,OAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,KAAK,OAAL,CAAa,MAAhC,EAAwC,GAAxC,EAA6C;AAC3C,QAAG,EAAE,KAAK,OAAL,CAAa,CAAb,KAAmB,GAAnB,IACA,KAAK,OAAL,CAAa,CAAb,KAAmB,GADnB,IAEA,KAAK,OAAL,CAAa,CAAb,KAAmB,GAFnB,IAGA,KAAK,OAAL,CAAa,CAAb,KAAmB,GAHnB,IAIA,KAAK,OAAL,CAAa,CAAb,KAAmB,GAJnB,IAKA,KAAK,OAAL,CAAa,CAAb,KAAmB,GALrB,CAAH,EAMG;AACD,YAAM,IAAI,KAAJ,CAAU,qCAAqC,KAAK,OAAL,CAAa,CAAb,CAArC,GAAuD,oBAAjE,CAAN;AACD;AACF;AACF;;AAED,OAAO,OAAP,GAAiB,UAAjB;AACA,OAAO,OAAP,CAAe,UAAf,GAA4B,UAA5B","file":"regexp-compiled.js","sourcesContent":["/**\n * A class representation of the BSON RegExp type.\n *\n * @class\n * @return {BSONRegExp} A MinKey instance\n */\nfunction BSONRegExp(pattern, options) {\n  if(!(this instanceof BSONRegExp)) return new BSONRegExp();\n\n  // Execute\n  this._bsontype = 'BSONRegExp';\n  this.pattern = pattern || '';\n  this.options = options || '';\n\n  // Validate options\n  for(var i = 0; i < this.options.length; i++) {\n    if(!(this.options[i] == 'i'\n      || this.options[i] == 'm'\n      || this.options[i] == 'x'\n      || this.options[i] == 'l'\n      || this.options[i] == 's'\n      || this.options[i] == 'u'\n    )) {\n      throw new Error('the regular expression options [' + this.options[i] + \"] is not supported\");\n    }\n  }\n}\n\nmodule.exports = BSONRegExp;\nmodule.exports.BSONRegExp = BSONRegExp;\n"]}