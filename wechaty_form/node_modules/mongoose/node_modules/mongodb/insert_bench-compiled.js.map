{"version":3,"sources":["insert_bench.js"],"names":[],"mappings":"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","file":"insert_bench-compiled.js","sourcesContent":["var MongoClient = require('./').MongoClient,\n  assert = require('assert');\n\n// var memwatch = require('memwatch-next');\n// memwatch.on('leak', function(info) {\n//   console.log(\"======== leak\")\n// });\n//\n// memwatch.on('stats', function(stats) {\n//   console.log(\"======== stats\")\n//   console.dir(stats)\n// });\n\n// // Take first snapshot\n// var hd = new memwatch.HeapDiff();\n\nMongoClient.connect('mongodb://localhost:27017/bench', function(err, db) {\n  var docs = [];\n  var total = 1000;\n  var count = total;\n  var measurements = [];\n\n  // Insert a bunch of documents\n  for(var i = 0; i < 100; i++) {\n    docs.push(JSON.parse(data));\n  }\n\n  var col = db.collection('inserts');\n\n  function execute(col, callback) {\n    var start = new Date().getTime();\n\n    col.find({}).limit(100).toArray(function(e, docs) {\n      measurements.push(new Date().getTime() - start);\n      assert.equal(null, e);\n      callback();\n    });\n  }\n\n  console.log(\"== insert documents\")\n  col.insert(docs, function(e, r) {\n    docs = [];\n    assert.equal(null, e);\n\n    console.log(\"== start bench\")\n    for(var i = 0; i < total; i++) {\n      execute(col, function(e) {\n        count = count - 1;\n\n        if(count == 0) {\n          // Calculate total execution time for operations\n          var totalTime = measurements.reduce(function(prev, curr) {\n            return prev + curr;\n          }, 0);\n\n          console.log(\"===========================================\");\n          console.log(\"total time: \" + totalTime)\n\n          // var diff = hd.end();\n          // console.log(\"===========================================\");\n          // console.log(JSON.stringify(diff, null, 2))\n\n          db.close();\n          process.exit(0)\n        }\n      });\n    }\n  });\n});\n\nvar data = JSON.stringify({\n  \"data\": [\n    {\n      \"_id\": 1,\n      \"x\": 11\n    },\n    {\n      \"_id\": 2,\n      \"x\": 22\n    },\n    {\n      \"_id\": 3,\n      \"x\": 33\n    }\n  ],\n  \"collection_name\": \"test\",\n  \"database_name\": \"command-monitoring-tests\",\n  \"tests\": [\n    {\n      \"description\": \"A successful mixed bulk write\",\n      \"operation\": {\n        \"name\": \"bulkWrite\",\n        \"arguments\": {\n          \"requests\": [\n            {\n              \"insertOne\": {\n                \"document\": {\n                  \"_id\": 4,\n                  \"x\": 44\n                }\n              }\n            },\n            {\n              \"updateOne\": {\n                \"filter\": {\n                  \"_id\": 3\n                },\n                \"update\": {\n                  \"set\": {\n                    \"x\": 333\n                  }\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"expectations\": [\n        {\n          \"command_started_event\": {\n            \"command\": {\n              \"insert\": \"test\",\n              \"documents\": [\n                {\n                  \"_id\": 4,\n                  \"x\": 44\n                }\n              ],\n              \"ordered\": true\n            },\n            \"command_name\": \"insert\",\n            \"database_name\": \"command-monitoring-tests\"\n          }\n        },\n        {\n          \"command_succeeded_event\": {\n            \"reply\": {\n              \"ok\": 1.0,\n              \"n\": 1\n            },\n            \"command_name\": \"insert\"\n          }\n        },\n        {\n          \"command_started_event\": {\n            \"command\": {\n              \"update\": \"test\",\n              \"updates\": [\n                {\n                  \"q\": {\n                    \"_id\": 3\n                  },\n                  \"u\": {\n                    \"set\": {\n                      \"x\": 333\n                    }\n                  },\n                  \"upsert\": false,\n                  \"multi\": false\n                }\n              ],\n              \"ordered\": true\n            },\n            \"command_name\": \"update\",\n            \"database_name\": \"command-monitoring-tests\"\n          }\n        },\n        {\n          \"command_succeeded_event\": {\n            \"reply\": {\n              \"ok\": 1.0,\n              \"n\": 1\n            },\n            \"command_name\": \"update\"\n          }\n        }\n      ]\n    },\n    {\n      \"description\": \"A successful unordered bulk write with an unacknowledged write concern\",\n      \"operation\": {\n        \"name\": \"bulkWrite\",\n        \"arguments\": {\n          \"requests\": [\n            {\n              \"insertOne\": {\n                \"document\": {\n                  \"_id\": 4,\n                  \"x\": 44\n                }\n              }\n            }\n          ],\n          \"ordered\": false,\n          \"writeConcern\": {\n            \"w\": 0\n          }\n        }\n      },\n      \"expectations\": [\n        {\n          \"command_started_event\": {\n            \"command\": {\n              \"insert\": \"test\",\n              \"documents\": [\n                {\n                  \"_id\": 4,\n                  \"x\": 44\n                }\n              ],\n              \"ordered\": false,\n              \"writeConcern\": {\n                \"w\": 0\n              }\n            },\n            \"command_name\": \"insert\",\n            \"database_name\": \"command-monitoring-tests\"\n          }\n        },\n        {\n          \"command_succeeded_event\": {\n            \"reply\": {\n              \"ok\": 1.0\n            },\n            \"command_name\": \"insert\"\n          }\n        }\n      ]\n    }\n  ]\n});\n"]}