{"version":3,"sources":["url_parser.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,iBAAiB,QAAQ,mBAAR,CAArB;AAAA,IACE,SAAS,QAAQ,KAAR,CADX;AAAA,IAEE,IAAI,QAAQ,MAAR,EAAgB,MAFtB;;AAIA,OAAO,OAAP,GAAiB,UAAS,GAAT,EAAc;AAC7B;AACA,MAAI,kBAAkB,EAAtB;AACA,MAAI,YAAY,EAAhB;AACA,MAAI,oBAAoB,EAAxB;AACA,MAAI,SAAS,OAAb;;AAEA;AACA,MAAI,SAAS,OAAO,KAAP,CAAa,GAAb,EAAkB,IAAlB,CAAb;;AAEA,MAAG,OAAO,QAAP,IAAmB,UAAtB,EAAkC;AAChC,UAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;AACD;;AAED,MAAG,CAAC,OAAO,QAAP,IAAmB,IAAnB,IAA2B,OAAO,QAAP,IAAmB,EAA/C,KAAsD,IAAI,OAAJ,CAAY,OAAZ,KAAwB,CAAC,CAAlF,EAAqF;AACnF,UAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,MAAG,OAAO,IAAP,IAAe,GAAlB,EAAuB;AACrB,UAAM,IAAI,KAAJ,CAAU,mCAAV,CAAN;AACD;;AAED,MAAG,CAAC,MAAM,SAAS,OAAO,IAAhB,EAAsB,EAAtB,CAAN,CAAD,IAAqC,SAAS,OAAO,IAAhB,EAAsB,EAAtB,IAA4B,KAApE,EAA2E;AACzE,UAAM,IAAI,KAAJ,CAAU,gDAAV,CAAN;AACD;;AAED,MAAG,OAAO,IAAP,IACE,OAAO,IAAP,CAAY,MAAZ,GAAqB,CADvB,IAEE,OAAO,IAAP,CAAY,CAAZ,KAAkB,GAFpB,IAGE,IAAI,OAAJ,CAAY,OAAZ,KAAwB,CAAC,CAH9B,EAGiC;AAC/B,UAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,MAAG,OAAO,KAAV,EAAiB;AACf,SAAI,IAAI,IAAR,IAAgB,OAAO,KAAvB,EAA8B;AAC5B,UAAG,KAAK,OAAL,CAAa,IAAb,KAAsB,CAAC,CAA1B,EAA6B;AAC3B,cAAM,IAAI,KAAJ,CAAU,iCAAV,CAAN;AACD;;AAED,UAAG,OAAO,KAAP,CAAa,IAAb,KAAsB,EAAzB,EAA6B;AAC3B,cAAM,IAAI,KAAJ,CAAU,qBAAqB,IAArB,GAA4B,8BAAtC,CAAN;AACD;AACF;AACF;;AAED,MAAG,OAAO,IAAV,EAAgB;AACd,QAAI,QAAQ,OAAO,IAAP,CAAY,KAAZ,CAAkB,GAAlB,CAAZ;AACA,QAAG,IAAI,OAAJ,CAAY,OAAO,IAAnB,KAA4B,CAAC,CAA7B,IAAkC,MAAM,MAAN,GAAe,CAApD,EAAuD;AACrD,YAAM,IAAI,KAAJ,CAAU,sDAAV,CAAN;AACD;;AAED,QAAG,IAAI,OAAJ,CAAY,OAAO,IAAnB,KAA4B,CAAC,CAA7B,IAAkC,OAAO,IAAP,CAAY,OAAZ,CAAoB,GAApB,KAA4B,CAAC,CAAlE,EAAqE;AACnE,YAAM,IAAI,KAAJ,CAAU,0CAAV,CAAN;AACD;AACF;;AAED;AACA,MAAI,QAAQ,IAAI,KAAJ,CAAU,GAAV,EAAe,KAAf,EAAZ;;AAEA;AACA,MAAI,UAAU,MAAM,KAAN,CAAY,GAAZ,CAAd;AACA,MAAI,QAAQ,EAAZ;;AAEA,OAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,QAAQ,MAA3B,EAAmC,GAAnC,EAAwC;AACtC,QAAI,aAAa,QAAQ,CAAR,CAAjB;;AAEA,QAAG,WAAW,OAAX,CAAmB,SAAnB,KAAiC,CAAC,CAArC,EAAwC;AACtC,UAAG,WAAW,OAAX,CAAmB,GAAnB,KAA2B,CAAC,CAA/B,EAAkC;AAChC,cAAM,IAAN,CAAW,WAAW,KAAX,CAAiB,GAAjB,EAAsB,GAAtB,EAAX;AACD,OAFD,MAEO;AACL,cAAM,IAAN,CAAW,WAAW,MAAX,CAAkB,aAAa,MAA/B,CAAX;AACD;AACF,KAND,MAMO,IAAG,WAAW,OAAX,CAAmB,GAAnB,KAA2B,CAAC,CAA/B,EAAkC;AACvC,YAAM,IAAN,CAAW,WAAW,KAAX,CAAiB,GAAjB,EAAsB,KAAtB,EAAX;AACD,KAFM,MAEA,IAAG,WAAW,OAAX,CAAmB,GAAnB,KAA2B,CAAC,CAA/B,EAAkC;AACvC,YAAM,IAAN,CAAW,WAAW,IAAX,EAAX;AACD;AACF;;AAED,OAAI,IAAI,CAAR,EAAW,IAAI,MAAM,MAArB,EAA6B,GAA7B,EAAkC;AAChC,QAAI,IAAI,OAAO,KAAP,CAAa,EAAE,cAAF,EAAkB,MAAM,CAAN,EAAS,IAAT,EAAlB,CAAb,CAAR;AACA,QAAG,EAAE,IAAF,IAAU,EAAE,IAAF,CAAO,OAAP,CAAe,GAAf,KAAuB,CAAC,CAArC,EAAwC;AACtC,YAAM,IAAI,KAAJ,CAAU,iCAAV,CAAN;AACD;AACF;;AAED;AACA,MAAG,IAAI,OAAJ,CAAY,GAAZ,KAAoB,CAAC,CAAxB,EAA2B;AACzB,wBAAoB,IAAI,MAAJ,CAAW,IAAI,OAAJ,CAAY,GAAZ,IAAmB,CAA9B,CAApB;AACA,sBAAkB,IAAI,SAAJ,CAAc,aAAa,MAA3B,EAAmC,IAAI,OAAJ,CAAY,GAAZ,CAAnC,CAAlB;AACD,GAHD,MAGO;AACL,sBAAkB,IAAI,SAAJ,CAAc,aAAa,MAA3B,CAAlB;AACD;;AAED;AACA,MAAG,gBAAgB,OAAhB,CAAwB,GAAxB,KAAgC,CAAC,CAApC,EAAuC;AACrC,gBAAY,gBAAgB,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAZ;AACA,sBAAkB,gBAAgB,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAlB;AACD;;AAED;AACA,MAAG,gBAAgB,OAAhB,CAAwB,OAAxB,KAAoC,CAAC,CAAxC,EAA2C;AACzC,QAAG,gBAAgB,OAAhB,CAAwB,QAAxB,KAAqC,CAAC,CAAzC,EAA4C;AAC1C,eAAS,gBAAgB,KAAhB,CAAsB,QAAtB,EAAgC,CAAhC,CAAT;AACA;AACA,UAAI,OAAO,OAAP,CAAe,GAAf,KAAuB,CAAC,CAA5B,EAA+B;AAC7B,YAAI,OAAO,KAAP,CAAa,GAAb,EAAkB,MAAlB,IAA4B,CAA5B,IAAiC,OAAO,KAAP,CAAa,GAAb,EAAkB,CAAlB,EAAqB,MAArB,IAA+B,CAApE,EAAuE;AACrE,gBAAM,IAAI,KAAJ,CAAU,gDAAV,CAAN;AACD;AACD,cAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;AACD;AACD,wBAAkB,gBAAgB,KAAhB,CAAsB,GAAtB,EAA2B,gBAAgB,OAAhB,CAAwB,OAAxB,IAAmC,QAAQ,MAAtE,CAAlB;AACD;AACF,GAZD,MAYO,IAAG,gBAAgB,OAAhB,CAAwB,GAAxB,KAAgC,CAAC,CAApC,EAAuC;AAC5C;AACA,QAAI,gBAAgB,KAAhB,CAAsB,GAAtB,EAA2B,MAA3B,GAAoC,CAAxC,EAA2C;AACzC,UAAI,gBAAgB,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8B,MAA9B,IAAwC,CAA5C,EAA+C;AAC7C,cAAM,IAAI,KAAJ,CAAU,gDAAV,CAAN;AACD;AACD,YAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;AACD;AACD,aAAS,gBAAgB,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAT;AACA,sBAAkB,gBAAgB,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAlB;AACD;;AAED;AACA,MAAI,SAAS,EAAb;;AAEA;AACA,MAAI,WAAW,aAAa,EAA5B;AACA,MAAI,OAAO,SAAS,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAX;;AAEA;AACA,OAAK,CAAL,IAAU,mBAAmB,KAAK,CAAL,CAAnB,CAAV;AACA,MAAG,KAAK,CAAL,CAAH,EAAW;AACT,SAAK,CAAL,IAAU,mBAAmB,KAAK,CAAL,CAAnB,CAAV;AACD;;AAED;AACA,MAAG,KAAK,MAAL,IAAe,CAAlB,EAAqB,OAAO,IAAP,GAAc,EAAC,MAAM,KAAK,CAAL,CAAP,EAAgB,UAAU,KAAK,CAAL,CAA1B,EAAd;;AAErB;AACA,MAAI,QAAJ;AACA,MAAI,UAAJ;AACA,MAAI,OAAJ;AACA,MAAI,gBAAgB,EAAC,eAAe,EAAhB,EAApB;AACA,MAAI,YAAY,EAAC,sBAAsB,EAAvB,EAAhB;AACA,MAAI,wBAAwB,EAAC,eAAe,EAAhB,EAA5B;AACA,MAAI,gBAAgB,EAAC,eAAe,EAAhB,EAApB;AACA;AACA,SAAO,cAAP,GAAwB,aAAxB;AACA,SAAO,UAAP,GAAoB,SAApB;AACA,SAAO,UAAP,GAAoB,qBAApB;AACA,SAAO,cAAP,GAAwB,aAAxB;;AAEA;AACA,MAAG,IAAI,KAAJ,CAAU,QAAV,CAAH,EAAwB;AACtB;AACA,QAAI,eAAe,IAAI,SAAJ,CACf,IAAI,OAAJ,CAAY,YAAZ,IAA4B,aAAa,MAD1B,EAEf,IAAI,WAAJ,CAAgB,OAAhB,IAA2B,QAAQ,MAFpB,CAAnB;AAGA;AACA,QAAG,aAAa,OAAb,CAAqB,GAArB,KAA6B,CAAC,CAAjC,EAAoC,eAAe,aAAa,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAf;AACpC,cAAU,CAAC,EAAC,eAAe,YAAhB,EAAD,CAAV;AACD,GARD,MAQO;AACL;AACA,eAAW,eAAX;AACA;AACA,QAAI,sBAAsB,EAA1B;;AAEA;AACA,cAAU,SAAS,KAAT,CAAe,GAAf,EAAoB,GAApB,CAAwB,UAAS,CAAT,EAAY;AAC5C,UAAI,KAAJ,EAAW,KAAX,EAAkB,SAAlB;AACA;AACA,UAAK,YAAY,0BAA0B,IAA1B,CAA+B,CAA/B,CAAjB,EAAqD;AACnD,gBAAQ,UAAU,CAAV,CAAR;AACA,gBAAQ,SAAS,UAAU,CAAV,CAAT,EAAuB,EAAvB,KAA8B,KAAtC;AACD,OAHD,MAGO;AACL;AACA,YAAI,WAAW,EAAE,KAAF,CAAQ,GAAR,EAAa,CAAb,CAAf;AACA,gBAAQ,SAAS,CAAT,KAAe,WAAvB;AACA,gBAAQ,SAAS,CAAT,KAAe,IAAf,GAAsB,SAAS,SAAS,CAAT,CAAT,EAAsB,EAAtB,CAAtB,GAAkD,KAA1D;AACA;AACA,YAAG,MAAM,OAAN,CAAc,GAAd,KAAsB,CAAC,CAA1B,EAA6B,QAAQ,MAAM,KAAN,CAAY,IAAZ,EAAkB,CAAlB,CAAR;AAC9B;;AAED;AACA,UAAG,oBAAoB,QAAQ,GAAR,GAAc,KAAlC,CAAH,EAA6C,OAAO,IAAP;AAC7C,0BAAoB,QAAQ,GAAR,GAAc,KAAlC,IAA2C,CAA3C;;AAEA;AACA,aAAO,EAAC,MAAM,KAAP,EAAc,MAAM,KAApB,EAAP;AACD,KArBS,EAqBP,MArBO,CAqBA,UAAS,CAAT,EAAY;AACpB,aAAO,KAAK,IAAZ;AACD,KAvBS,CAAV;AAwBD;;AAED;AACA,SAAO,MAAP,GAAgB,UAAU,OAA1B;AACA;AACA,eAAa,CAAC,qBAAqB,EAAtB,EAA0B,KAA1B,CAAgC,MAAhC,CAAb;AACA;AACA,aAAW,OAAX,CAAmB,UAAS,GAAT,EAAc;AAC/B,QAAG,CAAC,GAAJ,EAAS;AACT,QAAI,WAAW,IAAI,KAAJ,CAAU,GAAV,CAAf;AAAA,QAA+B,OAAO,SAAS,CAAT,CAAtC;AAAA,QAAmD,QAAQ,SAAS,CAAT,CAA3D;AACA;AACA,YAAO,IAAP;AACE,WAAK,SAAL;AACA,WAAK,UAAL;AACE,sBAAc,QAAd,GAA0B,SAAS,MAAnC;AACA,kBAAU,OAAV,GAAqB,SAAS,MAA9B;AACA;AACF,WAAK,aAAL;AACA,WAAK,UAAL;AACE,sBAAc,QAAd,GAAyB,SAAS,KAAT,EAAgB,EAAhB,CAAzB;AACA,8BAAsB,QAAtB,GAAiC,SAAS,KAAT,EAAgB,EAAhB,CAAjC;AACA;AACF,WAAK,SAAL;AACE,eAAO,OAAP,GAAiB,mBAAmB,KAAnB,CAAjB;AACA;AACF,WAAK,eAAL;AACA,WAAK,gBAAL;AACE,sBAAc,cAAd,GAAgC,SAAS,MAAzC;AACA;AACF,WAAK,aAAL;AACE,cAAM,IAAI,KAAJ,CAAU,2BAAV,CAAN;AACF,WAAK,eAAL;AACE,cAAM,IAAI,KAAJ,CAAU,6BAAV,CAAN;AACF,WAAK,mBAAL;AACE,cAAM,IAAI,KAAJ,CAAU,iCAAV,CAAN;AACF,WAAK,oBAAL;AACE,cAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;AACF,WAAK,oBAAL;AACE,cAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;AACF,WAAK,KAAL;AACE,YAAG,SAAS,QAAZ,EAAsB;AACpB,wBAAc,GAAd,GAAoB,KAApB;AACA,gCAAsB,GAAtB,GAA4B,KAA5B;AACA,wBAAc,GAAd,GAAoB,KAApB;AACA;AACD;AACD,sBAAc,GAAd,GAAqB,SAAS,MAA9B;AACA,8BAAsB,GAAtB,GAA6B,SAAS,MAAtC;AACA,sBAAc,GAAd,GAAqB,SAAS,MAA9B;AACA;AACF,WAAK,aAAL;AACE,sBAAc,WAAd,GAA6B,SAAS,MAAtC;AACA,8BAAsB,WAAtB,GAAqC,SAAS,MAA9C;AACA,sBAAc,WAAd,GAA6B,SAAS,MAAtC;AACA;AACF,WAAK,YAAL;AACA,WAAK,SAAL;AACE,8BAAsB,OAAtB,GAAgC,KAAhC;AACA;AACF,WAAK,eAAL;AACE,8BAAsB,aAAtB,GAAsC,SAAS,KAAT,EAAgB,EAAhB,CAAtC;AACA;AACF,WAAK,SAAL;AACE,8BAAsB,OAAtB,GAAgC,SAAS,KAAT,EAAgB,EAAhB,CAAhC;AACA;AACF,WAAK,eAAL;AACA,WAAK,gBAAL;AACE,8BAAsB,cAAtB,GAAwC,SAAS,MAAjD;AACA;AACF,WAAK,OAAL;AACE,kBAAU,KAAV,GAAmB,SAAS,MAA5B;AACA;AACF,WAAK,SAAL;AACE,kBAAU,CAAV,GAAe,SAAS,MAAxB;AACA;AACF,WAAK,MAAL;AACE,kBAAU,IAAV,GAAkB,SAAS,MAA3B;AACA;AACF,WAAK,cAAL;AACA,WAAK,eAAL;AACE,kBAAU,aAAV,GAA2B,SAAS,MAApC;AACA;AACF,WAAK,kBAAL;AACE,kBAAU,WAAV,GAAwB,EAAC,OAAO,KAAR,EAAxB;AACA;AACF,WAAK,kBAAL;AACE,sBAAc,aAAd,CAA4B,gBAA5B,GAA+C,SAAS,KAAT,EAAgB,EAAhB,CAA/C;AACA,8BAAsB,aAAtB,CAAoC,gBAApC,GAAuD,SAAS,KAAT,EAAgB,EAAhB,CAAvD;AACA,sBAAc,aAAd,CAA4B,gBAA5B,GAA+C,SAAS,KAAT,EAAgB,EAAhB,CAA/C;AACA;AACF,WAAK,iBAAL;AACE,sBAAc,aAAd,CAA4B,eAA5B,GAA8C,SAAS,KAAT,EAAgB,EAAhB,CAA9C;AACA,8BAAsB,aAAtB,CAAoC,eAApC,GAAsD,SAAS,KAAT,EAAgB,EAAhB,CAAtD;AACA,sBAAc,aAAd,CAA4B,eAA5B,GAA8C,SAAS,KAAT,EAAgB,EAAhB,CAA9C;AACA;AACF,WAAK,GAAL;AACE,kBAAU,CAAV,GAAc,SAAS,KAAT,EAAgB,EAAhB,CAAd;AACA,YAAG,MAAM,UAAU,CAAhB,CAAH,EAAuB,UAAU,CAAV,GAAc,KAAd;AACvB;AACF,WAAK,YAAL;AACE,kBAAU,UAAV,GAAuB,KAAvB;AACA;AACF,WAAK,mBAAL;AACE,kBAAU,iBAAV,GAA8B,KAA9B;AACA;AACF,WAAK,eAAL;AACE,YAAG,SAAS,QAAZ,EAAsB;AACpB;AACA,cAAG,OAAO,IAAP,IAAe,IAAlB,EAAwB;AACtB,gBAAI,oBAAoB,mBAAmB,QAAnB,CAAxB;AACA,gBAAG,kBAAkB,OAAlB,CAA0B,GAA1B,KAAkC,CAAC,CAAtC,EAAyC,MAAM,IAAI,KAAJ,CAAU,sCAAV,CAAN;AACzC,mBAAO,IAAP,GAAc,EAAC,MAAM,iBAAP,EAA0B,UAAU,IAApC,EAAd;AACD,WAJD,MAIO;AACL,mBAAO,IAAP,CAAY,IAAZ,GAAmB,mBAAmB,OAAO,IAAP,CAAY,IAA/B,CAAnB;AACD;AACF,SATD,MASO,IAAG,SAAS,cAAZ,EAA4B;AACjC,iBAAO,IAAP,GAAc,EAAC,MAAM,mBAAmB,QAAnB,CAAP,EAAd;AACD;;AAED;AACA,YAAG,SAAS,QAAT,IACE,SAAS,cADX,IAEE,SAAS,YAFX,IAGE,SAAS,SAHX,IAIE,SAAS,aAJX,IAKE,SAAS,OALd,EAMI,MAAM,IAAI,KAAJ,CAAU,oGAAV,CAAN;;AAEJ;AACA,kBAAU,aAAV,GAA0B,KAA1B;AACA;AACF,WAAK,yBAAL;AACE;AACA,YAAI,SAAS,MAAM,KAAN,CAAY,GAAZ,CAAb;AACA,YAAI,IAAI,EAAR;AACA;AACA,eAAO,OAAP,CAAe,UAAS,CAAT,EAAY;AACzB,cAAI,IAAI,EAAE,KAAF,CAAQ,GAAR,CAAR;AACA,YAAE,EAAE,CAAF,CAAF,IAAU,EAAE,CAAF,CAAV;AACD,SAHD;;AAKA;AACA,kBAAU,uBAAV,GAAoC,CAApC;AACA;AACA,YAAG,OAAO,EAAE,YAAT,IAAyB,QAA5B,EAAsC,UAAU,iBAAV,GAA8B,EAAE,YAAhC;AACtC,YAAG,OAAO,EAAE,aAAT,IAA0B,QAA7B,EAAuC,UAAU,kBAAV,GAA+B,EAAE,aAAjC;AACvC,YAAG,OAAO,EAAE,sBAAT,IAAmC,QAAtC,EAAgD,UAAU,0BAAV,GAAuC,EAAE,sBAAF,IAA4B,MAA5B,GAAqC,IAArC,GAA4C,KAAnF;AAChD;AACF,WAAK,YAAL;AACE,kBAAU,QAAV,GAAqB,SAAS,KAAT,EAAgB,EAAhB,CAArB;AACA;AACF,WAAK,gBAAL;AACE,YAAG,CAAC,eAAe,OAAf,CAAuB,KAAvB,CAAJ,EAAmC,MAAM,IAAI,KAAJ,CAAU,6FAAV,CAAN;AACnC,kBAAU,cAAV,GAA2B,KAA3B;AACA;AACF,WAAK,qBAAL;AACE,kBAAU,mBAAV,GAAgC,SAAS,KAAT,EAAgB,EAAhB,CAAhC;AACA;AACF,WAAK,oBAAL;AACE;AACA,gBAAQ,mBAAmB,KAAnB,CAAR;AACA;AACA,YAAI,YAAY,EAAhB;AACA,YAAG,SAAS,IAAT,IAAiB,SAAS,EAA7B,EAAiC;AAC/B,oBAAU,oBAAV,CAA+B,IAA/B,CAAoC,SAApC;AACA;AACD;;AAED;AACA,YAAI,OAAO,MAAM,KAAN,CAAY,IAAZ,CAAX;AACA,aAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,KAAK,MAAxB,EAAgC,GAAhC,EAAqC;AACnC,cAAI,QAAQ,KAAK,CAAL,EAAQ,IAAR,GAAe,KAAf,CAAqB,IAArB,CAAZ;AACA,oBAAU,MAAM,CAAN,CAAV,IAAsB,MAAM,CAAN,CAAtB;AACD;;AAED;AACA,kBAAU,oBAAV,CAA+B,IAA/B,CAAoC,SAApC;AACA;AACF;AACE;AAxKJ;AA0KD,GA9KD;;AAgLA;AACA,MAAG,UAAU,oBAAV,CAA+B,MAA/B,KAA0C,CAA7C,EAAgD;AAC9C,cAAU,oBAAV,GAAiC,IAAjC;AACD;;AAED;AACA,MAAG,CAAC,UAAU,CAAV,IAAe,CAAC,CAAhB,IAAqB,UAAU,CAAV,IAAe,CAArC,MACC,UAAU,OAAV,IAAqB,IAArB,IACG,UAAU,KAAV,IAAmB,IADtB,IAEG,UAAU,IAAV,IAAkB,IAHtB,CAAH,EAGgC,MAAM,IAAI,KAAJ,CAAU,+DAAV,CAAN;;AAEhC;AACA,MAAG,CAAC,UAAU,cAAd,EAA8B;AAC5B,cAAU,cAAV,GAA2B,SAA3B;AACD;;AAED;AACA,SAAO,OAAP,GAAiB,OAAjB;AACA;AACA,SAAO,MAAP;AACD,CA9YD","file":"url_parser-compiled.js","sourcesContent":["\"use strict\";\n\nvar ReadPreference = require('./read_preference'),\n  parser = require('url'),\n  f = require('util').format;\n\nmodule.exports = function(url) {\n  // Variables\n  var connection_part = '';\n  var auth_part = '';\n  var query_string_part = '';\n  var dbName = 'admin';\n\n  // Url parser result\n  var result = parser.parse(url, true);\n\n  if(result.protocol != 'mongodb:') {\n    throw new Error('invalid schema, expected mongodb');\n  }\n\n  if((result.hostname == null || result.hostname == '') && url.indexOf('.sock') == -1) {\n    throw new Error('no hostname or hostnames provided in connection string');\n  }\n\n  if(result.port == '0') {\n    throw new Error('invalid port (zero) with hostname');\n  }\n\n  if(!isNaN(parseInt(result.port, 10)) && parseInt(result.port, 10) > 65535) {\n    throw new Error('invalid port (larger than 65535) with hostname');\n  }\n\n  if(result.path\n    && result.path.length > 0\n    && result.path[0] != '/'\n    && url.indexOf('.sock') == -1) {\n    throw new Error('missing delimiting slash between hosts and options');\n  }\n\n  if(result.query) {\n    for(var name in result.query) {\n      if(name.indexOf('::') != -1) {\n        throw new Error('double colon in host identifier');\n      }\n\n      if(result.query[name] == '') {\n        throw new Error('query parameter ' + name + ' is an incomplete value pair');\n      }\n    }\n  }\n\n  if(result.auth) {\n    var parts = result.auth.split(':');\n    if(url.indexOf(result.auth) != -1 && parts.length > 2) {\n      throw new Error('Username with password containing an unescaped colon');\n    }\n\n    if(url.indexOf(result.auth) != -1 && result.auth.indexOf('@') != -1) {\n      throw new Error('Username containing an unescaped at-sign');\n    }\n  }\n\n  // Remove query\n  var clean = url.split('?').shift();\n\n  // Extract the list of hosts\n  var strings = clean.split(',');\n  var hosts = [];\n\n  for(var i = 0; i < strings.length; i++) {\n    var hostString = strings[i];\n\n    if(hostString.indexOf('mongodb') != -1) {\n      if(hostString.indexOf('@') != -1) {\n        hosts.push(hostString.split('@').pop())\n      } else {\n        hosts.push(hostString.substr('mongodb://'.length));\n      }\n    } else if(hostString.indexOf('/') != -1) {\n      hosts.push(hostString.split('/').shift());\n    } else if(hostString.indexOf('/') == -1) {\n      hosts.push(hostString.trim());\n    }\n  }\n\n  for(i = 0; i < hosts.length; i++) {\n    var r = parser.parse(f('mongodb://%s', hosts[i].trim()));\n    if(r.path && r.path.indexOf(':') != -1) {\n      throw new Error('double colon in host identifier');\n    }\n  }\n\n  // If we have a ? mark cut the query elements off\n  if(url.indexOf(\"?\") != -1) {\n    query_string_part = url.substr(url.indexOf(\"?\") + 1);\n    connection_part = url.substring(\"mongodb://\".length, url.indexOf(\"?\"))\n  } else {\n    connection_part = url.substring(\"mongodb://\".length);\n  }\n\n  // Check if we have auth params\n  if(connection_part.indexOf(\"@\") != -1) {\n    auth_part = connection_part.split(\"@\")[0];\n    connection_part = connection_part.split(\"@\")[1];\n  }\n\n  // Check if the connection string has a db\n  if(connection_part.indexOf(\".sock\") != -1) {\n    if(connection_part.indexOf(\".sock/\") != -1) {\n      dbName = connection_part.split(\".sock/\")[1];\n      // Check if multiple database names provided, or just an illegal trailing backslash\n      if (dbName.indexOf(\"/\") != -1) {\n        if (dbName.split(\"/\").length == 2 && dbName.split(\"/\")[1].length == 0) {\n          throw new Error('Illegal trailing backslash after database name');\n        }\n        throw new Error('More than 1 database name in URL');\n      }\n      connection_part = connection_part.split(\"/\", connection_part.indexOf(\".sock\") + \".sock\".length);\n    }\n  } else if(connection_part.indexOf(\"/\") != -1) {\n    // Check if multiple database names provided, or just an illegal trailing backslash\n    if (connection_part.split(\"/\").length > 2) {\n      if (connection_part.split(\"/\")[2].length == 0) {\n        throw new Error('Illegal trailing backslash after database name');\n      }\n      throw new Error('More than 1 database name in URL');\n    }\n    dbName = connection_part.split(\"/\")[1];\n    connection_part = connection_part.split(\"/\")[0];\n  }\n\n  // Result object\n  var object = {};\n\n  // Pick apart the authentication part of the string\n  var authPart = auth_part || '';\n  var auth = authPart.split(':', 2);\n\n  // Decode the URI components\n  auth[0] = decodeURIComponent(auth[0]);\n  if(auth[1]){\n    auth[1] = decodeURIComponent(auth[1]);\n  }\n\n  // Add auth to final object if we have 2 elements\n  if(auth.length == 2) object.auth = {user: auth[0], password: auth[1]};\n\n  // Variables used for temporary storage\n  var hostPart;\n  var urlOptions;\n  var servers;\n  var serverOptions = {socketOptions: {}};\n  var dbOptions = {read_preference_tags: []};\n  var replSetServersOptions = {socketOptions: {}};\n  var mongosOptions = {socketOptions: {}};\n  // Add server options to final object\n  object.server_options = serverOptions;\n  object.db_options = dbOptions;\n  object.rs_options = replSetServersOptions;\n  object.mongos_options = mongosOptions;\n\n  // Let's check if we are using a domain socket\n  if(url.match(/\\.sock/)) {\n    // Split out the socket part\n    var domainSocket = url.substring(\n        url.indexOf(\"mongodb://\") + \"mongodb://\".length\n      , url.lastIndexOf(\".sock\") + \".sock\".length);\n    // Clean out any auth stuff if any\n    if(domainSocket.indexOf(\"@\") != -1) domainSocket = domainSocket.split(\"@\")[1];\n    servers = [{domain_socket: domainSocket}];\n  } else {\n    // Split up the db\n    hostPart = connection_part;\n    // Deduplicate servers\n    var deduplicatedServers = {};\n\n    // Parse all server results\n    servers = hostPart.split(',').map(function(h) {\n      var _host, _port, ipv6match;\n      //check if it matches [IPv6]:port, where the port number is optional\n      if ((ipv6match = /\\[([^\\]]+)\\](?:\\:(.+))?/.exec(h))) {\n        _host = ipv6match[1];\n        _port = parseInt(ipv6match[2], 10) || 27017;\n      } else {\n        //otherwise assume it's IPv4, or plain hostname\n        var hostPort = h.split(':', 2);\n        _host = hostPort[0] || 'localhost';\n        _port = hostPort[1] != null ? parseInt(hostPort[1], 10) : 27017;\n        // Check for localhost?safe=true style case\n        if(_host.indexOf(\"?\") != -1) _host = _host.split(/\\?/)[0];\n      }\n\n      // No entry returned for duplicate servr\n      if(deduplicatedServers[_host + \"_\" + _port]) return null;\n      deduplicatedServers[_host + \"_\" + _port] = 1;\n\n      // Return the mapped object\n      return {host: _host, port: _port};\n    }).filter(function(x) {\n      return x != null;\n    });\n  }\n\n  // Get the db name\n  object.dbName = dbName || 'admin';\n  // Split up all the options\n  urlOptions = (query_string_part || '').split(/[&;]/);\n  // Ugh, we have to figure out which options go to which constructor manually.\n  urlOptions.forEach(function(opt) {\n    if(!opt) return;\n    var splitOpt = opt.split('='), name = splitOpt[0], value = splitOpt[1];\n    // Options implementations\n    switch(name) {\n      case 'slaveOk':\n      case 'slave_ok':\n        serverOptions.slave_ok = (value == 'true');\n        dbOptions.slaveOk = (value == 'true');\n        break;\n      case 'maxPoolSize':\n      case 'poolSize':\n        serverOptions.poolSize = parseInt(value, 10);\n        replSetServersOptions.poolSize = parseInt(value, 10);\n        break;\n      case 'appname':\n        object.appname = decodeURIComponent(value);\n        break;\n      case 'autoReconnect':\n      case 'auto_reconnect':\n        serverOptions.auto_reconnect = (value == 'true');\n        break;\n      case 'minPoolSize':\n        throw new Error(\"minPoolSize not supported\");\n      case 'maxIdleTimeMS':\n        throw new Error(\"maxIdleTimeMS not supported\");\n      case 'waitQueueMultiple':\n        throw new Error(\"waitQueueMultiple not supported\");\n      case 'waitQueueTimeoutMS':\n        throw new Error(\"waitQueueTimeoutMS not supported\");\n      case 'uuidRepresentation':\n        throw new Error(\"uuidRepresentation not supported\");\n      case 'ssl':\n        if(value == 'prefer') {\n          serverOptions.ssl = value;\n          replSetServersOptions.ssl = value;\n          mongosOptions.ssl = value;\n          break;\n        }\n        serverOptions.ssl = (value == 'true');\n        replSetServersOptions.ssl = (value == 'true');\n        mongosOptions.ssl = (value == 'true');\n        break;\n      case 'sslValidate':\n        serverOptions.sslValidate = (value == 'true');\n        replSetServersOptions.sslValidate = (value == 'true');\n        mongosOptions.sslValidate = (value == 'true');\n        break;\n      case 'replicaSet':\n      case 'rs_name':\n        replSetServersOptions.rs_name = value;\n        break;\n      case 'reconnectWait':\n        replSetServersOptions.reconnectWait = parseInt(value, 10);\n        break;\n      case 'retries':\n        replSetServersOptions.retries = parseInt(value, 10);\n        break;\n      case 'readSecondary':\n      case 'read_secondary':\n        replSetServersOptions.read_secondary = (value == 'true');\n        break;\n      case 'fsync':\n        dbOptions.fsync = (value == 'true');\n        break;\n      case 'journal':\n        dbOptions.j = (value == 'true');\n        break;\n      case 'safe':\n        dbOptions.safe = (value == 'true');\n        break;\n      case 'nativeParser':\n      case 'native_parser':\n        dbOptions.native_parser = (value == 'true');\n        break;\n      case 'readConcernLevel':\n        dbOptions.readConcern = {level: value};\n        break;\n      case 'connectTimeoutMS':\n        serverOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        replSetServersOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        mongosOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        break;\n      case 'socketTimeoutMS':\n        serverOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        replSetServersOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        mongosOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        break;\n      case 'w':\n        dbOptions.w = parseInt(value, 10);\n        if(isNaN(dbOptions.w)) dbOptions.w = value;\n        break;\n      case 'authSource':\n        dbOptions.authSource = value;\n        break;\n      case 'gssapiServiceName':\n        dbOptions.gssapiServiceName = value;\n        break;\n      case 'authMechanism':\n        if(value == 'GSSAPI') {\n          // If no password provided decode only the principal\n          if(object.auth == null) {\n            var urlDecodeAuthPart = decodeURIComponent(authPart);\n            if(urlDecodeAuthPart.indexOf(\"@\") == -1) throw new Error(\"GSSAPI requires a provided principal\");\n            object.auth = {user: urlDecodeAuthPart, password: null};\n          } else {\n            object.auth.user = decodeURIComponent(object.auth.user);\n          }\n        } else if(value == 'MONGODB-X509') {\n          object.auth = {user: decodeURIComponent(authPart)};\n        }\n\n        // Only support GSSAPI or MONGODB-CR for now\n        if(value != 'GSSAPI'\n          && value != 'MONGODB-X509'\n          && value != 'MONGODB-CR'\n          && value != 'DEFAULT'\n          && value != 'SCRAM-SHA-1'\n          && value != 'PLAIN')\n            throw new Error(\"only DEFAULT, GSSAPI, PLAIN, MONGODB-X509, SCRAM-SHA-1 or MONGODB-CR is supported by authMechanism\");\n\n        // Authentication mechanism\n        dbOptions.authMechanism = value;\n        break;\n      case 'authMechanismProperties':\n        // Split up into key, value pairs\n        var values = value.split(',');\n        var o = {};\n        // For each value split into key, value\n        values.forEach(function(x) {\n          var v = x.split(':');\n          o[v[0]] = v[1];\n        });\n\n        // Set all authMechanismProperties\n        dbOptions.authMechanismProperties = o;\n        // Set the service name value\n        if(typeof o.SERVICE_NAME == 'string') dbOptions.gssapiServiceName = o.SERVICE_NAME;\n        if(typeof o.SERVICE_REALM == 'string') dbOptions.gssapiServiceRealm = o.SERVICE_REALM;\n        if(typeof o.CANONICALIZE_HOST_NAME == 'string') dbOptions.gssapiCanonicalizeHostName = o.CANONICALIZE_HOST_NAME == 'true' ? true : false;\n        break;\n      case 'wtimeoutMS':\n        dbOptions.wtimeout = parseInt(value, 10);\n        break;\n      case 'readPreference':\n        if(!ReadPreference.isValid(value)) throw new Error(\"readPreference must be either primary/primaryPreferred/secondary/secondaryPreferred/nearest\");\n        dbOptions.readPreference = value;\n        break;\n      case 'maxStalenessSeconds':\n        dbOptions.maxStalenessSeconds = parseInt(value, 10);\n        break;\n      case 'readPreferenceTags':\n        // Decode the value\n        value = decodeURIComponent(value);\n        // Contains the tag object\n        var tagObject = {};\n        if(value == null || value == '') {\n          dbOptions.read_preference_tags.push(tagObject);\n          break;\n        }\n\n        // Split up the tags\n        var tags = value.split(/\\,/);\n        for(var i = 0; i < tags.length; i++) {\n          var parts = tags[i].trim().split(/\\:/);\n          tagObject[parts[0]] = parts[1];\n        }\n\n        // Set the preferences tags\n        dbOptions.read_preference_tags.push(tagObject);\n        break;\n      default:\n        break;\n    }\n  });\n\n  // No tags: should be null (not [])\n  if(dbOptions.read_preference_tags.length === 0) {\n    dbOptions.read_preference_tags = null;\n  }\n\n  // Validate if there are an invalid write concern combinations\n  if((dbOptions.w == -1 || dbOptions.w == 0) && (\n      dbOptions.journal == true\n      || dbOptions.fsync == true\n      || dbOptions.safe == true)) throw new Error(\"w set to -1 or 0 cannot be combined with safe/w/journal/fsync\")\n\n  // If no read preference set it to primary\n  if(!dbOptions.readPreference) {\n    dbOptions.readPreference = 'primary';\n  }\n\n  // Add servers to result\n  object.servers = servers;\n  // Returned parsed object\n  return object;\n}\n"]}