{"version":3,"sources":["admin.js"],"names":[],"mappings":"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","file":"admin-compiled.js","sourcesContent":["\"use strict\";\n\nvar toError = require('./utils').toError,\n  Define = require('./metadata'),\n  shallowClone = require('./utils').shallowClone;\n\n/**\n * @fileOverview The **Admin** class is an internal class that allows convenient access to\n * the admin functionality and commands for MongoDB.\n *\n * **ADMIN Cannot directly be instantiated**\n * @example\n * var MongoClient = require('mongodb').MongoClient,\n *   test = require('assert');\n * // Connection url\n * var url = 'mongodb://localhost:27017/test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, db) {\n *   // Use the admin database for the operation\n *   var adminDb = db.admin();\n *\n *   // List all the available databases\n *   adminDb.listDatabases(function(err, dbs) {\n *     test.equal(null, err);\n *     test.ok(dbs.databases.length > 0);\n *     db.close();\n *   });\n * });\n */\n\n/**\n * Create a new Admin instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @return {Admin} a collection instance.\n */\nvar Admin = function(db, topology, promiseLibrary) {\n  if(!(this instanceof Admin)) return new Admin(db, topology);\n\n  // Internal state\n  this.s = {\n      db: db\n    , topology: topology\n    , promiseLibrary: promiseLibrary\n  }\n}\n\nvar define = Admin.define = new Define('Admin', Admin, false);\n\n/**\n * The callback format for results\n * @callback Admin~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result object if the command was executed successfully.\n */\n\n/**\n * Execute a command\n * @method\n * @param {object} command The command hash\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxTimeMS=null] Number of milliseconds to wait before aborting the query.\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.command = function(command, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() : {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return this.s.db.executeDbAdminCommand(command, options, function(err, doc) {\n    return callback != null ? callback(err, doc) : null;\n  });\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self.s.db.executeDbAdminCommand(command, options, function(err, doc) {\n      if(err) return reject(err);\n      resolve(doc);\n    });\n  });\n}\n\ndefine.classMethod('command', {callback: true, promise:true});\n\n/**\n * Retrieve the server information for the current\n * instance of the db client\n *\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.buildInfo = function(callback) {\n  var self = this;\n  // Execute using callback\n  if(typeof callback == 'function') return this.serverInfo(callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self.serverInfo(function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('buildInfo', {callback: true, promise:true});\n\n/**\n * Retrieve the server information for the current\n * instance of the db client\n *\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.serverInfo = function(callback) {\n  var self = this;\n  // Execute using callback\n  if(typeof callback == 'function') return this.s.db.executeDbAdminCommand({buildinfo:1}, function(err, doc) {\n    if(err != null) return callback(err, null);\n    callback(null, doc);\n  });\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self.s.db.executeDbAdminCommand({buildinfo:1}, function(err, doc) {\n      if(err) return reject(err);\n      resolve(doc);\n    });\n  });\n}\n\ndefine.classMethod('serverInfo', {callback: true, promise:true});\n\n/**\n * Retrieve this db's server status.\n *\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.serverStatus = function(callback) {\n  var self = this;\n\n  // Execute using callback\n  if(typeof callback == 'function') return serverStatus(self, callback)\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    serverStatus(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar serverStatus = function(self, callback) {\n  self.s.db.executeDbAdminCommand({serverStatus: 1}, function(err, doc) {\n    if(err == null && doc.ok === 1) {\n      callback(null, doc);\n    } else {\n      if(err) return callback(err, false);\n      return callback(toError(doc), false);\n    }\n  });\n}\n\ndefine.classMethod('serverStatus', {callback: true, promise:true});\n\n/**\n * Retrieve the current profiling Level for MongoDB\n *\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.profilingLevel = function(callback) {\n  var self = this;\n\n  // Execute using callback\n  if(typeof callback == 'function') return profilingLevel(self, callback)\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    profilingLevel(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar profilingLevel = function(self, callback) {\n  self.s.db.executeDbAdminCommand({profile:-1}, function(err, doc) {\n    if(err == null && doc.ok === 1) {\n      var was = doc.was;\n      if(was == 0) return callback(null, \"off\");\n      if(was == 1) return callback(null, \"slow_only\");\n      if(was == 2) return callback(null, \"all\");\n        return callback(new Error(\"Error: illegal profiling level value \" + was), null);\n    } else {\n      err != null ? callback(err, null) : callback(new Error(\"Error with profile command\"), null);\n    }\n  });\n}\n\ndefine.classMethod('profilingLevel', {callback: true, promise:true});\n\n/**\n * Ping the MongoDB server and retrieve results\n *\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.ping = function(options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n\n  // Execute using callback\n  if(typeof callback == 'function') return this.s.db.executeDbAdminCommand({ping: 1}, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self.s.db.executeDbAdminCommand({ping: 1}, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('ping', {callback: true, promise:true});\n\n/**\n * Authenticate a user against the server.\n * @method\n * @param {string} username The username.\n * @param {string} [password] The password.\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.authenticate = function(username, password, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = shallowClone(options);\n  options.authdb = 'admin';\n\n  // Execute using callback\n  if(typeof callback == 'function') return this.s.db.authenticate(username, password, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self.s.db.authenticate(username, password, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('authenticate', {callback: true, promise:true});\n\n/**\n * Logout user from server, fire off on all connections and remove all auth info\n * @method\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.logout = function(callback) {\n  var self = this;\n  // Execute using callback\n  if(typeof callback == 'function') return this.s.db.logout({dbName: 'admin'}, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self.s.db.logout({dbName: 'admin'}, function(err) {\n      if(err) return reject(err);\n      resolve(true);\n    });\n  });\n}\n\ndefine.classMethod('logout', {callback: true, promise:true});\n\n// Get write concern\nvar writeConcern = function(options, db) {\n  options = shallowClone(options);\n\n  // If options already contain write concerns return it\n  if(options.w || options.wtimeout || options.j || options.fsync) {\n    return options;\n  }\n\n  // Set db write concern if available\n  if(db.writeConcern) {\n    if(options.w) options.w = db.writeConcern.w;\n    if(options.wtimeout) options.wtimeout = db.writeConcern.wtimeout;\n    if(options.j) options.j = db.writeConcern.j;\n    if(options.fsync) options.fsync = db.writeConcern.fsync;\n  }\n\n  // Return modified options\n  return options;\n}\n\n/**\n * Add a user to the database.\n * @method\n * @param {string} username The username.\n * @param {string} password The password.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.fsync=false] Specify a file sync write concern.\n * @param {object} [options.customData=null] Custom data associated with the user (only Mongodb 2.6 or higher)\n * @param {object[]} [options.roles=null] Roles associated with the created user (only Mongodb 2.6 or higher)\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.addUser = function(username, password, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() : {};\n  options = options || {};\n  // Get the options\n  options = writeConcern(options, self.s.db)\n  // Set the db name to admin\n  options.dbName = 'admin';\n\n  // Execute using callback\n  if(typeof callback == 'function')\n    return self.s.db.addUser(username, password, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self.s.db.addUser(username, password, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('addUser', {callback: true, promise:true});\n\n/**\n * Remove a user from a database\n * @method\n * @param {string} username The username.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.fsync=false] Specify a file sync write concern.\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.removeUser = function(username, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() : {};\n  options = options || {};\n  // Get the options\n  options = writeConcern(options, self.s.db)\n  // Set the db name\n  options.dbName = 'admin';\n\n  // Execute using callback\n  if(typeof callback == 'function')\n    return self.s.db.removeUser(username, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self.s.db.removeUser(username, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('removeUser', {callback: true, promise:true});\n\n/**\n * Set the current profiling level of MongoDB\n *\n * @param {string} level The new profiling level (off, slow_only, all).\n * @param {Admin~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.setProfilingLevel = function(level, callback) {\n  var self = this;\n\n  // Execute using callback\n  if(typeof callback == 'function') return setProfilingLevel(self, level, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    setProfilingLevel(self, level, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar setProfilingLevel = function(self, level, callback) {\n  var command = {};\n  var profile = 0;\n\n  if(level == \"off\") {\n    profile = 0;\n  } else if(level == \"slow_only\") {\n    profile = 1;\n  } else if(level == \"all\") {\n    profile = 2;\n  } else {\n    return callback(new Error(\"Error: illegal profiling level value \" + level));\n  }\n\n  // Set up the profile number\n  command['profile'] = profile;\n\n  self.s.db.executeDbAdminCommand(command, function(err, doc) {\n    if(err == null && doc.ok === 1)\n      return callback(null, level);\n    return err != null ? callback(err, null) : callback(new Error(\"Error with profile command\"), null);\n  });\n}\n\ndefine.classMethod('setProfilingLevel', {callback: true, promise:true});\n\n/**\n * Retrive the current profiling information for MongoDB\n *\n * @param {Admin~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Query the system.profile collection directly.\n */\nAdmin.prototype.profilingInfo = function(callback) {\n  var self = this;\n\n  // Execute using callback\n  if(typeof callback == 'function') return profilingInfo(self, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    profilingInfo(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar profilingInfo = function(self, callback) {\n  try {\n    self.s.topology.cursor(\"admin.system.profile\", { find: 'system.profile', query: {}}, {}).toArray(callback);\n  } catch (err) {\n    return callback(err, null);\n  }\n}\n\ndefine.classMethod('profilingLevel', {callback: true, promise:true});\n\n/**\n * Validate an existing collection\n *\n * @param {string} collectionName The name of the collection to validate.\n * @param {object} [options=null] Optional settings.\n * @param {Admin~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.validateCollection = function(collectionName, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  // Execute using callback\n  if(typeof callback == 'function')\n    return validateCollection(self, collectionName, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    validateCollection(self, collectionName, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar validateCollection = function(self, collectionName, options, callback) {\n  var command = {validate: collectionName};\n  var keys = Object.keys(options);\n\n  // Decorate command with extra options\n  for(var i = 0; i < keys.length; i++) {\n    if(options.hasOwnProperty(keys[i])) {\n      command[keys[i]] = options[keys[i]];\n    }\n  }\n\n  self.s.db.command(command, function(err, doc) {\n    if(err != null) return callback(err, null);\n\n    if(doc.ok === 0)\n      return callback(new Error(\"Error with validate command\"), null);\n    if(doc.result != null && doc.result.constructor != String)\n      return callback(new Error(\"Error with validation data\"), null);\n    if(doc.result != null && doc.result.match(/exception|corrupt/) != null)\n      return callback(new Error(\"Error: invalid collection \" + collectionName), null);\n    if(doc.valid != null && !doc.valid)\n      return callback(new Error(\"Error: invalid collection \" + collectionName), null);\n\n    return callback(null, doc);\n  });\n}\n\ndefine.classMethod('validateCollection', {callback: true, promise:true});\n\n/**\n * List the available databases\n *\n * @param {Admin~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.listDatabases = function(callback) {\n  var self = this;\n  // Execute using callback\n  if(typeof callback == 'function') return self.s.db.executeDbAdminCommand({listDatabases:1}, {}, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self.s.db.executeDbAdminCommand({listDatabases:1}, {}, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('listDatabases', {callback: true, promise:true});\n\n/**\n * Get ReplicaSet status\n *\n * @param {Admin~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.replSetGetStatus = function(callback) {\n  var self = this;\n  // Execute using callback\n  if(typeof callback == 'function') return replSetGetStatus(self, callback);\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    replSetGetStatus(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar replSetGetStatus = function(self, callback) {\n  self.s.db.executeDbAdminCommand({replSetGetStatus:1}, function(err, doc) {\n    if(err == null && doc.ok === 1)\n      return callback(null, doc);\n    if(err) return callback(err, false);\n    callback(toError(doc), false);\n  });\n}\n\ndefine.classMethod('replSetGetStatus', {callback: true, promise:true});\n\nmodule.exports = Admin;\n"]}