{"version":3,"sources":["promise_provider.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,WAAW,QAAQ,WAAR,CAAf;;AAEA;;;;;;AAMA,IAAI,UAAU;AACZ,YAAU;AADE,CAAd;;AAIA;;;;;AAKA,QAAQ,GAAR,GAAc,YAAW;AACvB,SAAO,QAAQ,QAAf;AACD,CAFD;;AAIA;;;;;;AAMA,QAAQ,GAAR,GAAc,UAAS,GAAT,EAAc;AAC1B,MAAI,QAAQ,QAAZ,EAAsB;AACpB,WAAO,QAAQ,KAAR,EAAP;AACD;AACD,UAAQ,QAAR,GAAmB,QAAQ,cAAR,CAAnB;AACA,UAAQ,QAAR,CAAiB,GAAjB,CAAqB,GAArB;AACA,UAAQ,QAAR,EAAkB,OAAlB,GAA4B,QAAQ,QAAR,CAAiB,GAA7C;AACD,CAPD;;AASA;;;;;;AAMA,QAAQ,KAAR,GAAgB,YAAW;AACzB,UAAQ,QAAR,GAAmB,QAAnB;AACD,CAFD;;AAIA,OAAO,OAAP,GAAiB,OAAjB","file":"promise_provider-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar MPromise = require('./promise');\n\n/**\n * Helper for multiplexing promise implementations\n *\n * @api private\n */\n\nvar Promise = {\n  _promise: MPromise\n};\n\n/**\n * Get the current promise constructor\n *\n * @api private\n */\nPromise.get = function() {\n  return Promise._promise;\n};\n\n/**\n * Set the current promise constructor\n *\n * @api private\n */\n\nPromise.set = function(lib) {\n  if (lib === MPromise) {\n    return Promise.reset();\n  }\n  Promise._promise = require('./ES6Promise');\n  Promise._promise.use(lib);\n  require('mquery').Promise = Promise._promise.ES6;\n};\n\n/**\n * Resets to using mpromise\n *\n * @api private\n */\n\nPromise.reset = function() {\n  Promise._promise = MPromise;\n};\n\nmodule.exports = Promise;\n"]}