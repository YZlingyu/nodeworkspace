{"version":3,"sources":["aggregate.js"],"names":[],"mappings":"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","file":"aggregate-compiled.js","sourcesContent":["/*!\n * Module dependencies\n */\n\nvar util = require('util');\nvar utils = require('./utils');\nvar PromiseProvider = require('./promise_provider');\nvar Query = require('./query');\nvar read = Query.prototype.read;\n\n/**\n * Aggregate constructor used for building aggregation pipelines.\n *\n * ####Example:\n *\n *     new Aggregate();\n *     new Aggregate({ $project: { a: 1, b: 1 } });\n *     new Aggregate({ $project: { a: 1, b: 1 } }, { $skip: 5 });\n *     new Aggregate([{ $project: { a: 1, b: 1 } }, { $skip: 5 }]);\n *\n * Returned when calling Model.aggregate().\n *\n * ####Example:\n *\n *     Model\n *     .aggregate({ $match: { age: { $gte: 21 }}})\n *     .unwind('tags')\n *     .exec(callback)\n *\n * ####Note:\n *\n * - The documents returned are plain javascript objects, not mongoose documents (since any shape of document can be returned).\n * - Requires MongoDB >= 2.1\n * - Mongoose does **not** cast pipeline stages. `new Aggregate({ $match: { _id: '00000000000000000000000a' } });` will not work unless `_id` is a string in the database. Use `new Aggregate({ $match: { _id: mongoose.Types.ObjectId('00000000000000000000000a') } });` instead.\n *\n * @see MongoDB http://docs.mongodb.org/manual/applications/aggregation/\n * @see driver http://mongodb.github.com/node-mongodb-native/api-generated/collection.html#aggregate\n * @param {Object|Array} [ops] aggregation operator(s) or operator array\n * @api public\n */\n\nfunction Aggregate() {\n  this._pipeline = [];\n  this._model = undefined;\n  this.options = undefined;\n\n  if (arguments.length === 1 && util.isArray(arguments[0])) {\n    this.append.apply(this, arguments[0]);\n  } else {\n    this.append.apply(this, arguments);\n  }\n}\n\n/**\n * Binds this aggregate to a model.\n *\n * @param {Model} model the model to which the aggregate is to be bound\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.model = function(model) {\n  this._model = model;\n  return this;\n};\n\n/**\n * Appends new operators to this aggregate pipeline\n *\n * ####Examples:\n *\n *     aggregate.append({ $project: { field: 1 }}, { $limit: 2 });\n *\n *     // or pass an array\n *     var pipeline = [{ $match: { daw: 'Logic Audio X' }} ];\n *     aggregate.append(pipeline);\n *\n * @param {Object} ops operator(s) to append\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.append = function() {\n  var args = (arguments.length === 1 && util.isArray(arguments[0]))\n      ? arguments[0]\n      : utils.args(arguments);\n\n  if (!args.every(isOperator)) {\n    throw new Error('Arguments must be aggregate pipeline operators');\n  }\n\n  this._pipeline = this._pipeline.concat(args);\n\n  return this;\n};\n\n/**\n * Appends a new $project operator to this aggregate pipeline.\n *\n * Mongoose query [selection syntax](#query_Query-select) is also supported.\n *\n * ####Examples:\n *\n *     // include a, include b, exclude _id\n *     aggregate.project(\"a b -_id\");\n *\n *     // or you may use object notation, useful when\n *     // you have keys already prefixed with a \"-\"\n *     aggregate.project({a: 1, b: 1, _id: 0});\n *\n *     // reshaping documents\n *     aggregate.project({\n *         newField: '$b.nested'\n *       , plusTen: { $add: ['$val', 10]}\n *       , sub: {\n *            name: '$a'\n *         }\n *     })\n *\n *     // etc\n *     aggregate.project({ salary_k: { $divide: [ \"$salary\", 1000 ] } });\n *\n * @param {Object|String} arg field specification\n * @see projection http://docs.mongodb.org/manual/reference/aggregation/project/\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.project = function(arg) {\n  var fields = {};\n\n  if (typeof arg === 'object' && !util.isArray(arg)) {\n    Object.keys(arg).forEach(function(field) {\n      fields[field] = arg[field];\n    });\n  } else if (arguments.length === 1 && typeof arg === 'string') {\n    arg.split(/\\s+/).forEach(function(field) {\n      if (!field) {\n        return;\n      }\n      var include = field[0] === '-' ? 0 : 1;\n      if (include === 0) {\n        field = field.substring(1);\n      }\n      fields[field] = include;\n    });\n  } else {\n    throw new Error('Invalid project() argument. Must be string or object');\n  }\n\n  return this.append({$project: fields});\n};\n\n/**\n * Appends a new custom $group operator to this aggregate pipeline.\n *\n * ####Examples:\n *\n *     aggregate.group({ _id: \"$department\" });\n *\n * @see $group http://docs.mongodb.org/manual/reference/aggregation/group/\n * @method group\n * @memberOf Aggregate\n * @param {Object} arg $group operator contents\n * @return {Aggregate}\n * @api public\n */\n\n/**\n * Appends a new custom $match operator to this aggregate pipeline.\n *\n * ####Examples:\n *\n *     aggregate.match({ department: { $in: [ \"sales\", \"engineering\" ] } });\n *\n * @see $match http://docs.mongodb.org/manual/reference/aggregation/match/\n * @method match\n * @memberOf Aggregate\n * @param {Object} arg $match operator contents\n * @return {Aggregate}\n * @api public\n */\n\n/**\n * Appends a new $skip operator to this aggregate pipeline.\n *\n * ####Examples:\n *\n *     aggregate.skip(10);\n *\n * @see $skip http://docs.mongodb.org/manual/reference/aggregation/skip/\n * @method skip\n * @memberOf Aggregate\n * @param {Number} num number of records to skip before next stage\n * @return {Aggregate}\n * @api public\n */\n\n/**\n * Appends a new $limit operator to this aggregate pipeline.\n *\n * ####Examples:\n *\n *     aggregate.limit(10);\n *\n * @see $limit http://docs.mongodb.org/manual/reference/aggregation/limit/\n * @method limit\n * @memberOf Aggregate\n * @param {Number} num maximum number of records to pass to the next stage\n * @return {Aggregate}\n * @api public\n */\n\n/**\n * Appends a new $geoNear operator to this aggregate pipeline.\n *\n * ####NOTE:\n *\n * **MUST** be used as the first operator in the pipeline.\n *\n * ####Examples:\n *\n *     aggregate.near({\n *       near: [40.724, -73.997],\n *       distanceField: \"dist.calculated\", // required\n *       maxDistance: 0.008,\n *       query: { type: \"public\" },\n *       includeLocs: \"dist.location\",\n *       uniqueDocs: true,\n *       num: 5\n *     });\n *\n * @see $geoNear http://docs.mongodb.org/manual/reference/aggregation/geoNear/\n * @method near\n * @memberOf Aggregate\n * @param {Object} parameters\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.near = function(arg) {\n  var op = {};\n  op.$geoNear = arg;\n  return this.append(op);\n};\n\n/*!\n * define methods\n */\n\n'group match skip limit out'.split(' ').forEach(function($operator) {\n  Aggregate.prototype[$operator] = function(arg) {\n    var op = {};\n    op['$' + $operator] = arg;\n    return this.append(op);\n  };\n});\n\n/**\n * Appends new custom $unwind operator(s) to this aggregate pipeline.\n *\n * Note that the `$unwind` operator requires the path name to start with '$'.\n * Mongoose will prepend '$' if the specified field doesn't start '$'.\n *\n * ####Examples:\n *\n *     aggregate.unwind(\"tags\");\n *     aggregate.unwind(\"a\", \"b\", \"c\");\n *\n * @see $unwind http://docs.mongodb.org/manual/reference/aggregation/unwind/\n * @param {String} fields the field(s) to unwind\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.unwind = function() {\n  var args = utils.args(arguments);\n\n  var res = [];\n  for (var i = 0; i < args.length; ++i) {\n    var arg = args[i];\n    if (arg && typeof arg === 'object') {\n      res.push({ $unwind: arg });\n    } else if (typeof arg === 'string') {\n      res.push({\n        $unwind: (arg && arg.charAt(0) === '$') ? arg : '$' + arg\n      });\n    } else {\n      throw new Error('Invalid arg \"' + arg + '\" to unwind(), ' +\n        'must be string or object');\n    }\n  }\n\n  return this.append.apply(this, res);\n};\n\n/**\n * Appends new custom $lookup operator(s) to this aggregate pipeline.\n *\n * ####Examples:\n *\n *     aggregate.lookup({ from: 'users', localField: 'userId', foreignField: '_id', as: 'users' });\n *\n * @see $lookup https://docs.mongodb.org/manual/reference/operator/aggregation/lookup/#pipe._S_lookup\n * @param {Object} options to $lookup as described in the above link\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.lookup = function(options) {\n  return this.append({$lookup: options});\n};\n\n/**\n * Appends new custom $graphLookup operator(s) to this aggregate pipeline, performing a recursive search on a collection.\n *\n * Note that graphLookup can only consume at most 100MB of memory, and does not allow disk use even if `{ allowDiskUse: true }` is specified.\n *\n * #### Examples:\n *      // Suppose we have a collection of courses, where a document might look like `{ _id: 0, name: 'Calculus', prerequisite: 'Trigonometry'}` and `{ _id: 0, name: 'Trigonometry', prerequisite: 'Algebra' }`\n *      aggregate.graphLookup({ from: 'courses', startWith: '$prerequisite', connectFromField: 'prerequisite', connectToField: 'name', as: 'prerequisites', maxDepth: 3 }) // this will recursively search the 'courses' collection up to 3 prerequisites\n *\n * @see $graphLookup https://docs.mongodb.com/manual/reference/operator/aggregation/graphLookup/#pipe._S_graphLookup\n * @param {Object} options to $graphLookup as described in the above link\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.graphLookup = function(options) {\n  var cloneOptions = {};\n  if (options) {\n    if (!utils.isObject(options)) {\n      throw new TypeError('Invalid graphLookup() argument. Must be an object.');\n    }\n\n    utils.mergeClone(cloneOptions, options);\n    var startWith = cloneOptions.startWith;\n\n    if (startWith && typeof startWith === 'string') {\n      cloneOptions.startWith = cloneOptions.startWith.charAt(0) === '$' ?\n        cloneOptions.startWith :\n        '$' + cloneOptions.startWith;\n    }\n\n  }\n  return this.append({ $graphLookup: cloneOptions });\n};\n\n/**\n * Appepnds new custom $sample operator(s) to this aggregate pipeline.\n *\n * ####Examples:\n *\n *     aggregate.sample(3); // Add a pipeline that picks 3 random documents\n *\n * @see $sample https://docs.mongodb.org/manual/reference/operator/aggregation/sample/#pipe._S_sample\n * @param {Number} size number of random documents to pick\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.sample = function(size) {\n  return this.append({$sample: {size: size}});\n};\n\n/**\n * Appends a new $sort operator to this aggregate pipeline.\n *\n * If an object is passed, values allowed are `asc`, `desc`, `ascending`, `descending`, `1`, and `-1`.\n *\n * If a string is passed, it must be a space delimited list of path names. The sort order of each path is ascending unless the path name is prefixed with `-` which will be treated as descending.\n *\n * ####Examples:\n *\n *     // these are equivalent\n *     aggregate.sort({ field: 'asc', test: -1 });\n *     aggregate.sort('field -test');\n *\n * @see $sort http://docs.mongodb.org/manual/reference/aggregation/sort/\n * @param {Object|String} arg\n * @return {Aggregate} this\n * @api public\n */\n\nAggregate.prototype.sort = function(arg) {\n  // TODO refactor to reuse the query builder logic\n\n  var sort = {};\n\n  if (arg.constructor.name === 'Object') {\n    var desc = ['desc', 'descending', -1];\n    Object.keys(arg).forEach(function(field) {\n      sort[field] = desc.indexOf(arg[field]) === -1 ? 1 : -1;\n    });\n  } else if (arguments.length === 1 && typeof arg === 'string') {\n    arg.split(/\\s+/).forEach(function(field) {\n      if (!field) {\n        return;\n      }\n      var ascend = field[0] === '-' ? -1 : 1;\n      if (ascend === -1) {\n        field = field.substring(1);\n      }\n      sort[field] = ascend;\n    });\n  } else {\n    throw new TypeError('Invalid sort() argument. Must be a string or object.');\n  }\n\n  return this.append({$sort: sort});\n};\n\n/**\n * Sets the readPreference option for the aggregation query.\n *\n * ####Example:\n *\n *     Model.aggregate(..).read('primaryPreferred').exec(callback)\n *\n * @param {String} pref one of the listed preference options or their aliases\n * @param {Array} [tags] optional tags for this query\n * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference\n * @see driver http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences\n */\n\nAggregate.prototype.read = function(pref, tags) {\n  if (!this.options) {\n    this.options = {};\n  }\n  read.call(this, pref, tags);\n  return this;\n};\n\n/**\n * Execute the aggregation with explain\n *\n * ####Example:\n *\n *     Model.aggregate(..).explain(callback)\n *\n * @param {Function} callback\n * @return {Promise}\n */\n\nAggregate.prototype.explain = function(callback) {\n  var _this = this;\n  var Promise = PromiseProvider.get();\n  return new Promise.ES6(function(resolve, reject) {\n    if (!_this._pipeline.length) {\n      var err = new Error('Aggregate has empty pipeline');\n      if (callback) {\n        callback(err);\n      }\n      reject(err);\n      return;\n    }\n\n    prepareDiscriminatorPipeline(_this);\n\n    _this._model\n        .collection\n        .aggregate(_this._pipeline, _this.options || {})\n        .explain(function(error, result) {\n          if (error) {\n            if (callback) {\n              callback(error);\n            }\n            reject(error);\n            return;\n          }\n\n          if (callback) {\n            callback(null, result);\n          }\n          resolve(result);\n        });\n  });\n};\n\n/**\n * Sets the allowDiskUse option for the aggregation query (ignored for < 2.6.0)\n *\n * ####Example:\n *\n *     Model.aggregate(..).allowDiskUse(true).exec(callback)\n *\n * @param {Boolean} value Should tell server it can use hard drive to store data during aggregation.\n * @param {Array} [tags] optional tags for this query\n * @see mongodb http://docs.mongodb.org/manual/reference/command/aggregate/\n */\n\nAggregate.prototype.allowDiskUse = function(value) {\n  if (!this.options) {\n    this.options = {};\n  }\n  this.options.allowDiskUse = value;\n  return this;\n};\n\n/**\n * Sets the cursor option option for the aggregation query (ignored for < 2.6.0).\n * Note the different syntax below: .exec() returns a cursor object, and no callback\n * is necessary.\n *\n * ####Example:\n *\n *     var cursor = Model.aggregate(..).cursor({ batchSize: 1000 }).exec();\n *     cursor.each(function(error, doc) {\n *       // use doc\n *     });\n *\n * @param {Object} options set the cursor batch size\n * @see mongodb http://mongodb.github.io/node-mongodb-native/2.0/api/AggregationCursor.html\n */\n\nAggregate.prototype.cursor = function(options) {\n  if (!this.options) {\n    this.options = {};\n  }\n  this.options.cursor = options || {};\n  return this;\n};\n\n/**\n * Adds a [cursor flag](http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#addCursorFlag)\n *\n * ####Example:\n *\n *     Model.aggregate(..).addCursorFlag('noCursorTimeout', true).exec();\n *\n * @param {String} flag\n * @param {Boolean} value\n * @see mongodb http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#addCursorFlag\n */\n\nAggregate.prototype.addCursorFlag = function(flag, value) {\n  if (!this.options) {\n    this.options = {};\n  }\n  this.options[flag] = value;\n  return this;\n};\n\n/**\n * Adds a collation\n *\n * ####Example:\n *\n *     Model.aggregate(..).collation({ locale: 'en_US', strength: 1 }).exec();\n *\n * @param {Object} collation options\n * @param {Boolean} value\n * @see mongodb http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#aggregate\n */\n\nAggregate.prototype.collation = function(collation) {\n  if (!this.options) {\n    this.options = {};\n  }\n  this.options.collation = collation;\n  return this;\n};\n\n/**\n * Combines multiple aggregation pipelines.\n *\n * ####Example:\n *     Model.aggregate(...)\n *      .facet({\n *        books: [{ groupBy: '$author' }],\n *        price: [{ $bucketAuto: { groupBy: '$price', buckets: 2 } }]\n *      })\n *      .exec();\n *\n *     // Output: { books: [...], price: [{...}, {...}] }\n *\n * @param {Object} facet options\n * @return {Aggregate} this\n * @see $facet https://docs.mongodb.com/v3.4/reference/operator/aggregation/facet/\n * @api public\n */\n\nAggregate.prototype.facet = function(options) {\n  return this.append({$facet: options});\n};\n\n/**\n * Executes the aggregate pipeline on the currently bound Model.\n *\n * ####Example:\n *\n *     aggregate.exec(callback);\n *\n *     // Because a promise is returned, the `callback` is optional.\n *     var promise = aggregate.exec();\n *     promise.then(..);\n *\n * @see Promise #promise_Promise\n * @param {Function} [callback]\n * @return {Promise}\n * @api public\n */\n\nAggregate.prototype.exec = function(callback) {\n  if (!this._model) {\n    throw new Error('Aggregate not bound to any Model');\n  }\n  var _this = this;\n  var Promise = PromiseProvider.get();\n  var options = utils.clone(this.options);\n\n  if (options && options.cursor) {\n    if (options.cursor.async) {\n      delete options.cursor.async;\n      return new Promise.ES6(function(resolve) {\n        if (!_this._model.collection.buffer) {\n          process.nextTick(function() {\n            var cursor = _this._model.collection.\n              aggregate(_this._pipeline, options || {});\n            decorateCursor(cursor);\n            resolve(cursor);\n            callback && callback(null, cursor);\n          });\n          return;\n        }\n        _this._model.collection.emitter.once('queue', function() {\n          var cursor = _this._model.collection.\n            aggregate(_this._pipeline, options || {});\n          decorateCursor(cursor);\n          resolve(cursor);\n          callback && callback(null, cursor);\n        });\n      });\n    }\n    var cursor = this._model.collection.\n      aggregate(this._pipeline, this.options || {});\n    decorateCursor(cursor);\n    return cursor;\n  }\n\n  return new Promise.ES6(function(resolve, reject) {\n    if (!_this._pipeline.length) {\n      var err = new Error('Aggregate has empty pipeline');\n      if (callback) {\n        callback(err);\n      }\n      reject(err);\n      return;\n    }\n\n    prepareDiscriminatorPipeline(_this);\n\n    _this._model\n        .collection\n        .aggregate(_this._pipeline, _this.options || {}, function(error, result) {\n          if (error) {\n            if (callback) {\n              callback(error);\n            }\n            reject(error);\n            return;\n          }\n\n          if (callback) {\n            callback(null, result);\n          }\n          resolve(result);\n        });\n  });\n};\n\n/*!\n * Add `eachAsync()` to aggregation cursors\n */\n\nfunction decorateCursor(cursor) {\n  cursor.eachAsync = function(fn, callback) {\n    var Promise = PromiseProvider.get();\n\n    var handleNextResult = function(doc, callback) {\n      var promise = fn(doc);\n      if (promise && typeof promise.then === 'function') {\n        promise.then(\n          function() { callback(null); },\n          function(error) { callback(error); });\n      } else {\n        callback(null);\n      }\n    };\n\n    var iterate = function(callback) {\n      return cursor.next(function(error, doc) {\n        if (error) {\n          return callback(error);\n        }\n        if (!doc) {\n          return callback(null);\n        }\n        handleNextResult(doc, function(error) {\n          if (error) {\n            return callback(error);\n          }\n          setTimeout(function() {\n            iterate(callback);\n          }, 0);\n        });\n      });\n    };\n\n    return new Promise.ES6(function(resolve, reject) {\n      iterate(function(error) {\n        if (error) {\n          callback && callback(error);\n          return reject(error);\n        }\n        callback && callback(null);\n        return resolve();\n      });\n    });\n  };\n}\n\n/**\n * Provides promise for aggregate.\n *\n * ####Example:\n *\n *     Model.aggregate(..).then(successCallback, errorCallback);\n *\n * @see Promise #promise_Promise\n * @param {Function} [resolve] successCallback\n * @param {Function} [reject]  errorCallback\n * @return {Promise}\n */\nAggregate.prototype.then = function(resolve, reject) {\n  return this.exec().then(resolve, reject);\n};\n\n/*!\n * Helpers\n */\n\n/**\n * Checks whether an object is likely a pipeline operator\n *\n * @param {Object} obj object to check\n * @return {Boolean}\n * @api private\n */\n\nfunction isOperator(obj) {\n  var k;\n\n  if (typeof obj !== 'object') {\n    return false;\n  }\n\n  k = Object.keys(obj);\n\n  return k.length === 1 && k\n          .some(function(key) {\n            return key[0] === '$';\n          });\n}\n\n/*!\n * Adds the appropriate `$match` pipeline step to the top of an aggregate's\n * pipeline, should it's model is a non-root discriminator type. This is\n * analogous to the `prepareDiscriminatorCriteria` function in `lib/query.js`.\n *\n * @param {Aggregate} aggregate Aggregate to prepare\n */\n\nfunction prepareDiscriminatorPipeline(aggregate) {\n  var schema = aggregate._model.schema,\n      discriminatorMapping = schema && schema.discriminatorMapping;\n\n  if (discriminatorMapping && !discriminatorMapping.isRoot) {\n    var originalPipeline = aggregate._pipeline,\n        discriminatorKey = discriminatorMapping.key,\n        discriminatorValue = discriminatorMapping.value;\n\n    // If the first pipeline stage is a match and it doesn't specify a `__t`\n    // key, add the discriminator key to it. This allows for potential\n    // aggregation query optimizations not to be disturbed by this feature.\n    if (originalPipeline[0] && originalPipeline[0].$match && !originalPipeline[0].$match[discriminatorKey]) {\n      originalPipeline[0].$match[discriminatorKey] = discriminatorValue;\n      // `originalPipeline` is a ref, so there's no need for\n      // aggregate._pipeline = originalPipeline\n    } else if (originalPipeline[0] && originalPipeline[0].$geoNear) {\n      originalPipeline[0].$geoNear.query =\n          originalPipeline[0].$geoNear.query || {};\n      originalPipeline[0].$geoNear.query[discriminatorKey] = discriminatorValue;\n    } else {\n      var match = {};\n      match[discriminatorKey] = discriminatorValue;\n      aggregate._pipeline = [{$match: match}].concat(originalPipeline);\n    }\n  }\n}\n\n\n/*!\n * Exports\n */\n\nmodule.exports = Aggregate;\n"]}