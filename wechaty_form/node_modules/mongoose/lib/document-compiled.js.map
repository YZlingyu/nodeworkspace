{"version":3,"sources":["document.js"],"names":[],"mappings":"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","file":"document-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar MongooseError = require('./error');\nvar MixedSchema = require('./schema/mixed');\nvar Schema = require('./schema');\nvar ObjectExpectedError = require('./error/objectExpected');\nvar StrictModeError = require('./error/strict');\nvar ValidatorError = require('./schematype').ValidatorError;\nvar utils = require('./utils');\nvar clone = utils.clone;\nvar isMongooseObject = utils.isMongooseObject;\nvar inspect = require('util').inspect;\nvar ValidationError = MongooseError.ValidationError;\nvar InternalCache = require('./internal');\nvar deepEqual = utils.deepEqual;\nvar hooks = require('hooks-fixed');\nvar PromiseProvider = require('./promise_provider');\nvar DocumentArray;\nvar MongooseArray;\nvar Embedded;\nvar flatten = require('./services/common').flatten;\nvar mpath = require('mpath');\n\n/**\n * Document constructor.\n *\n * @param {Object} obj the values to set\n * @param {Object} [fields] optional object containing the fields which were selected in the query returning this document and any populated paths data\n * @param {Boolean} [skipId] bool, should we auto create an ObjectId _id\n * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter\n * @event `init`: Emitted on a document after it has was retreived from the db and fully hydrated by Mongoose.\n * @event `save`: Emitted when the document is successfully saved\n * @api private\n */\n\nfunction Document(obj, fields, skipId) {\n  this.$__ = new InternalCache;\n  this.$__.emitter = new EventEmitter();\n  this.isNew = true;\n  this.errors = undefined;\n\n  var schema = this.schema;\n\n  if (typeof fields === 'boolean') {\n    this.$__.strictMode = fields;\n    fields = undefined;\n  } else {\n    this.$__.strictMode = schema.options && schema.options.strict;\n    this.$__.selected = fields;\n  }\n\n  var required = schema.requiredPaths(true);\n  for (var i = 0; i < required.length; ++i) {\n    this.$__.activePaths.require(required[i]);\n  }\n\n  this.$__.emitter.setMaxListeners(0);\n  this._doc = this.$__buildDoc(obj, fields, skipId);\n\n  if (obj) {\n    if (obj instanceof Document) {\n      this.isNew = obj.isNew;\n    }\n    // Skip set hooks\n    if (this.$__original_set) {\n      this.$__original_set(obj, undefined, true);\n    } else {\n      this.set(obj, undefined, true);\n    }\n  }\n\n  if (!schema.options.strict && obj) {\n    var _this = this,\n        keys = Object.keys(this._doc);\n\n    keys.forEach(function(key) {\n      if (!(key in schema.tree)) {\n        defineKey(key, null, _this);\n      }\n    });\n  }\n\n  applyQueue(this);\n}\n\n/*!\n * Document exposes the NodeJS event emitter API, so you can use\n * `on`, `once`, etc.\n */\nutils.each(\n    ['on', 'once', 'emit', 'listeners', 'removeListener', 'setMaxListeners',\n      'removeAllListeners', 'addListener'],\n    function(emitterFn) {\n      Document.prototype[emitterFn] = function() {\n        return this.$__.emitter[emitterFn].apply(this.$__.emitter, arguments);\n      };\n    });\n\nDocument.prototype.constructor = Document;\n\n/**\n * The documents schema.\n *\n * @api public\n * @property schema\n */\n\nDocument.prototype.schema;\n\n/**\n * Boolean flag specifying if the document is new.\n *\n * @api public\n * @property isNew\n */\n\nDocument.prototype.isNew;\n\n/**\n * The string version of this documents _id.\n *\n * ####Note:\n *\n * This getter exists on all documents by default. The getter can be disabled by setting the `id` [option](/docs/guide.html#id) of its `Schema` to false at construction time.\n *\n *     new Schema({ name: String }, { id: false });\n *\n * @api public\n * @see Schema options /docs/guide.html#options\n * @property id\n */\n\nDocument.prototype.id;\n\n/**\n * Hash containing current validation errors.\n *\n * @api public\n * @property errors\n */\n\nDocument.prototype.errors;\n\n/**\n * Builds the default doc structure\n *\n * @param {Object} obj\n * @param {Object} [fields]\n * @param {Boolean} [skipId]\n * @return {Object}\n * @api private\n * @method $__buildDoc\n * @memberOf Document\n */\n\nDocument.prototype.$__buildDoc = function(obj, fields, skipId) {\n  var doc = {};\n  var exclude = null;\n  var keys;\n  var ki;\n  var _this = this;\n\n  // determine if this doc is a result of a query with\n  // excluded fields\n\n  if (fields && utils.getFunctionName(fields.constructor) === 'Object') {\n    keys = Object.keys(fields);\n    ki = keys.length;\n\n    if (ki === 1 && keys[0] === '_id') {\n      exclude = !!fields[keys[ki]];\n    } else {\n      while (ki--) {\n        if (keys[ki] !== '_id' &&\n            (!fields[keys[ki]] || typeof fields[keys[ki]] !== 'object')) {\n          exclude = !fields[keys[ki]];\n          break;\n        }\n      }\n    }\n  }\n\n  var paths = Object.keys(this.schema.paths);\n  var plen = paths.length;\n  var ii = 0;\n\n  var hasIncludedChildren = {};\n  if (exclude === false && fields) {\n    keys = Object.keys(fields);\n    for (var j = 0; j < keys.length; ++j) {\n      var parts = keys[j].split('.');\n      var c = [];\n      for (var k = 0; k < parts.length; ++k) {\n        c.push(parts[k]);\n        hasIncludedChildren[c.join('.')] = 1;\n      }\n    }\n  }\n\n  for (; ii < plen; ++ii) {\n    var p = paths[ii];\n\n    if (p === '_id') {\n      if (skipId) {\n        continue;\n      }\n      if (obj && '_id' in obj) {\n        continue;\n      }\n    }\n\n    var type = this.schema.paths[p];\n    var path = p.split('.');\n    var len = path.length;\n    var last = len - 1;\n    var curPath = '';\n    var doc_ = doc;\n    var i = 0;\n    var included = false;\n\n    for (; i < len; ++i) {\n      var piece = path[i],\n          def;\n\n      curPath += (!curPath.length ? '' : '.') + piece;\n\n      // support excluding intermediary levels\n      if (exclude === true) {\n        if (curPath in fields) {\n          break;\n        }\n      } else if (exclude === false && fields && !included) {\n        if (curPath in fields) {\n          included = true;\n        } else if (!hasIncludedChildren[curPath]) {\n          break;\n        }\n      }\n\n      if (i === last) {\n        if (fields && exclude !== null) {\n          if (exclude === true) {\n            // apply defaults to all non-excluded fields\n            if (p in fields) {\n              continue;\n            }\n\n            def = type.getDefault(_this, false);\n            if (typeof def !== 'undefined') {\n              doc_[piece] = def;\n              _this.$__.activePaths.default(p);\n            }\n          } else if (included) {\n            // selected field\n            def = type.getDefault(_this, false);\n            if (typeof def !== 'undefined') {\n              doc_[piece] = def;\n              _this.$__.activePaths.default(p);\n            }\n          }\n        } else {\n          def = type.getDefault(_this, false);\n          if (typeof def !== 'undefined') {\n            doc_[piece] = def;\n            _this.$__.activePaths.default(p);\n          }\n        }\n      } else {\n        doc_ = doc_[piece] || (doc_[piece] = {});\n      }\n    }\n  }\n\n  return doc;\n};\n\n/*!\n * Converts to POJO when you use the document for querying\n */\n\nDocument.prototype.toBSON = function() {\n  return this.toObject({\n    transform: false,\n    virtuals: false,\n    _skipDepopulateTopLevel: true,\n    depopulate: true,\n    flattenDecimals: false\n  });\n};\n\n/**\n * Initializes the document without setters or marking anything modified.\n *\n * Called internally after a document is returned from mongodb.\n *\n * @param {Object} doc document returned by mongo\n * @param {Function} fn callback\n * @api public\n */\n\nDocument.prototype.init = function(doc, opts, fn) {\n  // do not prefix this method with $__ since its\n  // used by public hooks\n\n  if (typeof opts === 'function') {\n    fn = opts;\n    opts = null;\n  }\n\n  this.isNew = false;\n\n  // handle docs with populated paths\n  // If doc._id is not null or undefined\n  if (doc._id !== null && doc._id !== undefined &&\n    opts && opts.populated && opts.populated.length) {\n    var id = String(doc._id);\n    for (var i = 0; i < opts.populated.length; ++i) {\n      var item = opts.populated[i];\n      if (item.isVirtual) {\n        this.populated(item.path, utils.getValue(item.path, doc), item);\n      } else {\n        this.populated(item.path, item._docs[id], item);\n      }\n    }\n  }\n\n  init(this, doc, this._doc);\n  this.$__storeShard();\n\n  this.emit('init', this);\n  this.constructor.emit('init', this);\n\n  if (fn) {\n    fn(null);\n  }\n  return this;\n};\n\n/*!\n * Init helper.\n *\n * @param {Object} self document instance\n * @param {Object} obj raw mongodb doc\n * @param {Object} doc object we are initializing\n * @api private\n */\n\nfunction init(self, obj, doc, prefix) {\n  prefix = prefix || '';\n\n  var keys = Object.keys(obj);\n  var len = keys.length;\n  var schema;\n  var path;\n  var i;\n  var index = 0;\n\n  if (self.schema.options.retainKeyOrder) {\n    while (index < len) {\n      _init(index++);\n    }\n  } else {\n    while (len--) {\n      _init(len);\n    }\n  }\n\n  function _init(index) {\n    i = keys[index];\n    path = prefix + i;\n    schema = self.schema.path(path);\n\n    // Should still work if not a model-level discriminator, but should not be\n    // necessary. This is *only* to catch the case where we queried using the\n    // base model and the discriminated model has a projection\n    if (self.schema.$isRootDiscriminator && !self.isSelected(path)) {\n      return;\n    }\n\n    if (!schema && utils.isObject(obj[i]) &&\n        (!obj[i].constructor || utils.getFunctionName(obj[i].constructor) === 'Object')) {\n      // assume nested object\n      if (!doc[i]) {\n        doc[i] = {};\n      }\n      init(self, obj[i], doc[i], path + '.');\n    } else if (!schema) {\n      doc[i] = obj[i];\n    } else {\n      if (obj[i] === null) {\n        doc[i] = null;\n      } else if (obj[i] !== undefined) {\n        if (schema) {\n          try {\n            doc[i] = schema.cast(obj[i], self, true);\n          } catch (e) {\n            self.invalidate(e.path, new ValidatorError({\n              path: e.path,\n              message: e.message,\n              type: 'cast',\n              value: e.value\n            }));\n          }\n        } else {\n          doc[i] = obj[i];\n        }\n      }\n      // mark as hydrated\n      if (!self.isModified(path)) {\n        self.$__.activePaths.init(path);\n      }\n    }\n  }\n}\n\n/**\n * Stores the current values of the shard keys.\n *\n * ####Note:\n *\n * _Shard key values do not / are not allowed to change._\n *\n * @api private\n * @method $__storeShard\n * @memberOf Document\n */\n\nDocument.prototype.$__storeShard = function() {\n  // backwards compat\n  var key = this.schema.options.shardKey || this.schema.options.shardkey;\n  if (!(key && utils.getFunctionName(key.constructor) === 'Object')) {\n    return;\n  }\n\n  var orig = this.$__.shardval = {},\n      paths = Object.keys(key),\n      len = paths.length,\n      val;\n\n  for (var i = 0; i < len; ++i) {\n    val = this.getValue(paths[i]);\n    if (isMongooseObject(val)) {\n      orig[paths[i]] = val.toObject({depopulate: true, _isNested: true});\n    } else if (val !== null && val !== undefined && val.valueOf &&\n          // Explicitly don't take value of dates\n        (!val.constructor || utils.getFunctionName(val.constructor) !== 'Date')) {\n      orig[paths[i]] = val.valueOf();\n    } else {\n      orig[paths[i]] = val;\n    }\n  }\n};\n\n/*!\n * Set up middleware support\n */\n\nfor (var k in hooks) {\n  if (k === 'pre' || k === 'post') {\n    Document.prototype['$' + k] = Document['$' + k] = hooks[k];\n  } else {\n    Document.prototype[k] = Document[k] = hooks[k];\n  }\n}\n\n/**\n * Sends an update command with this document `_id` as the query selector.\n *\n * ####Example:\n *\n *     weirdCar.update({$inc: {wheels:1}}, { w: 1 }, callback);\n *\n * ####Valid options:\n *\n *  - same as in [Model.update](#model_Model.update)\n *\n * @see Model.update #model_Model.update\n * @param {Object} doc\n * @param {Object} options\n * @param {Function} callback\n * @return {Query}\n * @api public\n */\n\nDocument.prototype.update = function update() {\n  var args = utils.args(arguments);\n  args.unshift({_id: this._id});\n  return this.constructor.update.apply(this.constructor, args);\n};\n\n/**\n * Sets the value of a path, or many paths.\n *\n * ####Example:\n *\n *     // path, value\n *     doc.set(path, value)\n *\n *     // object\n *     doc.set({\n *         path  : value\n *       , path2 : {\n *            path  : value\n *         }\n *     })\n *\n *     // on-the-fly cast to number\n *     doc.set(path, value, Number)\n *\n *     // on-the-fly cast to string\n *     doc.set(path, value, String)\n *\n *     // changing strict mode behavior\n *     doc.set(path, value, { strict: false });\n *\n * @param {String|Object} path path or object of key/vals to set\n * @param {Any} val the value to set\n * @param {Schema|String|Number|Buffer|*} [type] optionally specify a type for \"on-the-fly\" attributes\n * @param {Object} [options] optionally specify options that modify the behavior of the set\n * @api public\n */\n\nDocument.prototype.set = function(path, val, type, options) {\n  if (type && utils.getFunctionName(type.constructor) === 'Object') {\n    options = type;\n    type = undefined;\n  }\n\n  var merge = options && options.merge,\n      adhoc = type && type !== true,\n      constructing = type === true,\n      adhocs;\n\n  var strict = options && 'strict' in options\n      ? options.strict\n      : this.$__.strictMode;\n\n  if (adhoc) {\n    adhocs = this.$__.adhocPaths || (this.$__.adhocPaths = {});\n    adhocs[path] = Schema.interpretAsType(path, type, this.schema.options);\n  }\n\n  if (typeof path !== 'string') {\n    // new Document({ key: val })\n\n    if (path === null || path === void 0) {\n      var _ = path;\n      path = val;\n      val = _;\n    } else {\n      var prefix = val\n          ? val + '.'\n          : '';\n\n      if (path instanceof Document) {\n        if (path.$__isNested) {\n          path = path.toObject();\n        } else {\n          path = path._doc;\n        }\n      }\n\n      var keys = Object.keys(path);\n      var len = keys.length;\n      var i = 0;\n      var pathtype;\n      var key;\n\n      if (len === 0 && !this.schema.options.minimize) {\n        if (val) {\n          this.set(val, {});\n        }\n        return this;\n      }\n\n      if (this.schema.options.retainKeyOrder) {\n        while (i < len) {\n          _handleIndex.call(this, i++);\n        }\n      } else {\n        while (len--) {\n          _handleIndex.call(this, len);\n        }\n      }\n\n      return this;\n    }\n  }\n\n  function _handleIndex(i) {\n    key = keys[i];\n    var pathName = prefix + key;\n    pathtype = this.schema.pathType(pathName);\n\n    if (path[key] !== null\n        && path[key] !== void 0\n          // need to know if plain object - no Buffer, ObjectId, ref, etc\n        && utils.isObject(path[key])\n        && (!path[key].constructor || utils.getFunctionName(path[key].constructor) === 'Object')\n        && pathtype !== 'virtual'\n        && pathtype !== 'real'\n        && !(this.$__path(pathName) instanceof MixedSchema)\n        && !(this.schema.paths[pathName] &&\n        this.schema.paths[pathName].options &&\n        this.schema.paths[pathName].options.ref)) {\n      this.set(path[key], prefix + key, constructing);\n    } else if (strict) {\n      // Don't overwrite defaults with undefined keys (gh-3981)\n      if (constructing && path[key] === void 0 &&\n          this.get(key) !== void 0) {\n        return;\n      }\n\n      if (pathtype === 'real' || pathtype === 'virtual') {\n        // Check for setting single embedded schema to document (gh-3535)\n        var p = path[key];\n        if (this.schema.paths[pathName] &&\n            this.schema.paths[pathName].$isSingleNested &&\n            path[key] instanceof Document) {\n          p = p.toObject({ virtuals: false, transform: false });\n        }\n        this.set(prefix + key, p, constructing);\n      } else if (pathtype === 'nested' && path[key] instanceof Document) {\n        this.set(prefix + key,\n            path[key].toObject({transform: false}), constructing);\n      } else if (strict === 'throw') {\n        if (pathtype === 'nested') {\n          throw new ObjectExpectedError(key, path[key]);\n        } else {\n          throw new StrictModeError(key);\n        }\n      }\n    } else if (path[key] !== void 0) {\n      this.set(prefix + key, path[key], constructing);\n    }\n  }\n\n  var pathType = this.schema.pathType(path);\n  if (pathType === 'nested' && val) {\n    if (utils.isObject(val) &&\n        (!val.constructor || utils.getFunctionName(val.constructor) === 'Object')) {\n      if (!merge) {\n        this.setValue(path, null);\n        cleanModifiedSubpaths(this, path);\n      }\n\n      if (Object.keys(val).length === 0) {\n        this.setValue(path, {});\n        this.markModified(path);\n        cleanModifiedSubpaths(this, path);\n      } else {\n        this.set(val, path, constructing);\n      }\n      return this;\n    }\n    this.invalidate(path, new MongooseError.CastError('Object', val, path));\n    return this;\n  }\n\n  var schema;\n  var parts = path.split('.');\n\n  // gh-4578, if setting a deeply nested path that doesn't exist yet, create it\n  var cur = this._doc;\n  var curPath = '';\n  for (i = 0; i < parts.length - 1; ++i) {\n    cur = cur[parts[i]];\n    curPath += (curPath.length > 0 ? '.' : '') + parts[i];\n    if (!cur) {\n      this.set(curPath, {});\n      cur = this.getValue(curPath);\n    }\n  }\n\n  if (pathType === 'adhocOrUndefined' && strict) {\n    // check for roots that are Mixed types\n    var mixed;\n\n    for (i = 0; i < parts.length; ++i) {\n      var subpath = parts.slice(0, i + 1).join('.');\n      schema = this.schema.path(subpath);\n      if (schema instanceof MixedSchema) {\n        // allow changes to sub paths of mixed types\n        mixed = true;\n        break;\n      }\n\n      // If path is underneath a virtual, bypass everything and just set it.\n      if (i + 1 < parts.length && this.schema.pathType(subpath) === 'virtual') {\n        mpath.set(path, val, this);\n        return this;\n      }\n    }\n\n    if (!mixed) {\n      if (strict === 'throw') {\n        throw new StrictModeError(path);\n      }\n      return this;\n    }\n  } else if (pathType === 'virtual') {\n    schema = this.schema.virtualpath(path);\n    schema.applySetters(val, this);\n    return this;\n  } else {\n    schema = this.$__path(path);\n  }\n\n  var pathToMark;\n\n  // When using the $set operator the path to the field must already exist.\n  // Else mongodb throws: \"LEFT_SUBFIELD only supports Object\"\n\n  if (parts.length <= 1) {\n    pathToMark = path;\n  } else {\n    for (i = 0; i < parts.length; ++i) {\n      subpath = parts.slice(0, i + 1).join('.');\n      if (this.isDirectModified(subpath) // earlier prefixes that are already\n            // marked as dirty have precedence\n          || this.get(subpath) === null) {\n        pathToMark = subpath;\n        break;\n      }\n    }\n\n    if (!pathToMark) {\n      pathToMark = path;\n    }\n  }\n\n  // if this doc is being constructed we should not trigger getters\n  var priorVal = constructing\n      ? undefined\n      : this.getValue(path);\n\n  if (!schema) {\n    this.$__set(pathToMark, path, constructing, parts, schema, val, priorVal);\n    return this;\n  }\n\n  var shouldSet = true;\n  try {\n    // If the user is trying to set a ref path to a document with\n    // the correct model name, treat it as populated\n    var didPopulate = false;\n    if (schema.options &&\n        schema.options.ref &&\n        val instanceof Document &&\n        (schema.options.ref === val.constructor.modelName || schema.options.ref === val.constructor.baseModelName)) {\n      if (this.ownerDocument) {\n        this.ownerDocument().populated(this.$__fullPath(path),\n          val._id, {model: val.constructor});\n      } else {\n        this.populated(path, val._id, {model: val.constructor});\n      }\n      didPopulate = true;\n    }\n\n    var popOpts;\n    if (schema.options &&\n        Array.isArray(schema.options.type) &&\n        schema.options.type.length &&\n        schema.options.type[0].ref &&\n        Array.isArray(val) &&\n        val.length > 0 &&\n        val[0] instanceof Document &&\n        val[0].constructor.modelName &&\n        (schema.options.type[0].ref === val[0].constructor.baseModelName || schema.options.type[0].ref === val[0].constructor.modelName)) {\n      if (this.ownerDocument) {\n        popOpts = { model: val[0].constructor };\n        this.ownerDocument().populated(this.$__fullPath(path),\n          val.map(function(v) { return v._id; }), popOpts);\n      } else {\n        popOpts = { model: val[0].constructor };\n        this.populated(path, val.map(function(v) { return v._id; }), popOpts);\n      }\n      didPopulate = true;\n    }\n    val = schema.applySetters(val, this, false, priorVal);\n\n    if (!didPopulate && this.$__.populated) {\n      delete this.$__.populated[path];\n    }\n\n    this.$markValid(path);\n  } catch (e) {\n    this.invalidate(path,\n      new MongooseError.CastError(schema.instance, val, path, e));\n    shouldSet = false;\n  }\n\n  if (shouldSet) {\n    this.$__set(pathToMark, path, constructing, parts, schema, val, priorVal);\n  }\n\n  if (schema.$isSingleNested && (this.isDirectModified(path) || val == null)) {\n    cleanModifiedSubpaths(this, path);\n  }\n\n  return this;\n};\n\n/*!\n * ignore\n */\n\nfunction cleanModifiedSubpaths(doc, path) {\n  var _modifiedPaths = Object.keys(doc.$__.activePaths.states.modify);\n  var _numModifiedPaths = _modifiedPaths.length;\n  for (var j = 0; j < _numModifiedPaths; ++j) {\n    if (_modifiedPaths[j].indexOf(path + '.') === 0) {\n      delete doc.$__.activePaths.states.modify[_modifiedPaths[j]];\n    }\n  }\n}\n\n/**\n * Determine if we should mark this change as modified.\n *\n * @return {Boolean}\n * @api private\n * @method $__shouldModify\n * @memberOf Document\n */\n\nDocument.prototype.$__shouldModify = function(pathToMark, path, constructing, parts, schema, val, priorVal) {\n  if (this.isNew) {\n    return true;\n  }\n\n  if (undefined === val && !this.isSelected(path)) {\n    // when a path is not selected in a query, its initial\n    // value will be undefined.\n    return true;\n  }\n\n  if (undefined === val && path in this.$__.activePaths.states.default) {\n    // we're just unsetting the default value which was never saved\n    return false;\n  }\n\n  // gh-3992: if setting a populated field to a doc, don't mark modified\n  // if they have the same _id\n  if (this.populated(path) &&\n      val instanceof Document &&\n      deepEqual(val._id, priorVal)) {\n    return false;\n  }\n\n  if (!deepEqual(val, priorVal || this.get(path))) {\n    return true;\n  }\n\n  if (!constructing &&\n      val !== null &&\n      val !== undefined &&\n      path in this.$__.activePaths.states.default &&\n      deepEqual(val, schema.getDefault(this, constructing))) {\n    // a path with a default was $unset on the server\n    // and the user is setting it to the same value again\n    return true;\n  }\n  return false;\n};\n\n/**\n * Handles the actual setting of the value and marking the path modified if appropriate.\n *\n * @api private\n * @method $__set\n * @memberOf Document\n */\n\nDocument.prototype.$__set = function(pathToMark, path, constructing, parts, schema, val, priorVal) {\n  Embedded = Embedded || require('./types/embedded');\n\n  var shouldModify = this.$__shouldModify(pathToMark, path, constructing, parts,\n    schema, val, priorVal);\n  var _this = this;\n\n  if (shouldModify) {\n    this.markModified(pathToMark, val);\n\n    // handle directly setting arrays (gh-1126)\n    MongooseArray || (MongooseArray = require('./types/array'));\n    if (val && val.isMongooseArray) {\n      val._registerAtomic('$set', val);\n\n      // Update embedded document parent references (gh-5189)\n      if (val.isMongooseDocumentArray) {\n        val.forEach(function(item) {\n          item && item.__parentArray && (item.__parentArray = val);\n        });\n      }\n\n      // Small hack for gh-1638: if we're overwriting the entire array, ignore\n      // paths that were modified before the array overwrite\n      this.$__.activePaths.forEach(function(modifiedPath) {\n        if (modifiedPath.indexOf(path + '.') === 0) {\n          _this.$__.activePaths.ignore(modifiedPath);\n        }\n      });\n    }\n  }\n\n  var obj = this._doc;\n  var i = 0;\n  var l = parts.length;\n  var cur = '';\n\n  for (; i < l; i++) {\n    var next = i + 1;\n    var last = next === l;\n    cur += (cur ? '.' + parts[i] : parts[i]);\n\n    if (last) {\n      obj[parts[i]] = val;\n    } else {\n      if (obj[parts[i]] && utils.getFunctionName(obj[parts[i]].constructor) === 'Object') {\n        obj = obj[parts[i]];\n      } else if (obj[parts[i]] && obj[parts[i]] instanceof Embedded) {\n        obj = obj[parts[i]];\n      } else if (obj[parts[i]] && obj[parts[i]].$isSingleNested) {\n        obj = obj[parts[i]];\n      } else if (obj[parts[i]] && Array.isArray(obj[parts[i]])) {\n        obj = obj[parts[i]];\n      } else {\n        obj[parts[i]] = obj[parts[i]] || {};\n        obj = obj[parts[i]];\n      }\n    }\n  }\n};\n\n/**\n * Gets a raw value from a path (no getters)\n *\n * @param {String} path\n * @api private\n */\n\nDocument.prototype.getValue = function(path) {\n  return utils.getValue(path, this._doc);\n};\n\n/**\n * Sets a raw value for a path (no casting, setters, transformations)\n *\n * @param {String} path\n * @param {Object} value\n * @api private\n */\n\nDocument.prototype.setValue = function(path, val) {\n  utils.setValue(path, val, this._doc);\n  return this;\n};\n\n/**\n * Returns the value of a path.\n *\n * ####Example\n *\n *     // path\n *     doc.get('age') // 47\n *\n *     // dynamic casting to a string\n *     doc.get('age', String) // \"47\"\n *\n * @param {String} path\n * @param {Schema|String|Number|Buffer|*} [type] optionally specify a type for on-the-fly attributes\n * @api public\n */\n\nDocument.prototype.get = function(path, type) {\n  var adhoc;\n  if (type) {\n    adhoc = Schema.interpretAsType(path, type, this.schema.options);\n  }\n\n  var schema = this.$__path(path) || this.schema.virtualpath(path),\n      pieces = path.split('.'),\n      obj = this._doc;\n\n  for (var i = 0, l = pieces.length; i < l; i++) {\n    obj = obj === null || obj === void 0\n        ? undefined\n        : obj[pieces[i]];\n  }\n\n  if (adhoc) {\n    obj = adhoc.cast(obj);\n  }\n\n  // Check if this path is populated - don't apply getters if it is,\n  // because otherwise its a nested object. See gh-3357\n  if (schema && !this.populated(path)) {\n    obj = schema.applyGetters(obj, this);\n  }\n\n  return obj;\n};\n\n/**\n * Returns the schematype for the given `path`.\n *\n * @param {String} path\n * @api private\n * @method $__path\n * @memberOf Document\n */\n\nDocument.prototype.$__path = function(path) {\n  var adhocs = this.$__.adhocPaths,\n      adhocType = adhocs && adhocs[path];\n\n  if (adhocType) {\n    return adhocType;\n  }\n  return this.schema.path(path);\n};\n\n/**\n * Marks the path as having pending changes to write to the db.\n *\n * _Very helpful when using [Mixed](./schematypes.html#mixed) types._\n *\n * ####Example:\n *\n *     doc.mixed.type = 'changed';\n *     doc.markModified('mixed.type');\n *     doc.save() // changes to mixed.type are now persisted\n *\n * @param {String} path the path to mark modified\n * @api public\n */\n\nDocument.prototype.markModified = function(path) {\n  this.$__.activePaths.modify(path);\n};\n\n/**\n * Clears the modified state on the specified path.\n *\n * ####Example:\n *\n *     doc.foo = 'bar';\n *     doc.unmarkModified('foo');\n *     doc.save() // changes to foo will not be persisted\n *\n * @param {String} path the path to unmark modified\n * @api public\n */\n\nDocument.prototype.unmarkModified = function(path) {\n  this.$__.activePaths.init(path);\n};\n\n/**\n * Don't run validation on this path or persist changes to this path.\n *\n * ####Example:\n *\n *     doc.foo = null;\n *     doc.$ignore('foo');\n *     doc.save() // changes to foo will not be persisted and validators won't be run\n *\n * @memberOf Document\n * @method $ignore\n * @param {String} path the path to ignore\n * @api public\n */\n\nDocument.prototype.$ignore = function(path) {\n  this.$__.activePaths.ignore(path);\n};\n\n/**\n * Returns the list of paths that have been modified.\n *\n * @return {Array}\n * @api public\n */\n\nDocument.prototype.modifiedPaths = function() {\n  var directModifiedPaths = Object.keys(this.$__.activePaths.states.modify);\n  return directModifiedPaths.reduce(function(list, path) {\n    var parts = path.split('.');\n    return list.concat(parts.reduce(function(chains, part, i) {\n      return chains.concat(parts.slice(0, i).concat(part).join('.'));\n    }, []).filter(function(chain) {\n      return (list.indexOf(chain) === -1);\n    }));\n  }, []);\n};\n\n/**\n * Returns true if this document was modified, else false.\n *\n * If `path` is given, checks if a path or any full path containing `path` as part of its path chain has been modified.\n *\n * ####Example\n *\n *     doc.set('documents.0.title', 'changed');\n *     doc.isModified()                      // true\n *     doc.isModified('documents')           // true\n *     doc.isModified('documents.0.title')   // true\n *     doc.isModified('documents otherProp') // true\n *     doc.isDirectModified('documents')     // false\n *\n * @param {String} [path] optional\n * @return {Boolean}\n * @api public\n */\n\nDocument.prototype.isModified = function(paths) {\n  if (paths) {\n    if (!Array.isArray(paths)) {\n      paths = paths.split(' ');\n    }\n    var modified = this.modifiedPaths();\n    var directModifiedPaths = Object.keys(this.$__.activePaths.states.modify);\n    var isModifiedChild = paths.some(function(path) {\n      return !!~modified.indexOf(path);\n    });\n    return isModifiedChild || paths.some(function(path) {\n      return directModifiedPaths.some(function(mod) {\n        return mod === path || path.indexOf(mod + '.') === 0;\n      });\n    });\n  }\n  return this.$__.activePaths.some('modify');\n};\n\n/**\n * Checks if a path is set to its default.\n *\n * ####Example\n *\n *     MyModel = mongoose.model('test', { name: { type: String, default: 'Val '} });\n *     var m = new MyModel();\n *     m.$isDefault('name'); // true\n *\n * @memberOf Document\n * @method $isDefault\n * @param {String} [path]\n * @return {Boolean}\n * @api public\n */\n\nDocument.prototype.$isDefault = function(path) {\n  return (path in this.$__.activePaths.states.default);\n};\n\n/**\n * Returns true if `path` was directly set and modified, else false.\n *\n * ####Example\n *\n *     doc.set('documents.0.title', 'changed');\n *     doc.isDirectModified('documents.0.title') // true\n *     doc.isDirectModified('documents') // false\n *\n * @param {String} path\n * @return {Boolean}\n * @api public\n */\n\nDocument.prototype.isDirectModified = function(path) {\n  return (path in this.$__.activePaths.states.modify);\n};\n\n/**\n * Checks if `path` was initialized.\n *\n * @param {String} path\n * @return {Boolean}\n * @api public\n */\n\nDocument.prototype.isInit = function(path) {\n  return (path in this.$__.activePaths.states.init);\n};\n\n/**\n * Checks if `path` was selected in the source query which initialized this document.\n *\n * ####Example\n *\n *     Thing.findOne().select('name').exec(function (err, doc) {\n *        doc.isSelected('name') // true\n *        doc.isSelected('age')  // false\n *     })\n *\n * @param {String} path\n * @return {Boolean}\n * @api public\n */\n\nDocument.prototype.isSelected = function isSelected(path) {\n  if (this.$__.selected) {\n    if (path === '_id') {\n      return this.$__.selected._id !== 0;\n    }\n\n    var paths = Object.keys(this.$__.selected);\n    var i = paths.length;\n    var inclusive = null;\n    var cur;\n\n    if (i === 1 && paths[0] === '_id') {\n      // only _id was selected.\n      return this.$__.selected._id === 0;\n    }\n\n    while (i--) {\n      cur = paths[i];\n      if (cur === '_id') {\n        continue;\n      }\n      if (this.$__.selected[cur] && this.$__.selected[cur].$meta) {\n        continue;\n      }\n      inclusive = !!this.$__.selected[cur];\n      break;\n    }\n\n    if (inclusive === null) {\n      return true;\n    }\n\n    if (path in this.$__.selected) {\n      return inclusive;\n    }\n\n    i = paths.length;\n    var pathDot = path + '.';\n\n    while (i--) {\n      cur = paths[i];\n      if (cur === '_id') {\n        continue;\n      }\n\n      if (cur.indexOf(pathDot) === 0) {\n        return inclusive || cur !== pathDot;\n      }\n\n      if (pathDot.indexOf(cur + '.') === 0) {\n        return inclusive;\n      }\n    }\n\n    return !inclusive;\n  }\n\n  return true;\n};\n\n/**\n * Checks if `path` was explicitly selected. If no projection, always returns\n * true.\n *\n * ####Example\n *\n *     Thing.findOne().select('nested.name').exec(function (err, doc) {\n *        doc.isDirectSelected('nested.name') // true\n *        doc.isDirectSelected('nested.otherName') // false\n *        doc.isDirectSelected('nested')  // false\n *     })\n *\n * @param {String} path\n * @return {Boolean}\n * @api public\n */\n\nDocument.prototype.isDirectSelected = function isDirectSelected(path) {\n  if (this.$__.selected) {\n    if (path === '_id') {\n      return this.$__.selected._id !== 0;\n    }\n\n    var paths = Object.keys(this.$__.selected);\n    var i = paths.length;\n    var inclusive = null;\n    var cur;\n\n    if (i === 1 && paths[0] === '_id') {\n      // only _id was selected.\n      return this.$__.selected._id === 0;\n    }\n\n    while (i--) {\n      cur = paths[i];\n      if (cur === '_id') {\n        continue;\n      }\n      if (this.$__.selected[cur] && this.$__.selected[cur].$meta) {\n        continue;\n      }\n      inclusive = !!this.$__.selected[cur];\n      break;\n    }\n\n    if (inclusive === null) {\n      return true;\n    }\n\n    if (path in this.$__.selected) {\n      return inclusive;\n    }\n\n    return !inclusive;\n  }\n\n  return true;\n};\n\n/**\n * Executes registered validation rules for this document.\n *\n * ####Note:\n *\n * This method is called `pre` save and if a validation rule is violated, [save](#model_Model-save) is aborted and the error is returned to your `callback`.\n *\n * ####Example:\n *\n *     doc.validate(function (err) {\n *       if (err) handleError(err);\n *       else // validation passed\n *     });\n *\n * @param {Object} optional options internal options\n * @param {Function} callback optional callback called after validation completes, passing an error if one occurred\n * @return {Promise} Promise\n * @api public\n */\n\nDocument.prototype.validate = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n\n  this.$__validate(callback || function() {});\n};\n\n/*!\n * ignore\n */\n\nfunction _getPathsToValidate(doc) {\n  var i;\n\n  // only validate required fields when necessary\n  var paths = Object.keys(doc.$__.activePaths.states.require).filter(function(path) {\n    if (!doc.isSelected(path) && !doc.isModified(path)) {\n      return false;\n    }\n    var p = doc.schema.path(path);\n    if (typeof p.originalRequiredValue === 'function') {\n      return p.originalRequiredValue.call(doc);\n    }\n    return true;\n  });\n\n  paths = paths.concat(Object.keys(doc.$__.activePaths.states.init));\n  paths = paths.concat(Object.keys(doc.$__.activePaths.states.modify));\n  paths = paths.concat(Object.keys(doc.$__.activePaths.states.default));\n\n  if (!doc.ownerDocument) {\n    var subdocs = doc.$__getAllSubdocs();\n    var subdoc;\n    var len = subdocs.length;\n    for (i = 0; i < len; ++i) {\n      subdoc = subdocs[i];\n      if (subdoc.$isSingleNested &&\n          doc.isModified(subdoc.$basePath) &&\n          !doc.isDirectModified(subdoc.$basePath)) {\n        paths.push(subdoc.$basePath);\n      }\n    }\n  }\n\n  // gh-661: if a whole array is modified, make sure to run validation on all\n  // the children as well\n  for (i = 0; i < paths.length; ++i) {\n    var path = paths[i];\n\n    var _pathType = doc.schema.path(path);\n    if (!_pathType || !_pathType.$isMongooseArray || _pathType.$isMongooseDocumentArray) {\n      continue;\n    }\n\n    var val = doc.getValue(path);\n    if (val) {\n      var numElements = val.length;\n      for (var j = 0; j < numElements; ++j) {\n        paths.push(path + '.' + j);\n      }\n    }\n  }\n\n  var flattenOptions = { skipArrays: true };\n  for (i = 0; i < paths.length; ++i) {\n    var pathToCheck = paths[i];\n    if (doc.schema.nested[pathToCheck]) {\n      var _v = doc.getValue(pathToCheck);\n      if (isMongooseObject(_v)) {\n        _v = _v.toObject({ transform: false });\n      }\n      var flat = flatten(_v, '', flattenOptions);\n      var _subpaths = Object.keys(flat).map(function(p) {\n        return pathToCheck + '.' + p;\n      });\n      paths = paths.concat(_subpaths);\n    }\n  }\n\n  return paths;\n}\n\n/*!\n * ignore\n */\n\nDocument.prototype.$__validate = function(callback) {\n  var _this = this;\n  var _complete = function() {\n    var err = _this.$__.validationError;\n    _this.$__.validationError = undefined;\n    _this.emit('validate', _this);\n    _this.constructor.emit('validate', _this);\n    if (err) {\n      for (var key in err.errors) {\n        // Make sure cast errors persist\n        if (!_this.__parent && err.errors[key] instanceof MongooseError.CastError) {\n          _this.invalidate(key, err.errors[key]);\n        }\n      }\n\n      return err;\n    }\n  };\n\n  // only validate required fields when necessary\n  var paths = _getPathsToValidate(this);\n\n  if (paths.length === 0) {\n    return process.nextTick(function() {\n      var error = _complete();\n      if (error) {\n        return _this.schema.s.hooks.execPost('validate:error', _this, [ _this], { error: error }, function(error) {\n          callback(error);\n        });\n      }\n      callback();\n    });\n  }\n\n  var validating = {},\n      total = 0;\n\n  var complete = function() {\n    var error = _complete();\n    if (error) {\n      return _this.schema.s.hooks.execPost('validate:error', _this, [ _this], { error: error }, function(error) {\n        callback(error);\n      });\n    }\n    callback();\n  };\n\n  var validatePath = function(path) {\n    if (validating[path]) {\n      return;\n    }\n\n    validating[path] = true;\n    total++;\n\n    process.nextTick(function() {\n      var p = _this.schema.path(path);\n      if (!p) {\n        return --total || complete();\n      }\n\n      // If user marked as invalid or there was a cast error, don't validate\n      if (!_this.$isValid(path)) {\n        --total || complete();\n        return;\n      }\n\n      var val = _this.getValue(path);\n      p.doValidate(val, function(err) {\n        if (err) {\n          _this.invalidate(path, err, undefined, true);\n        }\n        --total || complete();\n      }, _this);\n    });\n  };\n\n  var numPaths = paths.length;\n  for (var i = 0; i < numPaths; ++i) {\n    validatePath(paths[i]);\n  }\n};\n\n/**\n * Executes registered validation rules (skipping asynchronous validators) for this document.\n *\n * ####Note:\n *\n * This method is useful if you need synchronous validation.\n *\n * ####Example:\n *\n *     var err = doc.validateSync();\n *     if ( err ){\n *       handleError( err );\n *     } else {\n *       // validation passed\n *     }\n *\n * @param {Array|string} pathsToValidate only validate the given paths\n * @return {MongooseError|undefined} MongooseError if there are errors during validation, or undefined if there is no error.\n * @api public\n */\n\nDocument.prototype.validateSync = function(pathsToValidate) {\n  var _this = this;\n\n  if (typeof pathsToValidate === 'string') {\n    pathsToValidate = pathsToValidate.split(' ');\n  }\n\n  // only validate required fields when necessary\n  var paths = _getPathsToValidate(this);\n\n  if (pathsToValidate && pathsToValidate.length) {\n    var tmp = [];\n    for (var i = 0; i < paths.length; ++i) {\n      if (pathsToValidate.indexOf(paths[i]) !== -1) {\n        tmp.push(paths[i]);\n      }\n    }\n    paths = tmp;\n  }\n\n  var validating = {};\n\n  paths.forEach(function(path) {\n    if (validating[path]) {\n      return;\n    }\n\n    validating[path] = true;\n\n    var p = _this.schema.path(path);\n    if (!p) {\n      return;\n    }\n    if (!_this.$isValid(path)) {\n      return;\n    }\n\n    var val = _this.getValue(path);\n    var err = p.doValidateSync(val, _this);\n    if (err) {\n      _this.invalidate(path, err, undefined, true);\n    }\n  });\n\n  var err = _this.$__.validationError;\n  _this.$__.validationError = undefined;\n  _this.emit('validate', _this);\n  _this.constructor.emit('validate', _this);\n\n  if (err) {\n    for (var key in err.errors) {\n      // Make sure cast errors persist\n      if (err.errors[key] instanceof MongooseError.CastError) {\n        _this.invalidate(key, err.errors[key]);\n      }\n    }\n  }\n\n  return err;\n};\n\n/**\n * Marks a path as invalid, causing validation to fail.\n *\n * The `errorMsg` argument will become the message of the `ValidationError`.\n *\n * The `value` argument (if passed) will be available through the `ValidationError.value` property.\n *\n *     doc.invalidate('size', 'must be less than 20', 14);\n\n *     doc.validate(function (err) {\n *       console.log(err)\n *       // prints\n *       { message: 'Validation failed',\n *         name: 'ValidationError',\n *         errors:\n *          { size:\n *             { message: 'must be less than 20',\n *               name: 'ValidatorError',\n *               path: 'size',\n *               type: 'user defined',\n *               value: 14 } } }\n *     })\n *\n * @param {String} path the field to invalidate\n * @param {String|Error} errorMsg the error which states the reason `path` was invalid\n * @param {Object|String|Number|any} value optional invalid value\n * @param {String} [kind] optional `kind` property for the error\n * @return {ValidationError} the current ValidationError, with all currently invalidated paths\n * @api public\n */\n\nDocument.prototype.invalidate = function(path, err, val, kind) {\n  if (!this.$__.validationError) {\n    this.$__.validationError = new ValidationError(this);\n  }\n\n  if (this.$__.validationError.errors[path]) {\n    return;\n  }\n\n  if (!err || typeof err === 'string') {\n    err = new ValidatorError({\n      path: path,\n      message: err,\n      type: kind || 'user defined',\n      value: val\n    });\n  }\n\n  if (this.$__.validationError === err) {\n    return this.$__.validationError;\n  }\n\n  this.$__.validationError.errors[path] = err;\n  return this.$__.validationError;\n};\n\n/**\n * Marks a path as valid, removing existing validation errors.\n *\n * @param {String} path the field to mark as valid\n * @api private\n * @method $markValid\n * @receiver Document\n */\n\nDocument.prototype.$markValid = function(path) {\n  if (!this.$__.validationError || !this.$__.validationError.errors[path]) {\n    return;\n  }\n\n  delete this.$__.validationError.errors[path];\n  if (Object.keys(this.$__.validationError.errors).length === 0) {\n    this.$__.validationError = null;\n  }\n};\n\n/**\n * Checks if a path is invalid\n *\n * @param {String} path the field to check\n * @method $isValid\n * @api private\n * @receiver Document\n */\n\nDocument.prototype.$isValid = function(path) {\n  return !this.$__.validationError || !this.$__.validationError.errors[path];\n};\n\n/**\n * Resets the internal modified state of this document.\n *\n * @api private\n * @return {Document}\n * @method $__reset\n * @memberOf Document\n */\n\nDocument.prototype.$__reset = function reset() {\n  var _this = this;\n  DocumentArray || (DocumentArray = require('./types/documentarray'));\n\n  this.$__.activePaths\n  .map('init', 'modify', function(i) {\n    return _this.getValue(i);\n  })\n  .filter(function(val) {\n    return val && val instanceof Array && val.isMongooseDocumentArray && val.length;\n  })\n  .forEach(function(array) {\n    var i = array.length;\n    while (i--) {\n      var doc = array[i];\n      if (!doc) {\n        continue;\n      }\n      doc.$__reset();\n    }\n  });\n\n  // clear atomics\n  this.$__dirty().forEach(function(dirt) {\n    var type = dirt.value;\n    if (type && type._atomics) {\n      type._atomics = {};\n    }\n  });\n\n  // Clear 'dirty' cache\n  this.$__.activePaths.clear('modify');\n  this.$__.activePaths.clear('default');\n  this.$__.validationError = undefined;\n  this.errors = undefined;\n  _this = this;\n  this.schema.requiredPaths().forEach(function(path) {\n    _this.$__.activePaths.require(path);\n  });\n\n  return this;\n};\n\n/**\n * Returns this documents dirty paths / vals.\n *\n * @api private\n * @method $__dirty\n * @memberOf Document\n */\n\nDocument.prototype.$__dirty = function() {\n  var _this = this;\n\n  var all = this.$__.activePaths.map('modify', function(path) {\n    return {\n      path: path,\n      value: _this.getValue(path),\n      schema: _this.$__path(path)\n    };\n  });\n\n  // gh-2558: if we had to set a default and the value is not undefined,\n  // we have to save as well\n  all = all.concat(this.$__.activePaths.map('default', function(path) {\n    if (path === '_id' || !_this.getValue(path)) {\n      return;\n    }\n    return {\n      path: path,\n      value: _this.getValue(path),\n      schema: _this.$__path(path)\n    };\n  }));\n\n  // Sort dirty paths in a flat hierarchy.\n  all.sort(function(a, b) {\n    return (a.path < b.path ? -1 : (a.path > b.path ? 1 : 0));\n  });\n\n  // Ignore \"foo.a\" if \"foo\" is dirty already.\n  var minimal = [],\n      lastPath,\n      top;\n\n  all.forEach(function(item) {\n    if (!item) {\n      return;\n    }\n    if (item.path.indexOf(lastPath) !== 0) {\n      lastPath = item.path + '.';\n      minimal.push(item);\n      top = item;\n    } else {\n      // special case for top level MongooseArrays\n      if (top.value && top.value._atomics && top.value.hasAtomics()) {\n        // the `top` array itself and a sub path of `top` are being modified.\n        // the only way to honor all of both modifications is through a $set\n        // of entire array.\n        top.value._atomics = {};\n        top.value._atomics.$set = top.value;\n      }\n    }\n  });\n\n  top = lastPath = null;\n  return minimal;\n};\n\n/*!\n * Compiles schemas.\n */\n\nfunction compile(tree, proto, prefix, options) {\n  var keys = Object.keys(tree),\n      i = keys.length,\n      limb,\n      key;\n\n  while (i--) {\n    key = keys[i];\n    limb = tree[key];\n\n    defineKey(key,\n        ((utils.getFunctionName(limb.constructor) === 'Object'\n        && Object.keys(limb).length)\n        && (!limb[options.typeKey] || (options.typeKey === 'type' && limb.type.type))\n            ? limb\n            : null)\n        , proto\n        , prefix\n        , keys\n        , options);\n  }\n}\n\n// gets descriptors for all properties of `object`\n// makes all properties non-enumerable to match previous behavior to #2211\nfunction getOwnPropertyDescriptors(object) {\n  var result = {};\n\n  Object.getOwnPropertyNames(object).forEach(function(key) {\n    result[key] = Object.getOwnPropertyDescriptor(object, key);\n    result[key].enumerable = true;\n  });\n\n  return result;\n}\n\n/*!\n * Defines the accessor named prop on the incoming prototype.\n */\n\nfunction defineKey(prop, subprops, prototype, prefix, keys, options) {\n  var path = (prefix ? prefix + '.' : '') + prop;\n  prefix = prefix || '';\n\n  if (subprops) {\n    Object.defineProperty(prototype, prop, {\n      enumerable: true,\n      configurable: true,\n      get: function() {\n        var _this = this;\n        if (!this.$__.getters) {\n          this.$__.getters = {};\n        }\n\n        if (!this.$__.getters[path]) {\n          var nested = Object.create(Object.getPrototypeOf(this), getOwnPropertyDescriptors(this));\n\n          // save scope for nested getters/setters\n          if (!prefix) {\n            nested.$__.scope = this;\n          }\n\n          // shadow inherited getters from sub-objects so\n          // thing.nested.nested.nested... doesn't occur (gh-366)\n          var i = 0,\n              len = keys.length;\n\n          for (; i < len; ++i) {\n            // over-write the parents getter without triggering it\n            Object.defineProperty(nested, keys[i], {\n              enumerable: false,    // It doesn't show up.\n              writable: true,       // We can set it later.\n              configurable: true,   // We can Object.defineProperty again.\n              value: undefined      // It shadows its parent.\n            });\n          }\n\n          Object.defineProperty(nested, 'toObject', {\n            enumerable: true,\n            configurable: true,\n            writable: false,\n            value: function() {\n              return clone(_this.get(path), { retainKeyOrder: true });\n            }\n          });\n\n          Object.defineProperty(nested, 'toJSON', {\n            enumerable: true,\n            configurable: true,\n            writable: false,\n            value: function() {\n              return _this.get(path);\n            }\n          });\n\n          Object.defineProperty(nested, '$__isNested', {\n            enumerable: true,\n            configurable: true,\n            writable: false,\n            value: true\n          });\n\n          compile(subprops, nested, path, options);\n          this.$__.getters[path] = nested;\n        }\n\n        return this.$__.getters[path];\n      },\n      set: function(v) {\n        if (v instanceof Document) {\n          v = v.toObject({ transform: false });\n        }\n        return (this.$__.scope || this).set(path, v);\n      }\n    });\n  } else {\n    Object.defineProperty(prototype, prop, {\n      enumerable: true,\n      configurable: true,\n      get: function() {\n        return this.get.call(this.$__.scope || this, path);\n      },\n      set: function(v) {\n        return this.set.call(this.$__.scope || this, path, v);\n      }\n    });\n  }\n}\n\n/**\n * Assigns/compiles `schema` into this documents prototype.\n *\n * @param {Schema} schema\n * @api private\n * @method $__setSchema\n * @memberOf Document\n */\n\nDocument.prototype.$__setSchema = function(schema) {\n  compile(schema.tree, this, undefined, schema.options);\n  this.schema = schema;\n};\n\n\n/**\n * Get active path that were changed and are arrays\n *\n * @api private\n * @method $__getArrayPathsToValidate\n * @memberOf Document\n */\n\nDocument.prototype.$__getArrayPathsToValidate = function() {\n  DocumentArray || (DocumentArray = require('./types/documentarray'));\n\n  // validate all document arrays.\n  return this.$__.activePaths\n  .map('init', 'modify', function(i) {\n    return this.getValue(i);\n  }.bind(this))\n  .filter(function(val) {\n    return val && val instanceof Array && val.isMongooseDocumentArray && val.length;\n  }).reduce(function(seed, array) {\n    return seed.concat(array);\n  }, [])\n  .filter(function(doc) {\n    return doc;\n  });\n};\n\n\n/**\n * Get all subdocs (by bfs)\n *\n * @api private\n * @method $__getAllSubdocs\n * @memberOf Document\n */\n\nDocument.prototype.$__getAllSubdocs = function() {\n  DocumentArray || (DocumentArray = require('./types/documentarray'));\n  Embedded = Embedded || require('./types/embedded');\n\n  function docReducer(seed, path) {\n    var val = this[path];\n\n    if (val instanceof Embedded) {\n      seed.push(val);\n    }\n    if (val && val.$isSingleNested) {\n      seed = Object.keys(val._doc).reduce(docReducer.bind(val._doc), seed);\n      seed.push(val);\n    }\n    if (val && val.isMongooseDocumentArray) {\n      val.forEach(function _docReduce(doc) {\n        if (!doc || !doc._doc) {\n          return;\n        }\n        if (doc instanceof Embedded) {\n          seed.push(doc);\n        }\n        seed = Object.keys(doc._doc).reduce(docReducer.bind(doc._doc), seed);\n      });\n    } else if (val instanceof Document && val.$__isNested) {\n      if (val) {\n        seed = Object.keys(val).reduce(docReducer.bind(val), seed);\n      }\n    }\n    return seed;\n  }\n\n  var subDocs = Object.keys(this._doc).reduce(docReducer.bind(this), []);\n\n  return subDocs;\n};\n\n/*!\n * Runs queued functions\n */\n\nfunction applyQueue(doc) {\n  var q = doc.schema && doc.schema.callQueue;\n  if (!q.length) {\n    return;\n  }\n  var pair;\n\n  for (var i = 0; i < q.length; ++i) {\n    pair = q[i];\n    if (pair[0] !== 'pre' && pair[0] !== 'post' && pair[0] !== 'on') {\n      doc[pair[0]].apply(doc, pair[1]);\n    }\n  }\n}\n\nDocument.prototype.$__handleReject = function handleReject(err) {\n  // emit on the Model if listening\n  if (this.listeners('error').length) {\n    this.emit('error', err);\n  } else if (this.constructor.listeners && this.constructor.listeners('error').length) {\n    this.constructor.emit('error', err);\n  } else if (this.listeners && this.listeners('error').length) {\n    this.emit('error', err);\n  }\n};\n\n/**\n * Internal helper for toObject() and toJSON() that doesn't manipulate options\n *\n * @api private\n * @method $toObject\n * @memberOf Document\n */\n\nDocument.prototype.$toObject = function(options, json) {\n  var defaultOptions = {\n    transform: true,\n    json: json,\n    retainKeyOrder: this.schema.options.retainKeyOrder,\n    flattenDecimals: true\n  };\n\n  // _isNested will only be true if this is not the top level document, we\n  // should never depopulate\n  if (options && options.depopulate && options._isNested && this.$__.wasPopulated) {\n    // populated paths that we set to a document\n    return clone(this._id, options);\n  }\n\n  // When internally saving this document we always pass options,\n  // bypassing the custom schema options.\n  if (!(options && utils.getFunctionName(options.constructor) === 'Object') ||\n      (options && options._useSchemaOptions)) {\n    if (json) {\n      options = this.schema.options.toJSON ?\n        clone(this.schema.options.toJSON) :\n        {};\n      options.json = true;\n      options._useSchemaOptions = true;\n    } else {\n      options = this.schema.options.toObject ?\n        clone(this.schema.options.toObject) :\n        {};\n      options.json = false;\n      options._useSchemaOptions = true;\n    }\n  }\n\n  for (var key in defaultOptions) {\n    if (options[key] === undefined) {\n      options[key] = defaultOptions[key];\n    }\n  }\n\n  ('minimize' in options) || (options.minimize = this.schema.options.minimize);\n\n  // remember the root transform function\n  // to save it from being overwritten by sub-transform functions\n  var originalTransform = options.transform;\n\n  options._isNested = true;\n\n  var ret = clone(this._doc, options) || {};\n\n  if (options.getters) {\n    applyGetters(this, ret, 'paths', options);\n    // applyGetters for paths will add nested empty objects;\n    // if minimize is set, we need to remove them.\n    if (options.minimize) {\n      ret = minimize(ret) || {};\n    }\n  }\n\n  if (options.virtuals || options.getters && options.virtuals !== false) {\n    applyGetters(this, ret, 'virtuals', options);\n  }\n\n  if (options.versionKey === false && this.schema.options.versionKey) {\n    delete ret[this.schema.options.versionKey];\n  }\n\n  var transform = options.transform;\n\n  // In the case where a subdocument has its own transform function, we need to\n  // check and see if the parent has a transform (options.transform) and if the\n  // child schema has a transform (this.schema.options.toObject) In this case,\n  // we need to adjust options.transform to be the child schema's transform and\n  // not the parent schema's\n  if (transform === true ||\n      (this.schema.options.toObject && transform)) {\n    var opts = options.json ? this.schema.options.toJSON : this.schema.options.toObject;\n\n    if (opts) {\n      transform = (typeof options.transform === 'function' ? options.transform : opts.transform);\n    }\n  } else {\n    options.transform = originalTransform;\n  }\n\n  if (typeof transform === 'function') {\n    var xformed = transform(this, ret, options);\n    if (typeof xformed !== 'undefined') {\n      ret = xformed;\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Converts this document into a plain javascript object, ready for storage in MongoDB.\n *\n * Buffers are converted to instances of [mongodb.Binary](http://mongodb.github.com/node-mongodb-native/api-bson-generated/binary.html) for proper storage.\n *\n * ####Options:\n *\n * - `getters` apply all getters (path and virtual getters)\n * - `virtuals` apply virtual getters (can override `getters` option)\n * - `minimize` remove empty objects (defaults to true)\n * - `transform` a transform function to apply to the resulting document before returning\n * - `depopulate` depopulate any populated paths, replacing them with their original refs (defaults to false)\n * - `versionKey` whether to include the version key (defaults to true)\n * - `retainKeyOrder` keep the order of object keys. If this is set to true, `Object.keys(new Doc({ a: 1, b: 2}).toObject())` will always produce `['a', 'b']` (defaults to false)\n *\n * ####Getters/Virtuals\n *\n * Example of only applying path getters\n *\n *     doc.toObject({ getters: true, virtuals: false })\n *\n * Example of only applying virtual getters\n *\n *     doc.toObject({ virtuals: true })\n *\n * Example of applying both path and virtual getters\n *\n *     doc.toObject({ getters: true })\n *\n * To apply these options to every document of your schema by default, set your [schemas](#schema_Schema) `toObject` option to the same argument.\n *\n *     schema.set('toObject', { virtuals: true })\n *\n * ####Transform\n *\n * We may need to perform a transformation of the resulting object based on some criteria, say to remove some sensitive information or return a custom object. In this case we set the optional `transform` function.\n *\n * Transform functions receive three arguments\n *\n *     function (doc, ret, options) {}\n *\n * - `doc` The mongoose document which is being converted\n * - `ret` The plain object representation which has been converted\n * - `options` The options in use (either schema options or the options passed inline)\n *\n * ####Example\n *\n *     // specify the transform schema option\n *     if (!schema.options.toObject) schema.options.toObject = {};\n *     schema.options.toObject.transform = function (doc, ret, options) {\n *       // remove the _id of every document before returning the result\n *       delete ret._id;\n *       return ret;\n *     }\n *\n *     // without the transformation in the schema\n *     doc.toObject(); // { _id: 'anId', name: 'Wreck-it Ralph' }\n *\n *     // with the transformation\n *     doc.toObject(); // { name: 'Wreck-it Ralph' }\n *\n * With transformations we can do a lot more than remove properties. We can even return completely new customized objects:\n *\n *     if (!schema.options.toObject) schema.options.toObject = {};\n *     schema.options.toObject.transform = function (doc, ret, options) {\n *       return { movie: ret.name }\n *     }\n *\n *     // without the transformation in the schema\n *     doc.toObject(); // { _id: 'anId', name: 'Wreck-it Ralph' }\n *\n *     // with the transformation\n *     doc.toObject(); // { movie: 'Wreck-it Ralph' }\n *\n * _Note: if a transform function returns `undefined`, the return value will be ignored._\n *\n * Transformations may also be applied inline, overridding any transform set in the options:\n *\n *     function xform (doc, ret, options) {\n *       return { inline: ret.name, custom: true }\n *     }\n *\n *     // pass the transform as an inline option\n *     doc.toObject({ transform: xform }); // { inline: 'Wreck-it Ralph', custom: true }\n *\n * If you want to skip transformations, use `transform: false`:\n *\n *     if (!schema.options.toObject) schema.options.toObject = {};\n *     schema.options.toObject.hide = '_id';\n *     schema.options.toObject.transform = function (doc, ret, options) {\n *       if (options.hide) {\n *         options.hide.split(' ').forEach(function (prop) {\n *           delete ret[prop];\n *         });\n *       }\n *       return ret;\n *     }\n *\n *     var doc = new Doc({ _id: 'anId', secret: 47, name: 'Wreck-it Ralph' });\n *     doc.toObject();                                        // { secret: 47, name: 'Wreck-it Ralph' }\n *     doc.toObject({ hide: 'secret _id', transform: false });// { _id: 'anId', secret: 47, name: 'Wreck-it Ralph' }\n *     doc.toObject({ hide: 'secret _id', transform: true }); // { name: 'Wreck-it Ralph' }\n *\n * Transforms are applied _only to the document and are not applied to sub-documents_.\n *\n * Transforms, like all of these options, are also available for `toJSON`.\n *\n * See [schema options](/docs/guide.html#toObject) for some more details.\n *\n * _During save, no custom options are applied to the document before being sent to the database._\n *\n * @param {Object} [options]\n * @return {Object} js object\n * @see mongodb.Binary http://mongodb.github.com/node-mongodb-native/api-bson-generated/binary.html\n * @api public\n */\n\nDocument.prototype.toObject = function(options) {\n  return this.$toObject(options);\n};\n\n/*!\n * Minimizes an object, removing undefined values and empty objects\n *\n * @param {Object} object to minimize\n * @return {Object}\n */\n\nfunction minimize(obj) {\n  var keys = Object.keys(obj),\n      i = keys.length,\n      hasKeys,\n      key,\n      val;\n\n  while (i--) {\n    key = keys[i];\n    val = obj[key];\n\n    if (utils.isObject(val) && !Buffer.isBuffer(val)) {\n      obj[key] = minimize(val);\n    }\n\n    if (undefined === obj[key]) {\n      delete obj[key];\n      continue;\n    }\n\n    hasKeys = true;\n  }\n\n  return hasKeys\n      ? obj\n      : undefined;\n}\n\n/*!\n * Applies virtuals properties to `json`.\n *\n * @param {Document} self\n * @param {Object} json\n * @param {String} type either `virtuals` or `paths`\n * @return {Object} `json`\n */\n\nfunction applyGetters(self, json, type, options) {\n  var schema = self.schema;\n  var paths = Object.keys(schema[type]);\n  var i = paths.length;\n  var path;\n  var cur = self._doc;\n  var v;\n\n  if (!cur) {\n    return json;\n  }\n\n  while (i--) {\n    path = paths[i];\n\n    var parts = path.split('.');\n    var plen = parts.length;\n    var last = plen - 1;\n    var branch = json;\n    var part;\n    cur = self._doc;\n\n    for (var ii = 0; ii < plen; ++ii) {\n      part = parts[ii];\n      v = cur[part];\n      if (ii === last) {\n        branch[part] = clone(self.get(path), options);\n      } else if (v == null) {\n        if (part in cur) {\n          branch[part] = v;\n        }\n        break;\n      } else {\n        branch = branch[part] || (branch[part] = {});\n      }\n      cur = v;\n    }\n  }\n\n  return json;\n}\n\n/**\n * The return value of this method is used in calls to JSON.stringify(doc).\n *\n * This method accepts the same options as [Document#toObject](#document_Document-toObject). To apply the options to every document of your schema by default, set your [schemas](#schema_Schema) `toJSON` option to the same argument.\n *\n *     schema.set('toJSON', { virtuals: true })\n *\n * See [schema options](/docs/guide.html#toJSON) for details.\n *\n * @param {Object} options\n * @return {Object}\n * @see Document#toObject #document_Document-toObject\n * @api public\n */\n\nDocument.prototype.toJSON = function(options) {\n  return this.$toObject(options, true);\n};\n\n/**\n * Helper for console.log\n *\n * @api public\n */\n\nDocument.prototype.inspect = function(options) {\n  var isPOJO = options &&\n    utils.getFunctionName(options.constructor) === 'Object';\n  var opts;\n  if (isPOJO) {\n    opts = options;\n    opts.minimize = false;\n    opts.retainKeyOrder = true;\n  }\n  return this.toObject(opts);\n};\n\n/**\n * Helper for console.log\n *\n * @api public\n * @method toString\n */\n\nDocument.prototype.toString = function() {\n  return inspect(this.inspect());\n};\n\n/**\n * Returns true if the Document stores the same data as doc.\n *\n * Documents are considered equal when they have matching `_id`s, unless neither\n * document has an `_id`, in which case this function falls back to using\n * `deepEqual()`.\n *\n * @param {Document} doc a document to compare\n * @return {Boolean}\n * @api public\n */\n\nDocument.prototype.equals = function(doc) {\n  if (!doc) {\n    return false;\n  }\n\n  var tid = this.get('_id');\n  var docid = doc.get ? doc.get('_id') : doc;\n  if (!tid && !docid) {\n    return deepEqual(this, doc);\n  }\n  return tid && tid.equals\n      ? tid.equals(docid)\n      : tid === docid;\n};\n\n/**\n * Populates document references, executing the `callback` when complete.\n * If you want to use promises instead, use this function with\n * [`execPopulate()`](#document_Document-execPopulate)\n *\n * ####Example:\n *\n *     doc\n *     .populate('company')\n *     .populate({\n *       path: 'notes',\n *       match: /airline/,\n *       select: 'text',\n *       model: 'modelName'\n *       options: opts\n *     }, function (err, user) {\n *       assert(doc._id === user._id) // the document itself is passed\n *     })\n *\n *     // summary\n *     doc.populate(path)                   // not executed\n *     doc.populate(options);               // not executed\n *     doc.populate(path, callback)         // executed\n *     doc.populate(options, callback);     // executed\n *     doc.populate(callback);              // executed\n *     doc.populate(options).execPopulate() // executed, returns promise\n *\n *\n * ####NOTE:\n *\n * Population does not occur unless a `callback` is passed *or* you explicitly\n * call `execPopulate()`.\n * Passing the same path a second time will overwrite the previous path options.\n * See [Model.populate()](#model_Model.populate) for explaination of options.\n *\n * @see Model.populate #model_Model.populate\n * @see Document.execPopulate #document_Document-execPopulate\n * @param {String|Object} [path] The path to populate or an options object\n * @param {Function} [callback] When passed, population is invoked\n * @api public\n * @return {Document} this\n */\n\nDocument.prototype.populate = function populate() {\n  if (arguments.length === 0) {\n    return this;\n  }\n\n  var pop = this.$__.populate || (this.$__.populate = {});\n  var args = utils.args(arguments);\n  var fn;\n\n  if (typeof args[args.length - 1] === 'function') {\n    fn = args.pop();\n  }\n\n  // allow `doc.populate(callback)`\n  if (args.length) {\n    // use hash to remove duplicate paths\n    var res = utils.populate.apply(null, args);\n    for (var i = 0; i < res.length; ++i) {\n      pop[res[i].path] = res[i];\n    }\n  }\n\n  if (fn) {\n    var paths = utils.object.vals(pop);\n    this.$__.populate = undefined;\n    paths.__noPromise = true;\n    this.constructor.populate(this, paths, fn);\n  }\n\n  return this;\n};\n\n/**\n * Explicitly executes population and returns a promise. Useful for ES2015\n * integration.\n *\n * ####Example:\n *\n *     var promise = doc.\n *       populate('company').\n *       populate({\n *         path: 'notes',\n *         match: /airline/,\n *         select: 'text',\n *         model: 'modelName'\n *         options: opts\n *       }).\n *       execPopulate();\n *\n *     // summary\n *     doc.execPopulate().then(resolve, reject);\n *\n *\n * @see Document.populate #document_Document-populate\n * @api public\n * @return {Promise} promise that resolves to the document when population is done\n */\n\nDocument.prototype.execPopulate = function() {\n  var Promise = PromiseProvider.get();\n  var _this = this;\n  return new Promise.ES6(function(resolve, reject) {\n    _this.populate(function(error, res) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\n/**\n * Gets _id(s) used during population of the given `path`.\n *\n * ####Example:\n *\n *     Model.findOne().populate('author').exec(function (err, doc) {\n *       console.log(doc.author.name)         // Dr.Seuss\n *       console.log(doc.populated('author')) // '5144cf8050f071d979c118a7'\n *     })\n *\n * If the path was not populated, undefined is returned.\n *\n * @param {String} path\n * @return {Array|ObjectId|Number|Buffer|String|undefined}\n * @api public\n */\n\nDocument.prototype.populated = function(path, val, options) {\n  // val and options are internal\n\n  if (val === null || val === void 0) {\n    if (!this.$__.populated) {\n      return undefined;\n    }\n    var v = this.$__.populated[path];\n    if (v) {\n      return v.value;\n    }\n    return undefined;\n  }\n\n  // internal\n\n  if (val === true) {\n    if (!this.$__.populated) {\n      return undefined;\n    }\n    return this.$__.populated[path];\n  }\n\n  this.$__.populated || (this.$__.populated = {});\n  this.$__.populated[path] = {value: val, options: options};\n  return val;\n};\n\n/**\n * Takes a populated field and returns it to its unpopulated state.\n *\n * ####Example:\n *\n *     Model.findOne().populate('author').exec(function (err, doc) {\n *       console.log(doc.author.name); // Dr.Seuss\n *       console.log(doc.depopulate('author'));\n *       console.log(doc.author); // '5144cf8050f071d979c118a7'\n *     })\n *\n * If the path was not populated, this is a no-op.\n *\n * @param {String} path\n * @return {Document} this\n * @see Document.populate #document_Document-populate\n * @api public\n */\n\nDocument.prototype.depopulate = function(path) {\n  var populatedIds = this.populated(path);\n  if (!populatedIds) {\n    return;\n  }\n  delete this.$__.populated[path];\n  this.set(path, populatedIds);\n  return this;\n};\n\n\n/**\n * Returns the full path to this document.\n *\n * @param {String} [path]\n * @return {String}\n * @api private\n * @method $__fullPath\n * @memberOf Document\n */\n\nDocument.prototype.$__fullPath = function(path) {\n  // overridden in SubDocuments\n  return path || '';\n};\n\n/*!\n * Module exports.\n */\n\nDocument.ValidationError = ValidationError;\nmodule.exports = exports = Document;\n"]}