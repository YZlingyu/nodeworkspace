{"version":3,"sources":["setDefaultsOnInsert.js"],"names":[],"mappings":"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","file":"setDefaultsOnInsert-compiled.js","sourcesContent":["'use strict';\n\nvar modifiedPaths = require('./common').modifiedPaths;\n\n/**\n * Applies defaults to update and findOneAndUpdate operations.\n *\n * @param {Query} query\n * @param {Schema} schema\n * @param {Object} castedDoc\n * @param {Object} options\n * @method setDefaultsOnInsert\n * @api private\n */\n\nmodule.exports = function(query, schema, castedDoc, options) {\n  var keys = Object.keys(castedDoc || {});\n  var updatedKeys = {};\n  var updatedValues = {};\n  var numKeys = keys.length;\n  var hasDollarUpdate = false;\n  var modified = {};\n\n  if (options && options.upsert) {\n    for (var i = 0; i < numKeys; ++i) {\n      if (keys[i].charAt(0) === '$') {\n        modifiedPaths(castedDoc[keys[i]], '', modified);\n        hasDollarUpdate = true;\n      }\n    }\n\n    if (!hasDollarUpdate) {\n      modifiedPaths(castedDoc, '', modified);\n    }\n\n    var paths = Object.keys(query._conditions);\n    var numPaths = keys.length;\n    for (i = 0; i < numPaths; ++i) {\n      var path = paths[i];\n      var condition = query._conditions[path];\n      if (condition && typeof condition === 'object') {\n        var conditionKeys = Object.keys(condition);\n        var numConditionKeys = conditionKeys.length;\n        var hasDollarKey = false;\n        for (var j = 0; j < numConditionKeys; ++j) {\n          if (conditionKeys[j].charAt(0) === '$') {\n            hasDollarKey = true;\n            break;\n          }\n        }\n        if (hasDollarKey) {\n          continue;\n        }\n      }\n      updatedKeys[path] = true;\n      modified[path] = true;\n    }\n\n    if (options.setDefaultsOnInsert) {\n      schema.eachPath(function(path, schemaType) {\n        if (path === '_id') {\n          // Ignore _id for now because it causes bugs in 2.4\n          return;\n        }\n        if (schemaType.$isSingleNested) {\n          // Only handle nested schemas 1-level deep to avoid infinite\n          // recursion re: https://github.com/mongodb-js/mongoose-autopopulate/issues/11\n          schemaType.schema.eachPath(function(_path, _schemaType) {\n            if (path === '_id') {\n              // Ignore _id for now because it causes bugs in 2.4\n              return;\n            }\n\n            var def = _schemaType.getDefault(null, true);\n            if (!isModified(modified, path + '.' + _path) &&\n                typeof def !== 'undefined') {\n              castedDoc = castedDoc || {};\n              castedDoc.$setOnInsert = castedDoc.$setOnInsert || {};\n              castedDoc.$setOnInsert[path + '.' + _path] = def;\n              updatedValues[path + '.' + _path] = def;\n            }\n          });\n        } else {\n          var def = schemaType.getDefault(null, true);\n          if (!isModified(modified, path) && typeof def !== 'undefined') {\n            castedDoc = castedDoc || {};\n            castedDoc.$setOnInsert = castedDoc.$setOnInsert || {};\n            castedDoc.$setOnInsert[path] = def;\n            updatedValues[path] = def;\n          }\n        }\n      });\n    }\n  }\n\n  return castedDoc;\n};\n\nfunction isModified(modified, path) {\n  if (modified[path]) {\n    return true;\n  }\n  var sp = path.split('.');\n  var cur = sp[0];\n  for (var i = 0; i < sp.length; ++i) {\n    if (modified[cur]) {\n      return true;\n    }\n    cur += '.' + sp[i];\n  }\n  return false;\n}\n"]}