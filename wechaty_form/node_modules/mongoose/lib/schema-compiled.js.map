{"version":3,"sources":["schema.js"],"names":[],"mappings":"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","file":"schema-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar readPref = require('./drivers').ReadPreference;\nvar EventEmitter = require('events').EventEmitter;\nvar VirtualType = require('./virtualtype');\nvar utils = require('./utils');\nvar MongooseTypes;\nvar Kareem = require('kareem');\nvar each = require('async/each');\nvar SchemaType = require('./schematype');\n\nvar IS_KAREEM_HOOK = {\n  count: true,\n  find: true,\n  findOne: true,\n  findOneAndUpdate: true,\n  findOneAndRemove: true,\n  insertMany: true,\n  update: true,\n  updateMany: true,\n  updateOne: true\n};\n\n/**\n * Schema constructor.\n *\n * ####Example:\n *\n *     var child = new Schema({ name: String });\n *     var schema = new Schema({ name: String, age: Number, children: [child] });\n *     var Tree = mongoose.model('Tree', schema);\n *\n *     // setting schema options\n *     new Schema({ name: String }, { _id: false, autoIndex: false })\n *\n * ####Options:\n *\n * - [autoIndex](/docs/guide.html#autoIndex): bool - defaults to null (which means use the connection's autoIndex option)\n * - [bufferCommands](/docs/guide.html#bufferCommands): bool - defaults to true\n * - [capped](/docs/guide.html#capped): bool - defaults to false\n * - [collection](/docs/guide.html#collection): string - no default\n * - [emitIndexErrors](/docs/guide.html#emitIndexErrors): bool - defaults to false.\n * - [id](/docs/guide.html#id): bool - defaults to true\n * - [_id](/docs/guide.html#_id): bool - defaults to true\n * - `minimize`: bool - controls [document#toObject](#document_Document-toObject) behavior when called manually - defaults to true\n * - [read](/docs/guide.html#read): string\n * - [safe](/docs/guide.html#safe): bool - defaults to true.\n * - [shardKey](/docs/guide.html#shardKey): bool - defaults to `null`\n * - [strict](/docs/guide.html#strict): bool - defaults to true\n * - [toJSON](/docs/guide.html#toJSON) - object - no default\n * - [toObject](/docs/guide.html#toObject) - object - no default\n * - [typeKey](/docs/guide.html#typeKey) - string - defaults to 'type'\n * - [useNestedStrict](/docs/guide.html#useNestedStrict) - boolean - defaults to false\n * - [validateBeforeSave](/docs/guide.html#validateBeforeSave) - bool - defaults to `true`\n * - [versionKey](/docs/guide.html#versionKey): string - defaults to \"__v\"\n *\n * ####Note:\n *\n * _When nesting schemas, (`children` in the example above), always declare the child schema first before passing it into its parent._\n *\n * @param {Object} definition\n * @param {Object} [options]\n * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter\n * @event `init`: Emitted after the schema is compiled into a `Model`.\n * @api public\n */\n\nfunction Schema(obj, options) {\n  if (!(this instanceof Schema)) {\n    return new Schema(obj, options);\n  }\n\n  this.obj = obj;\n  this.paths = {};\n  this.subpaths = {};\n  this.virtuals = {};\n  this.singleNestedPaths = {};\n  this.nested = {};\n  this.inherits = {};\n  this.callQueue = [];\n  this._indexes = [];\n  this.methods = {};\n  this.statics = {};\n  this.tree = {};\n  this.query = {};\n  this.childSchemas = [];\n  this._plugins = {};\n\n  this.s = {\n    hooks: new Kareem(),\n    kareemHooks: IS_KAREEM_HOOK\n  };\n\n  this.options = this.defaultOptions(options);\n\n  // build paths\n  if (obj) {\n    this.add(obj);\n  }\n\n  // check if _id's value is a subdocument (gh-2276)\n  var _idSubDoc = obj && obj._id && utils.isObject(obj._id);\n\n  // ensure the documents get an auto _id unless disabled\n  var auto_id = !this.paths['_id'] &&\n      (!this.options.noId && this.options._id) && !_idSubDoc;\n\n  if (auto_id) {\n    var _obj = {_id: {auto: true}};\n    _obj._id[this.options.typeKey] = Schema.ObjectId;\n    this.add(_obj);\n  }\n\n  // ensure the documents receive an id getter unless disabled\n  var autoid = !this.paths['id'] &&\n      (!this.options.noVirtualId && this.options.id);\n  if (autoid) {\n    this.virtual('id').get(idGetter);\n  }\n\n  for (var i = 0; i < this._defaultMiddleware.length; ++i) {\n    var m = this._defaultMiddleware[i];\n    this[m.kind](m.hook, !!m.isAsync, m.fn);\n  }\n\n  if (this.options.timestamps) {\n    this.setupTimestamp(this.options.timestamps);\n  }\n}\n\n/*!\n * Returns this documents _id cast to a string.\n */\n\nfunction idGetter() {\n  if (this.$__._id) {\n    return this.$__._id;\n  }\n\n  this.$__._id = this._id == null\n      ? null\n      : String(this._id);\n  return this.$__._id;\n}\n\n/*!\n * Inherit from EventEmitter.\n */\nSchema.prototype = Object.create(EventEmitter.prototype);\nSchema.prototype.constructor = Schema;\nSchema.prototype.instanceOfSchema = true;\n\n/**\n * Default middleware attached to a schema. Cannot be changed.\n *\n * This field is used to make sure discriminators don't get multiple copies of\n * built-in middleware. Declared as a constant because changing this at runtime\n * may lead to instability with Model.prototype.discriminator().\n *\n * @api private\n * @property _defaultMiddleware\n */\nObject.defineProperty(Schema.prototype, '_defaultMiddleware', {\n  configurable: false,\n  enumerable: false,\n  writable: false,\n  value: [\n    {\n      kind: 'pre',\n      hook: 'validate',\n      isAsync: true,\n      fn: function(next, done) {\n        // Hack to ensure that we always wrap validate() in a promise\n        next();\n        done();\n      }\n    },\n    {\n      kind: 'pre',\n      hook: 'remove',\n      isAsync: true,\n      fn: function(next, done) {\n        if (this.ownerDocument) {\n          done();\n          next();\n          return;\n        }\n\n        var subdocs = this.$__getAllSubdocs();\n\n        if (!subdocs.length || this.$__preSavingFromParent) {\n          done();\n          next();\n          return;\n        }\n\n        each(subdocs, function(subdoc, cb) {\n          subdoc.remove({ noop: true }, function(err) {\n            cb(err);\n          });\n        }, function(error) {\n          if (error) {\n            done(error);\n            return;\n          }\n          next();\n          done();\n        });\n      }\n    }\n  ]\n});\n\n\n/**\n * The original object passed to the schema constructor\n *\n * ####Example:\n *\n *     var schema = new Schema({ a: String }).add({ b: String });\n *     schema.obj; // { a: String }\n *\n * @api public\n * @property obj\n */\n\nSchema.prototype.obj;\n\n/**\n * Schema as flat paths\n *\n * ####Example:\n *     {\n *         '_id'        : SchemaType,\n *       , 'nested.key' : SchemaType,\n *     }\n *\n * @api private\n * @property paths\n */\n\nSchema.prototype.paths;\n\n/**\n * Schema as a tree\n *\n * ####Example:\n *     {\n *         '_id'     : ObjectId\n *       , 'nested'  : {\n *             'key' : String\n *         }\n *     }\n *\n * @api private\n * @property tree\n */\n\nSchema.prototype.tree;\n\n/**\n * Returns a deep copy of the schema\n *\n * @return {Schema} the cloned schema\n * @api public\n */\n\nSchema.prototype.clone = function() {\n  var s = new Schema(this.obj, this.options);\n  // Clone the call queue\n  s.callQueue = this.callQueue.map(function(f) { return f; });\n  s.methods = utils.clone(this.methods);\n  s.statics = utils.clone(this.statics);\n  s._plugins = utils.clone(this._plugins);\n  s.s.hooks = this.s.hooks.clone();\n  return s;\n};\n\n/**\n * Returns default options for this schema, merged with `options`.\n *\n * @param {Object} options\n * @return {Object}\n * @api private\n */\n\nSchema.prototype.defaultOptions = function(options) {\n  if (options && options.safe === false) {\n    options.safe = {w: 0};\n  }\n\n  if (options && options.safe && options.safe.w === 0) {\n    // if you turn off safe writes, then versioning goes off as well\n    options.versionKey = false;\n  }\n\n  options = utils.options({\n    strict: true,\n    bufferCommands: true,\n    capped: false, // { size, max, autoIndexId }\n    versionKey: '__v',\n    discriminatorKey: '__t',\n    minimize: true,\n    autoIndex: null,\n    shardKey: null,\n    read: null,\n    validateBeforeSave: true,\n    // the following are only applied at construction time\n    noId: false, // deprecated, use { _id: false }\n    _id: true,\n    noVirtualId: false, // deprecated, use { id: false }\n    id: true,\n    typeKey: 'type',\n    retainKeyOrder: false\n  }, options);\n\n  if (options.read) {\n    options.read = readPref(options.read);\n  }\n\n  return options;\n};\n\n/**\n * Adds key path / schema type pairs to this schema.\n *\n * ####Example:\n *\n *     var ToySchema = new Schema;\n *     ToySchema.add({ name: 'string', color: 'string', price: 'number' });\n *\n * @param {Object} obj\n * @param {String} prefix\n * @api public\n */\n\nSchema.prototype.add = function add(obj, prefix) {\n  prefix = prefix || '';\n  var keys = Object.keys(obj);\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n\n    if (obj[key] == null) {\n      throw new TypeError('Invalid value for schema path `' + prefix + key + '`');\n    }\n\n    if (Array.isArray(obj[key]) && obj[key].length === 1 && obj[key][0] == null) {\n      throw new TypeError('Invalid value for schema Array path `' + prefix + key + '`');\n    }\n\n    if (utils.isObject(obj[key]) &&\n        (!obj[key].constructor || utils.getFunctionName(obj[key].constructor) === 'Object') &&\n        (!obj[key][this.options.typeKey] || (this.options.typeKey === 'type' && obj[key].type.type))) {\n      if (Object.keys(obj[key]).length) {\n        // nested object { last: { name: String }}\n        this.nested[prefix + key] = true;\n        this.add(obj[key], prefix + key + '.');\n      } else {\n        if (prefix) {\n          this.nested[prefix.substr(0, prefix.length - 1)] = true;\n        }\n        this.path(prefix + key, obj[key]); // mixed type\n      }\n    } else {\n      if (prefix) {\n        this.nested[prefix.substr(0, prefix.length - 1)] = true;\n      }\n      this.path(prefix + key, obj[key]);\n    }\n  }\n};\n\n/**\n * Reserved document keys.\n *\n * Keys in this object are names that are rejected in schema declarations b/c they conflict with mongoose functionality. Using these key name will throw an error.\n *\n *      on, emit, _events, db, get, set, init, isNew, errors, schema, options, modelName, collection, _pres, _posts, toObject\n *\n * _NOTE:_ Use of these terms as method names is permitted, but play at your own risk, as they may be existing mongoose document methods you are stomping on.\n *\n *      var schema = new Schema(..);\n *      schema.methods.init = function () {} // potentially breaking\n */\n\nSchema.reserved = Object.create(null);\nvar reserved = Schema.reserved;\n// Core object\nreserved['prototype'] =\n// EventEmitter\nreserved.emit =\nreserved.on =\nreserved.once =\nreserved.listeners =\nreserved.removeListener =\n// document properties and functions\nreserved.collection =\nreserved.db =\nreserved.errors =\nreserved.init =\nreserved.isModified =\nreserved.isNew =\nreserved.get =\nreserved.modelName =\nreserved.save =\nreserved.schema =\nreserved.set =\nreserved.toObject =\nreserved.validate =\nreserved.remove =\n// hooks.js\nreserved._pres = reserved._posts = 1;\n\n/*!\n * Document keys to print warnings for\n */\n\nvar warnings = {};\nwarnings.increment = '`increment` should not be used as a schema path name ' +\n    'unless you have disabled versioning.';\n\n/**\n * Gets/sets schema paths.\n *\n * Sets a path (if arity 2)\n * Gets a path (if arity 1)\n *\n * ####Example\n *\n *     schema.path('name') // returns a SchemaType\n *     schema.path('name', Number) // changes the schemaType of `name` to Number\n *\n * @param {String} path\n * @param {Object} constructor\n * @api public\n */\n\nSchema.prototype.path = function(path, obj) {\n  if (obj === undefined) {\n    if (this.paths[path]) {\n      return this.paths[path];\n    }\n    if (this.subpaths[path]) {\n      return this.subpaths[path];\n    }\n    if (this.singleNestedPaths[path]) {\n      return this.singleNestedPaths[path];\n    }\n\n    // subpaths?\n    return /\\.\\d+\\.?.*$/.test(path)\n        ? getPositionalPath(this, path)\n        : undefined;\n  }\n\n  // some path names conflict with document methods\n  if (reserved[path]) {\n    throw new Error('`' + path + '` may not be used as a schema pathname');\n  }\n\n  if (warnings[path]) {\n    console.log('WARN: ' + warnings[path]);\n  }\n\n  // update the tree\n  var subpaths = path.split(/\\./),\n      last = subpaths.pop(),\n      branch = this.tree;\n\n  subpaths.forEach(function(sub, i) {\n    if (!branch[sub]) {\n      branch[sub] = {};\n    }\n    if (typeof branch[sub] !== 'object') {\n      var msg = 'Cannot set nested path `' + path + '`. '\n          + 'Parent path `'\n          + subpaths.slice(0, i).concat([sub]).join('.')\n          + '` already set to type ' + branch[sub].name\n          + '.';\n      throw new Error(msg);\n    }\n    branch = branch[sub];\n  });\n\n  branch[last] = utils.clone(obj);\n\n  this.paths[path] = Schema.interpretAsType(path, obj, this.options);\n\n  if (this.paths[path].$isSingleNested) {\n    for (var key in this.paths[path].schema.paths) {\n      this.singleNestedPaths[path + '.' + key] =\n          this.paths[path].schema.paths[key];\n    }\n    for (key in this.paths[path].schema.singleNestedPaths) {\n      this.singleNestedPaths[path + '.' + key] =\n          this.paths[path].schema.singleNestedPaths[key];\n    }\n\n    this.childSchemas.push(this.paths[path].schema);\n  } else if (this.paths[path].$isMongooseDocumentArray) {\n    this.childSchemas.push(this.paths[path].schema);\n  }\n  return this;\n};\n\n/**\n * Converts type arguments into Mongoose Types.\n *\n * @param {String} path\n * @param {Object} obj constructor\n * @api private\n */\n\nSchema.interpretAsType = function(path, obj, options) {\n  if (obj.constructor) {\n    var constructorName = utils.getFunctionName(obj.constructor);\n    if (constructorName !== 'Object') {\n      var oldObj = obj;\n      obj = {};\n      obj[options.typeKey] = oldObj;\n    }\n  }\n\n  // Get the type making sure to allow keys named \"type\"\n  // and default to mixed if not specified.\n  // { type: { type: String, default: 'freshcut' } }\n  var type = obj[options.typeKey] && (options.typeKey !== 'type' || !obj.type.type)\n      ? obj[options.typeKey]\n      : {};\n\n  if (utils.getFunctionName(type.constructor) === 'Object' || type === 'mixed') {\n    return new MongooseTypes.Mixed(path, obj);\n  }\n\n  if (Array.isArray(type) || Array === type || type === 'array') {\n    // if it was specified through { type } look for `cast`\n    var cast = (Array === type || type === 'array')\n        ? obj.cast\n        : type[0];\n\n    if (cast && cast.instanceOfSchema) {\n      return new MongooseTypes.DocumentArray(path, cast, obj);\n    }\n\n    if (Array.isArray(cast)) {\n      return new MongooseTypes.Array(path, Schema.interpretAsType(path, cast, options), obj);\n    }\n\n    if (typeof cast === 'string') {\n      cast = MongooseTypes[cast.charAt(0).toUpperCase() + cast.substring(1)];\n    } else if (cast && (!cast[options.typeKey] || (options.typeKey === 'type' && cast.type.type))\n        && utils.getFunctionName(cast.constructor) === 'Object') {\n      if (Object.keys(cast).length) {\n        // The `minimize` and `typeKey` options propagate to child schemas\n        // declared inline, like `{ arr: [{ val: { $type: String } }] }`.\n        // See gh-3560\n        var childSchemaOptions = {minimize: options.minimize};\n        if (options.typeKey) {\n          childSchemaOptions.typeKey = options.typeKey;\n        }\n        //propagate 'strict' option to child schema\n        if (options.hasOwnProperty('strict')) {\n          childSchemaOptions.strict = options.strict;\n        }\n        var childSchema = new Schema(cast, childSchemaOptions);\n        childSchema.$implicitlyCreated = true;\n        return new MongooseTypes.DocumentArray(path, childSchema, obj);\n      } else {\n        // Special case: empty object becomes mixed\n        return new MongooseTypes.Array(path, MongooseTypes.Mixed, obj);\n      }\n    }\n\n    if (cast) {\n      type = cast[options.typeKey] && (options.typeKey !== 'type' || !cast.type.type)\n          ? cast[options.typeKey]\n          : cast;\n\n      name = typeof type === 'string'\n          ? type\n          : type.schemaName || utils.getFunctionName(type);\n\n      if (!(name in MongooseTypes)) {\n        throw new TypeError('Undefined type `' + name + '` at array `' + path +\n          '`');\n      }\n    }\n\n    return new MongooseTypes.Array(path, cast || MongooseTypes.Mixed, obj, options);\n  }\n\n  if (type && type.instanceOfSchema) {\n    return new MongooseTypes.Embedded(type, path, obj);\n  }\n\n  var name;\n  if (Buffer.isBuffer(type)) {\n    name = 'Buffer';\n  } else {\n    name = typeof type === 'string'\n        ? type\n      // If not string, `type` is a function. Outside of IE, function.name\n      // gives you the function name. In IE, you need to compute it\n        : type.schemaName || utils.getFunctionName(type);\n  }\n\n  if (name) {\n    name = name.charAt(0).toUpperCase() + name.substring(1);\n  }\n\n  if (undefined == MongooseTypes[name]) {\n    throw new TypeError('Undefined type `' + name + '` at `' + path +\n        '`\\n  Did you try nesting Schemas? ' +\n        'You can only nest using refs or arrays.');\n  }\n\n  return new MongooseTypes[name](path, obj);\n};\n\n/**\n * Iterates the schemas paths similar to Array#forEach.\n *\n * The callback is passed the pathname and schemaType as arguments on each iteration.\n *\n * @param {Function} fn callback function\n * @return {Schema} this\n * @api public\n */\n\nSchema.prototype.eachPath = function(fn) {\n  var keys = Object.keys(this.paths),\n      len = keys.length;\n\n  for (var i = 0; i < len; ++i) {\n    fn(keys[i], this.paths[keys[i]]);\n  }\n\n  return this;\n};\n\n/**\n * Returns an Array of path strings that are required by this schema.\n *\n * @api public\n * @param {Boolean} invalidate refresh the cache\n * @return {Array}\n */\n\nSchema.prototype.requiredPaths = function requiredPaths(invalidate) {\n  if (this._requiredpaths && !invalidate) {\n    return this._requiredpaths;\n  }\n\n  var paths = Object.keys(this.paths),\n      i = paths.length,\n      ret = [];\n\n  while (i--) {\n    var path = paths[i];\n    if (this.paths[path].isRequired) {\n      ret.push(path);\n    }\n  }\n  this._requiredpaths = ret;\n  return this._requiredpaths;\n};\n\n/**\n * Returns indexes from fields and schema-level indexes (cached).\n *\n * @api private\n * @return {Array}\n */\n\nSchema.prototype.indexedPaths = function indexedPaths() {\n  if (this._indexedpaths) {\n    return this._indexedpaths;\n  }\n  this._indexedpaths = this.indexes();\n  return this._indexedpaths;\n};\n\n/**\n * Returns the pathType of `path` for this schema.\n *\n * Given a path, returns whether it is a real, virtual, nested, or ad-hoc/undefined path.\n *\n * @param {String} path\n * @return {String}\n * @api public\n */\n\nSchema.prototype.pathType = function(path) {\n  if (path in this.paths) {\n    return 'real';\n  }\n  if (path in this.virtuals) {\n    return 'virtual';\n  }\n  if (path in this.nested) {\n    return 'nested';\n  }\n  if (path in this.subpaths) {\n    return 'real';\n  }\n  if (path in this.singleNestedPaths) {\n    return 'real';\n  }\n\n  if (/\\.\\d+\\.|\\.\\d+$/.test(path)) {\n    return getPositionalPathType(this, path);\n  }\n  return 'adhocOrUndefined';\n};\n\n/**\n * Returns true iff this path is a child of a mixed schema.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nSchema.prototype.hasMixedParent = function(path) {\n  var subpaths = path.split(/\\./g);\n  path = '';\n  for (var i = 0; i < subpaths.length; ++i) {\n    path = i > 0 ? path + '.' + subpaths[i] : subpaths[i];\n    if (path in this.paths &&\n        this.paths[path] instanceof MongooseTypes.Mixed) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * Setup updatedAt and createdAt timestamps to documents if enabled\n *\n * @param {Boolean|Object} timestamps timestamps options\n * @api private\n */\nSchema.prototype.setupTimestamp = function(timestamps) {\n  if (timestamps) {\n    var createdAt = timestamps.createdAt || 'createdAt';\n    var updatedAt = timestamps.updatedAt || 'updatedAt';\n    var schemaAdditions = {};\n\n    var parts = createdAt.split('.');\n    var i;\n    var cur = schemaAdditions;\n    for (i = 0; i < parts.length; ++i) {\n      cur[parts[i]] = (i < parts.length - 1 ?\n        cur[parts[i]] || {} :\n        Date);\n    }\n\n    parts = updatedAt.split('.');\n    cur = schemaAdditions;\n    for (i = 0; i < parts.length; ++i) {\n      cur[parts[i]] = (i < parts.length - 1 ?\n        cur[parts[i]] || {} :\n        Date);\n    }\n\n    this.add(schemaAdditions);\n\n    this.pre('save', function(next) {\n      var defaultTimestamp = new Date();\n      var auto_id = this._id && this._id.auto;\n\n      if (!this.get(createdAt) && this.isSelected(createdAt)) {\n        this.set(createdAt, auto_id ? this._id.getTimestamp() : defaultTimestamp);\n      }\n\n      if (this.isNew || this.isModified()) {\n        this.set(updatedAt, this.isNew ? this.get(createdAt) : defaultTimestamp);\n      }\n\n      next();\n    });\n\n    var genUpdates = function(currentUpdate, overwrite) {\n      var now = new Date();\n      var updates = {};\n      if (overwrite) {\n        if (!currentUpdate[updatedAt]) {\n          updates[updatedAt] = now;\n        }\n        if (!currentUpdate[createdAt]) {\n          updates[createdAt] = now;\n        }\n        return updates;\n      }\n      updates = { $set: {} };\n      currentUpdate = currentUpdate || {};\n\n      if (!currentUpdate.$currentDate || !currentUpdate.$currentDate[updatedAt]) {\n        updates.$set[updatedAt] = now;\n      }\n\n      if (currentUpdate[createdAt]) {\n        delete currentUpdate[createdAt];\n      }\n      if (currentUpdate.$set && currentUpdate.$set[createdAt]) {\n        delete currentUpdate.$set[createdAt];\n      }\n\n      updates.$setOnInsert = {};\n      updates.$setOnInsert[createdAt] = now;\n\n      return updates;\n    };\n\n    this.methods.initializeTimestamps = function() {\n      if (!this.get(createdAt)) {\n        this.set(createdAt, new Date());\n      }\n      if (!this.get(updatedAt)) {\n        this.set(updatedAt, new Date());\n      }\n      return this;\n    };\n\n    this.pre('findOneAndUpdate', function(next) {\n      var overwrite = this.options.overwrite;\n      this.findOneAndUpdate({}, genUpdates(this.getUpdate(), overwrite), {\n        overwrite: overwrite\n      });\n      applyTimestampsToChildren(this);\n      next();\n    });\n\n    this.pre('update', function(next) {\n      var overwrite = this.options.overwrite;\n      this.update({}, genUpdates(this.getUpdate(), overwrite), {\n        overwrite: overwrite\n      });\n      applyTimestampsToChildren(this);\n      next();\n    });\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction applyTimestampsToChildren(query) {\n  var now = new Date();\n  var update = query.getUpdate();\n  var keys = Object.keys(update);\n  var key;\n  var schema = query.model.schema;\n  var len;\n  var createdAt;\n  var updatedAt;\n  var timestamps;\n  var path;\n\n  var hasDollarKey = keys.length && keys[0].charAt(0) === '$';\n\n  if (hasDollarKey) {\n    if (update.$push) {\n      for (key in update.$push) {\n        var $path = schema.path(key);\n        if (update.$push[key] &&\n            $path &&\n            $path.$isMongooseDocumentArray &&\n            $path.schema.options.timestamps) {\n          timestamps = $path.schema.options.timestamps;\n          createdAt = timestamps.createdAt || 'createdAt';\n          updatedAt = timestamps.updatedAt || 'updatedAt';\n          if (update.$push[key].$each) {\n            update.$push[key].$each.forEach(function(subdoc) {\n              subdoc[updatedAt] = now;\n              subdoc[createdAt] = now;\n            });\n          } else {\n            update.$push[key][updatedAt] = now;\n            update.$push[key][createdAt] = now;\n          }\n        }\n      }\n    }\n    if (update.$set) {\n      for (key in update.$set) {\n        path = schema.path(key);\n        if (!path) {\n          continue;\n        }\n        if (Array.isArray(update.$set[key]) && path.$isMongooseDocumentArray) {\n          len = update.$set[key].length;\n          timestamps = schema.path(key).schema.options.timestamps;\n          if (timestamps) {\n            createdAt = timestamps.createdAt || 'createdAt';\n            updatedAt = timestamps.updatedAt || 'updatedAt';\n            for (var i = 0; i < len; ++i) {\n              update.$set[key][i][updatedAt] = now;\n              update.$set[key][i][createdAt] = now;\n            }\n          }\n        } else if (update.$set[key] && path.$isSingleNested) {\n          timestamps = schema.path(key).schema.options.timestamps;\n          if (timestamps) {\n            createdAt = timestamps.createdAt || 'createdAt';\n            updatedAt = timestamps.updatedAt || 'updatedAt';\n            update.$set[key][updatedAt] = now;\n            update.$set[key][createdAt] = now;\n          }\n        }\n      }\n    }\n  }\n}\n\n/*!\n * ignore\n */\n\nfunction getPositionalPathType(self, path) {\n  var subpaths = path.split(/\\.(\\d+)\\.|\\.(\\d+)$/).filter(Boolean);\n  if (subpaths.length < 2) {\n    return self.paths[subpaths[0]];\n  }\n\n  var val = self.path(subpaths[0]);\n  var isNested = false;\n  if (!val) {\n    return val;\n  }\n\n  var last = subpaths.length - 1,\n      subpath,\n      i = 1;\n\n  for (; i < subpaths.length; ++i) {\n    isNested = false;\n    subpath = subpaths[i];\n\n    if (i === last && val && !/\\D/.test(subpath)) {\n      if (val.$isMongooseDocumentArray) {\n        var oldVal = val;\n        val = new SchemaType(subpath);\n        val.cast = function(value, doc, init) {\n          return oldVal.cast(value, doc, init)[0];\n        };\n        val.caster = oldVal.caster;\n        val.schema = oldVal.schema;\n      } else if (val instanceof MongooseTypes.Array) {\n        // StringSchema, NumberSchema, etc\n        val = val.caster;\n      } else {\n        val = undefined;\n      }\n      break;\n    }\n\n    // ignore if its just a position segment: path.0.subpath\n    if (!/\\D/.test(subpath)) {\n      continue;\n    }\n\n    if (!(val && val.schema)) {\n      val = undefined;\n      break;\n    }\n\n    var type = val.schema.pathType(subpath);\n    isNested = (type === 'nested');\n    val = val.schema.path(subpath);\n  }\n\n  self.subpaths[path] = val;\n  if (val) {\n    return 'real';\n  }\n  if (isNested) {\n    return 'nested';\n  }\n  return 'adhocOrUndefined';\n}\n\n\n/*!\n * ignore\n */\n\nfunction getPositionalPath(self, path) {\n  getPositionalPathType(self, path);\n  return self.subpaths[path];\n}\n\n/**\n * Adds a method call to the queue.\n *\n * @param {String} name name of the document method to call later\n * @param {Array} args arguments to pass to the method\n * @api public\n */\n\nSchema.prototype.queue = function(name, args) {\n  this.callQueue.push([name, args]);\n  return this;\n};\n\n/**\n * Defines a pre hook for the document.\n *\n * ####Example\n *\n *     var toySchema = new Schema(..);\n *\n *     toySchema.pre('save', function (next) {\n *       if (!this.created) this.created = new Date;\n *       next();\n *     })\n *\n *     toySchema.pre('validate', function (next) {\n *       if (this.name !== 'Woody') this.name = 'Woody';\n *       next();\n *     })\n *\n * @param {String} method\n * @param {Function} callback\n * @see hooks.js https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3\n * @api public\n */\n\nSchema.prototype.pre = function() {\n  var name = arguments[0];\n  if (IS_KAREEM_HOOK[name]) {\n    this.s.hooks.pre.apply(this.s.hooks, arguments);\n    return this;\n  }\n  return this.queue('pre', arguments);\n};\n\n/**\n * Defines a post hook for the document\n *\n *     var schema = new Schema(..);\n *     schema.post('save', function (doc) {\n *       console.log('this fired after a document was saved');\n *     });\n *\n *     shema.post('find', function(docs) {\n *       console.log('this fired after you run a find query');\n *     });\n *\n *     var Model = mongoose.model('Model', schema);\n *\n *     var m = new Model(..);\n *     m.save(function(err) {\n *       console.log('this fires after the `post` hook');\n *     });\n *\n *     m.find(function(err, docs) {\n *       console.log('this fires after the post find hook');\n *     });\n *\n * @param {String} method name of the method to hook\n * @param {Function} fn callback\n * @see middleware http://mongoosejs.com/docs/middleware.html\n * @see hooks.js https://www.npmjs.com/package/hooks-fixed\n * @see kareem http://npmjs.org/package/kareem\n * @api public\n */\n\nSchema.prototype.post = function(method, fn) {\n  if (IS_KAREEM_HOOK[method]) {\n    this.s.hooks.post.apply(this.s.hooks, arguments);\n    return this;\n  }\n  // assuming that all callbacks with arity < 2 are synchronous post hooks\n  if (fn.length < 2) {\n    return this.queue('on', [arguments[0], function(doc) {\n      return fn.call(doc, doc);\n    }]);\n  }\n\n  if (fn.length === 3) {\n    this.s.hooks.post(method + ':error', fn);\n    return this;\n  }\n\n  return this.queue('post', [arguments[0], function(next) {\n    // wrap original function so that the callback goes last,\n    // for compatibility with old code that is using synchronous post hooks\n    var _this = this;\n    var args = Array.prototype.slice.call(arguments, 1);\n    fn.call(this, this, function(err) {\n      return next.apply(_this, [err].concat(args));\n    });\n  }]);\n};\n\n/**\n * Registers a plugin for this schema.\n *\n * @param {Function} plugin callback\n * @param {Object} [opts]\n * @see plugins\n * @api public\n */\n\nSchema.prototype.plugin = function(fn, opts) {\n  if (typeof fn !== 'function') {\n    throw new Error('First param to `schema.plugin()` must be a function, ' +\n      'got \"' + (typeof fn) + '\"');\n  }\n  fn(this, opts);\n  return this;\n};\n\n/**\n * Adds an instance method to documents constructed from Models compiled from this schema.\n *\n * ####Example\n *\n *     var schema = kittySchema = new Schema(..);\n *\n *     schema.method('meow', function () {\n *       console.log('meeeeeoooooooooooow');\n *     })\n *\n *     var Kitty = mongoose.model('Kitty', schema);\n *\n *     var fizz = new Kitty;\n *     fizz.meow(); // meeeeeooooooooooooow\n *\n * If a hash of name/fn pairs is passed as the only argument, each name/fn pair will be added as methods.\n *\n *     schema.method({\n *         purr: function () {}\n *       , scratch: function () {}\n *     });\n *\n *     // later\n *     fizz.purr();\n *     fizz.scratch();\n *\n * @param {String|Object} method name\n * @param {Function} [fn]\n * @api public\n */\n\nSchema.prototype.method = function(name, fn) {\n  if (typeof name !== 'string') {\n    for (var i in name) {\n      this.methods[i] = name[i];\n    }\n  } else {\n    this.methods[name] = fn;\n  }\n  return this;\n};\n\n/**\n * Adds static \"class\" methods to Models compiled from this schema.\n *\n * ####Example\n *\n *     var schema = new Schema(..);\n *     schema.static('findByName', function (name, callback) {\n *       return this.find({ name: name }, callback);\n *     });\n *\n *     var Drink = mongoose.model('Drink', schema);\n *     Drink.findByName('sanpellegrino', function (err, drinks) {\n *       //\n *     });\n *\n * If a hash of name/fn pairs is passed as the only argument, each name/fn pair will be added as statics.\n *\n * @param {String|Object} name\n * @param {Function} [fn]\n * @api public\n */\n\nSchema.prototype.static = function(name, fn) {\n  if (typeof name !== 'string') {\n    for (var i in name) {\n      this.statics[i] = name[i];\n    }\n  } else {\n    this.statics[name] = fn;\n  }\n  return this;\n};\n\n/**\n * Defines an index (most likely compound) for this schema.\n *\n * ####Example\n *\n *     schema.index({ first: 1, last: -1 })\n *\n * @param {Object} fields\n * @param {Object} [options] Options to pass to [MongoDB driver's `createIndex()` function](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#createIndex)\n * @param {String} [options.expires=null] Mongoose-specific syntactic sugar, uses [ms](https://www.npmjs.com/package/ms) to convert `expires` option into seconds for the `expireAfterSeconds` in the above link.\n * @api public\n */\n\nSchema.prototype.index = function(fields, options) {\n  options || (options = {});\n\n  if (options.expires) {\n    utils.expires(options);\n  }\n\n  this._indexes.push([fields, options]);\n  return this;\n};\n\n/**\n * Sets/gets a schema option.\n *\n * ####Example\n *\n *     schema.set('strict'); // 'true' by default\n *     schema.set('strict', false); // Sets 'strict' to false\n *     schema.set('strict'); // 'false'\n *\n * @param {String} key option name\n * @param {Object} [value] if not passed, the current option value is returned\n * @see Schema ./\n * @api public\n */\n\nSchema.prototype.set = function(key, value, _tags) {\n  if (arguments.length === 1) {\n    return this.options[key];\n  }\n\n  switch (key) {\n    case 'read':\n      this.options[key] = readPref(value, _tags);\n      break;\n    case 'safe':\n      this.options[key] = value === false\n          ? {w: 0}\n          : value;\n      break;\n    case 'timestamps':\n      this.setupTimestamp(value);\n      this.options[key] = value;\n      break;\n    default:\n      this.options[key] = value;\n  }\n\n  return this;\n};\n\n/**\n * Gets a schema option.\n *\n * @param {String} key option name\n * @api public\n */\n\nSchema.prototype.get = function(key) {\n  return this.options[key];\n};\n\n/**\n * The allowed index types\n *\n * @static indexTypes\n * @receiver Schema\n * @api public\n */\n\nvar indexTypes = '2d 2dsphere hashed text'.split(' ');\n\nObject.defineProperty(Schema, 'indexTypes', {\n  get: function() {\n    return indexTypes;\n  },\n  set: function() {\n    throw new Error('Cannot overwrite Schema.indexTypes');\n  }\n});\n\n/**\n * Compiles indexes from fields and schema-level indexes\n *\n * @api public\n */\n\nSchema.prototype.indexes = function() {\n  'use strict';\n\n  var indexes = [];\n  var schemaStack = [];\n\n  var collectIndexes = function(schema, prefix) {\n    // Ignore infinitely nested schemas, if we've already seen this schema\n    // along this path there must be a cycle\n    if (schemaStack.indexOf(schema) !== -1) {\n      return;\n    }\n    schemaStack.push(schema);\n\n    prefix = prefix || '';\n    var key, path, index, field, isObject, options, type;\n    var keys = Object.keys(schema.paths);\n\n    for (var i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      path = schema.paths[key];\n\n      if ((path instanceof MongooseTypes.DocumentArray) || path.$isSingleNested) {\n        collectIndexes(path.schema, prefix + key + '.');\n      } else {\n        index = path._index;\n\n        if (index !== false && index !== null && index !== undefined) {\n          field = {};\n          isObject = utils.isObject(index);\n          options = isObject ? index : {};\n          type = typeof index === 'string' ? index :\n              isObject ? index.type :\n                  false;\n\n          if (type && ~Schema.indexTypes.indexOf(type)) {\n            field[prefix + key] = type;\n          } else if (options.text) {\n            field[prefix + key] = 'text';\n            delete options.text;\n          } else {\n            field[prefix + key] = 1;\n          }\n\n          delete options.type;\n          if (!('background' in options)) {\n            options.background = true;\n          }\n\n          indexes.push([field, options]);\n        }\n      }\n    }\n\n    schemaStack.pop();\n\n    if (prefix) {\n      fixSubIndexPaths(schema, prefix);\n    } else {\n      schema._indexes.forEach(function(index) {\n        if (!('background' in index[1])) {\n          index[1].background = true;\n        }\n      });\n      indexes = indexes.concat(schema._indexes);\n    }\n  };\n\n  collectIndexes(this);\n  return indexes;\n\n  /*!\n   * Checks for indexes added to subdocs using Schema.index().\n   * These indexes need their paths prefixed properly.\n   *\n   * schema._indexes = [ [indexObj, options], [indexObj, options] ..]\n   */\n\n  function fixSubIndexPaths(schema, prefix) {\n    var subindexes = schema._indexes,\n        len = subindexes.length,\n        indexObj,\n        newindex,\n        klen,\n        keys,\n        key,\n        i = 0,\n        j;\n\n    for (i = 0; i < len; ++i) {\n      indexObj = subindexes[i][0];\n      keys = Object.keys(indexObj);\n      klen = keys.length;\n      newindex = {};\n\n      // use forward iteration, order matters\n      for (j = 0; j < klen; ++j) {\n        key = keys[j];\n        newindex[prefix + key] = indexObj[key];\n      }\n\n      indexes.push([newindex, subindexes[i][1]]);\n    }\n  }\n};\n\n/**\n * Creates a virtual type with the given name.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {VirtualType}\n */\n\nSchema.prototype.virtual = function(name, options) {\n  if (options && options.ref) {\n    if (!options.localField) {\n      throw new Error('Reference virtuals require `localField` option');\n    }\n\n    if (!options.foreignField) {\n      throw new Error('Reference virtuals require `foreignField` option');\n    }\n\n    this.pre('init', function(next, obj) {\n      if (name in obj) {\n        if (!this.$$populatedVirtuals) {\n          this.$$populatedVirtuals = {};\n        }\n\n        if (options.justOne) {\n          this.$$populatedVirtuals[name] = Array.isArray(obj[name]) ?\n            obj[name][0] :\n            obj[name];\n        } else {\n          this.$$populatedVirtuals[name] = Array.isArray(obj[name]) ?\n            obj[name] :\n            obj[name] == null ? [] : [obj[name]];\n        }\n\n        delete obj[name];\n      }\n      if (this.ownerDocument) {\n        next();\n        return this;\n      } else {\n        next();\n      }\n    });\n\n    var virtual = this.virtual(name);\n    virtual.options = options;\n    return virtual.\n      get(function() {\n        if (!this.$$populatedVirtuals) {\n          this.$$populatedVirtuals = {};\n        }\n        if (name in this.$$populatedVirtuals) {\n          return this.$$populatedVirtuals[name];\n        }\n        return null;\n      }).\n      set(function(v) {\n        if (!this.$$populatedVirtuals) {\n          this.$$populatedVirtuals = {};\n        }\n        this.$$populatedVirtuals[name] = v;\n      });\n  }\n\n  var virtuals = this.virtuals;\n  var parts = name.split('.');\n\n  if (this.pathType(name) === 'real') {\n    throw new Error('Virtual path \"' + name + '\"' +\n      ' conflicts with a real path in the schema');\n  }\n\n  virtuals[name] = parts.reduce(function(mem, part, i) {\n    mem[part] || (mem[part] = (i === parts.length - 1)\n        ? new VirtualType(options, name)\n        : {});\n    return mem[part];\n  }, this.tree);\n\n  return virtuals[name];\n};\n\n/*!\n * ignore\n */\n\nSchema.prototype._getVirtual = function(name) {\n  return _getVirtual(this, name);\n};\n\n/*!\n * ignore\n */\n\nfunction _getVirtual(schema, name) {\n  if (schema.virtuals[name]) {\n    return schema.virtuals[name];\n  }\n  var parts = name.split('.');\n  var cur = '';\n  var nestedSchemaPath = '';\n  for (var i = 0; i < parts.length; ++i) {\n    cur += (cur.length > 0 ? '.' : '') + parts[i];\n    if (schema.virtuals[cur]) {\n      if (i === parts.length - 1) {\n        schema.virtuals[cur].$nestedSchemaPath = nestedSchemaPath;\n        return schema.virtuals[cur];\n      }\n      continue;\n    } else if (schema.paths[cur] && schema.paths[cur].schema) {\n      schema = schema.paths[cur].schema;\n      nestedSchemaPath += (nestedSchemaPath.length > 0 ? '.' : '') + cur;\n      cur = '';\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns the virtual type with the given `name`.\n *\n * @param {String} name\n * @return {VirtualType}\n */\n\nSchema.prototype.virtualpath = function(name) {\n  return this.virtuals[name];\n};\n\n/**\n * Removes the given `path` (or [`paths`]).\n *\n * @param {String|Array} path\n *\n * @api public\n */\nSchema.prototype.remove = function(path) {\n  if (typeof path === 'string') {\n    path = [path];\n  }\n  if (Array.isArray(path)) {\n    path.forEach(function(name) {\n      if (this.path(name)) {\n        delete this.paths[name];\n\n        var pieces = name.split('.');\n        var last = pieces.pop();\n        var branch = this.tree;\n        for (var i = 0; i < pieces.length; ++i) {\n          branch = branch[pieces[i]];\n        }\n        delete branch[last];\n      }\n    }, this);\n  }\n};\n\n/**\n * Loads an ES6 class into a schema. Maps setters + getters, static methods, and instance methods to schema virtuals, statics, and methods.\n *\n * @param {Function} model\n */\nSchema.prototype.loadClass = function(model, virtualsOnly) {\n  if (model === Object.prototype ||\n      model === Function.prototype ||\n      model.prototype.hasOwnProperty('$isMongooseModelPrototype')) {\n    return this;\n  }\n\n  // Add static methods\n  if (!virtualsOnly) {\n    Object.getOwnPropertyNames(model).forEach(function(name) {\n      if (name.match(/^(length|name|prototype)$/)) {\n        return;\n      }\n      var method = Object.getOwnPropertyDescriptor(model, name);\n      if (typeof method.value === 'function') this.static(name, method.value);\n    }, this);\n  }\n\n  // Add methods and virtuals\n  Object.getOwnPropertyNames(model.prototype).forEach(function(name) {\n    if (name.match(/^(constructor)$/)) {\n      return;\n    }\n    var method = Object.getOwnPropertyDescriptor(model.prototype, name);\n    if (!virtualsOnly) {\n      if (typeof method.value === 'function') {\n        this.method(name, method.value);\n      }\n    }\n    if (typeof method.get === 'function') {\n      this.virtual(name).get(method.get);\n    }\n    if (typeof method.set === 'function') {\n      this.virtual(name).set(method.set);\n    }\n  }, this);\n\n  return (this.loadClass(Object.getPrototypeOf(model)));\n};\n\n/*!\n * ignore\n */\n\nSchema.prototype._getSchema = function(path) {\n  var _this = this;\n  var pathschema = _this.path(path);\n  var resultPath = [];\n\n  if (pathschema) {\n    pathschema.$fullPath = path;\n    return pathschema;\n  }\n\n  function search(parts, schema) {\n    var p = parts.length + 1,\n        foundschema,\n        trypath;\n\n    while (p--) {\n      trypath = parts.slice(0, p).join('.');\n      foundschema = schema.path(trypath);\n      if (foundschema) {\n        resultPath.push(trypath);\n\n        if (foundschema.caster) {\n          // array of Mixed?\n          if (foundschema.caster instanceof MongooseTypes.Mixed) {\n            foundschema.caster.$fullPath = resultPath.join('.');\n            return foundschema.caster;\n          }\n\n          // Now that we found the array, we need to check if there\n          // are remaining document paths to look up for casting.\n          // Also we need to handle array.$.path since schema.path\n          // doesn't work for that.\n          // If there is no foundschema.schema we are dealing with\n          // a path like array.$\n          if (p !== parts.length && foundschema.schema) {\n            var ret;\n            if (parts[p] === '$') {\n              if (p + 1 === parts.length) {\n                // comments.$\n                return foundschema;\n              }\n              // comments.$.comments.$.title\n              ret = search(parts.slice(p + 1), foundschema.schema);\n              if (ret) {\n                ret.$isUnderneathDocArray = ret.$isUnderneathDocArray ||\n                  !foundschema.schema.$isSingleNested;\n              }\n              return ret;\n            }\n            // this is the last path of the selector\n            ret = search(parts.slice(p), foundschema.schema);\n            if (ret) {\n              ret.$isUnderneathDocArray = ret.$isUnderneathDocArray ||\n                !foundschema.schema.$isSingleNested;\n            }\n            return ret;\n          }\n        }\n\n        foundschema.$fullPath = resultPath.join('.');\n\n        return foundschema;\n      }\n    }\n  }\n\n  // look for arrays\n  return search(path.split('.'), _this);\n};\n\n/*!\n * ignore\n */\n\nSchema.prototype._getPathType = function(path) {\n  var _this = this;\n  var pathschema = _this.path(path);\n\n  if (pathschema) {\n    return 'real';\n  }\n\n  function search(parts, schema) {\n    var p = parts.length + 1,\n        foundschema,\n        trypath;\n\n    while (p--) {\n      trypath = parts.slice(0, p).join('.');\n      foundschema = schema.path(trypath);\n      if (foundschema) {\n        if (foundschema.caster) {\n          // array of Mixed?\n          if (foundschema.caster instanceof MongooseTypes.Mixed) {\n            return { schema: foundschema, pathType: 'mixed' };\n          }\n\n          // Now that we found the array, we need to check if there\n          // are remaining document paths to look up for casting.\n          // Also we need to handle array.$.path since schema.path\n          // doesn't work for that.\n          // If there is no foundschema.schema we are dealing with\n          // a path like array.$\n          if (p !== parts.length && foundschema.schema) {\n            if (parts[p] === '$') {\n              if (p === parts.length - 1) {\n                return { schema: foundschema, pathType: 'nested' };\n              }\n              // comments.$.comments.$.title\n              return search(parts.slice(p + 1), foundschema.schema);\n            }\n            // this is the last path of the selector\n            return search(parts.slice(p), foundschema.schema);\n          }\n          return {\n            schema: foundschema,\n            pathType: foundschema.$isSingleNested ? 'nested' : 'array'\n          };\n        }\n        return { schema: foundschema, pathType: 'real' };\n      } else if (p === parts.length && schema.nested[trypath]) {\n        return { schema: schema, pathType: 'nested' };\n      }\n    }\n    return { schema: foundschema || schema, pathType: 'undefined' };\n  }\n\n  // look for arrays\n  return search(path.split('.'), _this);\n};\n\n\n/*!\n * Module exports.\n */\n\nmodule.exports = exports = Schema;\n\n// require down here because of reference issues\n\n/**\n * The various built-in Mongoose Schema Types.\n *\n * ####Example:\n *\n *     var mongoose = require('mongoose');\n *     var ObjectId = mongoose.Schema.Types.ObjectId;\n *\n * ####Types:\n *\n * - [String](#schema-string-js)\n * - [Number](#schema-number-js)\n * - [Boolean](#schema-boolean-js) | Bool\n * - [Array](#schema-array-js)\n * - [Buffer](#schema-buffer-js)\n * - [Date](#schema-date-js)\n * - [ObjectId](#schema-objectid-js) | Oid\n * - [Mixed](#schema-mixed-js)\n *\n * Using this exposed access to the `Mixed` SchemaType, we can use them in our schema.\n *\n *     var Mixed = mongoose.Schema.Types.Mixed;\n *     new mongoose.Schema({ _user: Mixed })\n *\n * @api public\n */\n\nSchema.Types = MongooseTypes = require('./schema/index');\n\n/*!\n * ignore\n */\n\nexports.ObjectId = MongooseTypes.ObjectId;\n"]}