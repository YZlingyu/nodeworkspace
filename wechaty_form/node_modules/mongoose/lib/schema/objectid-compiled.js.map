{"version":3,"sources":["objectid.js"],"names":[],"mappings":"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","file":"objectid-compiled.js","sourcesContent":["/* eslint no-empty: 1 */\n\n/*!\n * Module dependencies.\n */\n\nvar SchemaType = require('../schematype'),\n    CastError = SchemaType.CastError,\n    oid = require('../types/objectid'),\n    utils = require('../utils'),\n    Document;\n\n/**\n * ObjectId SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction ObjectId(key, options) {\n  SchemaType.call(this, key, options, 'ObjectID');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nObjectId.schemaName = 'ObjectId';\n\n/*!\n * Inherits from SchemaType.\n */\nObjectId.prototype = Object.create(SchemaType.prototype);\nObjectId.prototype.constructor = ObjectId;\n\n/**\n * Adds an auto-generated ObjectId default if turnOn is true.\n * @param {Boolean} turnOn auto generated ObjectId defaults\n * @api public\n * @return {SchemaType} this\n */\n\nObjectId.prototype.auto = function(turnOn) {\n  if (turnOn) {\n    this.default(defaultId);\n    this.set(resetId);\n  }\n\n  return this;\n};\n\n/**\n * Check if the given value satisfies a required validator.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nObjectId.prototype.checkRequired = function checkRequired(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n  return value instanceof oid;\n};\n\n/**\n * Casts to ObjectId\n *\n * @param {Object} value\n * @param {Object} doc\n * @param {Boolean} init whether this is an initialization cast\n * @api private\n */\n\nObjectId.prototype.cast = function(value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n\n    if (value === null || value === undefined) {\n      return value;\n    }\n\n    // lazy load\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    }\n\n    // setting a populated path\n    if (value instanceof oid) {\n      return value;\n    } else if (Buffer.isBuffer(value) || !utils.isObject(value)) {\n      throw new CastError('ObjectId', value, this.path);\n    }\n\n    // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n    var path = doc.$__fullPath(this.path);\n    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    var pop = owner.populated(path, true);\n    var ret = value;\n    if (!doc.$__.populated ||\n        !doc.$__.populated[path] ||\n        !doc.$__.populated[path].options ||\n        !doc.$__.populated[path].options.options ||\n        !doc.$__.populated[path].options.options.lean) {\n      ret = new pop.options.model(value);\n      ret.$__.wasPopulated = true;\n    }\n\n    return ret;\n  }\n\n  if (value === null || value === undefined) {\n    return value;\n  }\n\n  if (value instanceof oid) {\n    return value;\n  }\n\n  if (value._id) {\n    if (value._id instanceof oid) {\n      return value._id;\n    }\n    if (value._id.toString instanceof Function) {\n      try {\n        return new oid(value._id.toString());\n      } catch (e) {\n      }\n    }\n  }\n\n  if (value.toString instanceof Function) {\n    try {\n      return new oid(value.toString());\n    } catch (err) {\n      throw new CastError('ObjectId', value, this.path);\n    }\n  }\n\n  throw new CastError('ObjectId', value, this.path);\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nObjectId.prototype.$conditionalHandlers =\n    utils.options(SchemaType.prototype.$conditionalHandlers, {\n      $gt: handleSingle,\n      $gte: handleSingle,\n      $lt: handleSingle,\n      $lte: handleSingle\n    });\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [val]\n * @api private\n */\n\nObjectId.prototype.castForQuery = function($conditional, val) {\n  var handler;\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional + ' with ObjectId.');\n    }\n    return handler.call(this, val);\n  }\n  return this.cast($conditional);\n};\n\n/*!\n * ignore\n */\n\nfunction defaultId() {\n  return new oid();\n}\n\nfunction resetId(v) {\n  this.$__._id = null;\n  return v;\n}\n\n/*!\n * Module exports.\n */\n\nmodule.exports = ObjectId;\n"]}