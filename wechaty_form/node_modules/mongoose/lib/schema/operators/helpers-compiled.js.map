{"version":3,"sources":["helpers.js"],"names":[],"mappings":"AAAA;;AAEA;;;;AAIA,IAAI,QAAQ;AACV,UAAQ,QAAQ,WAAR;AADE,CAAZ;;AAIA;;;;AAIA,QAAQ,YAAR,GAAuB,YAAvB;AACA,QAAQ,mBAAR,GAA8B,mBAA9B;;AAEA;;;;AAIA,SAAS,YAAT,CAAsB,GAAtB,EAA2B;AACzB,SAAO,MAAM,MAAN,CAAa,SAAb,CAAuB,IAAvB,CAA4B,IAA5B,CAAiC,IAAjC,EAAuC,GAAvC,CAAP;AACD;;AAED,SAAS,mBAAT,CAA6B,GAA7B,EAAkC,IAAlC,EAAwC;AACtC,MAAI,OAAJ,CAAY,UAAS,CAAT,EAAY,CAAZ,EAAe;AACzB,QAAI,MAAM,OAAN,CAAc,CAAd,CAAJ,EAAsB;AACpB,0BAAoB,CAApB,EAAuB,IAAvB;AACD,KAFD,MAEO;AACL,UAAI,CAAJ,IAAS,aAAa,IAAb,CAAkB,IAAlB,EAAwB,CAAxB,CAAT;AACD;AACF,GAND;AAOD","file":"helpers-compiled.js","sourcesContent":["'use strict';\n\n/*!\n * Module requirements.\n */\n\nvar Types = {\n  Number: require('../number')\n};\n\n/*!\n * @ignore\n */\n\nexports.castToNumber = castToNumber;\nexports.castArraysOfNumbers = castArraysOfNumbers;\n\n/*!\n * @ignore\n */\n\nfunction castToNumber(val) {\n  return Types.Number.prototype.cast.call(this, val);\n}\n\nfunction castArraysOfNumbers(arr, self) {\n  arr.forEach(function(v, i) {\n    if (Array.isArray(v)) {\n      castArraysOfNumbers(v, self);\n    } else {\n      arr[i] = castToNumber.call(self, v);\n    }\n  });\n}\n"]}