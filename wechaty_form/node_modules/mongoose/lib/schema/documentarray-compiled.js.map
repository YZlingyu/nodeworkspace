{"version":3,"sources":["documentarray.js"],"names":[],"mappings":"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","file":"documentarray-compiled.js","sourcesContent":["/* eslint no-empty: 1 */\n\n/*!\n * Module dependencies.\n */\n\nvar ArrayType = require('./array');\nvar CastError = require('../error/cast');\nvar EventEmitter = require('events').EventEmitter;\nvar MongooseDocumentArray = require('../types/documentarray');\nvar SchemaType = require('../schematype');\nvar Subdocument = require('../types/embedded');\nvar applyHooks = require('../services/model/applyHooks');\nvar discriminator = require('../services/model/discriminator');\nvar util = require('util');\nvar utils = require('../utils');\n\n/**\n * SubdocsArray SchemaType constructor\n *\n * @param {String} key\n * @param {Schema} schema\n * @param {Object} options\n * @inherits SchemaArray\n * @api public\n */\n\nfunction DocumentArray(key, schema, options) {\n  var EmbeddedDocument = _createConstructor(schema, options);\n\n  ArrayType.call(this, key, EmbeddedDocument, options);\n\n  this.schema = schema;\n  this.$isMongooseDocumentArray = true;\n  var fn = this.defaultValue;\n\n  if (!('defaultValue' in this) || fn !== void 0) {\n    this.default(function() {\n      var arr = fn.call(this);\n      if (!Array.isArray(arr)) {\n        arr = [arr];\n      }\n      // Leave it up to `cast()` to convert this to a documentarray\n      return arr;\n    });\n  }\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nDocumentArray.schemaName = 'DocumentArray';\n\n/*!\n * Inherits from ArrayType.\n */\nDocumentArray.prototype = Object.create(ArrayType.prototype);\nDocumentArray.prototype.constructor = DocumentArray;\n\n/*!\n * Ignore\n */\n\nfunction _createConstructor(schema, options) {\n  // compile an embedded document for this schema\n  function EmbeddedDocument() {\n    Subdocument.apply(this, arguments);\n  }\n\n  EmbeddedDocument.prototype = Object.create(Subdocument.prototype);\n  EmbeddedDocument.prototype.$__setSchema(schema);\n  EmbeddedDocument.schema = schema;\n  EmbeddedDocument.prototype.constructor = EmbeddedDocument;\n  EmbeddedDocument.$isArraySubdocument = true;\n\n  // apply methods\n  for (var i in schema.methods) {\n    EmbeddedDocument.prototype[i] = schema.methods[i];\n  }\n\n  // apply statics\n  for (i in schema.statics) {\n    EmbeddedDocument[i] = schema.statics[i];\n  }\n\n  for (i in EventEmitter.prototype) {\n    EmbeddedDocument[i] = EventEmitter.prototype[i];\n  }\n\n  applyHooks(EmbeddedDocument, schema);\n\n  EmbeddedDocument.options = options;\n\n  return EmbeddedDocument;\n}\n\n/*!\n * Ignore\n */\n\nDocumentArray.prototype.discriminator = function(name, schema) {\n  if (typeof name === 'function') {\n    name = utils.getFunctionName(name);\n  }\n\n  schema = discriminator(this.casterConstructor, name, schema);\n\n  var EmbeddedDocument = _createConstructor(schema);\n  EmbeddedDocument.baseCasterConstructor = this.casterConstructor;\n\n  try {\n    Object.defineProperty(EmbeddedDocument, 'name', {\n      value: name\n    });\n  } catch (error) {\n    // Ignore error, only happens on old versions of node\n  }\n\n  this.casterConstructor.discriminators[name] = EmbeddedDocument;\n\n  return this.casterConstructor.discriminators[name];\n};\n\n/**\n * Performs local validations first, then validations on each embedded doc\n *\n * @api private\n */\n\nDocumentArray.prototype.doValidate = function(array, fn, scope, options) {\n  var _this = this;\n  SchemaType.prototype.doValidate.call(this, array, function(err) {\n    if (err) {\n      return fn(err);\n    }\n\n    var count = array && array.length;\n    var error;\n\n    if (!count) {\n      return fn();\n    }\n    if (options && options.updateValidator) {\n      return fn();\n    }\n\n    // handle sparse arrays, do not use array.forEach which does not\n    // iterate over sparse elements yet reports array.length including\n    // them :(\n\n    function callback(err) {\n      if (err) {\n        error = err;\n      }\n      --count || fn(error);\n    }\n\n    for (var i = 0, len = count; i < len; ++i) {\n      // sidestep sparse entries\n      var doc = array[i];\n      if (!doc) {\n        --count || fn(error);\n        continue;\n      }\n\n      // If you set the array index directly, the doc might not yet be\n      // a full fledged mongoose subdoc, so make it into one.\n      if (!(doc instanceof Subdocument)) {\n        doc = array[i] = new _this.casterConstructor(doc, array, undefined,\n            undefined, i);\n      }\n\n      // HACK: use $__original_validate to avoid promises so bluebird doesn't\n      // complain\n      if (doc.$__original_validate) {\n        doc.$__original_validate({__noPromise: true}, callback);\n      } else {\n        doc.validate({__noPromise: true}, callback);\n      }\n    }\n  }, scope);\n};\n\n/**\n * Performs local validations first, then validations on each embedded doc.\n *\n * ####Note:\n *\n * This method ignores the asynchronous validators.\n *\n * @return {MongooseError|undefined}\n * @api private\n */\n\nDocumentArray.prototype.doValidateSync = function(array, scope) {\n  var schemaTypeError = SchemaType.prototype.doValidateSync.call(this, array, scope);\n  if (schemaTypeError) {\n    return schemaTypeError;\n  }\n\n  var count = array && array.length,\n      resultError = null;\n\n  if (!count) {\n    return;\n  }\n\n  // handle sparse arrays, do not use array.forEach which does not\n  // iterate over sparse elements yet reports array.length including\n  // them :(\n\n  for (var i = 0, len = count; i < len; ++i) {\n    // only first error\n    if (resultError) {\n      break;\n    }\n    // sidestep sparse entries\n    var doc = array[i];\n    if (!doc) {\n      continue;\n    }\n\n    var subdocValidateError = doc.validateSync();\n\n    if (subdocValidateError) {\n      resultError = subdocValidateError;\n    }\n  }\n\n  return resultError;\n};\n\n/**\n * Casts contents\n *\n * @param {Object} value\n * @param {Document} document that triggers the casting\n * @api private\n */\n\nDocumentArray.prototype.cast = function(value, doc, init, prev, options) {\n  var selected,\n      subdoc,\n      i;\n\n  if (!Array.isArray(value)) {\n    // gh-2442 mark whole array as modified if we're initializing a doc from\n    // the db and the path isn't an array in the document\n    if (!!doc && init) {\n      doc.markModified(this.path);\n    }\n    return this.cast([value], doc, init, prev);\n  }\n\n  if (!(value && value.isMongooseDocumentArray) &&\n      (!options || !options.skipDocumentArrayCast)) {\n    value = new MongooseDocumentArray(value, this.path, doc);\n    if (prev && prev._handlers) {\n      for (var key in prev._handlers) {\n        doc.removeListener(key, prev._handlers[key]);\n      }\n    }\n  } else if (value && value.isMongooseDocumentArray) {\n    // We need to create a new array, otherwise change tracking will\n    // update the old doc (gh-4449)\n    value = new MongooseDocumentArray(value, this.path, doc);\n  }\n\n  i = value.length;\n\n  while (i--) {\n    if (!value[i]) {\n      continue;\n    }\n\n    var Constructor = this.casterConstructor;\n    if (Constructor.discriminators &&\n        typeof value[i][Constructor.schema.options.discriminatorKey] === 'string' &&\n        Constructor.discriminators[value[i][Constructor.schema.options.discriminatorKey]]) {\n      Constructor = Constructor.discriminators[value[i][Constructor.schema.options.discriminatorKey]];\n    }\n\n    // Check if the document has a different schema (re gh-3701)\n    if ((value[i] instanceof Subdocument) &&\n        value[i].schema !== Constructor.schema) {\n      value[i] = value[i].toObject({ transform: false, virtuals: false });\n    }\n    if (!(value[i] instanceof Subdocument) && value[i]) {\n      if (init) {\n        if (doc) {\n          selected || (selected = scopePaths(this, doc.$__.selected, init));\n        } else {\n          selected = true;\n        }\n\n        subdoc = new Constructor(null, value, true, selected, i);\n        value[i] = subdoc.init(value[i]);\n      } else {\n        if (prev && (subdoc = prev.id(value[i]._id))) {\n          subdoc = prev.id(value[i]._id);\n        }\n\n        if (prev && subdoc) {\n          // handle resetting doc with existing id but differing data\n          // doc.array = [{ doc: 'val' }]\n          subdoc.set(value[i]);\n          // if set() is hooked it will have no return value\n          // see gh-746\n          value[i] = subdoc;\n        } else {\n          try {\n            subdoc = new Constructor(value[i], value, undefined,\n                undefined, i);\n            // if set() is hooked it will have no return value\n            // see gh-746\n            value[i] = subdoc;\n          } catch (error) {\n            var valueInErrorMessage = util.inspect(value[i]);\n            throw new CastError('embedded', valueInErrorMessage,\n              value._path, error);\n          }\n        }\n      }\n    }\n  }\n\n  return value;\n};\n\n/*!\n * Scopes paths selected in a query to this array.\n * Necessary for proper default application of subdocument values.\n *\n * @param {DocumentArray} array - the array to scope `fields` paths\n * @param {Object|undefined} fields - the root fields selected in the query\n * @param {Boolean|undefined} init - if we are being created part of a query result\n */\n\nfunction scopePaths(array, fields, init) {\n  if (!(init && fields)) {\n    return undefined;\n  }\n\n  var path = array.path + '.';\n  var keys = Object.keys(fields);\n  var i = keys.length;\n  var selected = {};\n  var hasKeys;\n  var key;\n  var sub;\n\n  while (i--) {\n    key = keys[i];\n    if (key.indexOf(path) === 0) {\n      sub = key.substring(path.length);\n      if (sub === '$') {\n        continue;\n      }\n      if (sub.indexOf('$.') === 0) {\n        sub = sub.substr(2);\n      }\n      hasKeys || (hasKeys = true);\n      selected[sub] = fields[key];\n    }\n  }\n\n  return hasKeys && selected || undefined;\n}\n\n/*!\n * Module exports.\n */\n\nmodule.exports = DocumentArray;\n"]}