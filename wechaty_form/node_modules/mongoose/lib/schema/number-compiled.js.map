{"version":3,"sources":["number.js"],"names":[],"mappings":"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","file":"number-compiled.js","sourcesContent":["/*!\n * Module requirements.\n */\n\nvar SchemaType = require('../schematype');\nvar CastError = SchemaType.CastError;\nvar handleBitwiseOperator = require('./operators/bitwise');\nvar MongooseError = require('../error');\nvar utils = require('../utils');\nvar Document;\n\n/**\n * Number SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaNumber(key, options) {\n  SchemaType.call(this, key, options, 'Number');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaNumber.schemaName = 'Number';\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaNumber.prototype = Object.create(SchemaType.prototype);\nSchemaNumber.prototype.constructor = SchemaNumber;\n\n/**\n * Check if the given value satisfies a required validator.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nSchemaNumber.prototype.checkRequired = function checkRequired(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n  return typeof value === 'number' || value instanceof Number;\n};\n\n/**\n * Sets a minimum number validator.\n *\n * ####Example:\n *\n *     var s = new Schema({ n: { type: Number, min: 10 })\n *     var M = db.model('M', s)\n *     var m = new M({ n: 9 })\n *     m.save(function (err) {\n *       console.error(err) // validator error\n *       m.n = 10;\n *       m.save() // success\n *     })\n *\n *     // custom error messages\n *     // We can also use the special {MIN} token which will be replaced with the invalid value\n *     var min = [10, 'The value of path `{PATH}` ({VALUE}) is beneath the limit ({MIN}).'];\n *     var schema = new Schema({ n: { type: Number, min: min })\n *     var M = mongoose.model('Measurement', schema);\n *     var s= new M({ n: 4 });\n *     s.validate(function (err) {\n *       console.log(String(err)) // ValidationError: The value of path `n` (4) is beneath the limit (10).\n *     })\n *\n * @param {Number} value minimum number\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages #error_messages_MongooseError-messages\n * @api public\n */\n\nSchemaNumber.prototype.min = function(value, message) {\n  if (this.minValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator !== this.minValidator;\n    }, this);\n  }\n\n  if (value !== null && value !== undefined) {\n    var msg = message || MongooseError.messages.Number.min;\n    msg = msg.replace(/{MIN}/, value);\n    this.validators.push({\n      validator: this.minValidator = function(v) {\n        return v == null || v >= value;\n      },\n      message: msg,\n      type: 'min',\n      min: value\n    });\n  }\n\n  return this;\n};\n\n/**\n * Sets a maximum number validator.\n *\n * ####Example:\n *\n *     var s = new Schema({ n: { type: Number, max: 10 })\n *     var M = db.model('M', s)\n *     var m = new M({ n: 11 })\n *     m.save(function (err) {\n *       console.error(err) // validator error\n *       m.n = 10;\n *       m.save() // success\n *     })\n *\n *     // custom error messages\n *     // We can also use the special {MAX} token which will be replaced with the invalid value\n *     var max = [10, 'The value of path `{PATH}` ({VALUE}) exceeds the limit ({MAX}).'];\n *     var schema = new Schema({ n: { type: Number, max: max })\n *     var M = mongoose.model('Measurement', schema);\n *     var s= new M({ n: 4 });\n *     s.validate(function (err) {\n *       console.log(String(err)) // ValidationError: The value of path `n` (4) exceeds the limit (10).\n *     })\n *\n * @param {Number} maximum number\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages #error_messages_MongooseError-messages\n * @api public\n */\n\nSchemaNumber.prototype.max = function(value, message) {\n  if (this.maxValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator !== this.maxValidator;\n    }, this);\n  }\n\n  if (value !== null && value !== undefined) {\n    var msg = message || MongooseError.messages.Number.max;\n    msg = msg.replace(/{MAX}/, value);\n    this.validators.push({\n      validator: this.maxValidator = function(v) {\n        return v == null || v <= value;\n      },\n      message: msg,\n      type: 'max',\n      max: value\n    });\n  }\n\n  return this;\n};\n\n/**\n * Casts to number\n *\n * @param {Object} value value to cast\n * @param {Document} doc document that triggers the casting\n * @param {Boolean} init\n * @api private\n */\n\nSchemaNumber.prototype.cast = function(value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n\n    if (value === null || value === undefined) {\n      return value;\n    }\n\n    // lazy load\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    }\n\n    // setting a populated path\n    if (typeof value === 'number') {\n      return value;\n    } else if (Buffer.isBuffer(value) || !utils.isObject(value)) {\n      throw new CastError('number', value, this.path);\n    }\n\n    // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n    var path = doc.$__fullPath(this.path);\n    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    var pop = owner.populated(path, true);\n    var ret = new pop.options.model(value);\n    ret.$__.wasPopulated = true;\n    return ret;\n  }\n\n  var val = value && typeof value._id !== 'undefined' ?\n    value._id : // documents\n    value;\n\n  if (!isNaN(val)) {\n    if (val === null) {\n      return val;\n    }\n    if (val === '') {\n      return null;\n    }\n    if (typeof val === 'string' || typeof val === 'boolean') {\n      val = Number(val);\n    }\n    if (val instanceof Number) {\n      return val;\n    }\n    if (typeof val === 'number') {\n      return val;\n    }\n    if (val.toString && !Array.isArray(val) && val.toString() == Number(val)) {\n      return new Number(val);\n    }\n  }\n\n  throw new CastError('number', value, this.path);\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nfunction handleArray(val) {\n  var _this = this;\n  if (!Array.isArray(val)) {\n    return [this.cast(val)];\n  }\n  return val.map(function(m) {\n    return _this.cast(m);\n  });\n}\n\nSchemaNumber.prototype.$conditionalHandlers =\n    utils.options(SchemaType.prototype.$conditionalHandlers, {\n      $bitsAllClear: handleBitwiseOperator,\n      $bitsAnyClear: handleBitwiseOperator,\n      $bitsAllSet: handleBitwiseOperator,\n      $bitsAnySet: handleBitwiseOperator,\n      $gt: handleSingle,\n      $gte: handleSingle,\n      $lt: handleSingle,\n      $lte: handleSingle,\n      $mod: handleArray\n    });\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [value]\n * @api private\n */\n\nSchemaNumber.prototype.castForQuery = function($conditional, val) {\n  var handler;\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional + ' with Number.');\n    }\n    return handler.call(this, val);\n  }\n  val = this.cast($conditional);\n  return val;\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaNumber;\n"]}