{"version":3,"sources":["decimal128.js"],"names":[],"mappings":"AAAA;;AAEA;;;;AAIA,IAAI,aAAa,QAAQ,eAAR,CAAjB;AACA,IAAI,YAAY,WAAW,SAA3B;AACA,IAAI,iBAAiB,QAAQ,qBAAR,CAArB;AACA,IAAI,QAAQ,QAAQ,UAAR,CAAZ;AACA,IAAI,QAAJ;;AAEA;;;;;;;;;AASA,SAAS,UAAT,CAAoB,GAApB,EAAyB,OAAzB,EAAkC;AAChC,aAAW,IAAX,CAAgB,IAAhB,EAAsB,GAAtB,EAA2B,OAA3B,EAAoC,YAApC;AACD;;AAED;;;;;;AAMA,WAAW,UAAX,GAAwB,YAAxB;;AAEA;;;AAGA,WAAW,SAAX,GAAuB,OAAO,MAAP,CAAc,WAAW,SAAzB,CAAvB;AACA,WAAW,SAAX,CAAqB,WAArB,GAAmC,UAAnC;;AAEA;;;;;;;;;AASA,WAAW,SAAX,CAAqB,aAArB,GAAqC,SAAS,aAAT,CAAuB,KAAvB,EAA8B,GAA9B,EAAmC;AACtE,MAAI,WAAW,MAAX,CAAkB,IAAlB,EAAwB,KAAxB,EAA+B,GAA/B,EAAoC,IAApC,CAAJ,EAA+C;AAC7C,WAAO,CAAC,CAAC,KAAT;AACD;AACD,SAAO,iBAAiB,cAAxB;AACD,CALD;;AAOA;;;;;;;;;AASA,WAAW,SAAX,CAAqB,IAArB,GAA4B,UAAS,KAAT,EAAgB,GAAhB,EAAqB,IAArB,EAA2B;AACrD,MAAI,WAAW,MAAX,CAAkB,IAAlB,EAAwB,KAAxB,EAA+B,GAA/B,EAAoC,IAApC,CAAJ,EAA+C;AAC7C;;AAEA,QAAI,UAAU,IAAV,IAAkB,UAAU,SAAhC,EAA2C;AACzC,aAAO,KAAP;AACD;;AAED;AACA,iBAAa,WAAW,QAAQ,eAAR,CAAxB;;AAEA,QAAI,iBAAiB,QAArB,EAA+B;AAC7B,YAAM,GAAN,CAAU,YAAV,GAAyB,IAAzB;AACA,aAAO,KAAP;AACD;;AAED;AACA,QAAI,iBAAiB,cAArB,EAAqC;AACnC,aAAO,KAAP;AACD,KAFD,MAEO,IAAI,OAAO,QAAP,CAAgB,KAAhB,KAA0B,CAAC,MAAM,QAAN,CAAe,KAAf,CAA/B,EAAsD;AAC3D,YAAM,IAAI,SAAJ,CAAc,YAAd,EAA4B,KAA5B,EAAmC,KAAK,IAAxC,CAAN;AACD;;AAED;AACA;AACA;AACA,QAAI,OAAO,IAAI,WAAJ,CAAgB,KAAK,IAArB,CAAX;AACA,QAAI,QAAQ,IAAI,aAAJ,GAAoB,IAAI,aAAJ,EAApB,GAA0C,GAAtD;AACA,QAAI,MAAM,MAAM,SAAN,CAAgB,IAAhB,EAAsB,IAAtB,CAAV;AACA,QAAI,MAAM,KAAV;AACA,QAAI,CAAC,IAAI,GAAJ,CAAQ,SAAT,IACA,CAAC,IAAI,GAAJ,CAAQ,SAAR,CAAkB,IAAlB,CADD,IAEA,CAAC,IAAI,GAAJ,CAAQ,SAAR,CAAkB,IAAlB,EAAwB,OAFzB,IAGA,CAAC,IAAI,GAAJ,CAAQ,SAAR,CAAkB,IAAlB,EAAwB,OAAxB,CAAgC,OAHjC,IAIA,CAAC,IAAI,GAAJ,CAAQ,SAAR,CAAkB,IAAlB,EAAwB,OAAxB,CAAgC,OAAhC,CAAwC,IAJ7C,EAImD;AACjD,YAAM,IAAI,IAAI,OAAJ,CAAY,KAAhB,CAAsB,KAAtB,CAAN;AACA,UAAI,GAAJ,CAAQ,YAAR,GAAuB,IAAvB;AACD;;AAED,WAAO,GAAP;AACD;;AAED,MAAI,UAAU,IAAV,IAAkB,UAAU,SAAhC,EAA2C;AACzC,WAAO,KAAP;AACD;;AAED,MAAI,iBAAiB,cAArB,EAAqC;AACnC,WAAO,KAAP;AACD;;AAED,MAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAO,eAAe,UAAf,CAA0B,KAA1B,CAAP;AACD;;AAED,MAAI,OAAO,QAAP,CAAgB,KAAhB,CAAJ,EAA4B;AAC1B,WAAO,IAAI,cAAJ,CAAmB,KAAnB,CAAP;AACD;;AAED,QAAM,IAAI,SAAJ,CAAc,YAAd,EAA4B,KAA5B,EAAmC,KAAK,IAAxC,CAAN;AACD,CA3DD;;AA6DA;;;;AAIA,SAAS,YAAT,CAAsB,GAAtB,EAA2B;AACzB,SAAO,KAAK,IAAL,CAAU,GAAV,CAAP;AACD;;AAED,WAAW,SAAX,CAAqB,oBAArB,GACI,MAAM,OAAN,CAAc,WAAW,SAAX,CAAqB,oBAAnC,EAAyD;AACvD,OAAK,YADkD;AAEvD,QAAM,YAFiD;AAGvD,OAAK,YAHkD;AAIvD,QAAM;AAJiD,CAAzD,CADJ;;AAQA;;;;;;;;AAQA,WAAW,SAAX,CAAqB,YAArB,GAAoC,UAAS,YAAT,EAAuB,GAAvB,EAA4B;AAC9D,MAAI,OAAJ;AACA,MAAI,UAAU,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,cAAU,KAAK,oBAAL,CAA0B,YAA1B,CAAV;AACA,QAAI,CAAC,OAAL,EAAc;AACZ,YAAM,IAAI,KAAJ,CAAU,gBAAgB,YAAhB,GAA+B,iBAAzC,CAAN;AACD;AACD,WAAO,QAAQ,IAAR,CAAa,IAAb,EAAmB,GAAnB,CAAP;AACD;AACD,SAAO,KAAK,IAAL,CAAU,YAAV,CAAP;AACD,CAVD;;AAYA;;;;AAIA,OAAO,OAAP,GAAiB,UAAjB","file":"decimal128-compiled.js","sourcesContent":["/* eslint no-empty: 1 */\n\n/*!\n * Module dependencies.\n */\n\nvar SchemaType = require('../schematype');\nvar CastError = SchemaType.CastError;\nvar Decimal128Type = require('../types/decimal128');\nvar utils = require('../utils');\nvar Document;\n\n/**\n * Decimal128 SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction Decimal128(key, options) {\n  SchemaType.call(this, key, options, 'Decimal128');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nDecimal128.schemaName = 'Decimal128';\n\n/*!\n * Inherits from SchemaType.\n */\nDecimal128.prototype = Object.create(SchemaType.prototype);\nDecimal128.prototype.constructor = Decimal128;\n\n/**\n * Check if the given value satisfies a required validator.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nDecimal128.prototype.checkRequired = function checkRequired(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n  return value instanceof Decimal128Type;\n};\n\n/**\n * Casts to Decimal128\n *\n * @param {Object} value\n * @param {Object} doc\n * @param {Boolean} init whether this is an initialization cast\n * @api private\n */\n\nDecimal128.prototype.cast = function(value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n\n    if (value === null || value === undefined) {\n      return value;\n    }\n\n    // lazy load\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    }\n\n    // setting a populated path\n    if (value instanceof Decimal128Type) {\n      return value;\n    } else if (Buffer.isBuffer(value) || !utils.isObject(value)) {\n      throw new CastError('Decimal128', value, this.path);\n    }\n\n    // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n    var path = doc.$__fullPath(this.path);\n    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    var pop = owner.populated(path, true);\n    var ret = value;\n    if (!doc.$__.populated ||\n        !doc.$__.populated[path] ||\n        !doc.$__.populated[path].options ||\n        !doc.$__.populated[path].options.options ||\n        !doc.$__.populated[path].options.options.lean) {\n      ret = new pop.options.model(value);\n      ret.$__.wasPopulated = true;\n    }\n\n    return ret;\n  }\n\n  if (value === null || value === undefined) {\n    return value;\n  }\n\n  if (value instanceof Decimal128Type) {\n    return value;\n  }\n\n  if (typeof value === 'string') {\n    return Decimal128Type.fromString(value);\n  }\n\n  if (Buffer.isBuffer(value)) {\n    return new Decimal128Type(value);\n  }\n\n  throw new CastError('Decimal128', value, this.path);\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nDecimal128.prototype.$conditionalHandlers =\n    utils.options(SchemaType.prototype.$conditionalHandlers, {\n      $gt: handleSingle,\n      $gte: handleSingle,\n      $lt: handleSingle,\n      $lte: handleSingle\n    });\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [val]\n * @api private\n */\n\nDecimal128.prototype.castForQuery = function($conditional, val) {\n  var handler;\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional + ' with ObjectId.');\n    }\n    return handler.call(this, val);\n  }\n  return this.cast($conditional);\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = Decimal128;\n"]}