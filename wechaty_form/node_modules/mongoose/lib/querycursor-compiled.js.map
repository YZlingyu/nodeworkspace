{"version":3,"sources":["querycursor.js"],"names":[],"mappings":"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","file":"querycursor-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar PromiseProvider = require('./promise_provider');\nvar Readable = require('stream').Readable;\nvar helpers = require('./queryhelpers');\nvar util = require('util');\n\n/**\n * A QueryCursor is a concurrency primitive for processing query results\n * one document at a time. A QueryCursor fulfills the [Node.js streams3 API](https://strongloop.com/strongblog/whats-new-io-js-beta-streams3/),\n * in addition to several other mechanisms for loading documents from MongoDB\n * one at a time.\n *\n * QueryCursors execute the model's pre find hooks, but **not** the model's\n * post find hooks.\n *\n * Unless you're an advanced user, do **not** instantiate this class directly.\n * Use [`Query#cursor()`](/docs/api.html#query_Query-cursor) instead.\n *\n * @param {Query} query\n * @param {Object} options query options passed to `.find()`\n * @inherits Readable\n * @event `cursor`: Emitted when the cursor is created\n * @event `error`: Emitted when an error occurred\n * @event `data`: Emitted when the stream is flowing and the next doc is ready\n * @event `end`: Emitted when the stream is exhausted\n * @api public\n */\n\nfunction QueryCursor(query, options) {\n  Readable.call(this, { objectMode: true });\n\n  this.cursor = null;\n  this.query = query;\n  this._transforms = options.transform ? [options.transform] : [];\n  var _this = this;\n  var model = query.model;\n  model.hooks.execPre('find', query, function() {\n    model.collection.find(query._conditions, options, function(err, cursor) {\n      if (_this._error) {\n        cursor.close(function() {});\n        _this.listeners('error').length > 0 && _this.emit('error', _this._error);\n      }\n      if (err) {\n        return _this.emit('error', err);\n      }\n      _this.cursor = cursor;\n      _this.emit('cursor', cursor);\n    });\n  });\n}\n\nutil.inherits(QueryCursor, Readable);\n\n/*!\n * Necessary to satisfy the Readable API\n */\n\nQueryCursor.prototype._read = function() {\n  var _this = this;\n  _next(this, function(error, doc) {\n    if (error) {\n      return _this.emit('error', error);\n    }\n    if (!doc) {\n      _this.push(null);\n      _this.cursor.close(function(error) {\n        if (error) {\n          return _this.emit('error', error);\n        }\n        setTimeout(function() {\n          _this.emit('close');\n        }, 0);\n      });\n      return;\n    }\n    _this.push(doc);\n  });\n};\n\n/**\n * Registers a transform function which subsequently maps documents retrieved\n * via the streams interface or `.next()`\n *\n * ####Example\n *\n *     // Map documents returned by `data` events\n *     Thing.\n *       find({ name: /^hello/ }).\n *       cursor().\n *       map(function (doc) {\n *        doc.foo = \"bar\";\n *        return doc;\n *       })\n *       on('data', function(doc) { console.log(doc.foo); });\n *\n *     // Or map documents returned by `.next()`\n *     var cursor = Thing.find({ name: /^hello/ }).\n *       cursor().\n *       map(function (doc) {\n *         doc.foo = \"bar\";\n *         return doc;\n *       });\n *     cursor.next(function(error, doc) {\n *       console.log(doc.foo);\n *     });\n *\n * @param {Function} fn\n * @return {QueryCursor}\n * @api public\n * @method map\n */\n\nQueryCursor.prototype.map = function(fn) {\n  this._transforms.push(fn);\n  return this;\n};\n\n/*!\n * Marks this cursor as errored\n */\n\nQueryCursor.prototype._markError = function(error) {\n  this._error = error;\n  return this;\n};\n\n/**\n * Marks this cursor as closed. Will stop streaming and subsequent calls to\n * `next()` will error.\n *\n * @param {Function} callback\n * @return {Promise}\n * @api public\n * @method close\n * @emits close\n * @see MongoDB driver cursor#close http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#close\n */\n\nQueryCursor.prototype.close = function(callback) {\n  var Promise = PromiseProvider.get();\n  var _this = this;\n  return new Promise.ES6(function(resolve, reject) {\n    _this.cursor.close(function(error) {\n      if (error) {\n        callback && callback(error);\n        reject(error);\n        return _this.listeners('error').length > 0 &&\n          _this.emit('error', error);\n      }\n      _this.emit('close');\n      resolve();\n      callback && callback();\n    });\n  });\n};\n\n/**\n * Get the next document from this cursor. Will return `null` when there are\n * no documents left.\n *\n * @param {Function} callback\n * @return {Promise}\n * @api public\n * @method next\n */\n\nQueryCursor.prototype.next = function(callback) {\n  var Promise = PromiseProvider.get();\n  var _this = this;\n  return new Promise.ES6(function(resolve, reject) {\n    _next(_this, function(error, doc) {\n      if (error) {\n        callback && callback(error);\n        return reject(error);\n      }\n      callback && callback(null, doc);\n      resolve(doc);\n    });\n  });\n};\n\n/**\n * Execute `fn` for every document in the cursor. If `fn` returns a promise,\n * will wait for the promise to resolve before iterating on to the next one.\n * Returns a promise that resolves when done.\n *\n * @param {Function} fn\n * @param {Function} [callback] executed when all docs have been processed\n * @return {Promise}\n * @api public\n * @method eachAsync\n */\n\nQueryCursor.prototype.eachAsync = function(fn, callback) {\n  var Promise = PromiseProvider.get();\n  var _this = this;\n\n  var handleNextResult = function(doc, callback) {\n    var promise = fn(doc);\n    if (promise && typeof promise.then === 'function') {\n      promise.then(\n        function() { callback(null); },\n        function(error) { callback(error); });\n    } else {\n      callback(null);\n    }\n  };\n\n  var iterate = function(callback) {\n    return _next(_this, function(error, doc) {\n      if (error) {\n        return callback(error);\n      }\n      if (!doc) {\n        return callback(null);\n      }\n      handleNextResult(doc, function(error) {\n        if (error) {\n          return callback(error);\n        }\n        // Make sure to clear the stack re: gh-4697\n        setTimeout(function() {\n          iterate(callback);\n        }, 0);\n      });\n    });\n  };\n\n  return new Promise.ES6(function(resolve, reject) {\n    iterate(function(error) {\n      if (error) {\n        callback && callback(error);\n        return reject(error);\n      }\n      callback && callback(null);\n      return resolve();\n    });\n  });\n};\n\n/*!\n * Get the next doc from the underlying cursor and mongooseify it\n * (populate, etc.)\n */\n\nfunction _next(ctx, cb) {\n  var callback = cb;\n  if (ctx._transforms.length) {\n    callback = function(err, doc) {\n      if (err || doc === null) {\n        return cb(err, doc);\n      }\n      cb(err, ctx._transforms.reduce(function(doc, fn) {\n        return fn(doc);\n      }, doc));\n    };\n  }\n\n  if (ctx._error) {\n    return process.nextTick(function() {\n      callback(ctx._error);\n    });\n  }\n\n  if (ctx.cursor) {\n    return ctx.cursor.next(function(error, doc) {\n      if (error) {\n        return callback(error);\n      }\n      if (!doc) {\n        return callback(null, null);\n      }\n\n      var opts = ctx.query._mongooseOptions;\n      if (!opts.populate) {\n        return opts.lean === true ?\n                callback(null, doc) :\n                _create(ctx, doc, null, callback);\n      }\n\n      var pop = helpers.preparePopulationOptionsMQ(ctx.query,\n        ctx.query._mongooseOptions);\n      pop.forEach(function(option) {\n        delete option.model;\n      });\n      pop.__noPromise = true;\n      ctx.query.model.populate(doc, pop, function(err, doc) {\n        if (err) {\n          return callback(err);\n        }\n        return opts.lean === true ?\n          callback(null, doc) :\n          _create(ctx, doc, pop, callback);\n      });\n    });\n  } else {\n    ctx.once('cursor', function() {\n      _next(ctx, cb);\n    });\n  }\n}\n\n/*!\n * Convert a raw doc into a full mongoose doc.\n */\n\nfunction _create(ctx, doc, populatedIds, cb) {\n  var instance = helpers.createModel(ctx.query.model, doc, ctx.query._fields);\n  var opts = populatedIds ?\n    { populated: populatedIds } :\n    undefined;\n\n  instance.init(doc, opts, function(err) {\n    if (err) {\n      return cb(err);\n    }\n    cb(null, instance);\n  });\n}\n\nmodule.exports = QueryCursor;\n"]}