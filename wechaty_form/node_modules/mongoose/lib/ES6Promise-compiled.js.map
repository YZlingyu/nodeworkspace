{"version":3,"sources":["ES6Promise.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAiBA,SAAS,UAAT,GAAsB;AACpB,QAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,WAAW,GAAX,GAAiB,UAAS,OAAT,EAAkB;AACjC,aAAW,GAAX,GAAiB,OAAjB;AACD,CAFD;;AAIA,OAAO,OAAP,GAAiB,UAAjB","file":"ES6Promise-compiled.js","sourcesContent":["/**\n * ES6 Promise wrapper constructor.\n *\n * Promises are returned from executed queries. Example:\n *\n *     var query = Candy.find({ bar: true });\n *     var promise = query.exec();\n *\n * DEPRECATED. Mongoose 5.0 will use native promises by default (or bluebird,\n * if native promises are not present) but still\n * support plugging in your own ES6-compatible promises library. Mongoose 5.0\n * will **not** support mpromise.\n *\n * @param {Function} fn a function which will be called when the promise is resolved that accepts `fn(err, ...){}` as signature\n * @api public\n */\n\nfunction ES6Promise() {\n  throw new Error('Can\\'t use ES6 promise with mpromise style constructor');\n}\n\nES6Promise.use = function(Promise) {\n  ES6Promise.ES6 = Promise;\n};\n\nmodule.exports = ES6Promise;\n"]}