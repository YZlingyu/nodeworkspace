{"version":3,"sources":["cast.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,gBAAgB,QAAQ,aAAR,CAApB;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA;;;;;;;;;AASA,SAAS,SAAT,CAAmB,IAAnB,EAAyB,KAAzB,EAAgC,IAAhC,EAAsC,MAAtC,EAA8C;AAC5C,MAAI,cAAc,KAAK,OAAL,CAAa,KAAb,CAAlB;AACA,gBAAc,YAAY,OAAZ,CAAoB,IAApB,EAA0B,GAA1B,EAA+B,OAA/B,CAAuC,IAAvC,EAA6C,GAA7C,CAAd;AACA,MAAI,YAAY,MAAZ,CAAmB,CAAnB,MAA0B,GAA9B,EAAmC;AACjC,kBAAc,MAAM,WAAN,GAAoB,GAAlC;AACD;AACD,gBAAc,IAAd,CAAmB,IAAnB,EAAyB,aAAa,IAAb,GAAoB,oBAApB,GACvB,WADuB,GACT,YADS,GACM,IADN,GACa,GADtC;AAEA,MAAI,MAAM,iBAAV,EAA6B;AAC3B,UAAM,iBAAN,CAAwB,IAAxB;AACD,GAFD,MAEO;AACL,SAAK,KAAL,GAAa,IAAI,KAAJ,GAAY,KAAzB;AACD;AACD,OAAK,WAAL,GAAmB,WAAnB;AACA,OAAK,IAAL,GAAY,WAAZ;AACA,OAAK,IAAL,GAAY,IAAZ;AACA,OAAK,KAAL,GAAa,KAAb;AACA,OAAK,IAAL,GAAY,IAAZ;AACA,OAAK,MAAL,GAAc,MAAd;AACD;;AAED;;;;AAIA,UAAU,SAAV,GAAsB,OAAO,MAAP,CAAc,cAAc,SAA5B,CAAtB;AACA,UAAU,SAAV,CAAoB,WAApB,GAAkC,aAAlC;;AAEA;;;;AAIA,UAAU,SAAV,CAAoB,QAApB,GAA+B,UAAS,KAAT,EAAgB;AAC7C,OAAK,KAAL,GAAa,KAAb;AACA,OAAK,OAAL,GAAe,aAAa,KAAK,IAAlB,GAAyB,oBAAzB,GACb,KAAK,WADQ,GACM,YADN,GACqB,KAAK,IAD1B,GACiC,GADjC,GACuC,cADvC,GAEb,MAAM,SAFO,GAEK,GAFpB;AAGD,CALD;;AAOA;;;;AAIA,OAAO,OAAP,GAAiB,SAAjB","file":"cast-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar MongooseError = require('../error.js');\nvar util = require('util');\n\n/**\n * Casting Error constructor.\n *\n * @param {String} type\n * @param {String} value\n * @inherits MongooseError\n * @api private\n */\n\nfunction CastError(type, value, path, reason) {\n  var stringValue = util.inspect(value);\n  stringValue = stringValue.replace(/^'/, '\"').replace(/'$/, '\"');\n  if (stringValue.charAt(0) !== '\"') {\n    stringValue = '\"' + stringValue + '\"';\n  }\n  MongooseError.call(this, 'Cast to ' + type + ' failed for value ' +\n    stringValue + ' at path \"' + path + '\"');\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n  this.stringValue = stringValue;\n  this.name = 'CastError';\n  this.kind = type;\n  this.value = value;\n  this.path = path;\n  this.reason = reason;\n}\n\n/*!\n * Inherits from MongooseError.\n */\n\nCastError.prototype = Object.create(MongooseError.prototype);\nCastError.prototype.constructor = MongooseError;\n\n/*!\n * ignore\n */\n\nCastError.prototype.setModel = function(model) {\n  this.model = model;\n  this.message = 'Cast to ' + this.kind + ' failed for value ' +\n    this.stringValue + ' at path \"' + this.path + '\"' + ' for model \"' +\n    model.modelName + '\"';\n};\n\n/*!\n * exports\n */\n\nmodule.exports = CastError;\n"]}