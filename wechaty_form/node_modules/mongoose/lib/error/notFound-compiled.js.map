{"version":3,"sources":["notFound.js"],"names":[],"mappings":"AAAA;;AAEA;;;;AAIA,IAAI,gBAAgB,QAAQ,aAAR,CAApB;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA;;;;;;AAMA,SAAS,qBAAT,CAA+B,KAA/B,EAAsC;AACpC,gBAAc,IAAd,CAAmB,IAAnB,EAAyB,kCACvB,KAAK,OAAL,CAAa,KAAb,CADuB,GACD,GADxB;;AAGA,MAAI,MAAM,iBAAV,EAA6B;AAC3B,UAAM,iBAAN,CAAwB,IAAxB;AACD,GAFD,MAEO;AACL,SAAK,KAAL,GAAa,IAAI,KAAJ,GAAY,KAAzB;AACD;;AAED,OAAK,IAAL,GAAY,uBAAZ;AACA,OAAK,KAAL,GAAa,KAAb;AACD;;AAED;;;;AAIA,sBAAsB,SAAtB,GAAkC,OAAO,MAAP,CAAc,cAAc,SAA5B,CAAlC;AACA,sBAAsB,SAAtB,CAAgC,WAAhC,GAA8C,aAA9C;;AAEA;;;;AAIA,OAAO,OAAP,GAAiB,qBAAjB","file":"notFound-compiled.js","sourcesContent":["'use strict';\n\n/*!\n * Module dependencies.\n */\n\nvar MongooseError = require('../error.js');\nvar util = require('util');\n\n/*!\n * OverwriteModel Error constructor.\n *\n * @inherits MongooseError\n */\n\nfunction DocumentNotFoundError(query) {\n  MongooseError.call(this, 'No document found for query \"' +\n    util.inspect(query) + '\"');\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n\n  this.name = 'DocumentNotFoundError';\n  this.query = query;\n}\n\n/*!\n * Inherits from MongooseError.\n */\n\nDocumentNotFoundError.prototype = Object.create(MongooseError.prototype);\nDocumentNotFoundError.prototype.constructor = MongooseError;\n\n/*!\n * exports\n */\n\nmodule.exports = DocumentNotFoundError;\n"]}