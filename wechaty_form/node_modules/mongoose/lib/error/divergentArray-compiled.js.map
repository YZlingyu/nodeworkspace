{"version":3,"sources":["divergentArray.js"],"names":[],"mappings":";AACA;;;;AAIA,IAAI,gBAAgB,QAAQ,aAAR,CAApB;;AAEA;;;;;;AAMA,SAAS,mBAAT,CAA6B,KAA7B,EAAoC;AAClC,MAAI,MAAM,mEACA,uDADA,GAEA,iEAFA,GAGA,gEAHA,GAIA,mDAJA,GAKA,8CALA,GAMA,IANA,GAMO,MAAM,IAAN,CAAW,MAAX,CANP,GAM4B,IAN5B,GAOA,oDAPV;AAQQ;;AAER,gBAAc,IAAd,CAAmB,IAAnB,EAAyB,GAAzB;AACA,QAAM,iBAAN,IAA2B,MAAM,iBAAN,CAAwB,IAAxB,EAA8B,UAAU,MAAxC,CAA3B;AACA,OAAK,IAAL,GAAY,qBAAZ;AACD;;AAED;;;;AAIA,oBAAoB,SAApB,GAAgC,OAAO,MAAP,CAAc,cAAc,SAA5B,CAAhC;AACA,oBAAoB,SAApB,CAA8B,WAA9B,GAA4C,aAA5C;;AAGA;;;;AAIA,OAAO,OAAP,GAAiB,mBAAjB","file":"divergentArray-compiled.js","sourcesContent":["\n/*!\n * Module dependencies.\n */\n\nvar MongooseError = require('../error.js');\n\n/*!\n * DivergentArrayError constructor.\n *\n * @inherits MongooseError\n */\n\nfunction DivergentArrayError(paths) {\n  var msg = 'For your own good, using `document.save()` to update an array '\n          + 'which was selected using an $elemMatch projection OR '\n          + 'populated using skip, limit, query conditions, or exclusion of '\n          + 'the _id field when the operation results in a $pop or $set of '\n          + 'the entire array is not supported. The following '\n          + 'path(s) would have been modified unsafely:\\n'\n          + '  ' + paths.join('\\n  ') + '\\n'\n          + 'Use Model.update() to update these arrays instead.';\n          // TODO write up a docs page (FAQ) and link to it\n\n  MongooseError.call(this, msg);\n  Error.captureStackTrace && Error.captureStackTrace(this, arguments.callee);\n  this.name = 'DivergentArrayError';\n}\n\n/*!\n * Inherits from MongooseError.\n */\n\nDivergentArrayError.prototype = Object.create(MongooseError.prototype);\nDivergentArrayError.prototype.constructor = MongooseError;\n\n\n/*!\n * exports\n */\n\nmodule.exports = DivergentArrayError;\n"]}