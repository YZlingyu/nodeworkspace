{"version":3,"sources":["disconnected.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,gBAAgB,QAAQ,aAAR,CAApB;;AAEA;;;;;;;;;AASA,SAAS,iBAAT,CAA2B,gBAA3B,EAA6C;AAC3C,gBAAc,IAAd,CAAmB,IAAnB,EAAyB,gDACvB,gBADuB,GACJ,6CADI,GAEvB,iDAFF;AAGA,MAAI,MAAM,iBAAV,EAA6B;AAC3B,UAAM,iBAAN,CAAwB,IAAxB;AACD,GAFD,MAEO;AACL,SAAK,KAAL,GAAa,IAAI,KAAJ,GAAY,KAAzB;AACD;AACD,OAAK,IAAL,GAAY,mBAAZ;AACD;;AAED;;;;AAIA,kBAAkB,SAAlB,GAA8B,OAAO,MAAP,CAAc,cAAc,SAA5B,CAA9B;AACA,kBAAkB,SAAlB,CAA4B,WAA5B,GAA0C,aAA1C;;AAGA;;;;AAIA,OAAO,OAAP,GAAiB,iBAAjB","file":"disconnected-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar MongooseError = require('../error.js');\n\n/**\n * Casting Error constructor.\n *\n * @param {String} type\n * @param {String} value\n * @inherits MongooseError\n * @api private\n */\n\nfunction DisconnectedError(connectionString) {\n  MongooseError.call(this, 'Ran out of retries trying to reconnect to \"' +\n    connectionString + '\". Try setting `server.reconnectTries` and ' +\n    '`server.reconnectInterval` to something higher.');\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n  this.name = 'DisconnectedError';\n}\n\n/*!\n * Inherits from MongooseError.\n */\n\nDisconnectedError.prototype = Object.create(MongooseError.prototype);\nDisconnectedError.prototype.constructor = MongooseError;\n\n\n/*!\n * exports\n */\n\nmodule.exports = DisconnectedError;\n"]}