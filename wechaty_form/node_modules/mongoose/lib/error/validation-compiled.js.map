{"version":3,"sources":["validation.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,gBAAgB,QAAQ,aAAR,CAApB;;AAEA;;;;;;;;AAQA,SAAS,eAAT,CAAyB,QAAzB,EAAmC;AACjC,OAAK,MAAL,GAAc,EAAd;AACA,MAAI,YAAY,SAAS,WAAT,CAAqB,IAArB,KAA8B,OAA9C,EAAuD;AACrD,kBAAc,IAAd,CAAmB,IAAnB,EAAyB,SAAS,WAAT,CAAqB,SAArB,GAAiC,oBAA1D;AACD,GAFD,MAEO;AACL,kBAAc,IAAd,CAAmB,IAAnB,EAAyB,mBAAzB;AACD;AACD,MAAI,MAAM,iBAAV,EAA6B;AAC3B,UAAM,iBAAN,CAAwB,IAAxB;AACD,GAFD,MAEO;AACL,SAAK,KAAL,GAAa,IAAI,KAAJ,GAAY,KAAzB;AACD;AACD,OAAK,IAAL,GAAY,iBAAZ;AACA,MAAI,QAAJ,EAAc;AACZ,aAAS,MAAT,GAAkB,KAAK,MAAvB;AACD;AACF;;AAED;;;;AAIA,gBAAgB,SAAhB,GAA4B,OAAO,MAAP,CAAc,cAAc,SAA5B,CAA5B;AACA,gBAAgB,SAAhB,CAA0B,WAA1B,GAAwC,aAAxC;;AAGA;;;;AAIA,gBAAgB,SAAhB,CAA0B,QAA1B,GAAqC,YAAW;AAC9C,MAAI,MAAM,KAAK,IAAL,GAAY,IAAtB;AACA,MAAI,OAAO,EAAX;;AAEA,SAAO,IAAP,CAAY,KAAK,MAAL,IAAe,EAA3B,EAA+B,OAA/B,CAAuC,UAAS,GAAT,EAAc;AACnD,QAAI,SAAS,KAAK,MAAL,CAAY,GAAZ,CAAb,EAA+B;AAC7B;AACD;AACD,SAAK,IAAL,CAAU,OAAO,KAAK,MAAL,CAAY,GAAZ,CAAP,CAAV;AACD,GALD,EAKG,IALH;;AAOA,SAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAb;AACD,CAZD;;AAcA;;;;AAIA,OAAO,OAAP,GAAiB,UAAU,eAA3B","file":"validation-compiled.js","sourcesContent":["/*!\n * Module requirements\n */\n\nvar MongooseError = require('../error.js');\n\n/**\n * Document Validation Error\n *\n * @api private\n * @param {Document} instance\n * @inherits MongooseError\n */\n\nfunction ValidationError(instance) {\n  this.errors = {};\n  if (instance && instance.constructor.name === 'model') {\n    MongooseError.call(this, instance.constructor.modelName + ' validation failed');\n  } else {\n    MongooseError.call(this, 'Validation failed');\n  }\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n  this.name = 'ValidationError';\n  if (instance) {\n    instance.errors = this.errors;\n  }\n}\n\n/*!\n * Inherits from MongooseError.\n */\n\nValidationError.prototype = Object.create(MongooseError.prototype);\nValidationError.prototype.constructor = MongooseError;\n\n\n/**\n * Console.log helper\n */\n\nValidationError.prototype.toString = function() {\n  var ret = this.name + ': ';\n  var msgs = [];\n\n  Object.keys(this.errors || {}).forEach(function(key) {\n    if (this === this.errors[key]) {\n      return;\n    }\n    msgs.push(String(this.errors[key]));\n  }, this);\n\n  return ret + msgs.join(', ');\n};\n\n/*!\n * Module exports\n */\n\nmodule.exports = exports = ValidationError;\n"]}