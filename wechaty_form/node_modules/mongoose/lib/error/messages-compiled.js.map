{"version":3,"sources":["messages.js"],"names":[],"mappings":";AACA;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAI,MAAM,OAAO,OAAP,GAAiB,UAAU,EAArC;;AAEA,IAAI,OAAJ,GAAc,EAAd;AACA,IAAI,OAAJ,CAAY,OAAZ,GAAsB,yDAAtB;AACA,IAAI,OAAJ,CAAY,QAAZ,GAAuB,4BAAvB;;AAEA,IAAI,MAAJ,GAAa,EAAb;AACA,IAAI,MAAJ,CAAW,GAAX,GAAiB,qEAAjB;AACA,IAAI,MAAJ,CAAW,GAAX,GAAiB,qEAAjB;;AAEA,IAAI,IAAJ,GAAW,EAAX;AACA,IAAI,IAAJ,CAAS,GAAT,GAAe,kEAAf;AACA,IAAI,IAAJ,CAAS,GAAT,GAAe,iEAAf;;AAEA,IAAI,MAAJ,GAAa,EAAb;AACA,IAAI,MAAJ,CAAW,IAAX,GAAkB,wDAAlB;AACA,IAAI,MAAJ,CAAW,KAAX,GAAmB,qCAAnB;AACA,IAAI,MAAJ,CAAW,SAAX,GAAuB,qFAAvB;AACA,IAAI,MAAJ,CAAW,SAAX,GAAuB,oFAAvB","file":"messages-compiled.js","sourcesContent":["\n/**\n * The default built-in validator error messages. These may be customized.\n *\n *     // customize within each schema or globally like so\n *     var mongoose = require('mongoose');\n *     mongoose.Error.messages.String.enum  = \"Your custom message for {PATH}.\";\n *\n * As you might have noticed, error messages support basic templating\n *\n * - `{PATH}` is replaced with the invalid document path\n * - `{VALUE}` is replaced with the invalid value\n * - `{TYPE}` is replaced with the validator type such as \"regexp\", \"min\", or \"user defined\"\n * - `{MIN}` is replaced with the declared min value for the Number.min validator\n * - `{MAX}` is replaced with the declared max value for the Number.max validator\n *\n * Click the \"show code\" link below to see all defaults.\n *\n * @static messages\n * @receiver MongooseError\n * @api public\n */\n\nvar msg = module.exports = exports = {};\n\nmsg.general = {};\nmsg.general.default = 'Validator failed for path `{PATH}` with value `{VALUE}`';\nmsg.general.required = 'Path `{PATH}` is required.';\n\nmsg.Number = {};\nmsg.Number.min = 'Path `{PATH}` ({VALUE}) is less than minimum allowed value ({MIN}).';\nmsg.Number.max = 'Path `{PATH}` ({VALUE}) is more than maximum allowed value ({MAX}).';\n\nmsg.Date = {};\nmsg.Date.min = 'Path `{PATH}` ({VALUE}) is before minimum allowed value ({MIN}).';\nmsg.Date.max = 'Path `{PATH}` ({VALUE}) is after maximum allowed value ({MAX}).';\n\nmsg.String = {};\nmsg.String.enum = '`{VALUE}` is not a valid enum value for path `{PATH}`.';\nmsg.String.match = 'Path `{PATH}` is invalid ({VALUE}).';\nmsg.String.minlength = 'Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length ({MINLENGTH}).';\nmsg.String.maxlength = 'Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length ({MAXLENGTH}).';\n"]}