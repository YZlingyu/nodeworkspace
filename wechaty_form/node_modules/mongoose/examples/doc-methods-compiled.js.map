{"version":3,"sources":["doc-methods.js"],"names":[],"mappings":";AACA,IAAI,WAAW,QAAQ,UAAR,CAAf;AACA,IAAI,SAAS,SAAS,MAAtB;;AAEA,QAAQ,GAAR,CAAY,6BAAZ,EAA2C,SAAS,OAApD;;AAEA;;;;AAIA,IAAI,kBAAkB,OAAO;AAC3B,QAAM;AACJ,UAAM,MADF;AAEJ,cAAU;AAFN,GADqB;AAK3B,UAAQ;AACN,UAAM,MADA;AAEN,SAAK,CAFC;AAGN,SAAK;AAHC;AALmB,CAAP,CAAtB;;AAYA;;;;AAIA,gBAAgB,OAAhB,CAAwB,MAAxB,GAAiC,YAAW;AAC1C,UAAQ,GAAR,CAAY,iBAAZ,EAA+B,KAAK,IAApC;AACD,CAFD;;AAIA;;;;AAIA,IAAI,YAAY,SAAS,KAAT,CAAe,WAAf,EAA4B,eAA5B,CAAhB;;AAEA;;;;;AAKA,IAAI,SAAS,mCAAoC,KAAK,MAAL,KAAgB,KAAjB,GAA0B,CAA7D,CAAb;AACA,IAAI,MAAM,yBAAyB,MAAnC;;AAEA,QAAQ,GAAR,CAAY,kBAAZ,EAAgC,GAAhC;;AAEA,SAAS,OAAT,CAAiB,GAAjB,EAAsB,UAAS,GAAT,EAAc;AAClC;AACA,MAAI,GAAJ,EAAS,MAAM,GAAN;;AAET;AACA;AACD,CAND;;AAQA;;;;AAIA,SAAS,OAAT,GAAmB;AACjB,YAAU,MAAV,CAAiB,EAAC,MAAM,MAAP,EAAe,QAAQ,GAAvB,EAAjB,EAA8C,UAAS,GAAT,EAAc,IAAd,EAAoB;AAChE,QAAI,GAAJ,EAAS,OAAO,KAAK,GAAL,CAAP;AACT,YAAQ,GAAR,CAAY,OAAZ,EAAqB,IAArB;AACA,SAAK,MAAL,GAHgE,CAGjD;AACf;AACD,GALD;AAMD;;AAED;;;;AAIA,SAAS,IAAT,CAAc,GAAd,EAAmB;AACjB,MAAI,GAAJ,EAAS,QAAQ,KAAR,CAAc,GAAd;AACT,WAAS,UAAT,CAAoB,EAApB,CAAuB,YAAvB,CAAoC,YAAW;AAC7C,aAAS,UAAT;AACD,GAFD;AAGD","file":"doc-methods-compiled.js","sourcesContent":["\nvar mongoose = require('mongoose');\nvar Schema = mongoose.Schema;\n\nconsole.log('Running mongoose version %s', mongoose.version);\n\n/**\n * Schema\n */\n\nvar CharacterSchema = Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  health: {\n    type: Number,\n    min: 0,\n    max: 100\n  }\n});\n\n/**\n * Methods\n */\n\nCharacterSchema.methods.attack = function() {\n  console.log('%s is attacking', this.name);\n};\n\n/**\n * Character model\n */\n\nvar Character = mongoose.model('Character', CharacterSchema);\n\n/**\n * Connect to the database on localhost with\n * the default port (27017)\n */\n\nvar dbname = 'mongoose-example-doc-methods-' + ((Math.random() * 10000) | 0);\nvar uri = 'mongodb://localhost/' + dbname;\n\nconsole.log('connecting to %s', uri);\n\nmongoose.connect(uri, function(err) {\n  // if we failed to connect, abort\n  if (err) throw err;\n\n  // we connected ok\n  example();\n});\n\n/**\n * Use case\n */\n\nfunction example() {\n  Character.create({name: 'Link', health: 100}, function(err, link) {\n    if (err) return done(err);\n    console.log('found', link);\n    link.attack(); // 'Link is attacking'\n    done();\n  });\n}\n\n/**\n * Clean up\n */\n\nfunction done(err) {\n  if (err) console.error(err);\n  mongoose.connection.db.dropDatabase(function() {\n    mongoose.disconnect();\n  });\n}\n"]}