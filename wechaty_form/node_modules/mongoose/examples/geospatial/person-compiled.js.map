{"version":3,"sources":["person.js"],"names":[],"mappings":"AAAA;AACA,IAAI,WAAW,QAAQ,WAAR,CAAf;AACA,IAAI,SAAS,SAAS,MAAtB;;AAEA;AACA,OAAO,OAAP,GAAiB,YAAW;AAC1B;AACA,MAAI,eAAe,IAAI,MAAJ,CAAW;AAC5B,UAAM,MADsB;AAE5B,SAAK,MAFuB;AAG5B,cAAU,IAHkB;AAI5B,YAAQ,MAJoB;AAK5B,WAAO,CAAC,MAAD,CALqB;AAM5B;AACA,SAAK,EAAC,MAAM,CAAC,MAAD,CAAP,EAAiB,OAAO,IAAxB;AAPuB,GAAX,CAAnB;;AAUA;AACA,eAAa,OAAb,CAAqB,WAArB,GAAmC,UAAS,EAAT,EAAa;AAC9C,WAAO,KAAK,KAAL,CAAW,QAAX,EAAqB,IAArB,CAA0B;AAC/B,WAAK,EAAC,aAAa,KAAK,GAAnB,EAD0B;AAE/B,YAAM,EAAC,KAAK,KAAK,IAAX;AAFyB,KAA1B,EAGJ,KAHI,CAGE,CAHF,EAGK,IAHL,CAGU,EAHV,CAAP;AAID,GALD;;AAOA,WAAS,KAAT,CAAe,QAAf,EAAyB,YAAzB;AACD,CArBD","file":"person-compiled.js","sourcesContent":["// import the necessary modules\nvar mongoose = require('../../lib');\nvar Schema = mongoose.Schema;\n\n// create an export function to encapsulate the model creation\nmodule.exports = function() {\n  // define schema\n  var PersonSchema = new Schema({\n    name: String,\n    age: Number,\n    birthday: Date,\n    gender: String,\n    likes: [String],\n    // define the geospatial field\n    loc: {type: [Number], index: '2d'}\n  });\n\n  // define a method to find the closest person\n  PersonSchema.methods.findClosest = function(cb) {\n    return this.model('Person').find({\n      loc: {$nearSphere: this.loc},\n      name: {$ne: this.name}\n    }).limit(1).exec(cb);\n  };\n\n  mongoose.model('Person', PersonSchema);\n};\n"]}