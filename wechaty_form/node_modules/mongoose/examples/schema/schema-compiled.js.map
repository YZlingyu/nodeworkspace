{"version":3,"sources":["schema.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,WAAW,QAAQ,WAAR,CAAf;AAAA,IACI,SAAS,SAAS,MADtB;;AAGA;;;;AAIA;;AAEA,IAAI,UAAU,IAAI,MAAJ,EAAd;;AAEA,QAAQ,GAAR,CAAY;AACV,SAAO;AACL,UAAM,MADD;AAEL,WAAO;AAFF,GADG;AAKV,QAAM,IALI;AAMV,QAAM,MANI;AAOV,YAAU,CAAC,OAAD;AAPA,CAAZ;;AAUA,IAAI,WAAW,IAAI,MAAJ,CAAW;AACxB,SAAO;AACL,UAAM,MADD;AAEL,WAAO;AAFF,GADiB;AAKxB,QAAM;AACJ,UAAM,MADF;AAEJ,eAAW,IAFP;AAGJ,UAAM;AAHF,GALkB;AAUxB,QAAM,IAVkB;AAWxB,OAAK,MAXmB;AAYxB,YAAU,CAAC,OAAD,CAZc;AAaxB,WAAS,OAAO;AAbQ,CAAX,CAAf;;AAgBA,IAAI,SAAS,IAAI,MAAJ,CAAW;AACtB,QAAM;AACJ,WAAO,MADH;AAEJ,UAAM;AAFF,GADgB;AAKtB,SAAO;AACL,UAAM,MADD;AAEL,cAAU,IAFL;AAGL,WAAO;AACL,cAAQ,IADH;AAEL,cAAQ;AAFH;AAHF,GALe;AAatB,SAAO;AAbe,CAAX,CAAb;;AAgBA;;;;AAIA,SAAS,IAAT,CAAc,MAAd,EACC,OADD,CACS,YAAW;AAClB,SAAO,IAAI,IAAJ,EAAP;AACD,CAHD,EAIC,GAJD,CAIK,UAAS,CAAT,EAAY;AACf,SAAO,MAAM,KAAN,GAAc,IAAI,IAAJ,EAAd,GAA2B,CAAlC;AACD,CAND;;AAQA;;;;AAIA,SAAS,GAAT,CAAa,MAAb,EAAqB,UAAS,IAAT,EAAe,IAAf,EAAqB;AACxC;AACA,cAAY,IAAZ,EAFwC,CAErB;AACnB;AACD,CAJD;;AAMA;;;;AAIA,SAAS,OAAT,CAAiB,WAAjB,GAA+B,UAAS,QAAT,EAAmB;AAChD,SAAO,KAAK,EAAL,CAAQ,KAAR,CAAc,QAAd,EAAwB,QAAxB,CAAiC,KAAK,OAAtC,EAA+C,QAA/C,CAAP;AACD,CAFD;;AAIA,SAAS,OAAT,CAAiB,WAAjB,GAA+B,UAAS,KAAT,EAAgB,QAAhB,EAA0B;AACvD,SAAO,KAAK,IAAL,CAAU,EAAC,OAAO,KAAR,EAAV,EAA0B,QAA1B,CAAP;AACD,CAFD;;AAIA,SAAS,OAAT,CAAiB,eAAjB,GAAmC,UAAS,OAAT,EAAkB,IAAlB,EAAwB,QAAxB,EAAkC;AACnE,SAAO,KAAK,IAAL,CAAU,SAAV,EAAqB,OAArB,EAA8B,KAA9B,CAAoC,MAApC,EAA4C,GAA5C,CAAgD,IAAhD,EAAsD,GAAtD,CAA0D,QAA1D,CAAP;AACD,CAFD;;AAIA;;;;AAIA,SAAS,aAAT,CAAuB,OAAvB,EAAgC;AAC9B,YAAU,WAAW,EAArB;AACA,MAAI,MAAM,QAAQ,GAAR,IAAe,OAAzB;;AAEA,SAAO,SAAS,aAAT,CAAuB,MAAvB,EAA+B;AACpC,WAAO,IAAP,CAAY,GAAZ,EAAiB,GAAjB,CAAqB,UAAS,CAAT,EAAY;AAC/B,WAAK,IAAL,GAAY,EAAE,WAAF,GAAgB,OAAhB,CAAwB,YAAxB,EAAsC,EAAtC,EAA0C,OAA1C,CAAkD,KAAlD,EAAyD,EAAzD,CAAZ;AACA,aAAO,CAAP;AACD,KAHD;AAID,GALD;AAMD;;AAED,SAAS,MAAT,CAAgB,eAAhB;;AAEA;;;;AAIA,SAAS,KAAT,CAAe,UAAf,EAA2B,QAA3B;AACA,SAAS,KAAT,CAAe,QAAf,EAAyB,MAAzB","file":"schema-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar mongoose = require('../../lib'),\n    Schema = mongoose.Schema;\n\n/**\n * Schema definition\n */\n\n// recursive embedded-document schema\n\nvar Comment = new Schema();\n\nComment.add({\n  title: {\n    type: String,\n    index: true\n  },\n  date: Date,\n  body: String,\n  comments: [Comment]\n});\n\nvar BlogPost = new Schema({\n  title: {\n    type: String,\n    index: true\n  },\n  slug: {\n    type: String,\n    lowercase: true,\n    trim: true\n  },\n  date: Date,\n  buf: Buffer,\n  comments: [Comment],\n  creator: Schema.ObjectId\n});\n\nvar Person = new Schema({\n  name: {\n    first: String,\n    last: String\n  },\n  email: {\n    type: String,\n    required: true,\n    index: {\n      unique: true,\n      sparse: true\n    }\n  },\n  alive: Boolean\n});\n\n/**\n * Accessing a specific schema type by key\n */\n\nBlogPost.path('date')\n.default(function() {\n  return new Date();\n})\n.set(function(v) {\n  return v === 'now' ? new Date() : v;\n});\n\n/**\n * Pre hook.\n */\n\nBlogPost.pre('save', function(next, done) {\n  /* global emailAuthor */\n  emailAuthor(done); // some async function\n  next();\n});\n\n/**\n * Methods\n */\n\nBlogPost.methods.findCreator = function(callback) {\n  return this.db.model('Person').findById(this.creator, callback);\n};\n\nBlogPost.statics.findByTitle = function(title, callback) {\n  return this.find({title: title}, callback);\n};\n\nBlogPost.methods.expressiveQuery = function(creator, date, callback) {\n  return this.find('creator', creator).where('date').gte(date).run(callback);\n};\n\n/**\n * Plugins\n */\n\nfunction slugGenerator(options) {\n  options = options || {};\n  var key = options.key || 'title';\n\n  return function slugGenerator(schema) {\n    schema.path(key).set(function(v) {\n      this.slug = v.toLowerCase().replace(/[^a-z0-9]/g, '').replace(/-+/g, '');\n      return v;\n    });\n  };\n}\n\nBlogPost.plugin(slugGenerator());\n\n/**\n * Define model.\n */\n\nmongoose.model('BlogPost', BlogPost);\nmongoose.model('Person', Person);\n"]}