{"version":3,"sources":["replica-sets.js"],"names":[],"mappings":";AACA;AACA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;;AAEA;AACA,IAAI,WAAW,QAAQ,WAAR,CAAf;;AAEA,QAAQ,aAAR;;AAEA,IAAI,SAAS,SAAS,KAAT,CAAe,QAAf,CAAb;;AAEA;AACA,IAAI,OAAO,CACT;AACE,QAAM,MADR;AAEE,OAAK,EAFP;AAGE,YAAU,IAAI,IAAJ,GAAW,WAAX,CAAwB,IAAI,IAAJ,GAAW,WAAX,KAA2B,EAAnD;AAHZ,CADS,EAMT;AACE,QAAM,MADR;AAEE,OAAK,EAFP;AAGE,YAAU,IAAI,IAAJ,GAAW,WAAX,CAAwB,IAAI,IAAJ,GAAW,WAAX,KAA2B,EAAnD;AAHZ,CANS,EAWT;AACE,QAAM,KADR;AAEE,OAAK,EAFP;AAGE,YAAU,IAAI,IAAJ,GAAW,WAAX,CAAwB,IAAI,IAAJ,GAAW,WAAX,KAA2B,EAAnD;AAHZ,CAXS,EAgBT;AACE,QAAM,OADR;AAEE,OAAK,EAFP;AAGE,YAAU,IAAI,IAAJ,GAAW,WAAX,CAAwB,IAAI,IAAJ,GAAW,WAAX,KAA2B,EAAnD;AAHZ,CAhBS,EAqBT;AACE,QAAM,SADR;AAEE,OAAK,IAFP;AAGE,YAAU,IAAI,IAAJ,GAAW,WAAX,CAAwB,IAAI,IAAJ,GAAW,WAAX,KAA2B,IAAnD;AAHZ,CArBS,CAAX;;AA6BA;AACA;AACA,IAAI,OAAO;AACT,WAAS,EAAC,SAAS,KAAV;AADA,CAAX;AAGA,SAAS,OAAT,CAAiB,mEAAjB,EAAsF,IAAtF,EAA4F,UAAS,GAAT,EAAc;AACxG,MAAI,GAAJ,EAAS,MAAM,GAAN;;AAET;AACA,QAAM,IAAN,CAAW,IAAX,EAAiB,UAAS,IAAT,EAAe,EAAf,EAAmB;AAClC,WAAO,MAAP,CAAc,IAAd,EAAoB,EAApB;AACD,GAFD,EAEG,UAAS,GAAT,EAAc;AACf,QAAI,GAAJ,EAAS,CAER;AADG;;;AAGF;AACF,QAAI,OAAO,OAAO,IAAP,CAAY,EAAC,KAAK,EAAC,KAAK,IAAN,EAAN,EAAZ,EAAgC,IAAhC,EAAX;;AAEA,SAAK,IAAL,CAAU,UAAS,MAAT,EAAiB;AACzB,cAAQ,GAAR,CAAY,kBAAZ,EAAgC,MAAhC;AACD,KAFD,EAEG,IAFH,CAEQ,OAFR;AAGD,GAbD;AAcD,CAlBD;;AAoBA,SAAS,OAAT,GAAmB;AACjB,SAAO,MAAP,CAAc,YAAW;AACvB,aAAS,UAAT;AACD,GAFD;AAGD","file":"replica-sets-compiled.js","sourcesContent":["\n// import async to make control flow simplier\nvar async = require('async');\n\n// import the rest of the normal stuff\nvar mongoose = require('../../lib');\n\nrequire('./person.js')();\n\nvar Person = mongoose.model('Person');\n\n// define some dummy data\nvar data = [\n  {\n    name: 'bill',\n    age: 25,\n    birthday: new Date().setFullYear((new Date().getFullYear() - 25))\n  },\n  {\n    name: 'mary',\n    age: 30,\n    birthday: new Date().setFullYear((new Date().getFullYear() - 30))\n  },\n  {\n    name: 'bob',\n    age: 21,\n    birthday: new Date().setFullYear((new Date().getFullYear() - 21))\n  },\n  {\n    name: 'lilly',\n    age: 26,\n    birthday: new Date().setFullYear((new Date().getFullYear() - 26))\n  },\n  {\n    name: 'alucard',\n    age: 1000,\n    birthday: new Date().setFullYear((new Date().getFullYear() - 1000))\n  }\n];\n\n\n// to connect to a replica set, pass in the comma delimited uri and optionally\n// any connection options such as the rs_name.\nvar opts = {\n  replSet: {rs_name: 'rs0'}\n};\nmongoose.connect('mongodb://localhost:27018/persons,localhost:27019,localhost:27020', opts, function(err) {\n  if (err) throw err;\n\n  // create all of the dummy people\n  async.each(data, function(item, cb) {\n    Person.create(item, cb);\n  }, function(err) {\n    if (err) {\n        // handle error\n    }\n\n      // create and delete some data\n    var prom = Person.find({age: {$lt: 1000}}).exec();\n\n    prom.then(function(people) {\n      console.log('young people: %s', people);\n    }).then(cleanup);\n  });\n});\n\nfunction cleanup() {\n  Person.remove(function() {\n    mongoose.disconnect();\n  });\n}\n"]}