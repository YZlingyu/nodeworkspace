{"version":3,"sources":["test.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,eAAR,CAAb;AACA,IAAI,SAAS,QAAQ,WAAR,CAAb;AACA,IAAI,OAAO,QAAQ,YAAR,CAAX;;AAEA,SAAS,wBAAT,EAAmC,YAAU;AAC5C,IAAG,iDAAH,EAAsD,YAAY;;AAEjE;AACA,MAAI,WAAW,KAAK,MAAL,CAAY,SAAZ,CAAf;AACA,SAAO,SAAS,GAAhB,EAAqB,EAArB,CAAwB,EAAxB,CAA2B,KAA3B;;AAEA;AACA,aAAW,KAAK,MAAL,CAAY,6BAAZ,CAAX;AACA,SAAO,SAAS,MAAhB,EAAwB,EAAxB,CAA2B,EAA3B,CAA8B,OAA9B;AACA,SAAO,SAAS,OAAhB,EAAyB,EAAzB,CAA4B,EAA5B,CAA+B,QAA/B;;AAEA;AACA,aAAW,KAAK,MAAL,CAAY,mBAAZ,CAAX;AACA,SAAO,SAAS,KAAhB,EAAuB,EAAvB,CAA0B,EAA1B,CAA6B,WAA7B;AACA,EAdD;;AAgBA,IAAG,gDAAH,EAAqD,YAAY;AAChE,SAAO,KAAK,MAAL,CAAY,EAAE,GAAG,GAAL,EAAZ,CAAP,EAAgC,EAAhC,CAAmC,EAAnC,CAAsC,KAAtC;AACA,SAAO,KAAK,MAAL,CAAY,EAAE,GAAG,GAAL,EAAU,GAAG,GAAb,EAAZ,CAAP,EAAwC,EAAxC,CAA2C,EAA3C,CAA8C,SAA9C;AACA,SAAO,KAAK,MAAL,CAAY,EAAE,GAAG,GAAL,EAAU,GAAG,YAAb,EAAZ,CAAP,EAAiD,EAAjD,CAAoD,EAApD,CAAuD,oBAAvD;AACA,EAJD;AAKA,CAtBD","file":"test-compiled.js","sourcesContent":["var assert = require('better-assert');\r\nvar expect = require('expect.js');\r\nvar util = require('./index.js');\r\n\r\ndescribe('querystring test suite', function(){\r\n\tit('should parse a querystring and return an object', function () {\r\n\t\t\r\n\t\t// Single assignment\r\n\t\tvar queryObj = util.decode(\"foo=bar\");\r\n\t\texpect(queryObj.foo).to.be(\"bar\");\r\n\t\t\r\n\t\t// Multiple assignments\r\n\t\tqueryObj = util.decode(\"france=paris&germany=berlin\");\r\n\t\texpect(queryObj.france).to.be(\"paris\");\r\n\t\texpect(queryObj.germany).to.be(\"berlin\");\r\n\t\t\r\n\t\t// Assignments containing non-alphanumeric characters\r\n\t\tqueryObj = util.decode(\"india=new%20delhi\");\r\n\t\texpect(queryObj.india).to.be(\"new delhi\");\r\n\t});\r\n\t\r\n\tit('should construct a query string from an object', function () {\r\n\t\texpect(util.encode({ a: 'b' })).to.be('a=b');\r\n\t\texpect(util.encode({ a: 'b', c: 'd' })).to.be('a=b&c=d');\r\n\t\texpect(util.encode({ a: 'b', c: 'tobi rocks' })).to.be('a=b&c=tobi%20rocks');\r\n\t});\r\n});\r\n"]}