{"version":3,"sources":["namespace.js"],"names":[],"mappings":";AACA;;;;AAIA,IAAI,SAAS,QAAQ,UAAR,CAAb;AACA,IAAI,UAAU,QAAQ,QAAR,EAAkB,YAAhC;AACA,IAAI,SAAS,QAAQ,kBAAR,CAAb;AACA,IAAI,QAAQ,QAAQ,OAAR,EAAiB,qBAAjB,CAAZ;AACA,IAAI,SAAS,QAAQ,YAAR,CAAb;;AAEA;;;;AAIA,OAAO,OAAP,GAAiB,UAAU,SAA3B;;AAEA;;;;AAIA,QAAQ,MAAR,GAAiB,CACf,SADe,EACD;AACd,YAFe,EAGf,aAHe,CAAjB;;AAMA;;;;AAIA,QAAQ,KAAR,GAAgB,CACd,MADc,EAEd,UAFc,EAGd,OAHc,CAAhB;;AAMA;;;;AAIA,IAAI,OAAO,QAAQ,SAAR,CAAkB,IAA7B;;AAEA;;;;;;;;AAQA,SAAS,SAAT,CAAmB,MAAnB,EAA2B,IAA3B,EAAgC;AAC9B,OAAK,IAAL,GAAY,IAAZ;AACA,OAAK,MAAL,GAAc,MAAd;AACA,OAAK,OAAL,GAAe,EAAf;AACA,OAAK,SAAL,GAAiB,EAAjB;AACA,OAAK,GAAL,GAAW,EAAX;AACA,OAAK,GAAL,GAAW,CAAX;AACA,OAAK,WAAL;AACD;;AAED;;;;AAIA,UAAU,SAAV,CAAoB,SAApB,GAAgC,QAAQ,SAAxC;;AAEA;;;;AAIA,QAAQ,KAAR,CAAc,OAAd,CAAsB,UAAS,IAAT,EAAc;AAClC,SAAO,cAAP,CAAsB,UAAU,SAAhC,EAA2C,IAA3C,EAAiD;AAC/C,SAAK,YAAW;AACd,WAAK,KAAL,GAAa,KAAK,KAAL,IAAc,EAA3B;AACA,WAAK,KAAL,CAAW,IAAX,IAAmB,IAAnB;AACA,aAAO,IAAP;AACD;AAL8C,GAAjD;AAOD,CARD;;AAUA;;;;;;;;AAQA,UAAU,SAAV,CAAoB,WAApB,GAAkC,YAAU;AAC1C,OAAK,OAAL,GAAe,KAAK,KAAK,MAAL,CAAY,OAAZ,EAAL,EAA4B,IAA5B,CAAf;AACD,CAFD;;AAIA;;;;;;;AAOA,UAAU,SAAV,CAAoB,GAApB,GAA0B,UAAS,EAAT,EAAY;AACpC,OAAK,GAAL,CAAS,IAAT,CAAc,EAAd;AACA,SAAO,IAAP;AACD,CAHD;;AAKA;;;;;;;;AAQA,UAAU,SAAV,CAAoB,GAApB,GAA0B,UAAS,MAAT,EAAiB,EAAjB,EAAoB;AAC5C,MAAI,MAAM,KAAK,GAAL,CAAS,KAAT,CAAe,CAAf,CAAV;AACA,MAAI,CAAC,IAAI,MAAT,EAAiB,OAAO,GAAG,IAAH,CAAP;;AAEjB,WAAS,GAAT,CAAa,CAAb,EAAe;AACb,QAAI,CAAJ,EAAO,MAAP,EAAe,UAAS,GAAT,EAAa;AAC1B;AACA,UAAI,GAAJ,EAAS,OAAO,GAAG,GAAH,CAAP;;AAET;AACA,UAAI,CAAC,IAAI,IAAI,CAAR,CAAL,EAAiB,OAAO,GAAG,IAAH,CAAP;;AAEjB;AACA,UAAI,IAAI,CAAR;AACD,KATD;AAUD;;AAED,MAAI,CAAJ;AACD,CAlBD;;AAoBA;;;;;;;;AAQA,UAAU,SAAV,CAAoB,EAApB,GACA,UAAU,SAAV,CAAoB,EAApB,GAAyB,UAAS,IAAT,EAAc;AACrC,OAAK,KAAL,GAAa,KAAK,KAAL,IAAc,EAA3B;AACA,MAAI,CAAC,CAAC,KAAK,KAAL,CAAW,OAAX,CAAmB,IAAnB,CAAN,EAAgC,KAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB;AAChC,SAAO,IAAP;AACD,CALD;;AAOA;;;;;;;AAOA,UAAU,SAAV,CAAoB,GAApB,GAA0B,UAAS,MAAT,EAAiB,KAAjB,EAAwB,EAAxB,EAA2B;AACnD,QAAM,yBAAN,EAAiC,KAAK,IAAtC;AACA,MAAI,SAAS,IAAI,MAAJ,CAAW,IAAX,EAAiB,MAAjB,EAAyB,KAAzB,CAAb;AACA,MAAI,OAAO,IAAX;AACA,OAAK,GAAL,CAAS,MAAT,EAAiB,UAAS,GAAT,EAAa;AAC5B,YAAQ,QAAR,CAAiB,YAAU;AACzB,UAAI,UAAU,OAAO,IAAP,CAAY,UAA1B,EAAsC;AACpC,YAAI,GAAJ,EAAS,OAAO,OAAO,KAAP,CAAa,IAAI,IAAJ,IAAY,IAAI,OAA7B,CAAP;;AAET;AACA,aAAK,OAAL,CAAa,OAAO,EAApB,IAA0B,MAA1B;;AAEA;AACA;AACA;AACA;AACA,eAAO,SAAP;AACA,YAAI,EAAJ,EAAQ;;AAER;AACA,aAAK,IAAL,CAAU,SAAV,EAAqB,MAArB;AACA,aAAK,IAAL,CAAU,YAAV,EAAwB,MAAxB;AACD,OAhBD,MAgBO;AACL,cAAM,uDAAN;AACD;AACF,KApBD;AAqBD,GAtBD;AAuBA,SAAO,MAAP;AACD,CA5BD;;AA8BA;;;;;;AAMA,UAAU,SAAV,CAAoB,MAApB,GAA6B,UAAS,MAAT,EAAgB;AAC3C,MAAI,KAAK,OAAL,CAAa,cAAb,CAA4B,OAAO,EAAnC,CAAJ,EAA4C;AAC1C,WAAO,KAAK,OAAL,CAAa,OAAO,EAApB,CAAP;AACD,GAFD,MAEO;AACL,UAAM,wBAAN,EAAgC,OAAO,EAAvC;AACD;AACF,CAND;;AAQA;;;;;;;AAOA,UAAU,SAAV,CAAoB,IAApB,GAA2B,UAAS,EAAT,EAAY;AACrC,MAAI,CAAC,QAAQ,MAAR,CAAe,OAAf,CAAuB,EAAvB,CAAL,EAAiC;AAC/B,SAAK,KAAL,CAAW,IAAX,EAAiB,SAAjB;AACD,GAFD,MAEO;AACL;AACA,QAAI,OAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAX;AACA,QAAI,aAAa,OAAO,KAAxB,CAHK,CAG0B;AAC/B,QAAI,OAAO,IAAP,CAAJ,EAAkB;AAAE,mBAAa,OAAO,YAApB;AAAmC,KAJlD,CAImD;;AAExD,QAAI,SAAS,EAAE,MAAM,UAAR,EAAoB,MAAM,IAA1B,EAAb;;AAEA,QAAI,cAAc,OAAO,KAAK,KAAK,MAAL,GAAc,CAAnB,CAAzB,EAAgD;AAC9C,YAAM,IAAI,KAAJ,CAAU,+CAAV,CAAN;AACD;;AAED,SAAK,OAAL,CAAa,SAAb,CAAuB,MAAvB,EAA+B;AAC7B,aAAO,KAAK,KADiB;AAE7B,aAAO,KAAK;AAFiB,KAA/B;;AAKA,WAAO,KAAK,KAAZ;AACA,WAAO,KAAK,KAAZ;AACD;AACD,SAAO,IAAP;AACD,CAxBD;;AA0BA;;;;;;;AAOA,UAAU,SAAV,CAAoB,IAApB,GACA,UAAU,SAAV,CAAoB,KAApB,GAA4B,YAAU;AACpC,MAAI,OAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAX;AACA,OAAK,OAAL,CAAa,SAAb;AACA,OAAK,IAAL,CAAU,KAAV,CAAgB,IAAhB,EAAsB,IAAtB;AACA,SAAO,IAAP;AACD,CAND;;AAQA;;;;;;;AAOA,UAAU,SAAV,CAAoB,OAApB,GAA8B,UAAS,EAAT,EAAY;AACxC,OAAK,OAAL,CAAa,OAAb,CAAqB,KAAK,KAA1B,EAAiC,EAAjC;AACA;AACA;AACA,SAAO,KAAK,KAAZ;AACA,SAAO,IAAP;AACD,CAND;;AAQA;;;;;;;;AAQA,UAAU,SAAV,CAAoB,QAApB,GAA+B,UAAS,QAAT,EAAkB;AAC/C,OAAK,KAAL,GAAa,KAAK,KAAL,IAAc,EAA3B;AACA,OAAK,KAAL,CAAW,QAAX,GAAsB,QAAtB;AACA,SAAO,IAAP;AACD,CAJD","file":"namespace-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar Socket = require('./socket');\nvar Emitter = require('events').EventEmitter;\nvar parser = require('socket.io-parser');\nvar debug = require('debug')('socket.io:namespace');\nvar hasBin = require('has-binary');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Namespace;\n\n/**\n * Blacklisted events.\n */\n\nexports.events = [\n  'connect',    // for symmetry with client\n  'connection',\n  'newListener'\n];\n\n/**\n * Flags.\n */\n\nexports.flags = [\n  'json',\n  'volatile',\n  'local'\n];\n\n/**\n * `EventEmitter#emit` reference.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * Namespace constructor.\n *\n * @param {Server} server instance\n * @param {Socket} name\n * @api private\n */\n\nfunction Namespace(server, name){\n  this.name = name;\n  this.server = server;\n  this.sockets = {};\n  this.connected = {};\n  this.fns = [];\n  this.ids = 0;\n  this.initAdapter();\n}\n\n/**\n * Inherits from `EventEmitter`.\n */\n\nNamespace.prototype.__proto__ = Emitter.prototype;\n\n/**\n * Apply flags from `Socket`.\n */\n\nexports.flags.forEach(function(flag){\n  Object.defineProperty(Namespace.prototype, flag, {\n    get: function() {\n      this.flags = this.flags || {};\n      this.flags[flag] = true;\n      return this;\n    }\n  });\n});\n\n/**\n * Initializes the `Adapter` for this nsp.\n * Run upon changing adapter by `Server#adapter`\n * in addition to the constructor.\n *\n * @api private\n */\n\nNamespace.prototype.initAdapter = function(){\n  this.adapter = new (this.server.adapter())(this);\n};\n\n/**\n * Sets up namespace middleware.\n *\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.use = function(fn){\n  this.fns.push(fn);\n  return this;\n};\n\n/**\n * Executes the middleware for an incoming client.\n *\n * @param {Socket} socket that will get added\n * @param {Function} fn last fn call in the middleware\n * @api private\n */\n\nNamespace.prototype.run = function(socket, fn){\n  var fns = this.fns.slice(0);\n  if (!fns.length) return fn(null);\n\n  function run(i){\n    fns[i](socket, function(err){\n      // upon error, short-circuit\n      if (err) return fn(err);\n\n      // if no middleware left, summon callback\n      if (!fns[i + 1]) return fn(null);\n\n      // go on to next\n      run(i + 1);\n    });\n  }\n\n  run(0);\n};\n\n/**\n * Targets a room when emitting.\n *\n * @param {String} name\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.to =\nNamespace.prototype.in = function(name){\n  this.rooms = this.rooms || [];\n  if (!~this.rooms.indexOf(name)) this.rooms.push(name);\n  return this;\n};\n\n/**\n * Adds a new client.\n *\n * @return {Socket}\n * @api private\n */\n\nNamespace.prototype.add = function(client, query, fn){\n  debug('adding socket to nsp %s', this.name);\n  var socket = new Socket(this, client, query);\n  var self = this;\n  this.run(socket, function(err){\n    process.nextTick(function(){\n      if ('open' == client.conn.readyState) {\n        if (err) return socket.error(err.data || err.message);\n\n        // track socket\n        self.sockets[socket.id] = socket;\n\n        // it's paramount that the internal `onconnect` logic\n        // fires before user-set events to prevent state order\n        // violations (such as a disconnection before the connection\n        // logic is complete)\n        socket.onconnect();\n        if (fn) fn();\n\n        // fire user-set events\n        self.emit('connect', socket);\n        self.emit('connection', socket);\n      } else {\n        debug('next called after client was closed - ignoring socket');\n      }\n    });\n  });\n  return socket;\n};\n\n/**\n * Removes a client. Called by each `Socket`.\n *\n * @api private\n */\n\nNamespace.prototype.remove = function(socket){\n  if (this.sockets.hasOwnProperty(socket.id)) {\n    delete this.sockets[socket.id];\n  } else {\n    debug('ignoring remove for %s', socket.id);\n  }\n};\n\n/**\n * Emits to all clients.\n *\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.emit = function(ev){\n  if (~exports.events.indexOf(ev)) {\n    emit.apply(this, arguments);\n  } else {\n    // set up packet object\n    var args = Array.prototype.slice.call(arguments);\n    var parserType = parser.EVENT; // default\n    if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n\n    var packet = { type: parserType, data: args };\n\n    if ('function' == typeof args[args.length - 1]) {\n      throw new Error('Callbacks are not supported when broadcasting');\n    }\n\n    this.adapter.broadcast(packet, {\n      rooms: this.rooms,\n      flags: this.flags\n    });\n\n    delete this.rooms;\n    delete this.flags;\n  }\n  return this;\n};\n\n/**\n * Sends a `message` event to all clients.\n *\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.send =\nNamespace.prototype.write = function(){\n  var args = Array.prototype.slice.call(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Gets a list of clients.\n *\n * @return {Namespace} self\n * @api public\n */\n\nNamespace.prototype.clients = function(fn){\n  this.adapter.clients(this.rooms, fn);\n  // delete rooms flag for scenario:\n  // .in('room').clients() (GH-1978)\n  delete this.rooms;\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} compress if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nNamespace.prototype.compress = function(compress){\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n"]}