{"version":3,"sources":["options.asynct.js"],"names":[],"mappings":"AAAA,IAAI,KAAK,QAAQ,OAAR,EAAiB,KAAjB,CAAuB,QAAvB,CAAT;AAAA,IACI,QAAQ,QAAQ,IAAR,CADZ;;AAGA,QAAS,sBAAT,IAAmC,UAAU,IAAV,EAAgB;AACjD,MAAI,IAAI,MAAM,KAAK,KAAX,EAAkB,IAAlB,EAAwB;AAC9B,eAAW;AADmB,GAAxB,CAAR;AAAA,MAGI,cAAc,KAHlB;AAAA,MAII,OAAO,EAJX;;AAMA,IAAE,EAAF,CAAK,OAAL,EAAc,UAAU,GAAV,EAAe;AAC3B,kBAAc,IAAd;AACD,GAFD;;AAIA,IAAE,EAAF,CAAK,MAAL,EAAa,UAAU,GAAV,EAAe;AAAE,SAAK,IAAL,CAAU,GAAV;AAAgB,GAA9C;;AAEA,IAAE,KAAF,CAAQ,aAAR;AACA,IAAE,KAAF,CAAQ,QAAR;AACA,KAAG,WAAH,EAAgB,KAAhB,CAAsB,IAAtB;;AAEA,IAAE,GAAF;AACA,OAAK,IAAL;AACD,CAnBD","file":"options.asynct-compiled.js","sourcesContent":["var it = require('it-is').style('colour')\n  , split = require('..')\n\nexports ['maximum buffer limit'] = function (test) {\n  var s = split(JSON.parse, null, {\n    maxLength: 2\n  })\n    , caughtError = false\n    , rows = []\n\n  s.on('error', function (err) {\n    caughtError = true\n  })\n\n  s.on('data', function (row) { rows.push(row) })\n\n  s.write('{\"a\":1}\\n{\"')\n  s.write('{    \"')\n  it(caughtError).equal(true)\n\n  s.end()\n  test.done()\n}\n"]}