{"version":3,"sources":["tmp.js"],"names":[],"mappings":"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","file":"tmp-compiled.js","sourcesContent":["/*!\n * Tmp\n *\n * Copyright (c) 2011-2015 KARASZI Istvan <github@spam.raszi.hu>\n *\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nvar\n  fs     = require('fs'),\n  path   = require('path'),\n  crypto = require('crypto'),\n  tmpDir = require('os-tmpdir'),\n  _c     = process.binding('constants');\n\n\n/**\n * The working inner variables.\n */\nvar\n  // store the actual TMP directory\n  _TMP = tmpDir(),\n\n  // the random characters to choose from\n  RANDOM_CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n\n  TEMPLATE_PATTERN = /XXXXXX/,\n\n  DEFAULT_TRIES = 3,\n\n  CREATE_FLAGS = (_c.O_CREAT || _c.fs.O_CREAT) | (_c.O_EXCL || _c.fs.O_EXCL) | (_c.O_RDWR || _c.fs.O_RDWR),\n\n  DIR_MODE = 448 /* 0700 */,\n  FILE_MODE = 384 /* 0600 */,\n\n  // this will hold the objects need to be removed on exit\n  _removeObjects = [],\n\n  _gracefulCleanup = false,\n  _uncaughtException = false;\n\n/**\n * Random name generator based on crypto.\n * Adapted from http://blog.tompawlak.org/how-to-generate-random-values-nodejs-javascript\n *\n * @param {Number} howMany\n * @return {String}\n * @api private\n */\nfunction _randomChars(howMany) {\n  var\n    value = [],\n    rnd = null;\n\n  // make sure that we do not fail because we ran out of entropy\n  try {\n    rnd = crypto.randomBytes(howMany);\n  } catch (e) {\n    rnd = crypto.pseudoRandomBytes(howMany);\n  }\n\n  for (var i = 0; i < howMany; i++) {\n    value.push(RANDOM_CHARS[rnd[i] % RANDOM_CHARS.length]);\n  }\n\n  return value.join('');\n}\n\n/**\n * Checks whether the `obj` parameter is defined or not.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\nfunction _isUndefined(obj) {\n  return typeof obj === 'undefined';\n}\n\n/**\n * Parses the function arguments.\n *\n * This function helps to have optional arguments.\n *\n * @param {Object} options\n * @param {Function} callback\n * @api private\n */\nfunction _parseArguments(options, callback) {\n  if (typeof options == 'function') {\n    var\n      tmp = options,\n      options = callback || {},\n      callback = tmp;\n  } else if (typeof options == 'undefined') {\n    options = {};\n  }\n\n  return [options, callback];\n}\n\n/**\n * Generates a new temporary name.\n *\n * @param {Object} opts\n * @returns {String}\n * @api private\n */\nfunction _generateTmpName(opts) {\n  if (opts.name) {\n    return path.join(opts.dir || _TMP, opts.name);\n  }\n\n  // mkstemps like template\n  if (opts.template) {\n    return opts.template.replace(TEMPLATE_PATTERN, _randomChars(6));\n  }\n\n  // prefix and postfix\n  var name = [\n    opts.prefix || 'tmp-',\n    process.pid,\n    _randomChars(12),\n    opts.postfix || ''\n  ].join('');\n\n  return path.join(opts.dir || _TMP, name);\n}\n\n/**\n * Gets a temporary file name.\n *\n * @param {Object} options\n * @param {Function} callback\n * @api private\n */\nfunction _getTmpName(options, callback) {\n  var\n    args = _parseArguments(options, callback),\n    opts = args[0],\n    cb = args[1],\n    tries = opts.tries || DEFAULT_TRIES;\n\n  if (isNaN(tries) || tries < 0)\n    return cb(new Error('Invalid tries'));\n\n  if (opts.template && !opts.template.match(TEMPLATE_PATTERN))\n    return cb(new Error('Invalid template provided'));\n\n  (function _getUniqueName() {\n    var name = _generateTmpName(opts);\n\n    // check whether the path exists then retry if needed\n    fs.stat(name, function (err) {\n      if (!err) {\n        if (tries-- > 0) return _getUniqueName();\n\n        return cb(new Error('Could not get a unique tmp filename, max tries reached ' + name));\n      }\n\n      cb(null, name);\n    });\n  }());\n}\n\n/**\n * Synchronous version of _getTmpName.\n *\n * @param {Object} options\n * @returns {String}\n * @api private\n */\nfunction _getTmpNameSync(options) {\n  var\n    args = _parseArguments(options),\n    opts = args[0],\n    tries = opts.tries || DEFAULT_TRIES;\n\n  if (isNaN(tries) || tries < 0)\n    throw new Error('Invalid tries');\n\n  if (opts.template && !opts.template.match(TEMPLATE_PATTERN))\n    throw new Error('Invalid template provided');\n\n  do {\n    var name = _generateTmpName(opts);\n    try {\n      fs.statSync(name);\n    } catch (e) {\n      return name;\n    }\n  } while (tries-- > 0);\n\n  throw new Error('Could not get a unique tmp filename, max tries reached');\n}\n\n/**\n * Creates and opens a temporary file.\n *\n * @param {Object} options\n * @param {Function} callback\n * @api public\n */\nfunction _createTmpFile(options, callback) {\n  var\n    args = _parseArguments(options, callback),\n    opts = args[0],\n    cb = args[1];\n\n  opts.postfix = (_isUndefined(opts.postfix)) ? '.tmp' : opts.postfix;\n\n  // gets a temporary filename\n  _getTmpName(opts, function _tmpNameCreated(err, name) {\n    if (err) return cb(err);\n\n    // create and open the file\n    fs.open(name, CREATE_FLAGS, opts.mode || FILE_MODE, function _fileCreated(err, fd) {\n      if (err) return cb(err);\n\n      cb(null, name, fd, _prepareTmpFileRemoveCallback(name, fd, opts));\n    });\n  });\n}\n\n/**\n * Synchronous version of _createTmpFile.\n *\n * @param {Object} options\n * @returns {Object} object consists of name, fd and removeCallback\n * @api private\n */\nfunction _createTmpFileSync(options) {\n  var\n    args = _parseArguments(options),\n    opts = args[0];\n\n  opts.postfix = opts.postfix || '.tmp';\n\n  var name = _getTmpNameSync(opts);\n  var fd = fs.openSync(name, CREATE_FLAGS, opts.mode || FILE_MODE);\n\n  return {\n    name : name,\n    fd : fd,\n    removeCallback : _prepareTmpFileRemoveCallback(name, fd, opts)\n  };\n}\n\n/**\n * Removes files and folders in a directory recursively.\n *\n * @param {String} root\n * @api private\n */\nfunction _rmdirRecursiveSync(root) {\n  var dirs = [root];\n\n  do {\n    var\n      dir = dirs.pop(),\n      deferred = false,\n      files = fs.readdirSync(dir);\n\n    for (var i = 0, length = files.length; i < length; i++) {\n      var\n        file = path.join(dir, files[i]),\n        stat = fs.lstatSync(file); // lstat so we don't recurse into symlinked directories\n\n      if (stat.isDirectory()) {\n        if (!deferred) {\n          deferred = true;\n          dirs.push(dir);\n        }\n        dirs.push(file);\n      } else {\n        fs.unlinkSync(file);\n      }\n    }\n\n    if (!deferred) {\n      fs.rmdirSync(dir);\n    }\n  } while (dirs.length !== 0);\n}\n\n/**\n * Creates a temporary directory.\n *\n * @param {Object} options\n * @param {Function} callback\n * @api public\n */\nfunction _createTmpDir(options, callback) {\n  var\n    args = _parseArguments(options, callback),\n    opts = args[0],\n    cb = args[1];\n\n  // gets a temporary filename\n  _getTmpName(opts, function _tmpNameCreated(err, name) {\n    if (err) return cb(err);\n\n    // create the directory\n    fs.mkdir(name, opts.mode || DIR_MODE, function _dirCreated(err) {\n      if (err) return cb(err);\n\n      cb(null, name, _prepareTmpDirRemoveCallback(name, opts));\n    });\n  });\n}\n\n/**\n * Synchronous version of _createTmpDir.\n *\n * @param {Object} options\n * @returns {Object} object consists of name and removeCallback\n * @api private\n */\nfunction _createTmpDirSync(options) {\n  var\n    args = _parseArguments(options),\n    opts = args[0];\n\n  var name = _getTmpNameSync(opts);\n  fs.mkdirSync(name, opts.mode || DIR_MODE);\n\n  return {\n    name : name,\n    removeCallback : _prepareTmpDirRemoveCallback(name, opts)\n  };\n}\n\n/**\n * Prepares the callback for removal of the temporary file.\n *\n * @param {String} name\n * @param {int} fd\n * @param {Object} opts\n * @api private\n * @returns {Function} the callback\n */\nfunction _prepareTmpFileRemoveCallback(name, fd, opts) {\n  var removeCallback = _prepareRemoveCallback(function _removeCallback(fdPath) {\n    try {\n      fs.closeSync(fdPath[0]);\n    }\n    catch (e) {\n      // under some node/windows related circumstances, a temporary file\n      // may have not be created as expected or the file was already closed\n      // by the user, in which case we will simply ignore the error\n      if (e.errno != -(_c.EBADF || _c.os.errno.EBADF) && e.errno != -(_c.ENOENT || _c.os.errno.ENOENT)) {\n        // reraise any unanticipated error\n        throw e;\n      }\n    }\n    fs.unlinkSync(fdPath[1]);\n  }, [fd, name]);\n\n  if (!opts.keep) {\n    _removeObjects.unshift(removeCallback);\n  }\n\n  return removeCallback;\n}\n\n/**\n * Prepares the callback for removal of the temporary directory.\n *\n * @param {String} name\n * @param {Object} opts\n * @returns {Function} the callback\n * @api private\n */\nfunction _prepareTmpDirRemoveCallback(name, opts) {\n  var removeFunction = opts.unsafeCleanup ? _rmdirRecursiveSync : fs.rmdirSync.bind(fs);\n  var removeCallback = _prepareRemoveCallback(removeFunction, name);\n\n  if (!opts.keep) {\n    _removeObjects.unshift(removeCallback);\n  }\n\n  return removeCallback;\n}\n\n/**\n * Creates a guarded function wrapping the removeFunction call.\n *\n * @param {Function} removeFunction\n * @param {Object} arg\n * @returns {Function}\n * @api private\n */\nfunction _prepareRemoveCallback(removeFunction, arg) {\n  var called = false;\n\n  return function _cleanupCallback() {\n    if (called) return;\n\n    var index = _removeObjects.indexOf(_cleanupCallback);\n    if (index >= 0) {\n      _removeObjects.splice(index, 1);\n    }\n\n    called = true;\n    removeFunction(arg);\n  };\n}\n\n/**\n * The garbage collector.\n *\n * @api private\n */\nfunction _garbageCollector() {\n  if (_uncaughtException && !_gracefulCleanup) {\n    return;\n  }\n\n  // the function being called removes itself from _removeObjects,\n  // loop until _removeObjects is empty\n  while (_removeObjects.length) {\n    try {\n      _removeObjects[0].call(null);\n    } catch (e) {\n      // already removed?\n    }\n  }\n}\n\nfunction _setGracefulCleanup() {\n  _gracefulCleanup = true;\n}\n\nvar version = process.versions.node.split('.').map(function (value) {\n  return parseInt(value, 10);\n});\n\nif (version[0] === 0 && (version[1] < 9 || version[1] === 9 && version[2] < 5)) {\n  process.addListener('uncaughtException', function _uncaughtExceptionThrown(err) {\n    _uncaughtException = true;\n    _garbageCollector();\n\n    throw err;\n  });\n}\n\nprocess.addListener('exit', function _exit(code) {\n  if (code) _uncaughtException = true;\n  _garbageCollector();\n});\n\n// exporting all the needed methods\nmodule.exports.tmpdir = _TMP;\nmodule.exports.dir = _createTmpDir;\nmodule.exports.dirSync = _createTmpDirSync;\nmodule.exports.file = _createTmpFile;\nmodule.exports.fileSync = _createTmpFileSync;\nmodule.exports.tmpName = _getTmpName;\nmodule.exports.tmpNameSync = _getTmpNameSync;\nmodule.exports.setGracefulCleanup = _setGracefulCleanup;\n"]}