{"version":3,"sources":["name-test.js"],"names":[],"mappings":"AAAA,IACE,OAAS,QAAQ,MAAR,CADX;AAAA,IAEE,SAAS,QAAQ,QAAR,CAFX;AAAA,IAIE,OAAS,QAAQ,MAAR,CAJX;AAAA,IAME,MAAS,QAAQ,eAAR,CANX;AAAA,IAOE,OAAS,QAAQ,WAAR,CAPX;;AASA,KAAK,QAAL,CAAc,eAAd,EAA+B,QAA/B,CAAwC;AACtC,mCAAiC;AAC/B,WAAO,YAAY;AACjB,UAAI,OAAJ,CAAY,KAAK,QAAjB;AACD,KAH8B;;AAK/B,oCAAgC,OAAO,MALR;AAM/B,sCAAkC,KAAK,UAAL,CAAgB,MAAhB;AANH,GADK;;AAUtC,4BAA0B;AACxB,WAAO,YAAY;AACjB,UAAI,OAAJ,CAAY,EAAE,QAAQ,WAAV,EAAZ,EAAqC,KAAK,QAA1C;AACD,KAHuB;;AAKxB,oCAAgC,OAAO,MALf;AAMxB,uCAAmC,KAAK,UAAL,CAAgB,WAAhB;AANX,GAVY;;AAmBtC,6BAA2B;AACzB,WAAO,YAAY;AACjB,UAAI,OAAJ,CAAY,EAAE,SAAS,MAAX,EAAZ,EAAiC,KAAK,QAAtC;AACD,KAHwB;;AAKzB,oCAAgC,OAAO,MALd;AAMzB,wCAAoC,KAAK,WAAL,CAAiB,MAAjB;;AANX,GAnBW;;AA6BtC,yBAAuB;AACrB,WAAO,YAAY;AACjB,UAAI,OAAJ,CAAY,EAAE,UAAU,KAAK,IAAL,CAAU,IAAI,MAAd,EAAsB,sBAAtB,CAAZ,EAAZ,EAAyE,KAAK,QAA9E;AACD,KAHoB;;AAKrB,oCAAgC,OAAO,MALlB;AAMrB,uCAAmC,KAAK,UAAL,CAAgB,QAAhB,CANd;AAOrB,wCAAoC,KAAK,WAAL,CAAiB,UAAjB,CAPf;AAQrB,mCAA+B,UAAU,GAAV,EAAe,IAAf,EAAqB;AAClD,aAAO,MAAP,CAAc,iBAAiB,IAAjB,CAAsB,IAAtB,CAAd;AACD;AAVoB,GA7Be;;AA0CtC,iCAA+B;AAC7B,WAAO,YAAY;AACjB,UAAI,OAAJ,CAAY,EAAE,QAAQ,KAAV,EAAiB,SAAS,KAA1B,EAAiC,OAAO,CAAxC,EAAZ,EAAyD,KAAK,QAA9D;AACD,KAH4B;;AAK7B,oCAAgC,OAAO,MALV;AAM7B,uCAAmC,KAAK,UAAL,CAAgB,KAAhB,CANN;AAO7B,wCAAoC,KAAK,WAAL,CAAiB,KAAjB;AAPP,GA1CO;;AAoDtC,cAAY;AACV,WAAO,YAAY;AACjB,UAAI,OAAJ,CAAY,EAAE,OAAO,CAAC,CAAV,EAAZ,EAA2B,KAAK,QAAhC;AACD,KAHS;;AAKV,mBAAe,UAAU,GAAV,EAAe,IAAf,EAAqB;AAClC,aAAO,QAAP,CAAgB,GAAhB;AACD;AAPS,GApD0B;;AA8DtC,uBAAqB;AACnB,WAAO,YAAY;AACjB,UAAI,OAAJ,CAAY,EAAE,OAAO,OAAT,EAAZ,EAA+B,KAAK,QAApC;AACD,KAHkB;;AAKnB,mBAAe,UAAU,GAAV,EAAe,IAAf,EAAqB;AAClC,aAAO,QAAP,CAAgB,GAAhB;AACD;AAPkB;;AA9DiB,CAAxC,EAwEG,QAxEH,CAwEY,MAxEZ","file":"name-test-compiled.js","sourcesContent":["var\n  vows   = require('vows'),\n  assert = require('assert'),\n\n  path   = require('path'),\n\n  tmp    = require('../lib/tmp.js'),\n  Test   = require('./base.js');\n\nvows.describe('Name creation').addBatch({\n  'when using without parameters': {\n    topic: function () {\n      tmp.tmpName(this.callback);\n    },\n\n    'should not return with error': assert.isNull,\n    'should have the default prefix': Test.testPrefix('tmp-')\n  },\n\n  'when using with prefix': {\n    topic: function () {\n      tmp.tmpName({ prefix: 'something' }, this.callback);\n    },\n\n    'should not return with error': assert.isNull,\n    'should have the provided prefix': Test.testPrefix('something')\n  },\n\n  'when using with postfix': {\n    topic: function () {\n      tmp.tmpName({ postfix: '.txt' }, this.callback);\n    },\n\n    'should not return with error': assert.isNull,\n    'should have the provided postfix': Test.testPostfix('.txt')\n\n  },\n\n  'when using template': {\n    topic: function () {\n      tmp.tmpName({ template: path.join(tmp.tmpdir, 'clike-XXXXXX-postfix') }, this.callback);\n    },\n\n    'should not return with error': assert.isNull,\n    'should have the provided prefix': Test.testPrefix('clike-'),\n    'should have the provided postfix': Test.testPostfix('-postfix'),\n    'should have template filled': function (err, name) {\n      assert.isTrue(/[a-zA-Z0-9]{6}/.test(name));\n    }\n  },\n\n  'when using multiple options': {\n    topic: function () {\n      tmp.tmpName({ prefix: 'foo', postfix: 'bar', tries: 5 }, this.callback);\n    },\n\n    'should not return with error': assert.isNull,\n    'should have the provided prefix': Test.testPrefix('foo'),\n    'should have the provided postfix': Test.testPostfix('bar')\n  },\n\n  'no tries': {\n    topic: function () {\n      tmp.tmpName({ tries: -1 }, this.callback);\n    },\n\n    'should fail': function (err, name) {\n      assert.isObject(err);\n    }\n  },\n\n  'tries not numeric': {\n    topic: function () {\n      tmp.tmpName({ tries: 'hello'}, this.callback);\n    },\n\n    'should fail': function (err, name) {\n      assert.isObject(err);\n    }\n  }\n\n}).exportTo(module);\n"]}