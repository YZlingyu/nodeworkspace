{"version":3,"sources":["Extensions.js"],"names":[],"mappings":";AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA;;;;AAIA,QAAQ,KAAR,GAAgB,KAAhB;AACA,QAAQ,MAAR,GAAiB,MAAjB;;AAEA;;;;AAIA,SAAS,KAAT,CAAe,KAAf,EAAsB;AACpB,UAAQ,SAAS,EAAjB;;AAEA,MAAI,aAAa,EAAjB;;AAEA,QAAM,KAAN,CAAY,GAAZ,EAAiB,OAAjB,CAAyB,UAAS,CAAT,EAAY;AACnC,QAAI,SAAS,EAAE,KAAF,CAAQ,GAAR,CAAb;AACA,QAAI,QAAQ,OAAO,KAAP,GAAe,IAAf,EAAZ;AACA,QAAI,aAAa,WAAW,KAAX,IAAoB,WAAW,KAAX,KAAqB,EAA1D;AACA,QAAI,eAAe,EAAnB;;AAEA,WAAO,OAAP,CAAe,UAAS,KAAT,EAAgB;AAC7B,UAAI,QAAQ,MAAM,IAAN,GAAa,KAAb,CAAmB,GAAnB,CAAZ;AACA,UAAI,MAAM,MAAM,CAAN,CAAV;AACA,UAAI,QAAQ,MAAM,CAAN,CAAZ;AACA,UAAI,OAAO,KAAP,KAAiB,WAArB,EAAkC;AAChC,gBAAQ,IAAR;AACD,OAFD,MAEO;AACL;AACA,YAAI,MAAM,CAAN,MAAa,GAAjB,EAAsB;AACpB,kBAAQ,MAAM,KAAN,CAAY,CAAZ,CAAR;AACD;AACD,YAAI,MAAM,MAAM,MAAN,GAAe,CAArB,MAA4B,GAAhC,EAAqC;AACnC,kBAAQ,MAAM,KAAN,CAAY,CAAZ,EAAe,MAAM,MAAN,GAAe,CAA9B,CAAR;AACD;AACF;AACD,OAAC,aAAa,GAAb,IAAoB,aAAa,GAAb,KAAqB,EAA1C,EAA8C,IAA9C,CAAmD,KAAnD;AACD,KAhBD;;AAkBA,eAAW,IAAX,CAAgB,YAAhB;AACD,GAzBD;;AA2BA,SAAO,UAAP;AACD;;AAED;;;;AAIA,SAAS,MAAT,CAAgB,KAAhB,EAAuB;AACrB,SAAO,OAAO,IAAP,CAAY,KAAZ,EAAmB,GAAnB,CAAuB,UAAS,KAAT,EAAgB;AAC5C,QAAI,aAAa,MAAM,KAAN,CAAjB;AACA,QAAI,CAAC,KAAK,OAAL,CAAa,UAAb,CAAL,EAA+B;AAC7B,mBAAa,CAAC,UAAD,CAAb;AACD;AACD,WAAO,WAAW,GAAX,CAAe,UAAS,MAAT,EAAiB;AACrC,aAAO,CAAC,KAAD,EAAQ,MAAR,CAAe,OAAO,IAAP,CAAY,MAAZ,EAAoB,GAApB,CAAwB,UAAS,CAAT,EAAY;AACxD,YAAI,IAAI,OAAO,CAAP,CAAR;AACA,YAAI,CAAC,KAAK,OAAL,CAAa,CAAb,CAAL,EAAsB,IAAI,CAAC,CAAD,CAAJ;AACtB,eAAO,EAAE,GAAF,CAAM,UAAS,CAAT,EAAY;AACvB,iBAAO,MAAM,IAAN,GAAa,CAAb,GAAiB,IAAI,GAAJ,GAAU,CAAlC;AACD,SAFM,EAEJ,IAFI,CAEC,IAFD,CAAP;AAGD,OANqB,CAAf,EAMH,IANG,CAME,IANF,CAAP;AAOD,KARM,EAQJ,IARI,CAQC,IARD,CAAP;AASD,GAdM,EAcJ,IAdI,CAcC,IAdD,CAAP;AAeD","file":"Extensions-compiled.js","sourcesContent":["\nvar util = require('util');\n\n/**\n * Module exports.\n */\n\nexports.parse = parse;\nexports.format = format;\n\n/**\n * Parse extensions header value\n */\n\nfunction parse(value) {\n  value = value || '';\n\n  var extensions = {};\n\n  value.split(',').forEach(function(v) {\n    var params = v.split(';');\n    var token = params.shift().trim();\n    var paramsList = extensions[token] = extensions[token] || [];\n    var parsedParams = {};\n\n    params.forEach(function(param) {\n      var parts = param.trim().split('=');\n      var key = parts[0];\n      var value = parts[1];\n      if (typeof value === 'undefined') {\n        value = true;\n      } else {\n        // unquote value\n        if (value[0] === '\"') {\n          value = value.slice(1);\n        }\n        if (value[value.length - 1] === '\"') {\n          value = value.slice(0, value.length - 1);\n        }\n      }\n      (parsedParams[key] = parsedParams[key] || []).push(value);\n    });\n\n    paramsList.push(parsedParams);\n  });\n\n  return extensions;\n}\n\n/**\n * Format extensions header value\n */\n\nfunction format(value) {\n  return Object.keys(value).map(function(token) {\n    var paramsList = value[token];\n    if (!util.isArray(paramsList)) {\n      paramsList = [paramsList];\n    }\n    return paramsList.map(function(params) {\n      return [token].concat(Object.keys(params).map(function(k) {\n        var p = params[k];\n        if (!util.isArray(p)) p = [p];\n        return p.map(function(v) {\n          return v === true ? k : k + '=' + v;\n        }).join('; ');\n      })).join('; ');\n    }).join(', ');\n  }).join(', ');\n}\n"]}