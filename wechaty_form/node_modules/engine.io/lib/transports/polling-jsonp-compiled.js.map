{"version":3,"sources":["polling-jsonp.js"],"names":[],"mappings":";AACA;;;;AAIA,IAAI,UAAU,QAAQ,WAAR,CAAd;AACA,IAAI,KAAK,QAAQ,aAAR,CAAT;AACA,IAAI,iBAAiB,QAArB;AACA,IAAI,WAAW,WAAf;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA;;;;AAIA,OAAO,OAAP,GAAiB,KAAjB;;AAEA;;;;;;AAMA,SAAS,KAAT,CAAgB,GAAhB,EAAqB;AACnB,UAAQ,IAAR,CAAa,IAAb,EAAmB,GAAnB;;AAEA,OAAK,IAAL,GAAY,YAAY,CAAC,IAAI,MAAJ,CAAW,CAAX,IAAgB,EAAjB,EAAqB,OAArB,CAA6B,SAA7B,EAAwC,EAAxC,CAAZ,GAA0D,IAAtE;AACA,OAAK,IAAL,GAAY,IAAZ;AACD;;AAED;;;;AAIA,KAAK,QAAL,CAAc,KAAd,EAAqB,OAArB;;AAEA;;;;;;;AAOA,MAAM,SAAN,CAAgB,MAAhB,GAAyB,UAAU,IAAV,EAAgB;AACvC;AACA;AACA,SAAO,GAAG,KAAH,CAAS,IAAT,EAAe,CAAtB;AACA,MAAI,aAAa,OAAO,IAAxB,EAA8B;AAC5B;AACA;AACA,WAAO,KAAK,OAAL,CAAa,QAAb,EAAuB,UAAU,KAAV,EAAiB,OAAjB,EAA0B;AACtD,aAAO,UAAU,KAAV,GAAkB,IAAzB;AACD,KAFM,CAAP;AAGA,YAAQ,SAAR,CAAkB,MAAlB,CAAyB,IAAzB,CAA8B,IAA9B,EAAoC,KAAK,OAAL,CAAa,cAAb,EAA6B,KAA7B,CAApC;AACD;AACF,CAZD;;AAcA;;;;;;AAMA,MAAM,SAAN,CAAgB,OAAhB,GAA0B,UAAU,IAAV,EAAgB,OAAhB,EAAyB,QAAzB,EAAmC;AAC3D;AACA;AACA,MAAI,KAAK,KAAK,SAAL,CAAe,IAAf,EACN,OADM,CACE,SADF,EACa,SADb,EAEN,OAFM,CAEE,SAFF,EAEa,SAFb,CAAT;;AAIA;AACA,SAAO,KAAK,IAAL,GAAY,EAAZ,GAAiB,KAAK,IAA7B;;AAEA,UAAQ,SAAR,CAAkB,OAAlB,CAA0B,IAA1B,CAA+B,IAA/B,EAAqC,IAArC,EAA2C,OAA3C,EAAoD,QAApD;AACD,CAXD","file":"polling-jsonp-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar Polling = require('./polling');\nvar qs = require('querystring');\nvar rDoubleSlashes = /\\\\\\\\n/g;\nvar rSlashes = /(\\\\)?\\\\n/g;\nvar util = require('util');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONP;\n\n/**\n * JSON-P polling transport.\n *\n * @api public\n */\n\nfunction JSONP (req) {\n  Polling.call(this, req);\n\n  this.head = '___eio[' + (req._query.j || '').replace(/[^0-9]/g, '') + '](';\n  this.foot = ');';\n}\n\n/**\n * Inherits from Polling.\n */\n\nutil.inherits(JSONP, Polling);\n\n/**\n * Handles incoming data.\n * Due to a bug in \\n handling by browsers, we expect a escaped string.\n *\n * @api private\n */\n\nJSONP.prototype.onData = function (data) {\n  // we leverage the qs module so that we get built-in DoS protection\n  // and the fast alternative to decodeURIComponent\n  data = qs.parse(data).d;\n  if ('string' === typeof data) {\n    // client will send already escaped newlines as \\\\\\\\n and newlines as \\\\n\n    // \\\\n must be replaced with \\n and \\\\\\\\n with \\\\n\n    data = data.replace(rSlashes, function (match, slashes) {\n      return slashes ? match : '\\n';\n    });\n    Polling.prototype.onData.call(this, data.replace(rDoubleSlashes, '\\\\n'));\n  }\n};\n\n/**\n * Performs the write.\n *\n * @api private\n */\n\nJSONP.prototype.doWrite = function (data, options, callback) {\n  // we must output valid javascript, not valid json\n  // see: http://timelessrepo.com/json-isnt-a-javascript-subset\n  var js = JSON.stringify(data)\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029');\n\n  // prepare response\n  data = this.head + js + this.foot;\n\n  Polling.prototype.doWrite.call(this, data, options, callback);\n};\n"]}