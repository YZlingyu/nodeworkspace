{"version":3,"sources":["polling-xhr.js"],"names":[],"mappings":";AACA;;;;AAIA,IAAI,UAAU,QAAQ,WAAR,CAAd;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA;;;;AAIA,OAAO,OAAP,GAAiB,GAAjB;;AAEA;;;;;;AAMA,SAAS,GAAT,CAAc,GAAd,EAAmB;AACjB,UAAQ,IAAR,CAAa,IAAb,EAAmB,GAAnB;AACD;;AAED;;;;AAIA,KAAK,QAAL,CAAc,GAAd,EAAmB,OAAnB;;AAEA;;;;;;;AAOA,IAAI,SAAJ,CAAc,SAAd,GAA0B,UAAU,GAAV,EAAe;AACvC,MAAI,cAAc,IAAI,MAAtB,EAA8B;AAC5B,QAAI,MAAM,IAAI,GAAd;AACA,QAAI,UAAU,KAAK,OAAL,CAAa,GAAb,CAAd;AACA,YAAQ,8BAAR,IAA0C,cAA1C;AACA,QAAI,SAAJ,CAAc,GAAd,EAAmB,OAAnB;AACA,QAAI,GAAJ;AACD,GAND,MAMO;AACL,YAAQ,SAAR,CAAkB,SAAlB,CAA4B,IAA5B,CAAiC,IAAjC,EAAuC,GAAvC;AACD;AACF,CAVD;;AAYA;;;;;;;;AAQA,IAAI,SAAJ,CAAc,OAAd,GAAwB,UAAU,GAAV,EAAe,OAAf,EAAwB;AAC9C,YAAU,WAAW,EAArB;;AAEA,MAAI,IAAI,OAAJ,CAAY,MAAhB,EAAwB;AACtB,YAAQ,kCAAR,IAA8C,MAA9C;AACA,YAAQ,6BAAR,IAAyC,IAAI,OAAJ,CAAY,MAArD;AACD,GAHD,MAGO;AACL,YAAQ,6BAAR,IAAyC,GAAzC;AACD;;AAED,SAAO,QAAQ,SAAR,CAAkB,OAAlB,CAA0B,IAA1B,CAA+B,IAA/B,EAAqC,GAArC,EAA0C,OAA1C,CAAP;AACD,CAXD","file":"polling-xhr-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar Polling = require('./polling');\nvar util = require('util');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\n\n/**\n * Ajax polling transport.\n *\n * @api public\n */\n\nfunction XHR (req) {\n  Polling.call(this, req);\n}\n\n/**\n * Inherits from Polling.\n */\n\nutil.inherits(XHR, Polling);\n\n/**\n * Overrides `onRequest` to handle `OPTIONS`..\n *\n * @param {http.IncomingMessage}\n * @api private\n */\n\nXHR.prototype.onRequest = function (req) {\n  if ('OPTIONS' === req.method) {\n    var res = req.res;\n    var headers = this.headers(req);\n    headers['Access-Control-Allow-Headers'] = 'Content-Type';\n    res.writeHead(200, headers);\n    res.end();\n  } else {\n    Polling.prototype.onRequest.call(this, req);\n  }\n};\n\n/**\n * Returns headers for a response.\n *\n * @param {http.IncomingMessage} request\n * @param {Object} extra headers\n * @api private\n */\n\nXHR.prototype.headers = function (req, headers) {\n  headers = headers || {};\n\n  if (req.headers.origin) {\n    headers['Access-Control-Allow-Credentials'] = 'true';\n    headers['Access-Control-Allow-Origin'] = req.headers.origin;\n  } else {\n    headers['Access-Control-Allow-Origin'] = '*';\n  }\n\n  return Polling.prototype.headers.call(this, req, headers);\n};\n"]}