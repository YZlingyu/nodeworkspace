{"version":3,"sources":["socket.js"],"names":[],"mappings":"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","file":"socket-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar util = require('util');\nvar debug = require('debug')('engine:socket');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Client class (abstract).\n *\n * @api private\n */\n\nfunction Socket (id, server, transport, req) {\n  this.id = id;\n  this.server = server;\n  this.upgrading = false;\n  this.upgraded = false;\n  this.readyState = 'opening';\n  this.writeBuffer = [];\n  this.packetsFn = [];\n  this.sentCallbackFn = [];\n  this.cleanupFn = [];\n  this.request = req;\n\n  // Cache IP since it might not be in the req later\n  this.remoteAddress = req.connection.remoteAddress;\n\n  this.checkIntervalTimer = null;\n  this.upgradeTimeoutTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.setTransport(transport);\n  this.onOpen();\n}\n\n/**\n * Inherits from EventEmitter.\n */\n\nutil.inherits(Socket, EventEmitter);\n\n/**\n * Called upon transport considered open.\n *\n * @api private\n */\n\nSocket.prototype.onOpen = function () {\n  this.readyState = 'open';\n\n  // sends an `open` packet\n  this.transport.sid = this.id;\n  this.sendPacket('open', JSON.stringify({\n    sid: this.id,\n    upgrades: this.getAvailableUpgrades(),\n    pingInterval: this.server.pingInterval,\n    pingTimeout: this.server.pingTimeout\n  }));\n\n  this.emit('open');\n  this.setPingTimeout();\n};\n\n/**\n * Called upon transport packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('open' === this.readyState) {\n    // export packet event\n    debug('packet');\n    this.emit('packet', packet);\n\n    // Reset ping timeout on any packet, incoming data is a good sign of\n    // other side's liveness\n    this.setPingTimeout();\n\n    switch (packet.type) {\n\n      case 'ping':\n        debug('got ping');\n        this.sendPacket('pong');\n        this.emit('heartbeat');\n        break;\n\n      case 'error':\n        this.onClose('parse error');\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with closed socket');\n  }\n};\n\n/**\n * Called upon transport error.\n *\n * @param {Error} error object\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('transport error');\n  this.onClose('transport error', err);\n};\n\n/**\n * Sets and resets ping timeout timer based on client pings.\n *\n * @api private\n */\n\nSocket.prototype.setPingTimeout = function () {\n  var self = this;\n  clearTimeout(self.pingTimeoutTimer);\n  self.pingTimeoutTimer = setTimeout(function () {\n    self.onClose('ping timeout');\n  }, self.server.pingInterval + self.server.pingTimeout);\n};\n\n/**\n * Attaches handlers for the given transport.\n *\n * @param {Transport} transport\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  var onError = this.onError.bind(this);\n  var onPacket = this.onPacket.bind(this);\n  var flush = this.flush.bind(this);\n  var onClose = this.onClose.bind(this, 'transport close');\n\n  this.transport = transport;\n  this.transport.once('error', onError);\n  this.transport.on('packet', onPacket);\n  this.transport.on('drain', flush);\n  this.transport.once('close', onClose);\n  // this function will manage packet events (also message callbacks)\n  this.setupSendCallback();\n\n  this.cleanupFn.push(function () {\n    transport.removeListener('error', onError);\n    transport.removeListener('packet', onPacket);\n    transport.removeListener('drain', flush);\n    transport.removeListener('close', onClose);\n  });\n};\n\n/**\n * Upgrades socket to the given transport\n *\n * @param {Transport} transport\n * @api private\n */\n\nSocket.prototype.maybeUpgrade = function (transport) {\n  debug('might upgrade socket transport from \"%s\" to \"%s\"'\n    , this.transport.name, transport.name);\n\n  this.upgrading = true;\n\n  var self = this;\n\n  // set transport upgrade timer\n  self.upgradeTimeoutTimer = setTimeout(function () {\n    debug('client did not complete upgrade - closing transport');\n    cleanup();\n    if ('open' === transport.readyState) {\n      transport.close();\n    }\n  }, this.server.upgradeTimeout);\n\n  function onPacket (packet) {\n    if ('ping' === packet.type && 'probe' === packet.data) {\n      transport.send([{ type: 'pong', data: 'probe' }]);\n      self.emit('upgrading', transport);\n      clearInterval(self.checkIntervalTimer);\n      self.checkIntervalTimer = setInterval(check, 100);\n    } else if ('upgrade' === packet.type && self.readyState !== 'closed') {\n      debug('got upgrade packet - upgrading');\n      cleanup();\n      self.transport.discard();\n      self.upgraded = true;\n      self.clearTransport();\n      self.setTransport(transport);\n      self.emit('upgrade', transport);\n      self.setPingTimeout();\n      self.flush();\n      if (self.readyState === 'closing') {\n        transport.close(function () {\n          self.onClose('forced close');\n        });\n      }\n    } else {\n      cleanup();\n      transport.close();\n    }\n  }\n\n  // we force a polling cycle to ensure a fast upgrade\n  function check () {\n    if ('polling' === self.transport.name && self.transport.writable) {\n      debug('writing a noop packet to polling for fast upgrade');\n      self.transport.send([{ type: 'noop' }]);\n    }\n  }\n\n  function cleanup () {\n    self.upgrading = false;\n\n    clearInterval(self.checkIntervalTimer);\n    self.checkIntervalTimer = null;\n\n    clearTimeout(self.upgradeTimeoutTimer);\n    self.upgradeTimeoutTimer = null;\n\n    transport.removeListener('packet', onPacket);\n    transport.removeListener('close', onTransportClose);\n    transport.removeListener('error', onError);\n    self.removeListener('close', onClose);\n  }\n\n  function onError (err) {\n    debug('client did not complete upgrade - %s', err);\n    cleanup();\n    transport.close();\n    transport = null;\n  }\n\n  function onTransportClose () {\n    onError('transport closed');\n  }\n\n  function onClose () {\n    onError('socket closed');\n  }\n\n  transport.on('packet', onPacket);\n  transport.once('close', onTransportClose);\n  transport.once('error', onError);\n\n  self.once('close', onClose);\n};\n\n/**\n * Clears listeners and timers associated with current transport.\n *\n * @api private\n */\n\nSocket.prototype.clearTransport = function () {\n  var cleanup;\n\n  var toCleanUp = this.cleanupFn.length;\n\n  for (var i = 0; i < toCleanUp; i++) {\n    cleanup = this.cleanupFn.shift();\n    cleanup();\n  }\n\n  // silence further transport errors and prevent uncaught exceptions\n  this.transport.on('error', function () {\n    debug('error triggered by discarded transport');\n  });\n\n  // ensure transport won't stay open\n  this.transport.close();\n\n  clearTimeout(this.pingTimeoutTimer);\n};\n\n/**\n * Called upon transport considered closed.\n * Possible reasons: `ping timeout`, `client error`, `parse error`,\n * `transport error`, `server close`, `transport close`\n */\n\nSocket.prototype.onClose = function (reason, description) {\n  if ('closed' !== this.readyState) {\n    this.readyState = 'closed';\n    clearTimeout(this.pingTimeoutTimer);\n    clearInterval(this.checkIntervalTimer);\n    this.checkIntervalTimer = null;\n    clearTimeout(this.upgradeTimeoutTimer);\n    var self = this;\n    // clean writeBuffer in next tick, so developers can still\n    // grab the writeBuffer on 'close' event\n    process.nextTick(function () {\n      self.writeBuffer = [];\n    });\n    this.packetsFn = [];\n    this.sentCallbackFn = [];\n    this.clearTransport();\n    this.emit('close', reason, description);\n  }\n};\n\n/**\n * Setup and manage send callback\n *\n * @api private\n */\n\nSocket.prototype.setupSendCallback = function () {\n  var self = this;\n  this.transport.on('drain', onDrain);\n\n  this.cleanupFn.push(function () {\n    self.transport.removeListener('drain', onDrain);\n  });\n\n  // the message was sent successfully, execute the callback\n  function onDrain () {\n    if (self.sentCallbackFn.length > 0) {\n      var seqFn = self.sentCallbackFn.splice(0, 1)[0];\n      if ('function' === typeof seqFn) {\n        debug('executing send callback');\n        seqFn(self.transport);\n      } else if (Array.isArray(seqFn)) {\n        debug('executing batch send callback');\n        for (var l = seqFn.length, i = 0; i < l; i++) {\n          if ('function' === typeof seqFn[i]) {\n            seqFn[i](self.transport);\n          }\n        }\n      }\n    }\n  }\n};\n\n/**\n * Sends a message packet.\n *\n * @param {String} message\n * @param {Object} options\n * @param {Function} callback\n * @return {Socket} for chaining\n * @api public\n */\n\nSocket.prototype.send =\nSocket.prototype.write = function (data, options, callback) {\n  this.sendPacket('message', data, options, callback);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type\n * @param {String} optional, data\n * @param {Object} options\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, callback) {\n  if ('function' === typeof options) {\n    callback = options;\n    options = null;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  if ('closing' !== this.readyState) {\n    debug('sending packet \"%s\" (%s)', type, data);\n\n    var packet = {\n      type: type,\n      options: options\n    };\n    if (data) packet.data = data;\n\n    // exports packetCreate event\n    this.emit('packetCreate', packet);\n\n    this.writeBuffer.push(packet);\n\n    // add send callback to object, if defined\n    if (callback) this.packetsFn.push(callback);\n\n    this.flush();\n  }\n};\n\n/**\n * Attempts to flush the packets buffer.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState &&\n                this.transport.writable &&\n                this.writeBuffer.length) {\n    debug('flushing buffer to transport');\n    this.emit('flush', this.writeBuffer);\n    this.server.emit('flush', this, this.writeBuffer);\n    var wbuf = this.writeBuffer;\n    this.writeBuffer = [];\n    if (!this.transport.supportsFraming) {\n      this.sentCallbackFn.push(this.packetsFn);\n    } else {\n      this.sentCallbackFn.push.apply(this.sentCallbackFn, this.packetsFn);\n    }\n    this.packetsFn = [];\n    this.transport.send(wbuf);\n    this.emit('drain');\n    this.server.emit('drain', this);\n  }\n};\n\n/**\n * Get available upgrades for this socket.\n *\n * @api private\n */\n\nSocket.prototype.getAvailableUpgrades = function () {\n  var availableUpgrades = [];\n  var allUpgrades = this.server.upgrades(this.transport.name);\n  for (var i = 0, l = allUpgrades.length; i < l; ++i) {\n    var upg = allUpgrades[i];\n    if (this.server.transports.indexOf(upg) !== -1) {\n      availableUpgrades.push(upg);\n    }\n  }\n  return availableUpgrades;\n};\n\n/**\n * Closes the socket and underlying transport.\n *\n * @param {Boolean} optional, discard\n * @return {Socket} for chaining\n * @api public\n */\n\nSocket.prototype.close = function (discard) {\n  if ('open' !== this.readyState) return;\n\n  this.readyState = 'closing';\n\n  if (this.writeBuffer.length) {\n    this.once('drain', this.closeTransport.bind(this, discard));\n    return;\n  }\n\n  this.closeTransport(discard);\n};\n\n/**\n * Closes the underlying transport.\n *\n * @param {Boolean} discard\n * @api private\n */\n\nSocket.prototype.closeTransport = function (discard) {\n  if (discard) this.transport.discard();\n  this.transport.close(this.onClose.bind(this, 'forced close'));\n};\n"]}