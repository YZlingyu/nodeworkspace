{"version":3,"sources":["symbol-compiled.js"],"names":[],"mappings":"AAAA;;;;;;;;AAQA,SAAS,MAAT,CAAgB,KAAhB,EAAuB;AACrB,MAAI,EAAE,gBAAgB,MAAlB,CAAJ,EAA+B,OAAO,IAAI,MAAJ,CAAW,KAAX,CAAP;AAC/B,OAAK,SAAL,GAAiB,QAAjB;AACA,OAAK,KAAL,GAAa,KAAb;AACD;;AAED;;;;;;AAMA,OAAO,SAAP,CAAiB,OAAjB,GAA2B,YAAY;AACrC,SAAO,KAAK,KAAZ;AACD,CAFD;;AAIA;;;AAGA,OAAO,SAAP,CAAiB,QAAjB,GAA4B,YAAY;AACtC,SAAO,KAAK,KAAZ;AACD,CAFD;;AAIA;;;AAGA,OAAO,SAAP,CAAiB,OAAjB,GAA2B,YAAY;AACrC,SAAO,KAAK,KAAZ;AACD,CAFD;;AAIA;;;AAGA,OAAO,SAAP,CAAiB,MAAjB,GAA0B,YAAY;AACpC,SAAO,KAAK,KAAZ;AACD,CAFD;;AAIA,OAAO,OAAP,GAAiB,MAAjB;AACA,OAAO,OAAP,CAAe,MAAf,GAAwB,MAAxB;;AAEA","file":"symbol-compiled-compiled.js","sourcesContent":["/**\n * A class representation of the BSON Symbol type.\n *\n * @class\n * @deprecated\n * @param {string} value the string representing the symbol.\n * @return {Symbol}\n */\nfunction Symbol(value) {\n  if (!(this instanceof Symbol)) return new Symbol(value);\n  this._bsontype = 'Symbol';\n  this.value = value;\n}\n\n/**\n * Access the wrapped string value.\n *\n * @method\n * @return {String} returns the wrapped string.\n */\nSymbol.prototype.valueOf = function () {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nSymbol.prototype.toString = function () {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nSymbol.prototype.inspect = function () {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nSymbol.prototype.toJSON = function () {\n  return this.value;\n};\n\nmodule.exports = Symbol;\nmodule.exports.Symbol = Symbol;\n\n//# sourceMappingURL=symbol-compiled.js.map"]}