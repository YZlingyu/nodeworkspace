{"version":3,"sources":["deserializer-compiled.js"],"names":[],"mappings":"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","file":"deserializer-compiled-compiled.js","sourcesContent":["\"use strict\";\n\nvar readIEEE754 = require('../float_parser').readIEEE754,\n    f = require('util').format,\n    Long = require('../long').Long,\n    Double = require('../double').Double,\n    Timestamp = require('../timestamp').Timestamp,\n    ObjectID = require('../objectid').ObjectID,\n    Symbol = require('../symbol').Symbol,\n    Code = require('../code').Code,\n    MinKey = require('../min_key').MinKey,\n    MaxKey = require('../max_key').MaxKey,\n    Decimal128 = require('../decimal128'),\n    Int32 = require('../int_32'),\n    DBRef = require('../db_ref').DBRef,\n    BSONRegExp = require('../regexp').BSONRegExp,\n    Binary = require('../binary').Binary;\n\nvar deserialize = function (buffer, options, isArray) {\n  options = options == null ? {} : options;\n  var index = options && options.index ? options.index : 0;\n  // Read the document size\n  var size = buffer[index] | buffer[index + 1] << 8 | buffer[index + 2] << 16 | buffer[index + 3] << 24;\n\n  // Ensure buffer is valid size\n  if (size < 5 || buffer.length < size || size + index > buffer.length) {\n    throw new Error(\"corrupt bson message\");\n  }\n\n  // Illegal end value\n  if (buffer[index + size - 1] != 0) {\n    throw new Error(\"One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00\");\n  }\n\n  // Start deserializtion\n  return deserializeObject(buffer, index, options, isArray);\n};\n\nvar deserializeObject = function (buffer, index, options, isArray) {\n  var evalFunctions = options['evalFunctions'] == null ? false : options['evalFunctions'];\n  var cacheFunctions = options['cacheFunctions'] == null ? false : options['cacheFunctions'];\n  var cacheFunctionsCrc32 = options['cacheFunctionsCrc32'] == null ? false : options['cacheFunctionsCrc32'];\n  var fieldsAsRaw = options['fieldsAsRaw'] == null ? null : options['fieldsAsRaw'];\n\n  // Return raw bson buffer instead of parsing it\n  var raw = options['raw'] == null ? false : options['raw'];\n\n  // Return BSONRegExp objects instead of native regular expressions\n  var bsonRegExp = typeof options['bsonRegExp'] == 'boolean' ? options['bsonRegExp'] : false;\n\n  // Controls the promotion of values vs wrapper classes\n  var promoteBuffers = options['promoteBuffers'] == null ? false : options['promoteBuffers'];\n  var promoteLongs = options['promoteLongs'] == null ? true : options['promoteLongs'];\n  var promoteValues = options['promoteValues'] == null ? true : options['promoteValues'];\n\n  // Set the start index\n  var startIndex = index;\n\n  // Validate that we have at least 4 bytes of buffer\n  if (buffer.length < 5) throw new Error(\"corrupt bson message < 5 bytes long\");\n\n  // Read the document size\n  var size = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\n  // Ensure buffer is valid size\n  if (size < 5 || size > buffer.length) throw new Error(\"corrupt bson message\");\n\n  // Create holding object\n  var object = isArray ? [] : {};\n  // Used for arrays to skip having to perform utf8 decoding\n  var arrayIndex = 0;\n\n  // While we have more left data left keep parsing\n  while (true) {\n    // Read the type\n    var elementType = buffer[index++];\n    // If we get a zero it's the last byte, exit\n    if (elementType == 0) {\n      break;\n    }\n\n    // Get the start search index\n    var i = index;\n    // Locate the end of the c string\n    while (buffer[i] !== 0x00 && i < buffer.length) {\n      i++;\n    }\n\n    // If are at the end of the buffer there is a problem with the document\n    if (i >= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\");\n    var name = isArray ? arrayIndex++ : buffer.toString('utf8', index, i);\n\n    index = i + 1;\n\n    if (elementType == BSON.BSON_DATA_STRING) {\n      var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n      if (stringSize <= 0 || stringSize > buffer.length - index || buffer[index + stringSize - 1] != 0) throw new Error(\"bad string length in bson\");\n      object[name] = buffer.toString('utf8', index, index + stringSize - 1);\n      index = index + stringSize;\n    } else if (elementType == BSON.BSON_DATA_OID) {\n      var oid = new Buffer(12);\n      buffer.copy(oid, 0, index, index + 12);\n      object[name] = new ObjectID(oid);\n      index = index + 12;\n    } else if (elementType == BSON.BSON_DATA_INT && promoteValues == false) {\n      object[name] = new Int32(buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24);\n    } else if (elementType == BSON.BSON_DATA_INT) {\n      object[name] = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n    } else if (elementType == BSON.BSON_DATA_NUMBER && promoteValues == false) {\n      object[name] = new Double(buffer.readDoubleLE(index));\n      index = index + 8;\n    } else if (elementType == BSON.BSON_DATA_NUMBER) {\n      object[name] = buffer.readDoubleLE(index);\n      index = index + 8;\n    } else if (elementType == BSON.BSON_DATA_DATE) {\n      var lowBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n      var highBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n      object[name] = new Date(new Long(lowBits, highBits).toNumber());\n    } else if (elementType == BSON.BSON_DATA_BOOLEAN) {\n      if (buffer[index] != 0 && buffer[index] != 1) throw new Error('illegal boolean type value');\n      object[name] = buffer[index++] == 1;\n    } else if (elementType == BSON.BSON_DATA_OBJECT) {\n      var _index = index;\n      var objectSize = buffer[index] | buffer[index + 1] << 8 | buffer[index + 2] << 16 | buffer[index + 3] << 24;\n      if (objectSize <= 0 || objectSize > buffer.length - index) throw new Error(\"bad embedded document length in bson\");\n\n      // We have a raw value\n      if (raw) {\n        object[name] = buffer.slice(index, index + objectSize);\n      } else {\n        object[name] = deserializeObject(buffer, _index, options, false);\n      }\n\n      index = index + objectSize;\n    } else if (elementType == BSON.BSON_DATA_ARRAY) {\n      var _index = index;\n      var objectSize = buffer[index] | buffer[index + 1] << 8 | buffer[index + 2] << 16 | buffer[index + 3] << 24;\n      var arrayOptions = options;\n\n      // Stop index\n      var stopIndex = index + objectSize;\n\n      // All elements of array to be returned as raw bson\n      if (fieldsAsRaw && fieldsAsRaw[name]) {\n        arrayOptions = {};\n        for (var n in options) arrayOptions[n] = options[n];\n        arrayOptions['raw'] = true;\n      }\n\n      object[name] = deserializeObject(buffer, _index, arrayOptions, true);\n      index = index + objectSize;\n\n      if (buffer[index - 1] != 0) throw new Error('invalid array terminator byte');\n      if (index != stopIndex) throw new Error('corrupted array bson');\n    } else if (elementType == BSON.BSON_DATA_UNDEFINED) {\n      object[name] = undefined;\n    } else if (elementType == BSON.BSON_DATA_NULL) {\n      object[name] = null;\n    } else if (elementType == BSON.BSON_DATA_LONG) {\n      // Unpack the low and high bits\n      var lowBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n      var highBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n      var long = new Long(lowBits, highBits);\n      // Promote the long if possible\n      if (promoteLongs && promoteValues == true) {\n        object[name] = long.lessThanOrEqual(JS_INT_MAX_LONG) && long.greaterThanOrEqual(JS_INT_MIN_LONG) ? long.toNumber() : long;\n      } else {\n        object[name] = long;\n      }\n    } else if (elementType == BSON.BSON_DATA_DECIMAL128) {\n      // Buffer to contain the decimal bytes\n      var bytes = new Buffer(16);\n      // Copy the next 16 bytes into the bytes buffer\n      buffer.copy(bytes, 0, index, index + 16);\n      // Update index\n      index = index + 16;\n      // Assign the new Decimal128 value\n      var decimal128 = new Decimal128(bytes);\n      // If we have an alternative mapper use that\n      object[name] = decimal128.toObject ? decimal128.toObject() : decimal128;\n    } else if (elementType == BSON.BSON_DATA_BINARY) {\n      var binarySize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n      var totalBinarySize = binarySize;\n      var subType = buffer[index++];\n\n      // Did we have a negative binary size, throw\n      if (binarySize < 0) throw new Error('Negative binary type element size found');\n\n      // Is the length longer than the document\n      if (binarySize > buffer.length) throw new Error('Binary type size larger than document size');\n\n      // Decode as raw Buffer object if options specifies it\n      if (buffer['slice'] != null) {\n        // If we have subtype 2 skip the 4 bytes for the size\n        if (subType == Binary.SUBTYPE_BYTE_ARRAY) {\n          binarySize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n          if (binarySize < 0) throw new Error('Negative binary type element size found for subtype 0x02');\n          if (binarySize > totalBinarySize - 4) throw new Error('Binary type with subtype 0x02 contains to long binary size');\n          if (binarySize < totalBinarySize - 4) throw new Error('Binary type with subtype 0x02 contains to short binary size');\n        }\n\n        if (promoteBuffers && promoteValues) {\n          object[name] = buffer.slice(index, index + binarySize);\n        } else {\n          object[name] = new Binary(buffer.slice(index, index + binarySize), subType);\n        }\n      } else {\n        var _buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(binarySize)) : new Array(binarySize);\n        // If we have subtype 2 skip the 4 bytes for the size\n        if (subType == Binary.SUBTYPE_BYTE_ARRAY) {\n          binarySize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n          if (binarySize < 0) throw new Error('Negative binary type element size found for subtype 0x02');\n          if (binarySize > totalBinarySize - 4) throw new Error('Binary type with subtype 0x02 contains to long binary size');\n          if (binarySize < totalBinarySize - 4) throw new Error('Binary type with subtype 0x02 contains to short binary size');\n        }\n\n        // Copy the data\n        for (var i = 0; i < binarySize; i++) {\n          _buffer[i] = buffer[index + i];\n        }\n\n        if (promoteBuffers && promoteValues) {\n          object[name] = _buffer;\n        } else {\n          object[name] = new Binary(_buffer, subType);\n        }\n      }\n\n      // Update the index\n      index = index + binarySize;\n    } else if (elementType == BSON.BSON_DATA_REGEXP && bsonRegExp == false) {\n      // Get the start search index\n      var i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\");\n      // Return the C string\n      var source = buffer.toString('utf8', index, i);\n      // Create the regexp\n      index = i + 1;\n\n      // Get the start search index\n      var i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\");\n      // Return the C string\n      var regExpOptions = buffer.toString('utf8', index, i);\n      index = i + 1;\n\n      // For each option add the corresponding one for javascript\n      var optionsArray = new Array(regExpOptions.length);\n\n      // Parse options\n      for (var i = 0; i < regExpOptions.length; i++) {\n        switch (regExpOptions[i]) {\n          case 'm':\n            optionsArray[i] = 'm';\n            break;\n          case 's':\n            optionsArray[i] = 'g';\n            break;\n          case 'i':\n            optionsArray[i] = 'i';\n            break;\n        }\n      }\n\n      object[name] = new RegExp(source, optionsArray.join(''));\n    } else if (elementType == BSON.BSON_DATA_REGEXP && bsonRegExp == true) {\n      // Get the start search index\n      var i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\");\n      // Return the C string\n      var source = buffer.toString('utf8', index, i);\n      index = i + 1;\n\n      // Get the start search index\n      var i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\");\n      // Return the C string\n      var regExpOptions = buffer.toString('utf8', index, i);\n      index = i + 1;\n\n      // Set the object\n      object[name] = new BSONRegExp(source, regExpOptions);\n    } else if (elementType == BSON.BSON_DATA_SYMBOL) {\n      var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n      if (stringSize <= 0 || stringSize > buffer.length - index || buffer[index + stringSize - 1] != 0) throw new Error(\"bad string length in bson\");\n      object[name] = new Symbol(buffer.toString('utf8', index, index + stringSize - 1));\n      index = index + stringSize;\n    } else if (elementType == BSON.BSON_DATA_TIMESTAMP) {\n      var lowBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n      var highBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n      object[name] = new Timestamp(lowBits, highBits);\n    } else if (elementType == BSON.BSON_DATA_MIN_KEY) {\n      object[name] = new MinKey();\n    } else if (elementType == BSON.BSON_DATA_MAX_KEY) {\n      object[name] = new MaxKey();\n    } else if (elementType == BSON.BSON_DATA_CODE) {\n      var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n      if (stringSize <= 0 || stringSize > buffer.length - index || buffer[index + stringSize - 1] != 0) throw new Error(\"bad string length in bson\");\n      var functionString = buffer.toString('utf8', index, index + stringSize - 1);\n\n      // If we are evaluating the functions\n      if (evalFunctions) {\n        var value = null;\n        // If we have cache enabled let's look for the md5 of the function in the cache\n        if (cacheFunctions) {\n          var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;\n          // Got to do this to avoid V8 deoptimizing the call due to finding eval\n          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);\n        } else {\n          object[name] = isolateEval(functionString);\n        }\n      } else {\n        object[name] = new Code(functionString);\n      }\n\n      // Update parse index position\n      index = index + stringSize;\n    } else if (elementType == BSON.BSON_DATA_CODE_W_SCOPE) {\n      var totalSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\n      // Element cannot be shorter than totalSize + stringSize + documentSize + terminator\n      if (totalSize < 4 + 4 + 4 + 1) {\n        throw new Error(\"code_w_scope total size shorter minimum expected length\");\n      }\n\n      // Get the code string size\n      var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n      // Check if we have a valid string\n      if (stringSize <= 0 || stringSize > buffer.length - index || buffer[index + stringSize - 1] != 0) throw new Error(\"bad string length in bson\");\n\n      // Javascript function\n      var functionString = buffer.toString('utf8', index, index + stringSize - 1);\n      // Update parse index position\n      index = index + stringSize;\n      // Parse the element\n      var _index = index;\n      // Decode the size of the object document\n      var objectSize = buffer[index] | buffer[index + 1] << 8 | buffer[index + 2] << 16 | buffer[index + 3] << 24;\n      // Decode the scope object\n      var scopeObject = deserializeObject(buffer, _index, options, false);\n      // Adjust the index\n      index = index + objectSize;\n\n      // Check if field length is to short\n      if (totalSize < 4 + 4 + objectSize + stringSize) {\n        throw new Error('code_w_scope total size is to short, truncating scope');\n      }\n\n      // Check if totalSize field is to long\n      if (totalSize > 4 + 4 + objectSize + stringSize) {\n        throw new Error('code_w_scope total size is to long, clips outer document');\n      }\n\n      // If we are evaluating the functions\n      if (evalFunctions) {\n        // Contains the value we are going to set\n        var value = null;\n        // If we have cache enabled let's look for the md5 of the function in the cache\n        if (cacheFunctions) {\n          var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;\n          // Got to do this to avoid V8 deoptimizing the call due to finding eval\n          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);\n        } else {\n          object[name] = isolateEval(functionString);\n        }\n\n        object[name].scope = scopeObject;\n      } else {\n        object[name] = new Code(functionString, scopeObject);\n      }\n    } else if (elementType == BSON.BSON_DATA_DBPOINTER) {\n      // Get the code string size\n      var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n      // Check if we have a valid string\n      if (stringSize <= 0 || stringSize > buffer.length - index || buffer[index + stringSize - 1] != 0) throw new Error(\"bad string length in bson\");\n      // Namespace\n      var namespace = buffer.toString('utf8', index, index + stringSize - 1);\n      // Update parse index position\n      index = index + stringSize;\n\n      // Read the oid\n      var oidBuffer = new Buffer(12);\n      buffer.copy(oidBuffer, 0, index, index + 12);\n      var oid = new ObjectID(oidBuffer);\n\n      // Update the index\n      index = index + 12;\n\n      // Split the namespace\n      var parts = namespace.split('.');\n      var db = parts.shift();\n      var collection = parts.join('.');\n      // Upgrade to DBRef type\n      object[name] = new DBRef(collection, oid, db);\n    } else {\n      throw new Error(\"Detected unknown BSON type \" + elementType.toString(16) + \" for fieldname \\\"\" + name + \"\\\", are you using the latest BSON parser\");\n    }\n  }\n\n  // Check if the deserialization was against a valid array/object\n  if (size != index - startIndex) {\n    if (isArray) throw new Error('corrupt array bson');\n    throw new Error('corrupt object bson');\n  }\n\n  // Check if we have a db ref object\n  if (object['$id'] != null) object = new DBRef(object['$ref'], object['$id'], object['$db']);\n  return object;\n};\n\n/**\n * Ensure eval is isolated.\n *\n * @ignore\n * @api private\n */\nvar isolateEvalWithHash = function (functionCache, hash, functionString, object) {\n  // Contains the value we are going to set\n  var value = null;\n\n  // Check for cache hit, eval if missing and return cached function\n  if (functionCache[hash] == null) {\n    eval(\"value = \" + functionString);\n    functionCache[hash] = value;\n  }\n  // Set the object\n  return functionCache[hash].bind(object);\n};\n\n/**\n * Ensure eval is isolated.\n *\n * @ignore\n * @api private\n */\nvar isolateEval = function (functionString) {\n  // Contains the value we are going to set\n  var value = null;\n  // Eval the function\n  eval(\"value = \" + functionString);\n  return value;\n};\n\nvar BSON = {};\n\n/**\n * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5\n *\n * @ignore\n * @api private\n */\nvar functionCache = BSON.functionCache = {};\n\n/**\n * Number BSON Type\n *\n * @classconstant BSON_DATA_NUMBER\n **/\nBSON.BSON_DATA_NUMBER = 1;\n/**\n * String BSON Type\n *\n * @classconstant BSON_DATA_STRING\n **/\nBSON.BSON_DATA_STRING = 2;\n/**\n * Object BSON Type\n *\n * @classconstant BSON_DATA_OBJECT\n **/\nBSON.BSON_DATA_OBJECT = 3;\n/**\n * Array BSON Type\n *\n * @classconstant BSON_DATA_ARRAY\n **/\nBSON.BSON_DATA_ARRAY = 4;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_BINARY\n **/\nBSON.BSON_DATA_BINARY = 5;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_UNDEFINED\n **/\nBSON.BSON_DATA_UNDEFINED = 6;\n/**\n * ObjectID BSON Type\n *\n * @classconstant BSON_DATA_OID\n **/\nBSON.BSON_DATA_OID = 7;\n/**\n * Boolean BSON Type\n *\n * @classconstant BSON_DATA_BOOLEAN\n **/\nBSON.BSON_DATA_BOOLEAN = 8;\n/**\n * Date BSON Type\n *\n * @classconstant BSON_DATA_DATE\n **/\nBSON.BSON_DATA_DATE = 9;\n/**\n * null BSON Type\n *\n * @classconstant BSON_DATA_NULL\n **/\nBSON.BSON_DATA_NULL = 10;\n/**\n * RegExp BSON Type\n *\n * @classconstant BSON_DATA_REGEXP\n **/\nBSON.BSON_DATA_REGEXP = 11;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_DBPOINTER\n **/\nBSON.BSON_DATA_DBPOINTER = 12;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_CODE\n **/\nBSON.BSON_DATA_CODE = 13;\n/**\n * Symbol BSON Type\n *\n * @classconstant BSON_DATA_SYMBOL\n **/\nBSON.BSON_DATA_SYMBOL = 14;\n/**\n * Code with Scope BSON Type\n *\n * @classconstant BSON_DATA_CODE_W_SCOPE\n **/\nBSON.BSON_DATA_CODE_W_SCOPE = 15;\n/**\n * 32 bit Integer BSON Type\n *\n * @classconstant BSON_DATA_INT\n **/\nBSON.BSON_DATA_INT = 16;\n/**\n * Timestamp BSON Type\n *\n * @classconstant BSON_DATA_TIMESTAMP\n **/\nBSON.BSON_DATA_TIMESTAMP = 17;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_LONG\n **/\nBSON.BSON_DATA_LONG = 18;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_DECIMAL128\n **/\nBSON.BSON_DATA_DECIMAL128 = 19;\n/**\n * MinKey BSON Type\n *\n * @classconstant BSON_DATA_MIN_KEY\n **/\nBSON.BSON_DATA_MIN_KEY = 0xff;\n/**\n * MaxKey BSON Type\n *\n * @classconstant BSON_DATA_MAX_KEY\n **/\nBSON.BSON_DATA_MAX_KEY = 0x7f;\n\n/**\n * Binary Default Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_DEFAULT\n **/\nBSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/**\n * Binary Function Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_FUNCTION\n **/\nBSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/**\n * Binary Byte Array Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY\n **/\nBSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/**\n * Binary UUID Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_UUID\n **/\nBSON.BSON_BINARY_SUBTYPE_UUID = 3;\n/**\n * Binary MD5 Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_MD5\n **/\nBSON.BSON_BINARY_SUBTYPE_MD5 = 4;\n/**\n * Binary User Defined Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED\n **/\nBSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7FFFFFFF;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\n// Internal long versions\nvar JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000); // Any integer up to 2^53 can be precisely represented by a double.\nvar JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000); // Any integer down to -2^53 can be precisely represented by a double.\n\nmodule.exports = deserialize;\n\n//# sourceMappingURL=deserializer-compiled.js.map"]}