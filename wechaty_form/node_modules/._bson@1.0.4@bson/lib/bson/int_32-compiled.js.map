{"version":3,"sources":["int_32.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,UAAS,KAAT,EAAgB;AAC1B,MAAG,EAAE,gBAAgB,KAAlB,CAAH,EAA6B,OAAO,IAAI,KAAJ,CAAU,KAAV,CAAP;;AAE7B,OAAK,SAAL,GAAiB,OAAjB;AACA,OAAK,KAAL,GAAa,KAAb;AACD,CALD;;AAOA;;;;;;AAMA,MAAM,SAAN,CAAgB,OAAhB,GAA0B,YAAW;AACnC,SAAO,KAAK,KAAZ;AACD,CAFD;;AAIA;;;AAGA,MAAM,SAAN,CAAgB,MAAhB,GAAyB,YAAW;AAClC,SAAO,KAAK,KAAZ;AACD,CAFD;;AAIA,OAAO,OAAP,GAAiB,KAAjB;AACA,OAAO,OAAP,CAAe,KAAf,GAAuB,KAAvB","file":"int_32-compiled.js","sourcesContent":["var Int32 = function(value) {\n  if(!(this instanceof Int32)) return new Int32(value);\n\n  this._bsontype = 'Int32';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped int32 number.\n */\nInt32.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nInt32.prototype.toJSON = function() {\n  return this.value;\n}\n\nmodule.exports = Int32;\nmodule.exports.Int32 = Int32;\n"]}