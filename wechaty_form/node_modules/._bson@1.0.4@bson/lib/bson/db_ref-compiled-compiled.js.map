{"version":3,"sources":["db_ref-compiled.js"],"names":[],"mappings":"AAAA;;;;;;;;;AASA,SAAS,KAAT,CAAe,SAAf,EAA0B,GAA1B,EAA+B,EAA/B,EAAmC;AACjC,MAAI,EAAE,gBAAgB,KAAlB,CAAJ,EAA8B,OAAO,IAAI,KAAJ,CAAU,SAAV,EAAqB,GAArB,EAA0B,EAA1B,CAAP;;AAE9B,OAAK,SAAL,GAAiB,OAAjB;AACA,OAAK,SAAL,GAAiB,SAAjB;AACA,OAAK,GAAL,GAAW,GAAX;AACA,OAAK,EAAL,GAAU,EAAV;AACD;;AAED;;;;AAIA,MAAM,SAAN,CAAgB,MAAhB,GAAyB,YAAY;AACnC,SAAO;AACL,YAAQ,KAAK,SADR;AAEL,WAAO,KAAK,GAFP;AAGL,WAAO,KAAK,EAAL,IAAW,IAAX,GAAkB,EAAlB,GAAuB,KAAK;AAH9B,GAAP;AAKD,CAND;;AAQA,OAAO,OAAP,GAAiB,KAAjB;AACA,OAAO,OAAP,CAAe,KAAf,GAAuB,KAAvB;;AAEA","file":"db_ref-compiled-compiled.js","sourcesContent":["/**\n * A class representation of the BSON DBRef type.\n *\n * @class\n * @param {string} namespace the collection name.\n * @param {ObjectID} oid the reference ObjectID.\n * @param {string} [db] optional db name, if omitted the reference is local to the current db.\n * @return {DBRef}\n */\nfunction DBRef(namespace, oid, db) {\n  if (!(this instanceof DBRef)) return new DBRef(namespace, oid, db);\n\n  this._bsontype = 'DBRef';\n  this.namespace = namespace;\n  this.oid = oid;\n  this.db = db;\n};\n\n/**\n * @ignore\n * @api private\n */\nDBRef.prototype.toJSON = function () {\n  return {\n    '$ref': this.namespace,\n    '$id': this.oid,\n    '$db': this.db == null ? '' : this.db\n  };\n};\n\nmodule.exports = DBRef;\nmodule.exports.DBRef = DBRef;\n\n//# sourceMappingURL=db_ref-compiled.js.map"]}