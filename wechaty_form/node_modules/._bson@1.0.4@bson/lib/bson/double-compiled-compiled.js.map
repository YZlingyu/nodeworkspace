{"version":3,"sources":["double-compiled.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,MAAT,CAAgB,KAAhB,EAAuB;AACrB,MAAI,EAAE,gBAAgB,MAAlB,CAAJ,EAA+B,OAAO,IAAI,MAAJ,CAAW,KAAX,CAAP;;AAE/B,OAAK,SAAL,GAAiB,QAAjB;AACA,OAAK,KAAL,GAAa,KAAb;AACD;;AAED;;;;;;AAMA,OAAO,SAAP,CAAiB,OAAjB,GAA2B,YAAY;AACrC,SAAO,KAAK,KAAZ;AACD,CAFD;;AAIA;;;AAGA,OAAO,SAAP,CAAiB,MAAjB,GAA0B,YAAY;AACpC,SAAO,KAAK,KAAZ;AACD,CAFD;;AAIA,OAAO,OAAP,GAAiB,MAAjB;AACA,OAAO,OAAP,CAAe,MAAf,GAAwB,MAAxB;;AAEA","file":"double-compiled-compiled.js","sourcesContent":["/**\n * A class representation of the BSON Double type.\n *\n * @class\n * @param {number} value the number we want to represent as a double.\n * @return {Double}\n */\nfunction Double(value) {\n  if (!(this instanceof Double)) return new Double(value);\n\n  this._bsontype = 'Double';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped double number.\n */\nDouble.prototype.valueOf = function () {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nDouble.prototype.toJSON = function () {\n  return this.value;\n};\n\nmodule.exports = Double;\nmodule.exports.Double = Double;\n\n//# sourceMappingURL=double-compiled.js.map"]}