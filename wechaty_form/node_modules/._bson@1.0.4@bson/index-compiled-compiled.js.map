{"version":3,"sources":["index-compiled.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,iBAAR,CAAX;AAAA,IACI,SAAS,QAAQ,mBAAR,CADb;AAAA,IAEI,OAAO,QAAQ,iBAAR,CAFX;AAAA,IAGI,QAAQ,QAAQ,mBAAR,CAHZ;AAAA,IAII,aAAa,QAAQ,uBAAR,CAJjB;AAAA,IAKI,SAAS,QAAQ,mBAAR,CALb;AAAA,IAMI,QAAQ,QAAQ,mBAAR,CANZ;AAAA,IAOI,OAAO,QAAQ,iBAAR,CAPX;AAAA,IAQI,MAAM,QAAQ,gBAAR,CARV;AAAA,IASI,SAAS,QAAQ,oBAAR,CATb;AAAA,IAUI,SAAS,QAAQ,oBAAR,CAVb;AAAA,IAWI,WAAW,QAAQ,qBAAR,CAXf;AAAA,IAYI,aAAa,QAAQ,mBAAR,CAZjB;AAAA,IAaI,SAAS,QAAQ,mBAAR,CAbb;AAAA,IAcI,YAAY,QAAQ,sBAAR,CAdhB;;AAgBA;AACA,KAAK,cAAL,GAAsB,UAAtB;AACA,KAAK,cAAL,GAAsB,CAAC,UAAvB;;AAEA,KAAK,cAAL,GAAsB,KAAK,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,CAAxC;AACA,KAAK,cAAL,GAAsB,CAAC,KAAK,GAAL,CAAS,CAAT,EAAY,EAAZ,CAAvB;;AAEA;AACA,KAAK,UAAL,GAAkB,gBAAlB,C,CAAoC;AACpC,KAAK,UAAL,GAAkB,CAAC,gBAAnB,C,CAAqC;;AAErC;AACA,KAAK,MAAL,GAAc,MAAd;AACA,KAAK,IAAL,GAAY,IAAZ;AACA,KAAK,KAAL,GAAa,KAAb;AACA,KAAK,UAAL,GAAkB,UAAlB;AACA,KAAK,MAAL,GAAc,MAAd;AACA,KAAK,KAAL,GAAa,KAAb;AACA,KAAK,IAAL,GAAY,IAAZ;AACA,KAAK,GAAL,GAAW,GAAX;AACA,KAAK,MAAL,GAAc,MAAd;AACA,KAAK,MAAL,GAAc,MAAd;AACA,KAAK,QAAL,GAAgB,QAAhB;AACA,KAAK,QAAL,GAAgB,QAAhB;AACA,KAAK,UAAL,GAAkB,UAAlB;AACA,KAAK,MAAL,GAAc,MAAd;AACA,KAAK,SAAL,GAAiB,SAAjB;;AAEA;AACA,OAAO,OAAP,GAAiB,IAAjB;;AAEA","file":"index-compiled-compiled.js","sourcesContent":["var BSON = require('./lib/bson/bson'),\n    Binary = require('./lib/bson/binary'),\n    Code = require('./lib/bson/code'),\n    DBRef = require('./lib/bson/db_ref'),\n    Decimal128 = require('./lib/bson/decimal128'),\n    Double = require('./lib/bson/double'),\n    Int32 = require('./lib/bson/int_32'),\n    Long = require('./lib/bson/long'),\n    Map = require('./lib/bson/map'),\n    MaxKey = require('./lib/bson/max_key'),\n    MinKey = require('./lib/bson/min_key'),\n    ObjectId = require('./lib/bson/objectid'),\n    BSONRegExp = require('./lib/bson/regexp'),\n    Symbol = require('./lib/bson/symbol'),\n    Timestamp = require('./lib/bson/timestamp');\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7FFFFFFF;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\n// Add BSON types to function creation\nBSON.Binary = Binary;\nBSON.Code = Code;\nBSON.DBRef = DBRef;\nBSON.Decimal128 = Decimal128;\nBSON.Double = Double;\nBSON.Int32 = Int32;\nBSON.Long = Long;\nBSON.Map = Map;\nBSON.MaxKey = MaxKey;\nBSON.MinKey = MinKey;\nBSON.ObjectId = ObjectId;\nBSON.ObjectID = ObjectId;\nBSON.BSONRegExp = BSONRegExp;\nBSON.Symbol = Symbol;\nBSON.Timestamp = Timestamp;\n\n// Return the BSON\nmodule.exports = BSON;\n\n//# sourceMappingURL=index-compiled.js.map"]}