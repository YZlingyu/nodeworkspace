{"version":3,"sources":["manager.js"],"names":[],"mappings":"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","file":"manager-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.engine.id;\n    }\n  }\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.engine.id;\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting evnet is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n"]}