{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["var Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end, opts) {\n  write = write || function (data) { this.queue(data) }\n  end = end || function () { this.queue(null) }\n\n  var ended = false, destroyed = false, buffer = [], _ended = false\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false\n\n//  stream.autoPause   = !(opts && opts.autoPause   === false)\n  stream.autoDestroy = !(opts && opts.autoDestroy === false)\n\n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n\n  function drain() {\n    while(buffer.length && !stream.paused) {\n      var data = buffer.shift()\n      if(null === data)\n        return stream.emit('end')\n      else\n        stream.emit('data', data)\n    }\n  }\n\n  stream.queue = stream.push = function (data) {\n//    console.error(ended)\n    if(_ended) return stream\n    if(data === null) _ended = true\n    buffer.push(data)\n    drain()\n    return stream\n  }\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable && stream.autoDestroy)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  function _end () {\n    stream.writable = false\n    end.call(stream)\n    if(!stream.readable && stream.autoDestroy)\n      stream.destroy()\n  }\n\n  stream.end = function (data) {\n    if(ended) return\n    ended = true\n    if(arguments.length) stream.write(data)\n    _end() // will emit or queue\n    return stream\n  }\n\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    buffer.length = 0\n    stream.writable = stream.readable = false\n    stream.emit('close')\n    return stream\n  }\n\n  stream.pause = function () {\n    if(stream.paused) return\n    stream.paused = true\n    return stream\n  }\n\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n      stream.emit('resume')\n    }\n    drain()\n    //may have become paused again,\n    //as drain emits 'data'.\n    if(!stream.paused)\n      stream.emit('drain')\n    return stream\n  }\n  return stream\n}\n\n"]}