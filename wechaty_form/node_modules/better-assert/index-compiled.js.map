{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,iBAAiB,QAAQ,QAAR,EAAkB,cAAvC;AAAA,IACI,WAAW,QAAQ,UAAR,CADf;AAAA,IAEI,KAAK,QAAQ,IAAR,CAFT;;AAIA;;;;AAIA,OAAO,OAAP,GAAiB,QAAQ,GAAR,CAAY,SAAZ,GACb,YAAU,CAAE,CADC,GAEb,MAFJ;;AAIA;;;;AAIA,SAAS,MAAT,CAAgB,IAAhB,EAAsB;AACpB,MAAI,IAAJ,EAAU;;AAEV,MAAI,QAAQ,UAAZ;AACA,MAAI,OAAO,MAAM,CAAN,CAAX;AACA,MAAI,OAAO,KAAK,WAAL,EAAX;AACA,MAAI,SAAS,KAAK,aAAL,EAAb;AACA,MAAI,MAAM,GAAG,YAAH,CAAgB,IAAhB,EAAsB,MAAtB,CAAV;AACA,MAAI,OAAO,IAAI,KAAJ,CAAU,IAAV,EAAgB,SAAO,CAAvB,CAAX;AACA,MAAI,MAAM,KAAK,KAAL,CAAW,gBAAX,EAA6B,CAA7B,CAAV;;AAEA,MAAI,MAAM,IAAI,cAAJ,CAAmB;AAC3B,aAAS,GADkB;AAE3B,wBAAoB,MAAM,CAAN,EAAS,WAAT;AAFO,GAAnB,CAAV;;AAKA,QAAM,GAAN;AACD","file":"index-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar AssertionError = require('assert').AssertionError\n  , callsite = require('callsite')\n  , fs = require('fs')\n\n/**\n * Expose `assert`.\n */\n\nmodule.exports = process.env.NO_ASSERT\n  ? function(){}\n  : assert;\n\n/**\n * Assert the given `expr`.\n */\n\nfunction assert(expr) {\n  if (expr) return;\n\n  var stack = callsite();\n  var call = stack[1];\n  var file = call.getFileName();\n  var lineno = call.getLineNumber();\n  var src = fs.readFileSync(file, 'utf8');\n  var line = src.split('\\n')[lineno-1];\n  var src = line.match(/assert\\((.*)\\)/)[1];\n\n  var err = new AssertionError({\n    message: src,\n    stackStartFunction: stack[0].getFunction()\n  });\n\n  throw err;\n}\n"]}