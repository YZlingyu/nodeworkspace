{"version":3,"sources":["polling-jsonp.js"],"names":[],"mappings":"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","file":"polling-jsonp-compiled.js","sourcesContent":["\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n"]}