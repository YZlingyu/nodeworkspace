{"version":3,"sources":["socket.js"],"names":[],"mappings":"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","file":"socket-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parsejson = require('parsejson');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? null : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    agent: this.agent,\n    hostname: this.hostname,\n    port: this.port,\n    secure: this.secure,\n    path: this.path,\n    query: query,\n    forceJSONP: this.forceJSONP,\n    jsonp: this.jsonp,\n    forceBase64: this.forceBase64,\n    enablesXDR: this.enablesXDR,\n    timestampRequests: this.timestampRequests,\n    timestampParam: this.timestampParam,\n    policyPort: this.policyPort,\n    socket: this,\n    pfx: this.pfx,\n    key: this.key,\n    passphrase: this.passphrase,\n    cert: this.cert,\n    ca: this.ca,\n    ciphers: this.ciphers,\n    rejectUnauthorized: this.rejectUnauthorized,\n    perMessageDeflate: this.perMessageDeflate,\n    extraHeaders: this.extraHeaders,\n    forceNode: this.forceNode,\n    localAddress: this.localAddress\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(parsejson(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n"]}