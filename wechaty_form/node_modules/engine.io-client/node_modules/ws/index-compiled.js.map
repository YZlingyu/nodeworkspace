{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AAEA;;;;;;AAMA,IAAI,KAAK,OAAO,OAAP,GAAiB,QAAQ,iBAAR,CAA1B;;AAEA,GAAG,MAAH,GAAY,QAAQ,uBAAR,CAAZ;AACA,GAAG,MAAH,GAAY,QAAQ,cAAR,CAAZ;AACA,GAAG,QAAH,GAAc,QAAQ,gBAAR,CAAd;;AAEA;;;;;;;;AAQA,GAAG,YAAH,GAAkB,SAAS,YAAT,CAAsB,OAAtB,EAA+B,EAA/B,EAAmC;AACnD,MAAI,SAAS,IAAI,GAAG,MAAP,CAAc,OAAd,CAAb;;AAEA,MAAI,OAAO,EAAP,KAAc,UAAlB,EAA8B;AAC5B,WAAO,EAAP,CAAU,YAAV,EAAwB,EAAxB;AACD;;AAED,SAAO,MAAP;AACD,CARD;;AAUA;;;;;;;;AAQA,GAAG,OAAH,GAAa,GAAG,gBAAH,GAAsB,SAAS,OAAT,CAAiB,OAAjB,EAA0B,EAA1B,EAA8B;AAC/D,MAAI,SAAS,IAAI,EAAJ,CAAO,OAAP,CAAb;;AAEA,MAAI,OAAO,EAAP,KAAc,UAAlB,EAA8B;AAC5B,WAAO,EAAP,CAAU,MAAV,EAAkB,EAAlB;AACD;;AAED,SAAO,MAAP;AACD,CARD","file":"index-compiled.js","sourcesContent":["'use strict';\n\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar WS = module.exports = require('./lib/WebSocket');\n\nWS.Server = require('./lib/WebSocketServer');\nWS.Sender = require('./lib/Sender');\nWS.Receiver = require('./lib/Receiver');\n\n/**\n * Create a new WebSocket server.\n *\n * @param {Object} options Server options\n * @param {Function} fn Optional connection listener.\n * @returns {WS.Server}\n * @api public\n */\nWS.createServer = function createServer(options, fn) {\n  var server = new WS.Server(options);\n\n  if (typeof fn === 'function') {\n    server.on('connection', fn);\n  }\n\n  return server;\n};\n\n/**\n * Create a new WebSocket connection.\n *\n * @param {String} address The URL/address we need to connect to.\n * @param {Function} fn Open listener.\n * @returns {WS}\n * @api public\n */\nWS.connect = WS.createConnection = function connect(address, fn) {\n  var client = new WS(address);\n\n  if (typeof fn === 'function') {\n    client.on('open', fn);\n  }\n\n  return client;\n};\n"]}