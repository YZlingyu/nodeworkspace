{"version":3,"sources":["Receiver.hixie.js"],"names":[],"mappings":"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","file":"Receiver.hixie-compiled.js","sourcesContent":["/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar util = require('util');\n\n/**\n * State constants\n */\n\nvar EMPTY = 0\n  , BODY = 1;\nvar BINARYLENGTH = 2\n  , BINARYBODY = 3;\n\n/**\n * Hixie Receiver implementation\n */\n\nfunction Receiver () {\n  if (this instanceof Receiver === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n\n  this.state = EMPTY;\n  this.buffers = [];\n  this.messageEnd = -1;\n  this.spanLength = 0;\n  this.dead = false;\n\n  this.onerror = function() {};\n  this.ontext = function() {};\n  this.onbinary = function() {};\n  this.onclose = function() {};\n  this.onping = function() {};\n  this.onpong = function() {};\n}\n\nmodule.exports = Receiver;\n\n/**\n * Add new data to the parser.\n *\n * @api public\n */\n\nReceiver.prototype.add = function(data) {\n  if (this.dead) return;\n  var self = this;\n  function doAdd() {\n    if (self.state === EMPTY) {\n      if (data.length == 2 && data[0] == 0xFF && data[1] == 0x00) {\n        self.reset();\n        self.onclose();\n        return;\n      }\n      if (data[0] === 0x80) {\n        self.messageEnd = 0;\n        self.state = BINARYLENGTH;\n        data = data.slice(1);\n      } else {\n\n      if (data[0] !== 0x00) {\n        self.error('payload must start with 0x00 byte', true);\n        return;\n      }\n      data = data.slice(1);\n      self.state = BODY;\n\n      }\n    }\n    if (self.state === BINARYLENGTH) {\n      var i = 0;\n      while ((i < data.length) && (data[i] & 0x80)) {\n        self.messageEnd = 128 * self.messageEnd + (data[i] & 0x7f);\n        ++i;\n      }\n      if (i < data.length) {\n        self.messageEnd = 128 * self.messageEnd + (data[i] & 0x7f);\n        self.state = BINARYBODY;\n        ++i;\n      }\n      if (i > 0)\n        data = data.slice(i);\n    }\n    if (self.state === BINARYBODY) {\n      var dataleft = self.messageEnd - self.spanLength;\n      if (data.length >= dataleft) {\n        // consume the whole buffer to finish the frame\n        self.buffers.push(data);\n        self.spanLength += dataleft;\n        self.messageEnd = dataleft;\n        return self.parse();\n      }\n      // frame's not done even if we consume it all\n      self.buffers.push(data);\n      self.spanLength += data.length;\n      return;\n    }\n    self.buffers.push(data);\n    if ((self.messageEnd = bufferIndex(data, 0xFF)) != -1) {\n      self.spanLength += self.messageEnd;\n      return self.parse();\n    }\n    else self.spanLength += data.length;\n  }\n  while(data) data = doAdd();\n};\n\n/**\n * Releases all resources used by the receiver.\n *\n * @api public\n */\n\nReceiver.prototype.cleanup = function() {\n  this.dead = true;\n  this.state = EMPTY;\n  this.buffers = [];\n};\n\n/**\n * Process buffered data.\n *\n * @api public\n */\n\nReceiver.prototype.parse = function() {\n  var output = new Buffer(this.spanLength);\n  var outputIndex = 0;\n  for (var bi = 0, bl = this.buffers.length; bi < bl - 1; ++bi) {\n    var buffer = this.buffers[bi];\n    buffer.copy(output, outputIndex);\n    outputIndex += buffer.length;\n  }\n  var lastBuffer = this.buffers[this.buffers.length - 1];\n  if (this.messageEnd > 0) lastBuffer.copy(output, outputIndex, 0, this.messageEnd);\n  if (this.state !== BODY) --this.messageEnd;\n  var tail = null;\n  if (this.messageEnd < lastBuffer.length - 1) {\n    tail = lastBuffer.slice(this.messageEnd + 1);\n  }\n  this.reset();\n  this.ontext(output.toString('utf8'));\n  return tail;\n};\n\n/**\n * Handles an error\n *\n * @api private\n */\n\nReceiver.prototype.error = function (reason, terminate) {\n  if (this.dead) return;\n  this.reset();\n  if(typeof reason == 'string'){\n    this.onerror(new Error(reason), terminate);\n  }\n  else if(reason.constructor == Error){\n    this.onerror(reason, terminate);\n  }\n  else{\n    this.onerror(new Error(\"An error occured\"),terminate);\n  }\n  return this;\n};\n\n/**\n * Reset parser state\n *\n * @api private\n */\n\nReceiver.prototype.reset = function (reason) {\n  if (this.dead) return;\n  this.state = EMPTY;\n  this.buffers = [];\n  this.messageEnd = -1;\n  this.spanLength = 0;\n};\n\n/**\n * Internal api\n */\n\nfunction bufferIndex(buffer, byte) {\n  for (var i = 0, l = buffer.length; i < l; ++i) {\n    if (buffer[i] === byte) return i;\n  }\n  return -1;\n}\n"]}