{"version":3,"sources":["Receiver.js"],"names":[],"mappings":"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","file":"Receiver-compiled.js","sourcesContent":["/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar util = require('util')\n  , Validation = require('./Validation').Validation\n  , ErrorCodes = require('./ErrorCodes')\n  , BufferPool = require('./BufferPool')\n  , bufferUtil = require('./BufferUtil').BufferUtil\n  , PerMessageDeflate = require('./PerMessageDeflate');\n\n/**\n * HyBi Receiver implementation\n */\n\nfunction Receiver (extensions,maxPayload) {\n  if (this instanceof Receiver === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n  if(typeof extensions==='number'){\n    maxPayload=extensions;\n    extensions={};\n  }\n\n\n  // memory pool for fragmented messages\n  var fragmentedPoolPrevUsed = -1;\n  this.fragmentedBufferPool = new BufferPool(1024, function(db, length) {\n    return db.used + length;\n  }, function(db) {\n    return fragmentedPoolPrevUsed = fragmentedPoolPrevUsed >= 0 ?\n      Math.ceil((fragmentedPoolPrevUsed + db.used) / 2) :\n      db.used;\n  });\n\n  // memory pool for unfragmented messages\n  var unfragmentedPoolPrevUsed = -1;\n  this.unfragmentedBufferPool = new BufferPool(1024, function(db, length) {\n    return db.used + length;\n  }, function(db) {\n    return unfragmentedPoolPrevUsed = unfragmentedPoolPrevUsed >= 0 ?\n      Math.ceil((unfragmentedPoolPrevUsed + db.used) / 2) :\n      db.used;\n  });\n  this.extensions = extensions || {};\n  this.maxPayload = maxPayload || 0;\n  this.currentPayloadLength = 0;\n  this.state = {\n    activeFragmentedOperation: null,\n    lastFragment: false,\n    masked: false,\n    opcode: 0,\n    fragmentedOperation: false\n  };\n  this.overflow = [];\n  this.headerBuffer = new Buffer(10);\n  this.expectOffset = 0;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  this.currentMessage = [];\n  this.currentMessageLength = 0;\n  this.messageHandlers = [];\n  this.expectHeader(2, this.processPacket);\n  this.dead = false;\n  this.processing = false;\n\n  this.onerror = function() {};\n  this.ontext = function() {};\n  this.onbinary = function() {};\n  this.onclose = function() {};\n  this.onping = function() {};\n  this.onpong = function() {};\n}\n\nmodule.exports = Receiver;\n\n/**\n * Add new data to the parser.\n *\n * @api public\n */\n\nReceiver.prototype.add = function(data) {\n  if (this.dead) return;\n  var dataLength = data.length;\n  if (dataLength == 0) return;\n  if (this.expectBuffer == null) {\n    this.overflow.push(data);\n    return;\n  }\n  var toRead = Math.min(dataLength, this.expectBuffer.length - this.expectOffset);\n  fastCopy(toRead, data, this.expectBuffer, this.expectOffset);\n  this.expectOffset += toRead;\n  if (toRead < dataLength) {\n    this.overflow.push(data.slice(toRead));\n  }\n  while (this.expectBuffer && this.expectOffset == this.expectBuffer.length) {\n    var bufferForHandler = this.expectBuffer;\n    this.expectBuffer = null;\n    this.expectOffset = 0;\n    this.expectHandler.call(this, bufferForHandler);\n  }\n};\n\n/**\n * Releases all resources used by the receiver.\n *\n * @api public\n */\n\nReceiver.prototype.cleanup = function() {\n  this.dead = true;\n  this.overflow = null;\n  this.headerBuffer = null;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  this.unfragmentedBufferPool = null;\n  this.fragmentedBufferPool = null;\n  this.state = null;\n  this.currentMessage = null;\n  this.onerror = null;\n  this.ontext = null;\n  this.onbinary = null;\n  this.onclose = null;\n  this.onping = null;\n  this.onpong = null;\n};\n\n/**\n * Waits for a certain amount of header bytes to be available, then fires a callback.\n *\n * @api private\n */\n\nReceiver.prototype.expectHeader = function(length, handler) {\n  if (length == 0) {\n    handler(null);\n    return;\n  }\n  this.expectBuffer = this.headerBuffer.slice(this.expectOffset, this.expectOffset + length);\n  this.expectHandler = handler;\n  var toRead = length;\n  while (toRead > 0 && this.overflow.length > 0) {\n    var fromOverflow = this.overflow.pop();\n    if (toRead < fromOverflow.length) this.overflow.push(fromOverflow.slice(toRead));\n    var read = Math.min(fromOverflow.length, toRead);\n    fastCopy(read, fromOverflow, this.expectBuffer, this.expectOffset);\n    this.expectOffset += read;\n    toRead -= read;\n  }\n};\n\n/**\n * Waits for a certain amount of data bytes to be available, then fires a callback.\n *\n * @api private\n */\n\nReceiver.prototype.expectData = function(length, handler) {\n  if (length == 0) {\n    handler(null);\n    return;\n  }\n  this.expectBuffer = this.allocateFromPool(length, this.state.fragmentedOperation);\n  this.expectHandler = handler;\n  var toRead = length;\n  while (toRead > 0 && this.overflow.length > 0) {\n    var fromOverflow = this.overflow.pop();\n    if (toRead < fromOverflow.length) this.overflow.push(fromOverflow.slice(toRead));\n    var read = Math.min(fromOverflow.length, toRead);\n    fastCopy(read, fromOverflow, this.expectBuffer, this.expectOffset);\n    this.expectOffset += read;\n    toRead -= read;\n  }\n};\n\n/**\n * Allocates memory from the buffer pool.\n *\n * @api private\n */\n\nReceiver.prototype.allocateFromPool = function(length, isFragmented) {\n  return (isFragmented ? this.fragmentedBufferPool : this.unfragmentedBufferPool).get(length);\n};\n\n/**\n * Start processing a new packet.\n *\n * @api private\n */\n\nReceiver.prototype.processPacket = function (data) {\n  if (this.extensions[PerMessageDeflate.extensionName]) {\n    if ((data[0] & 0x30) != 0) {\n      this.error('reserved fields (2, 3) must be empty', 1002);\n      return;\n    }\n  } else {\n    if ((data[0] & 0x70) != 0) {\n      this.error('reserved fields must be empty', 1002);\n      return;\n    }\n  }\n  this.state.lastFragment = (data[0] & 0x80) == 0x80;\n  this.state.masked = (data[1] & 0x80) == 0x80;\n  var compressed = (data[0] & 0x40) == 0x40;\n  var opcode = data[0] & 0xf;\n  if (opcode === 0) {\n    if (compressed) {\n      this.error('continuation frame cannot have the Per-message Compressed bits', 1002);\n      return;\n    }\n    // continuation frame\n    this.state.fragmentedOperation = true;\n    this.state.opcode = this.state.activeFragmentedOperation;\n    if (!(this.state.opcode == 1 || this.state.opcode == 2)) {\n      this.error('continuation frame cannot follow current opcode', 1002);\n      return;\n    }\n  }\n  else {\n    if (opcode < 3 && this.state.activeFragmentedOperation != null) {\n      this.error('data frames after the initial data frame must have opcode 0', 1002);\n      return;\n    }\n    if (opcode >= 8 && compressed) {\n      this.error('control frames cannot have the Per-message Compressed bits', 1002);\n      return;\n    }\n    this.state.compressed = compressed;\n    this.state.opcode = opcode;\n    if (this.state.lastFragment === false) {\n      this.state.fragmentedOperation = true;\n      this.state.activeFragmentedOperation = opcode;\n    }\n    else this.state.fragmentedOperation = false;\n  }\n  var handler = opcodes[this.state.opcode];\n  if (typeof handler == 'undefined') this.error('no handler for opcode ' + this.state.opcode, 1002);\n  else {\n    handler.start.call(this, data);\n  }\n};\n\n/**\n * Endprocessing a packet.\n *\n * @api private\n */\n\nReceiver.prototype.endPacket = function() {\n  if (this.dead) return;\n  if (!this.state.fragmentedOperation) this.unfragmentedBufferPool.reset(true);\n  else if (this.state.lastFragment) this.fragmentedBufferPool.reset(true);\n  this.expectOffset = 0;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  if (this.state.lastFragment && this.state.opcode === this.state.activeFragmentedOperation) {\n    // end current fragmented operation\n    this.state.activeFragmentedOperation = null;\n  }\n  this.currentPayloadLength = 0;\n  this.state.lastFragment = false;\n  this.state.opcode = this.state.activeFragmentedOperation != null ? this.state.activeFragmentedOperation : 0;\n  this.state.masked = false;\n  this.expectHeader(2, this.processPacket);\n};\n\n/**\n * Reset the parser state.\n *\n * @api private\n */\n\nReceiver.prototype.reset = function() {\n  if (this.dead) return;\n  this.state = {\n    activeFragmentedOperation: null,\n    lastFragment: false,\n    masked: false,\n    opcode: 0,\n    fragmentedOperation: false\n  };\n  this.fragmentedBufferPool.reset(true);\n  this.unfragmentedBufferPool.reset(true);\n  this.expectOffset = 0;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  this.overflow = [];\n  this.currentMessage = [];\n  this.currentMessageLength = 0;\n  this.messageHandlers = [];\n  this.currentPayloadLength = 0;\n};\n\n/**\n * Unmask received data.\n *\n * @api private\n */\n\nReceiver.prototype.unmask = function (mask, buf, binary) {\n  if (mask != null && buf != null) bufferUtil.unmask(buf, mask);\n  if (binary) return buf;\n  return buf != null ? buf.toString('utf8') : '';\n};\n\n/**\n * Handles an error\n *\n * @api private\n */\n\nReceiver.prototype.error = function (reason, protocolErrorCode) {\n  if (this.dead) return;\n  this.reset();\n  if(typeof reason == 'string'){\n    this.onerror(new Error(reason), protocolErrorCode);\n  }\n  else if(reason.constructor == Error){\n    this.onerror(reason, protocolErrorCode);\n  }\n  else{\n    this.onerror(new Error(\"An error occured\"),protocolErrorCode);\n  }\n  return this;\n};\n\n/**\n * Execute message handler buffers\n *\n * @api private\n */\n\nReceiver.prototype.flush = function() {\n  if (this.processing || this.dead) return;\n\n  var handler = this.messageHandlers.shift();\n  if (!handler) return;\n\n  this.processing = true;\n  var self = this;\n\n  handler(function() {\n    self.processing = false;\n    self.flush();\n  });\n};\n\n/**\n * Apply extensions to message\n *\n * @api private\n */\n\nReceiver.prototype.applyExtensions = function(messageBuffer, fin, compressed, callback) {\n  var self = this;\n  if (compressed) {\n    this.extensions[PerMessageDeflate.extensionName].decompress(messageBuffer, fin, function(err, buffer) {\n      if (self.dead) return;\n      if (err) {\n        callback(new Error('invalid compressed data'));\n        return;\n      }\n      callback(null, buffer);\n    });\n  } else {\n    callback(null, messageBuffer);\n  }\n};\n\n/**\n* Checks payload size, disconnects socket when it exceeds maxPayload\n*\n* @api private\n*/\nReceiver.prototype.maxPayloadExceeded = function(length) {\n  if (this.maxPayload=== undefined || this.maxPayload === null || this.maxPayload < 1) {\n    return false;\n  }\n  var fullLength = this.currentPayloadLength + length;\n  if (fullLength < this.maxPayload) {\n    this.currentPayloadLength = fullLength;\n    return false;\n  }\n  this.error('payload cannot exceed ' + this.maxPayload + ' bytes', 1009);\n  this.messageBuffer=[];\n  this.cleanup();\n\n  return true;\n};\n\n/**\n * Buffer utilities\n */\n\nfunction readUInt16BE(start) {\n  return (this[start]<<8) +\n         this[start+1];\n}\n\nfunction readUInt32BE(start) {\n  return (this[start]<<24) +\n         (this[start+1]<<16) +\n         (this[start+2]<<8) +\n         this[start+3];\n}\n\nfunction fastCopy(length, srcBuffer, dstBuffer, dstOffset) {\n  switch (length) {\n    default: srcBuffer.copy(dstBuffer, dstOffset, 0, length); break;\n    case 16: dstBuffer[dstOffset+15] = srcBuffer[15];\n    case 15: dstBuffer[dstOffset+14] = srcBuffer[14];\n    case 14: dstBuffer[dstOffset+13] = srcBuffer[13];\n    case 13: dstBuffer[dstOffset+12] = srcBuffer[12];\n    case 12: dstBuffer[dstOffset+11] = srcBuffer[11];\n    case 11: dstBuffer[dstOffset+10] = srcBuffer[10];\n    case 10: dstBuffer[dstOffset+9] = srcBuffer[9];\n    case 9: dstBuffer[dstOffset+8] = srcBuffer[8];\n    case 8: dstBuffer[dstOffset+7] = srcBuffer[7];\n    case 7: dstBuffer[dstOffset+6] = srcBuffer[6];\n    case 6: dstBuffer[dstOffset+5] = srcBuffer[5];\n    case 5: dstBuffer[dstOffset+4] = srcBuffer[4];\n    case 4: dstBuffer[dstOffset+3] = srcBuffer[3];\n    case 3: dstBuffer[dstOffset+2] = srcBuffer[2];\n    case 2: dstBuffer[dstOffset+1] = srcBuffer[1];\n    case 1: dstBuffer[dstOffset] = srcBuffer[0];\n  }\n}\n\nfunction clone(obj) {\n  var cloned = {};\n  for (var k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      cloned[k] = obj[k];\n    }\n  }\n  return cloned;\n}\n\n/**\n * Opcode handlers\n */\n\nvar opcodes = {\n  // text\n  '1': {\n    start: function(data) {\n      var self = this;\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        if (self.maxPayloadExceeded(firstLength)){\n          self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);\n          return;\n        }\n        opcodes['1'].getData.call(self, firstLength);\n      }\n      else if (firstLength == 126) {\n        self.expectHeader(2, function(data) {\n          var length = readUInt16BE.call(data, 0);\n          if (self.maxPayloadExceeded(length)){\n            self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n          opcodes['1'].getData.call(self, length);\n        });\n      }\n      else if (firstLength == 127) {\n        self.expectHeader(8, function(data) {\n          if (readUInt32BE.call(data, 0) != 0) {\n            self.error('packets with length spanning more than 32 bit is currently not supported', 1008);\n            return;\n          }\n          var length = readUInt32BE.call(data, 4);\n          if (self.maxPayloadExceeded(length)){\n            self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n          opcodes['1'].getData.call(self, readUInt32BE.call(data, 4));\n        });\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['1'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['1'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      var packet = this.unmask(mask, data, true) || new Buffer(0);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.applyExtensions(packet, state.lastFragment, state.compressed, function(err, buffer) {\n          if (err) {\n            if(err.type===1009){\n                return self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);\n            }\n            return self.error(err.message, 1007);\n          }\n          if (buffer != null) {\n            if( self.maxPayload==0 || (self.maxPayload > 0 && (self.currentMessageLength + buffer.length) < self.maxPayload) ){\n              self.currentMessage.push(buffer);\n            }\n            else{\n                self.currentMessage=null;\n                self.currentMessage = [];\n                self.currentMessageLength = 0;\n                self.error(new Error('Maximum payload exceeded. maxPayload: '+self.maxPayload), 1009);\n                return;\n            }\n            self.currentMessageLength += buffer.length;\n          }\n          if (state.lastFragment) {\n            var messageBuffer = Buffer.concat(self.currentMessage);\n            self.currentMessage = [];\n            self.currentMessageLength = 0;\n            if (!Validation.isValidUTF8(messageBuffer)) {\n              self.error('invalid utf8 sequence', 1007);\n              return;\n            }\n            self.ontext(messageBuffer.toString('utf8'), {masked: state.masked, buffer: messageBuffer});\n          }\n          callback();\n        });\n      });\n      this.flush();\n      this.endPacket();\n    }\n  },\n  // binary\n  '2': {\n    start: function(data) {\n      var self = this;\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n          if (self.maxPayloadExceeded(firstLength)){\n            self.error('Max payload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n        opcodes['2'].getData.call(self, firstLength);\n      }\n      else if (firstLength == 126) {\n        self.expectHeader(2, function(data) {\n          var length = readUInt16BE.call(data, 0);\n          if (self.maxPayloadExceeded(length)){\n            self.error('Max payload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n          opcodes['2'].getData.call(self, length);\n        });\n      }\n      else if (firstLength == 127) {\n        self.expectHeader(8, function(data) {\n          if (readUInt32BE.call(data, 0) != 0) {\n            self.error('packets with length spanning more than 32 bit is currently not supported', 1008);\n            return;\n          }\n          var length = readUInt32BE.call(data, 4, true);\n          if (self.maxPayloadExceeded(length)){\n            self.error('Max payload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n          opcodes['2'].getData.call(self, length);\n        });\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['2'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['2'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      var packet = this.unmask(mask, data, true) || new Buffer(0);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.applyExtensions(packet, state.lastFragment, state.compressed, function(err, buffer) {\n          if (err) {\n            if(err.type===1009){\n                return self.error('Max payload exceeded in compressed binary message. Aborting...', 1009);\n            }\n            return self.error(err.message, 1007);\n          }\n          if (buffer != null) {\n            if( self.maxPayload==0 || (self.maxPayload > 0 && (self.currentMessageLength + buffer.length) < self.maxPayload) ){\n              self.currentMessage.push(buffer);\n            }\n            else{\n                self.currentMessage=null;\n                self.currentMessage = [];\n                self.currentMessageLength = 0;\n                self.error(new Error('Maximum payload exceeded'), 1009);\n                return;\n            }\n            self.currentMessageLength += buffer.length;\n          }\n          if (state.lastFragment) {\n            var messageBuffer = Buffer.concat(self.currentMessage);\n            self.currentMessage = [];\n            self.currentMessageLength = 0;\n            self.onbinary(messageBuffer, {masked: state.masked, buffer: messageBuffer});\n          }\n          callback();\n        });\n      });\n      this.flush();\n      this.endPacket();\n    }\n  },\n  // close\n  '8': {\n    start: function(data) {\n      var self = this;\n      if (self.state.lastFragment == false) {\n        self.error('fragmented close is not supported', 1002);\n        return;\n      }\n\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['8'].getData.call(self, firstLength);\n      }\n      else {\n        self.error('control frames cannot have more than 125 bytes of data', 1002);\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['8'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['8'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      data = self.unmask(mask, data, true);\n\n      var state = clone(this.state);\n      this.messageHandlers.push(function() {\n        if (data && data.length == 1) {\n          self.error('close packets with data must be at least two bytes long', 1002);\n          return;\n        }\n        var code = data && data.length > 1 ? readUInt16BE.call(data, 0) : 1000;\n        if (!ErrorCodes.isValidErrorCode(code)) {\n          self.error('invalid error code', 1002);\n          return;\n        }\n        var message = '';\n        if (data && data.length > 2) {\n          var messageBuffer = data.slice(2);\n          if (!Validation.isValidUTF8(messageBuffer)) {\n            self.error('invalid utf8 sequence', 1007);\n            return;\n          }\n          message = messageBuffer.toString('utf8');\n        }\n        self.onclose(code, message, {masked: state.masked});\n        self.reset();\n      });\n      this.flush();\n    },\n  },\n  // ping\n  '9': {\n    start: function(data) {\n      var self = this;\n      if (self.state.lastFragment == false) {\n        self.error('fragmented ping is not supported', 1002);\n        return;\n      }\n\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['9'].getData.call(self, firstLength);\n      }\n      else {\n        self.error('control frames cannot have more than 125 bytes of data', 1002);\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['9'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['9'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      data = this.unmask(mask, data, true);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.onping(data, {masked: state.masked, binary: true});\n        callback();\n      });\n      this.flush();\n      this.endPacket();\n    }\n  },\n  // pong\n  '10': {\n    start: function(data) {\n      var self = this;\n      if (self.state.lastFragment == false) {\n        self.error('fragmented pong is not supported', 1002);\n        return;\n      }\n\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['10'].getData.call(self, firstLength);\n      }\n      else {\n        self.error('control frames cannot have more than 125 bytes of data', 1002);\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (this.state.masked) {\n        this.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['10'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        this.expectData(length, function(data) {\n          opcodes['10'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      data = self.unmask(mask, data, true);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.onpong(data, {masked: state.masked, binary: true});\n        callback();\n      });\n      this.flush();\n      this.endPacket();\n    }\n  }\n}\n"]}