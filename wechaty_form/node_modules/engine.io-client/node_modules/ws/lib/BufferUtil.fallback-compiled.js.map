{"version":3,"sources":["BufferUtil.fallback.js"],"names":[],"mappings":"AAAA;;;;;;AAMA,QAAQ,UAAR,GAAqB;AACnB,SAAO,UAAS,YAAT,EAAuB,OAAvB,EAAgC;AACrC,QAAI,SAAS,CAAb;AACA,SAAK,IAAI,IAAI,CAAR,EAAW,IAAI,QAAQ,MAA5B,EAAoC,IAAI,CAAxC,EAA2C,EAAE,CAA7C,EAAgD;AAC9C,UAAI,MAAM,QAAQ,CAAR,CAAV;AACA,UAAI,IAAJ,CAAS,YAAT,EAAuB,MAAvB;AACA,gBAAU,IAAI,MAAd;AACD;AACF,GARkB;AASnB,QAAM,UAAS,MAAT,EAAiB,IAAjB,EAAuB,MAAvB,EAA+B,MAA/B,EAAuC,MAAvC,EAA+C;AACnD,QAAI,UAAU,KAAK,YAAL,CAAkB,CAAlB,EAAqB,IAArB,CAAd;AACA,QAAI,IAAI,CAAR;AACA,WAAO,IAAI,SAAS,CAApB,EAAuB,KAAK,CAA5B,EAA+B;AAC7B,UAAI,MAAM,UAAU,OAAO,YAAP,CAAoB,CAApB,EAAuB,IAAvB,CAApB;AACA,UAAI,MAAM,CAAV,EAAa,MAAM,aAAa,GAAnB;AACb,aAAO,aAAP,CAAqB,GAArB,EAA0B,SAAS,CAAnC,EAAsC,IAAtC;AACD;AACD,YAAQ,SAAS,CAAjB;AACE,WAAK,CAAL;AAAQ,eAAO,SAAS,CAAT,GAAa,CAApB,IAAyB,OAAO,IAAI,CAAX,IAAgB,KAAK,CAAL,CAAzC;AACR,WAAK,CAAL;AAAQ,eAAO,SAAS,CAAT,GAAa,CAApB,IAAyB,OAAO,IAAI,CAAX,IAAgB,KAAK,CAAL,CAAzC;AACR,WAAK,CAAL;AAAQ,eAAO,SAAS,CAAhB,IAAqB,OAAO,CAAP,IAAY,KAAK,CAAL,CAAjC;AACR,WAAK,CAAL;AAAO;AAJT;AAMD,GAvBkB;AAwBnB,UAAQ,UAAS,IAAT,EAAe,IAAf,EAAqB;AAC3B,QAAI,UAAU,KAAK,YAAL,CAAkB,CAAlB,EAAqB,IAArB,CAAd;AACA,QAAI,SAAS,KAAK,MAAlB;AACA,QAAI,IAAI,CAAR;AACA,WAAO,IAAI,SAAS,CAApB,EAAuB,KAAK,CAA5B,EAA+B;AAC7B,UAAI,MAAM,UAAU,KAAK,YAAL,CAAkB,CAAlB,EAAqB,IAArB,CAApB;AACA,UAAI,MAAM,CAAV,EAAa,MAAM,aAAa,GAAnB;AACb,WAAK,aAAL,CAAmB,GAAnB,EAAwB,CAAxB,EAA2B,IAA3B;AACD;AACD,YAAQ,SAAS,CAAjB;AACE,WAAK,CAAL;AAAQ,aAAK,IAAI,CAAT,IAAc,KAAK,IAAI,CAAT,IAAc,KAAK,CAAL,CAA5B;AACR,WAAK,CAAL;AAAQ,aAAK,IAAI,CAAT,IAAc,KAAK,IAAI,CAAT,IAAc,KAAK,CAAL,CAA5B;AACR,WAAK,CAAL;AAAQ,aAAK,CAAL,IAAU,KAAK,CAAL,IAAU,KAAK,CAAL,CAApB;AACR,WAAK,CAAL;AAAO;AAJT;AAMD;AAvCkB,CAArB","file":"BufferUtil.fallback-compiled.js","sourcesContent":["/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nexports.BufferUtil = {\n  merge: function(mergedBuffer, buffers) {\n    var offset = 0;\n    for (var i = 0, l = buffers.length; i < l; ++i) {\n      var buf = buffers[i];\n      buf.copy(mergedBuffer, offset);\n      offset += buf.length;\n    }\n  },\n  mask: function(source, mask, output, offset, length) {\n    var maskNum = mask.readUInt32LE(0, true);\n    var i = 0;\n    for (; i < length - 3; i += 4) {\n      var num = maskNum ^ source.readUInt32LE(i, true);\n      if (num < 0) num = 4294967296 + num;\n      output.writeUInt32LE(num, offset + i, true);\n    }\n    switch (length % 4) {\n      case 3: output[offset + i + 2] = source[i + 2] ^ mask[2];\n      case 2: output[offset + i + 1] = source[i + 1] ^ mask[1];\n      case 1: output[offset + i] = source[i] ^ mask[0];\n      case 0:;\n    }\n  },\n  unmask: function(data, mask) {\n    var maskNum = mask.readUInt32LE(0, true);\n    var length = data.length;\n    var i = 0;\n    for (; i < length - 3; i += 4) {\n      var num = maskNum ^ data.readUInt32LE(i, true);\n      if (num < 0) num = 4294967296 + num;\n      data.writeUInt32LE(num, i, true);\n    }\n    switch (length % 4) {\n      case 3: data[i + 2] = data[i + 2] ^ mask[2];\n      case 2: data[i + 1] = data[i + 1] ^ mask[1];\n      case 1: data[i] = data[i] ^ mask[0];\n      case 0:;\n    }\n  }\n}\n"]}