{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,QAAR,CAAb;;AAEA,IAAI,OAAO,IAAP,IAAe,OAAO,KAAtB,IAA+B,OAAO,WAAtC,IAAqD,OAAO,eAAhE,EAAiF;AAC/E,SAAO,OAAP,GAAiB,MAAjB;AACD,CAFD,MAEO;AACL;AACA,SAAO,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAU,IAAV,EAAgB;AAC1C,YAAQ,IAAR,IAAgB,OAAO,IAAP,CAAhB;AACD,GAFD;AAGA,UAAQ,MAAR,GAAiB,UAAjB;AACD;;AAED,SAAS,UAAT,CAAqB,GAArB,EAA0B,gBAA1B,EAA4C,MAA5C,EAAoD;AAClD,SAAO,OAAO,GAAP,EAAY,gBAAZ,EAA8B,MAA9B,CAAP;AACD;;AAED;AACA,OAAO,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAU,IAAV,EAAgB;AAC1C,aAAW,IAAX,IAAmB,OAAO,IAAP,CAAnB;AACD,CAFD;;AAIA,WAAW,IAAX,GAAkB,UAAU,GAAV,EAAe,gBAAf,EAAiC,MAAjC,EAAyC;AACzD,MAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AAC3B,UAAM,IAAI,SAAJ,CAAc,+BAAd,CAAN;AACD;AACD,SAAO,OAAO,GAAP,EAAY,gBAAZ,EAA8B,MAA9B,CAAP;AACD,CALD;;AAOA,WAAW,KAAX,GAAmB,UAAU,IAAV,EAAgB,IAAhB,EAAsB,QAAtB,EAAgC;AACjD,MAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAI,SAAJ,CAAc,2BAAd,CAAN;AACD;AACD,MAAI,MAAM,OAAO,IAAP,CAAV;AACA,MAAI,SAAS,SAAb,EAAwB;AACtB,QAAI,OAAO,QAAP,KAAoB,QAAxB,EAAkC;AAChC,UAAI,IAAJ,CAAS,IAAT,EAAe,QAAf;AACD,KAFD,MAEO;AACL,UAAI,IAAJ,CAAS,IAAT;AACD;AACF,GAND,MAMO;AACL,QAAI,IAAJ,CAAS,CAAT;AACD;AACD,SAAO,GAAP;AACD,CAfD;;AAiBA,WAAW,WAAX,GAAyB,UAAU,IAAV,EAAgB;AACvC,MAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAI,SAAJ,CAAc,2BAAd,CAAN;AACD;AACD,SAAO,OAAO,IAAP,CAAP;AACD,CALD;;AAOA,WAAW,eAAX,GAA6B,UAAU,IAAV,EAAgB;AAC3C,MAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAI,SAAJ,CAAc,2BAAd,CAAN;AACD;AACD,SAAO,OAAO,UAAP,CAAkB,IAAlB,CAAP;AACD,CALD","file":"index-compiled.js","sourcesContent":["var buffer = require('buffer')\n\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  Object.keys(buffer).forEach(function (prop) {\n    exports[prop] = buffer[prop]\n  })\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\nObject.keys(Buffer).forEach(function (prop) {\n  SafeBuffer[prop] = Buffer[prop]\n})\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n"]}