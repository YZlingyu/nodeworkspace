{"version":3,"sources":["utils.test.js"],"names":[],"mappings":"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","file":"utils.test-compiled.js","sourcesContent":["\nvar utils = require('../lib/utils');\nvar assert = require('assert');\n\nvar mongo;\ntry {\n  mongo = new require('mongodb');\n} catch (e) {}\n\ndescribe('lib/utils', function() {\n  describe('clone', function() {\n    it('clones constructors named ObjectId', function(done) {\n      function ObjectId (id) {\n        this.id = id;\n      }\n\n      var o1 = new ObjectId('1234');\n      var o2 = utils.clone(o1);\n      assert.ok(o2 instanceof ObjectId);\n\n      done();\n    });\n\n    it('clones constructors named ObjectID', function(done) {\n      function ObjectID (id) {\n        this.id = id;\n      }\n\n      var o1 = new ObjectID('1234');\n      var o2 = utils.clone(o1);\n\n      assert.ok(o2 instanceof ObjectID);\n      done();\n    });\n\n    it('does not clone constructors named ObjectIdd', function(done) {\n      function ObjectIdd (id) {\n        this.id = id;\n      }\n\n      var o1 = new ObjectIdd('1234');\n      var o2 = utils.clone(o1);\n      assert.ok(!(o2 instanceof ObjectIdd));\n\n      done();\n    });\n\n    it('optionally clones ObjectId constructors using its clone method', function(done) {\n      function ObjectID (id) {\n        this.id = id;\n        this.cloned = false;\n      }\n\n      ObjectID.prototype.clone = function () {\n        var ret = new ObjectID(this.id);\n        ret.cloned = true;\n        return ret;\n      }\n\n      var id = 1234;\n      var o1 = new ObjectID(id);\n      assert.equal(id, o1.id);\n      assert.equal(false, o1.cloned);\n\n      var o2 = utils.clone(o1);\n      assert.ok(o2 instanceof ObjectID);\n      assert.equal(id, o2.id);\n      assert.ok(o2.cloned);\n      done();\n    });\n\n    it('clones mongodb.ReadPreferences', function (done) {\n      if (!mongo) return done();\n\n      var tags = [\n        {dc: 'tag1'}\n      ];\n      var prefs = [\n        new mongo.ReadPreference(\"primary\"),\n        new mongo.ReadPreference(mongo.ReadPreference.PRIMARY_PREFERRED),\n        new mongo.ReadPreference(\"primary\", tags),\n        mongo.ReadPreference(\"primary\", tags)\n      ];\n\n      var prefsCloned = utils.clone(prefs);\n\n      for (var i = 0; i < prefsCloned.length; i++) {\n        assert.notEqual(prefs[i], prefsCloned[i]);\n        assert.ok(prefsCloned[i] instanceof mongo.ReadPreference);\n        assert.ok(prefsCloned[i].isValid());\n        if (prefs[i].tags) {\n          assert.ok(prefsCloned[i].tags);\n          assert.notEqual(prefs[i].tags, prefsCloned[i].tags);\n          assert.notEqual(prefs[i].tags[0], prefsCloned[i].tags[0]);\n        } else {\n          assert.equal(prefsCloned[i].tags, null);\n        }\n      }\n\n      done();\n    });\n\n    it('clones mongodb.Binary', function(done){\n      if (!mongo) return done();\n\n      var buf = new Buffer('hi');\n      var binary= new mongo.Binary(buf, 2);\n      var clone = utils.clone(binary);\n      assert.equal(binary.sub_type, clone.sub_type);\n      assert.equal(String(binary.buffer), String(buf));\n      assert.ok(binary !== clone);\n      done();\n    })\n\n    it('handles objects with no constructor', function(done) {\n      var name ='335';\n\n      var o = Object.create(null);\n      o.name = name;\n\n      var clone;\n      assert.doesNotThrow(function() {\n        clone = utils.clone(o);\n      });\n\n      assert.equal(name, clone.name);\n      assert.ok(o != clone);\n      done();\n    });\n\n    it('handles buffers', function(done){\n      var buff = new Buffer(10);\n      buff.fill(1);\n      var clone = utils.clone(buff);\n\n      for (var i = 0; i < buff.length; i++) {\n        assert.equal(buff[i], clone[i]);\n      }\n\n      done();\n    });\n  });\n});\n"]}