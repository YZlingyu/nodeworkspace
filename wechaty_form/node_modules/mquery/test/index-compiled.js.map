{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["var mquery = require('../');\nvar assert = require('assert');\n\ndescribe('mquery', function(){\n  var col;\n\n  before(function(done){\n    // get the env specific collection interface\n    require('./env').getCollection(function (err, collection) {\n      assert.ifError(err);\n      col = collection;\n      done();\n    });\n  })\n\n  after(function(done){\n    require('./env').dropCollection(done);\n  })\n\n  describe('mquery', function(){\n    it('is a function', function(){\n      assert.equal('function', typeof mquery);\n    })\n    it('creates instances with the `new` keyword', function(){\n      assert.ok(mquery() instanceof mquery);\n    })\n    describe('defaults', function(){\n      it('are set', function(){\n        var m = mquery();\n        assert.strictEqual(undefined, m.op);\n        assert.deepEqual({}, m.options);\n      })\n    })\n    describe('criteria', function(){\n      it('if collection-like is used as collection', function(){\n        var m = mquery(col);\n        assert.equal(col, m._collection.collection);\n      })\n      it('non-collection-like is used as criteria', function(){\n        var m = mquery({ works: true });\n        assert.ok(!m._collection);\n        assert.deepEqual({ works: true }, m._conditions);\n      })\n    })\n    describe('options', function(){\n      it('are merged when passed', function(){\n        var m = mquery(col, { safe: true });\n        assert.deepEqual({ safe: true }, m.options);\n        var m = mquery({ name: 'mquery' }, { safe: true });\n        assert.deepEqual({ safe: true }, m.options);\n      })\n    })\n  })\n\n  describe('toConstructor', function(){\n    it('creates subclasses of mquery', function(){\n      var opts = { safe: { w: 'majority' }, readPreference: 'p' };\n      var match = { name: 'test', count: { $gt: 101 }};\n      var select = { name: 1, count: 0 }\n      var update = { $set: { x: true }};\n      var path = 'street';\n\n      var q = mquery().setOptions(opts);\n      q.where(match);\n      q.select(select);\n      q.update(update);\n      q.where(path);\n      q.find();\n\n      var M = q.toConstructor();\n      var m = M();\n\n      assert.ok(m instanceof mquery);\n      assert.deepEqual(opts, m.options);\n      assert.deepEqual(match, m._conditions);\n      assert.deepEqual(select, m._fields);\n      assert.deepEqual(update, m._update);\n      assert.equal(path, m._path);\n      assert.equal('find', m.op);\n    })\n  })\n\n  describe('setOptions', function(){\n    it('calls associated methods', function(){\n      var m = mquery();\n      assert.equal(m._collection, null);\n      m.setOptions({ collection: col });\n      assert.equal(m._collection.collection, col);\n    })\n    it('directly sets option when no method exists', function(){\n      var m = mquery();\n      assert.equal(m.options.woot, null);\n      m.setOptions({ woot: 'yay' });\n      assert.equal(m.options.woot, 'yay');\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      var n = m.setOptions();\n      assert.equal(m, n);\n      var n = m.setOptions({ x: 1 });\n      assert.equal(m, n);\n    })\n  })\n\n  describe('collection', function(){\n    it('sets the _collection', function(){\n      var m = mquery();\n      m.collection(col);\n      assert.equal(m._collection.collection, col);\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      var n = m.collection(col);\n      assert.equal(m, n);\n    })\n  })\n\n  describe('$where', function(){\n    it('sets the $where condition', function(){\n      var m = mquery();\n      function go () {}\n      m.$where(go);\n      assert.ok(go === m._conditions.$where);\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      var n = m.$where('x');\n      assert.equal(m, n);\n    })\n  })\n\n  describe('where', function(){\n    it('without arguments', function(){\n      var m = mquery();\n      m.where();\n      assert.deepEqual({}, m._conditions);\n    })\n    it('with non-string/object argument', function(){\n      var m = mquery();\n\n      assert.throws(function(){\n        m.where([]);\n      }, /path must be a string or object/);\n    })\n    describe('with one argument', function(){\n      it('that is an object', function(){\n        var m = mquery();\n        m.where({ name: 'flawed' });\n        assert.strictEqual(m._conditions.name, 'flawed');\n      })\n      it('that is a query', function(){\n        var m = mquery({ name: 'first' });\n        var n = mquery({ name: 'changed' });\n        m.where(n);\n        assert.strictEqual(m._conditions.name, 'changed');\n      })\n      it('that is a string', function(){\n        var m = mquery();\n        m.where('name');\n        assert.equal('name', m._path);\n        assert.strictEqual(m._conditions.name, undefined);\n      })\n    })\n    it('with two arguments', function(){\n      var m = mquery();\n      m.where('name', 'The Great Pumpkin');\n      assert.equal('name', m._path);\n      assert.strictEqual(m._conditions.name, 'The Great Pumpkin');\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      var n = m.where('x', 'y');\n      assert.equal(m, n);\n      var n = m.where()\n      assert.equal(m, n);\n    })\n  })\n  describe('equals', function(){\n    it('must be called after where()', function(){\n      var m = mquery();\n      assert.throws(function () {\n        m.equals();\n      }, /must be used after where/)\n    })\n    it('sets value of path set with where()', function(){\n      var m = mquery();\n      m.where('age').equals(1000);\n      assert.deepEqual({ age: 1000 }, m._conditions);\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      var n = m.where('x').equals(3);\n      assert.equal(m, n);\n    })\n  })\n  describe('eq', function(){\n    it('is alias of equals', function(){\n      var m = mquery();\n      m.where('age').eq(1000);\n      assert.deepEqual({ age: 1000 }, m._conditions);\n    })\n  })\n  describe('or', function(){\n    it('pushes onto the internal $or condition', function(){\n      var m = mquery();\n      m.or({ 'Nightmare Before Christmas': true });\n      assert.deepEqual([{'Nightmare Before Christmas': true }], m._conditions.$or)\n    })\n    it('allows passing arrays', function(){\n      var m = mquery();\n      var arg = [{ 'Nightmare Before Christmas': true }, { x: 1 }];\n      m.or(arg);\n      assert.deepEqual(arg, m._conditions.$or)\n    })\n    it('allows calling multiple times', function(){\n      var m = mquery();\n      var arg = [{ looper: true }, { x: 1 }];\n      m.or(arg);\n      m.or({ y: 1 })\n      m.or([{ w: 'oo' }, { z: 'oo'} ])\n      assert.deepEqual([{looper:true},{x:1},{y:1},{w:'oo'},{z:'oo'}], m._conditions.$or)\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      m.or({ o: \"k\"}).where('name', 'table');\n      assert.deepEqual({ name: 'table', $or: [{ o: 'k' }] }, m._conditions)\n    })\n  })\n\n  describe('nor', function(){\n    it('pushes onto the internal $nor condition', function(){\n      var m = mquery();\n      m.nor({ 'Nightmare Before Christmas': true });\n      assert.deepEqual([{'Nightmare Before Christmas': true }], m._conditions.$nor)\n    })\n    it('allows passing arrays', function(){\n      var m = mquery();\n      var arg = [{ 'Nightmare Before Christmas': true }, { x: 1 }];\n      m.nor(arg);\n      assert.deepEqual(arg, m._conditions.$nor)\n    })\n    it('allows calling multiple times', function(){\n      var m = mquery();\n      var arg = [{ looper: true }, { x: 1 }];\n      m.nor(arg);\n      m.nor({ y: 1 })\n      m.nor([{ w: 'oo' }, { z: 'oo'} ])\n      assert.deepEqual([{looper:true},{x:1},{y:1},{w:'oo'},{z:'oo'}], m._conditions.$nor)\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      m.nor({ o: \"k\"}).where('name', 'table');\n      assert.deepEqual({ name: 'table', $nor: [{ o: 'k' }] }, m._conditions)\n    })\n  })\n\n  describe('and', function(){\n    it('pushes onto the internal $and condition', function(){\n      var m = mquery();\n      m.and({ 'Nightmare Before Christmas': true });\n      assert.deepEqual([{'Nightmare Before Christmas': true }], m._conditions.$and)\n    })\n    it('allows passing arrays', function(){\n      var m = mquery();\n      var arg = [{ 'Nightmare Before Christmas': true }, { x: 1 }];\n      m.and(arg);\n      assert.deepEqual(arg, m._conditions.$and)\n    })\n    it('allows calling multiple times', function(){\n      var m = mquery();\n      var arg = [{ looper: true }, { x: 1 }];\n      m.and(arg);\n      m.and({ y: 1 })\n      m.and([{ w: 'oo' }, { z: 'oo'} ])\n      assert.deepEqual([{looper:true},{x:1},{y:1},{w:'oo'},{z:'oo'}], m._conditions.$and)\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      m.and({ o: \"k\"}).where('name', 'table');\n      assert.deepEqual({ name: 'table', $and: [{ o: 'k' }] }, m._conditions)\n    })\n  })\n\n  function generalCondition (type) {\n    return function () {\n      it('accepts 2 args', function(){\n        var m = mquery()[type]('count', 3);\n        var check = {};\n        check['$' + type] = 3;\n        assert.deepEqual(m._conditions.count, check);\n      })\n      it('uses previously set `where` path if 1 arg passed', function(){\n        var m = mquery().where('count')[type](3);\n        var check = {};\n        check['$' + type] = 3;\n        assert.deepEqual(m._conditions.count, check);\n      })\n      it('throws if 1 arg was passed but no previous `where` was used', function(){\n        assert.throws(function(){\n          mquery()[type](3);\n        }, /must be used after where/);\n      })\n      it('is chainable', function(){\n        var m = mquery().where('count')[type](3).where('x', 8);\n        var check = {x: 8, count: {}};\n        check.count['$' + type] = 3;\n        assert.deepEqual(m._conditions, check);\n      })\n      it('overwrites previous value', function(){\n        var m = mquery().where('count')[type](3)[type](8);\n        var check = {};\n        check['$' + type] = 8;\n        assert.deepEqual(m._conditions.count, check);\n      })\n    }\n  }\n\n  'gt gte lt lte ne in nin regex size maxDistance minDistance'.split(' ').forEach(function (type) {\n    describe(type, generalCondition(type))\n  })\n\n  describe('mod', function () {\n    describe('with 1 argument', function(){\n      it('requires a previous where()', function(){\n        assert.throws(function () {\n          mquery().mod([30, 10])\n        }, /must be used after where/);\n      })\n      it('works', function(){\n        var m = mquery().where('madmen').mod([10,20]);\n        assert.deepEqual(m._conditions, { madmen: { $mod: [10,20] }})\n      })\n    })\n\n    describe('with 2 arguments and second is non-Array', function(){\n      it('requires a previous where()', function(){\n        assert.throws(function () {\n          mquery().mod('x', 10)\n        }, /must be used after where/);\n      })\n      it('works', function(){\n        var m = mquery().where('madmen').mod(10, 20);\n        assert.deepEqual(m._conditions, { madmen: { $mod: [10,20] }})\n      })\n    })\n\n    it('with 2 arguments and second is an array', function(){\n      var m = mquery().mod('madmen', [10,20]);\n      assert.deepEqual(m._conditions, { madmen: { $mod: [10,20] }})\n    })\n\n    it('with 3 arguments', function(){\n      var m = mquery().mod('madmen', 10, 20);\n      assert.deepEqual(m._conditions, { madmen: { $mod: [10,20] }})\n    })\n\n    it('is chainable', function(){\n      var m = mquery().mod('madmen', 10, 20).where('x', 8);\n      var check = { madmen: { $mod: [10,20] }, x: 8};\n      assert.deepEqual(m._conditions, check);\n    })\n  })\n\n  describe('exists', function(){\n    it('with 0 args', function(){\n      it('throws if not used after where()', function(){\n        assert.throws(function () {\n          mquery().exists()\n        }, /must be used after where/);\n      })\n      it('works', function(){\n        var m = mquery().where('name').exists();\n        var check = { name: { $exists: true }};\n        assert.deepEqual(m._conditions, check);\n      })\n    })\n\n    describe('with 1 arg', function(){\n      describe('that is boolean', function(){\n        it('throws if not used after where()', function(){\n          assert.throws(function () {\n            mquery().exists()\n          }, /must be used after where/);\n        })\n        it('works', function(){\n          var m = mquery().exists('name', false);\n          var check = { name: { $exists: false }};\n          assert.deepEqual(m._conditions, check);\n        })\n      })\n      describe('that is not boolean', function(){\n        it('sets the value to `true`', function(){\n          var m = mquery().where('name').exists('yummy');\n          var check = { yummy: { $exists: true }};\n          assert.deepEqual(m._conditions, check);\n        })\n      })\n    })\n\n    describe('with 2 args', function(){\n      it('works', function(){\n        var m = mquery().exists('yummy', false);\n        var check = { yummy: { $exists: false }};\n        assert.deepEqual(m._conditions, check);\n      })\n    })\n\n    it('is chainable', function(){\n      var m = mquery().where('name').exists().find({ x: 1 });\n      var check = { name: { $exists: true }, x: 1};\n      assert.deepEqual(m._conditions, check);\n    })\n  })\n\n  describe('elemMatch', function(){\n    describe('with null/undefined first argument', function(){\n      assert.throws(function () {\n        mquery().elemMatch();\n      }, /Invalid argument/);\n      assert.throws(function () {\n        mquery().elemMatch(null);\n      }, /Invalid argument/);\n      assert.doesNotThrow(function () {\n        mquery().elemMatch('', {});\n      });\n    })\n\n    describe('with 1 argument', function(){\n      it('throws if not a function or object', function(){\n        assert.throws(function () {\n          mquery().elemMatch([]);\n        }, /Invalid argument/);\n      })\n\n      describe('that is an object', function(){\n        it('throws if no previous `where` was used', function(){\n          assert.throws(function () {\n            mquery().elemMatch({});\n          }, /must be used after where/);\n        })\n        it('works', function(){\n          var m = mquery().where('comment').elemMatch({ author: 'joe', votes: {$gte: 3 }});\n          assert.deepEqual({ comment: { $elemMatch: { author: 'joe', votes: {$gte: 3}}}}, m._conditions);\n        })\n      })\n      describe('that is a function', function(){\n        it('throws if no previous `where` was used', function(){\n          assert.throws(function () {\n            mquery().elemMatch(function(){});\n          }, /must be used after where/);\n        })\n        it('works', function(){\n          var m = mquery().where('comment').elemMatch(function (query) {\n            query.where({ author: 'joe', votes: {$gte: 3 }})\n          });\n          assert.deepEqual({ comment: { $elemMatch: { author: 'joe', votes: {$gte: 3}}}}, m._conditions);\n        })\n      })\n    })\n\n    describe('with 2 arguments', function(){\n      describe('and the 2nd is an object', function(){\n        it('works', function(){\n          var m = mquery().elemMatch('comment', { author: 'joe', votes: {$gte: 3 }});\n          assert.deepEqual({ comment: { $elemMatch: { author: 'joe', votes: {$gte: 3}}}}, m._conditions);\n        })\n      })\n      describe('and the 2nd is a function', function(){\n        it('works', function(){\n          var m = mquery().elemMatch('comment', function (query) {\n            query.where({ author: 'joe', votes: {$gte: 3 }})\n          });\n          assert.deepEqual({ comment: { $elemMatch: { author: 'joe', votes: {$gte: 3}}}}, m._conditions);\n        })\n      })\n      it('and the 2nd is not a function or object', function(){\n        assert.throws(function () {\n          mquery().elemMatch('comment', []);\n        }, /Invalid argument/);\n      })\n    })\n  })\n\n  describe('within', function(){\n    it('is chainable', function(){\n      var m = mquery();\n      assert.equal(m.where('a').within(), m);\n    })\n    describe('when called with arguments', function(){\n      it('must follow where()', function(){\n        assert.throws(function () {\n          mquery().within([]);\n        }, /must be used after where/);\n      })\n\n      describe('of length 1', function(){\n        it('throws if not a recognized shape', function(){\n          assert.throws(function () {\n            mquery().where('loc').within({});\n          }, /Invalid argument/)\n          assert.throws(function () {\n            mquery().where('loc').within(null);\n          }, /Invalid argument/)\n        })\n        it('delegates to circle when center exists', function(){\n          var m = mquery().where('loc').within({ center: [10,10], radius: 3 });\n          assert.deepEqual({ $geoWithin: {$center:[[10,10], 3]}}, m._conditions.loc);\n        })\n        it('delegates to box when exists', function(){\n          var m = mquery().where('loc').within({ box: [[10,10], [11,14]] });\n          assert.deepEqual({ $geoWithin: {$box:[[10,10], [11,14]]}}, m._conditions.loc);\n        })\n        it('delegates to polygon when exists', function(){\n          var m = mquery().where('loc').within({ polygon: [[10,10], [11,14],[10,9]] });\n          assert.deepEqual({ $geoWithin: {$polygon:[[10,10], [11,14],[10,9]]}}, m._conditions.loc);\n        })\n        it('delegates to geometry when exists', function(){\n          var m = mquery().where('loc').within({ type: 'Polygon', coordinates: [[10,10], [11,14],[10,9]] });\n          assert.deepEqual({ $geoWithin: {$geometry: {type:'Polygon', coordinates: [[10,10], [11,14],[10,9]]}}}, m._conditions.loc);\n        })\n      })\n\n      describe('of length 2', function(){\n        it('delegates to box()', function(){\n          var m = mquery().where('loc').within([1,2],[2,5]);\n          assert.deepEqual(m._conditions.loc, { $geoWithin: { $box: [[1,2],[2,5]]}});\n        })\n      })\n\n      describe('of length > 2', function(){\n        it('delegates to polygon()', function(){\n          var m = mquery().where('loc').within([1,2],[2,5],[2,4],[1,3]);\n          assert.deepEqual(m._conditions.loc, { $geoWithin: { $polygon: [[1,2],[2,5],[2,4],[1,3]]}});\n        })\n      })\n    })\n  })\n\n  describe('geoWithin', function(){\n    before(function(){\n      mquery.use$geoWithin = false;\n    })\n    after(function(){\n      mquery.use$geoWithin = true;\n    })\n    describe('when called with arguments', function(){\n      describe('of length 1', function(){\n        it('delegates to circle when center exists', function(){\n          var m = mquery().where('loc').within({ center: [10,10], radius: 3 });\n          assert.deepEqual({ $within: {$center:[[10,10], 3]}}, m._conditions.loc);\n        })\n        it('delegates to box when exists', function(){\n          var m = mquery().where('loc').within({ box: [[10,10], [11,14]] });\n          assert.deepEqual({ $within: {$box:[[10,10], [11,14]]}}, m._conditions.loc);\n        })\n        it('delegates to polygon when exists', function(){\n          var m = mquery().where('loc').within({ polygon: [[10,10], [11,14],[10,9]] });\n          assert.deepEqual({ $within: {$polygon:[[10,10], [11,14],[10,9]]}}, m._conditions.loc);\n        })\n        it('delegates to geometry when exists', function(){\n          var m = mquery().where('loc').within({ type: 'Polygon', coordinates: [[10,10], [11,14],[10,9]] });\n          assert.deepEqual({ $within: {$geometry: {type:'Polygon', coordinates: [[10,10], [11,14],[10,9]]}}}, m._conditions.loc);\n        })\n      })\n\n      describe('of length 2', function(){\n        it('delegates to box()', function(){\n          var m = mquery().where('loc').within([1,2],[2,5]);\n          assert.deepEqual(m._conditions.loc, { $within: { $box: [[1,2],[2,5]]}});\n        })\n      })\n\n      describe('of length > 2', function(){\n        it('delegates to polygon()', function(){\n          var m = mquery().where('loc').within([1,2],[2,5],[2,4],[1,3]);\n          assert.deepEqual(m._conditions.loc, { $within: { $polygon: [[1,2],[2,5],[2,4],[1,3]]}});\n        })\n      })\n    })\n  })\n\n  describe('box', function(){\n    describe('with 1 argument', function(){\n      it('throws', function(){\n        assert.throws(function () {\n          mquery().box('sometihng');\n        }, /Invalid argument/);\n      })\n    })\n    describe('with > 3 arguments', function(){\n      it('throws', function(){\n        assert.throws(function () {\n          mquery().box(1,2,3,4);\n        }, /Invalid argument/);\n      })\n    })\n\n    describe('with 2 arguments', function(){\n      it('throws if not used after where()', function(){\n        assert.throws(function () {\n          mquery().box([],[]);\n        }, /must be used after where/);\n      })\n      it('works', function(){\n        var m = mquery().where('loc').box([1,2],[3,4]);\n        assert.deepEqual(m._conditions.loc, { $geoWithin: { $box: [[1,2],[3,4]] }});\n      })\n    })\n\n    describe('with 3 arguments', function(){\n      it('works', function(){\n        var m = mquery().box('loc', [1,2],[3,4]);\n        assert.deepEqual(m._conditions.loc, { $geoWithin: { $box: [[1,2],[3,4]] }});\n      })\n    })\n  })\n\n  describe('polygon', function(){\n    describe('when first argument is not a string', function(){\n      it('throws if not used after where()', function(){\n        assert.throws(function () {\n          mquery().polygon({});\n        }, /must be used after where/);\n\n        assert.doesNotThrow(function () {\n          mquery().where('loc').polygon([1,2], [2,3], [3,6]);\n        });\n      })\n\n      it('assigns arguments to within polygon condition', function(){\n        var m = mquery().where('loc').polygon([1,2], [2,3], [3,6]);\n        assert.deepEqual(m._conditions, { loc: {$geoWithin: {$polygon: [[1,2],[2,3],[3,6]]}} });\n      })\n    })\n\n    describe('when first arg is a string', function(){\n      it('assigns remaining arguments to within polygon condition', function(){\n        var m = mquery().polygon('loc', [1,2], [2,3], [3,6]);\n        assert.deepEqual(m._conditions, { loc: {$geoWithin: {$polygon: [[1,2],[2,3],[3,6]]}} });\n      })\n    })\n  })\n\n  describe('circle', function(){\n    describe('with one arg', function(){\n      it('must follow where()', function(){\n        assert.throws(function () {\n          mquery().circle('x');\n        }, /must be used after where/);\n        assert.doesNotThrow(function () {\n          mquery().where('loc').circle({center:[0,0], radius: 3 });\n        });\n      })\n      it('works', function(){\n        var m = mquery().where('loc').circle({center:[0,0], radius: 3 });\n        assert.deepEqual(m._conditions, { loc: { $geoWithin: {$center: [[0,0],3] }}});\n      })\n    })\n    describe('with 3 args', function(){\n      it('throws', function(){\n        assert.throws(function () {\n          mquery().where('loc').circle(1,2,3);\n        }, /Invalid argument/);\n      })\n    })\n    describe('requires radius and center', function(){\n      assert.throws(function () {\n        mquery().circle('loc', { center: 1 });\n      }, /center and radius are required/);\n      assert.throws(function () {\n        mquery().circle('loc', { radius: 1 });\n      }, /center and radius are required/);\n      assert.doesNotThrow(function () {\n        mquery().circle('loc', { center: [1,2], radius: 1 });\n      });\n    })\n  })\n\n  describe('geometry', function(){\n    // within + intersects\n    var point = { type: 'Point', coordinates: [[0,0],[1,1]] };\n\n    it('must be called after within or intersects', function(done){\n      assert.throws(function () {\n        mquery().where('a').geometry(point);\n      }, /must come after/);\n\n      assert.doesNotThrow(function () {\n        mquery().where('a').within().geometry(point);\n      });\n\n      assert.doesNotThrow(function () {\n        mquery().where('a').intersects().geometry(point);\n      });\n\n      done();\n    })\n\n    describe('when called with one argument', function(){\n      describe('after within()', function(){\n        it('and arg quacks like geoJSON', function(done){\n          var m = mquery().where('a').within().geometry(point);\n          assert.deepEqual({ a: { $geoWithin: { $geometry: point }}}, m._conditions);\n          done();\n        })\n      })\n\n      describe('after intersects()', function(){\n        it('and arg quacks like geoJSON', function(done){\n          var m = mquery().where('a').intersects().geometry(point);\n          assert.deepEqual({ a: { $geoIntersects: { $geometry: point }}}, m._conditions);\n          done();\n        })\n      })\n\n      it('and arg does not quack like geoJSON', function(done){\n        assert.throws(function () {\n          mquery().where('b').within().geometry({type:1, coordinates:2});\n        }, /Invalid argument/);\n        done();\n      })\n    })\n\n    describe('when called with zero arguments', function(){\n      it('throws', function(done){\n        assert.throws(function () {\n          mquery().where('a').within().geometry();\n        }, /Invalid argument/);\n\n        done();\n      })\n    })\n\n    describe('when called with more than one arguments', function(){\n      it('throws', function(done){\n        assert.throws(function () {\n          mquery().where('a').within().geometry({type:'a',coordinates:[]}, 2);\n        }, /Invalid argument/);\n        done();\n      })\n    })\n  })\n\n  describe('intersects', function(){\n    it('must be used after where()', function(done){\n      var m = mquery();\n      assert.throws(function () {\n        m.intersects();\n      }, /must be used after where/)\n      done();\n    })\n\n    it('sets geo comparison to \"$intersects\"', function(done){\n      var n = mquery().where('a').intersects();\n      assert.equal('$geoIntersects', n._geoComparison);\n      done();\n    })\n\n    it('is chainable', function(){\n      var m = mquery();\n      assert.equal(m.where('a').intersects(), m);\n    })\n\n    it('calls geometry if argument quacks like geojson', function(done){\n      var m = mquery();\n      var o = { type: 'LineString', coordinates: [[0,1],[3,40]] };\n      var ran = false;\n\n      m.geometry = function (arg) {\n        ran = true;\n        assert.deepEqual(o, arg);\n      }\n\n      m.where('a').intersects(o);\n      assert.ok(ran);\n\n      done();\n    })\n\n    it('throws if argument is not geometry-like', function(done){\n      var m = mquery().where('a');\n\n      assert.throws(function () {\n        m.intersects(null);\n      }, /Invalid argument/);\n\n      assert.throws(function () {\n        m.intersects(undefined);\n      }, /Invalid argument/);\n\n      assert.throws(function () {\n        m.intersects(false);\n      }, /Invalid argument/);\n\n      assert.throws(function () {\n        m.intersects({});\n      }, /Invalid argument/);\n\n      assert.throws(function () {\n        m.intersects([]);\n      }, /Invalid argument/);\n\n      assert.throws(function () {\n        m.intersects(function(){});\n      }, /Invalid argument/);\n\n      assert.throws(function () {\n        m.intersects(NaN);\n      }, /Invalid argument/);\n\n      done();\n    })\n  })\n\n  describe('near', function(){\n    // near nearSphere\n    describe('with 0 args', function(){\n      it('is compatible with geometry()', function(done){\n        var q = mquery().where('x').near().geometry({ type: 'Point', coordinates: [180, 11] });\n        assert.deepEqual({ $near: {$geometry: {type:'Point', coordinates: [180,11]}}}, q._conditions.x);\n        done();\n      })\n    })\n\n    describe('with 1 arg', function(){\n      it('throws if not used after where()', function(){\n        assert.throws(function () {\n          mquery().near(1);\n        }, /must be used after where/)\n      })\n      it('does not throw if used after where()', function(){\n        assert.doesNotThrow(function () {\n          mquery().where('loc').near({center:[1,1]});\n        })\n      })\n    })\n    describe('with > 2 args', function(){\n      it('throws', function(){\n        assert.throws(function () {\n          mquery().near(1,2,3);\n        }, /Invalid argument/)\n      })\n    })\n\n    it('creates $geometry args for GeoJSON', function(){\n      var m = mquery().where('loc').near({ center: { type: 'Point', coordinates: [10,10] }});\n      assert.deepEqual({ $near: {$geometry: {type:'Point', coordinates: [10,10]}}}, m._conditions.loc);\n    })\n\n    it('expects `center`', function(){\n      assert.throws(function () {\n        mquery().near('loc', { maxDistance: 3 });\n      }, /center is required/)\n      assert.doesNotThrow(function () {\n        mquery().near('loc', { center: [3,4] });\n      })\n    })\n\n    it('accepts spherical conditions', function(){\n      var m = mquery().where('loc').near({ center: [1,2], spherical: true });\n      assert.deepEqual(m._conditions, { loc: { $nearSphere: [1,2]}});\n    })\n\n    it('is non-spherical by default', function(){\n      var m = mquery().where('loc').near({ center: [1,2] });\n      assert.deepEqual(m._conditions, { loc: { $near: [1,2]}});\n    })\n\n    it('supports maxDistance', function(){\n      var m = mquery().where('loc').near({ center: [1,2], maxDistance:4 });\n      assert.deepEqual(m._conditions, { loc: { $near: [1,2], $maxDistance: 4}});\n    })\n\n    it('supports minDistance', function(){\n      var m = mquery().where('loc').near({ center: [1,2], minDistance:4 });\n      assert.deepEqual(m._conditions, { loc: { $near: [1,2], $minDistance: 4}});\n    })\n\n    it('is chainable', function(){\n      var m = mquery().where('loc').near({ center: [1,2], maxDistance:4 }).find({ x: 1 });\n      assert.deepEqual(m._conditions, { loc: { $near: [1,2], $maxDistance: 4}, x: 1});\n    })\n\n    describe('supports passing GeoJSON, gh-13', function(){\n      it('with center', function(){\n        var m = mquery().where('loc').near({\n            center: { type: 'Point', coordinates: [1,1] }\n          , maxDistance: 2\n        });\n\n        var expect = {\n            loc: {\n                $near: {\n                    $geometry: {\n                        type: 'Point'\n                      , coordinates : [1,1]\n                    }\n                  , $maxDistance : 2\n                }\n            }\n        }\n\n        assert.deepEqual(m._conditions, expect);\n      })\n    })\n  })\n\n  // fields\n\n  describe('select', function(){\n    describe('with 0 args', function(){\n      it('is chainable', function(){\n        var m = mquery()\n        assert.equal(m, m.select());\n      })\n    })\n\n    it('accepts an object', function(){\n      var o = { x: 1, y: 1 }\n      var m = mquery().select(o);\n      assert.deepEqual(m._fields, o);\n    })\n\n    it('accepts a string', function(){\n      var o = 'x -y';\n      var m = mquery().select(o);\n      assert.deepEqual(m._fields, { x: 1, y: 0 });\n    })\n\n    it('does accept an array', function(){\n      var o = ['x', '-y'];\n      var m = mquery().select(o);\n      assert.deepEqual(m._fields, { x: 1, y: 0 });\n    })\n\n    it('merges previous arguments', function(){\n      var o = { x: 1, y: 0, a: 1 }\n      var m = mquery().select(o);\n      m.select('z -u w').select({ x: 0 })\n      assert.deepEqual(m._fields, {\n          x: 0\n        , y: 0\n        , z: 1\n        , u: 0\n        , w: 1\n        , a: 1\n      });\n    })\n\n    it('rejects non-string, object, arrays', function(){\n      assert.throws(function () {\n        mquery().select(function(){});\n      }, /Invalid select\\(\\) argument/);\n    })\n\n    it('accepts arguments objects', function(){\n      var m = mquery();\n      function t () {\n        m.select(arguments);\n        assert.deepEqual(m._fields, { x: 1, y: 0 });\n      }\n      t('x', '-y');\n    })\n\n    noDistinct('select');\n  })\n\n  describe('selected', function() {\n    it('returns true when fields have been selected', function(done) {\n      var m = mquery().select({ name: 1 });\n      assert.ok(m.selected());\n\n      var m = mquery().select('name');\n      assert.ok(m.selected());\n\n      done();\n    });\n\n    it('returns false when no fields have been selected', function(done) {\n      var m = mquery();\n      assert.strictEqual(false, m.selected());\n      done();\n    });\n  });\n\n  describe('selectedInclusively', function() {\n    describe('returns false', function(){\n      it('when no fields have been selected', function(done) {\n        assert.strictEqual(false, mquery().selectedInclusively());\n        assert.equal(false, mquery().select({}).selectedInclusively());\n        done();\n      });\n      it('when any fields have been excluded', function(done) {\n        assert.strictEqual(false, mquery().select('-name').selectedInclusively());\n        assert.strictEqual(false, mquery().select({ name: 0 }).selectedInclusively());\n        assert.strictEqual(false, mquery().select('name bio -_id').selectedInclusively());\n        assert.strictEqual(false, mquery().select({ name: 1, _id: 0 }).selectedInclusively());\n        done();\n      });\n      it('when using $meta', function(done) {\n        assert.strictEqual(false, mquery().select({ name: { $meta: 'textScore' } }).selectedInclusively());\n        done();\n      });\n    });\n\n    describe('returns true', function() {\n      it('when fields have been included', function(done) {\n        assert.equal(true, mquery().select('name').selectedInclusively());\n        assert.equal(true, mquery().select({ name:1 }).selectedInclusively());\n        done();\n      });\n    });\n  });\n\n  describe('selectedExclusively', function() {\n    describe('returns false', function(){\n      it('when no fields have been selected', function(done) {\n        assert.equal(false, mquery().selectedExclusively());\n        assert.equal(false, mquery().select({}).selectedExclusively());\n        done();\n      });\n      it('when fields have only been included', function(done) {\n        assert.equal(false, mquery().select('name').selectedExclusively());\n        assert.equal(false, mquery().select({ name: 1 }).selectedExclusively());\n        done();\n      });\n    });\n\n    describe('returns true', function() {\n      it('when any field has been excluded', function(done) {\n        assert.equal(true, mquery().select('-name').selectedExclusively());\n        assert.equal(true, mquery().select({ name:0 }).selectedExclusively());\n        assert.equal(true, mquery().select('-_id').selectedExclusively());\n        assert.strictEqual(true, mquery().select('name bio -_id').selectedExclusively());\n        assert.strictEqual(true, mquery().select({ name: 1, _id: 0 }).selectedExclusively());\n        done();\n      });\n    });\n  });\n\n  describe('slice', function(){\n    describe('with 0 args', function(){\n      it('is chainable', function(){\n        var m = mquery()\n        assert.equal(m, m.slice());\n      })\n      it('is a noop', function(){\n        var m = mquery().slice();\n        assert.deepEqual(m._fields, undefined);\n      })\n    })\n\n    describe('with 1 arg', function(){\n      it('throws if not called after where()', function(){\n        assert.throws(function () {\n          mquery().slice(1);\n        }, /must be used after where/);\n        assert.doesNotThrow(function () {\n          mquery().where('a').slice(1);\n        });\n      })\n      it('that is a number', function(){\n        var query = mquery();\n        query.where('collection').slice(5);\n        assert.deepEqual(query._fields, {collection: {$slice: 5}});\n      })\n      it('that is an array', function(){\n        var query = mquery();\n        query.where('collection').slice([5,10]);\n        assert.deepEqual(query._fields, {collection: {$slice: [5,10]}});\n      })\n      it('that is an object', function() {\n        var query = mquery();\n        query.slice({ collection: [5, 10] });\n        assert.deepEqual(query._fields, {collection: {$slice: [5,10]}});\n      })\n    })\n\n    describe('with 2 args', function(){\n      describe('and first is a number', function(){\n        it('throws if not called after where', function(){\n          assert.throws(function () {\n            mquery().slice(2,3);\n          }, /must be used after where/);\n        })\n        it('does not throw if used after where', function(){\n          var query = mquery();\n          query.where('collection').slice(2,3);\n          assert.deepEqual(query._fields, {collection: {$slice: [2,3]}});\n        })\n      })\n      it('and first is not a number', function(){\n        var query = mquery().slice('collection', [-5, 2]);\n        assert.deepEqual(query._fields, {collection: {$slice: [-5,2]}});\n      })\n    })\n\n    describe('with 3 args', function(){\n      it('works', function(){\n        var query = mquery();\n        query.slice('collection', 14, 10);\n        assert.deepEqual(query._fields, {collection: {$slice: [14, 10]}});\n      })\n    })\n\n    noDistinct('slice');\n    no('count', 'slice');\n  })\n\n  // options\n\n  describe('sort', function(){\n    describe('with 0 args', function(){\n      it('chains', function(){\n        var m = mquery();\n        assert.equal(m, m.sort());\n      })\n      it('has no affect', function(){\n        var m = mquery();\n        assert.equal(m.options.sort, undefined);\n      })\n    });\n\n    it('works', function(){\n      var query = mquery();\n      query.sort('a -c b');\n      assert.deepEqual(query.options.sort, { a : 1, b: 1, c : -1});\n\n      query = mquery();\n      query.sort({'a': 1, 'c': -1, 'b': 'asc', e: 'descending', f: 'ascending'});\n      assert.deepEqual(query.options.sort, {'a': 1, 'c': -1, 'b': 1, 'e': -1, 'f': 1});\n\n      query = mquery();\n      var e= undefined;\n\n      e= undefined;\n      try {\n        query.sort('a', 1, 'c', -1, 'b', 1);\n      } catch (err) {\n        e= err;\n      }\n      assert.ok(e, 'uh oh. no error was thrown');\n      assert.equal(e.message, 'Invalid sort() argument. Must be a string, object, or array.');\n    });\n\n    it('handles $meta sort options', function(){\n      var query = mquery();\n      query.sort({ score: { $meta : \"textScore\" } });\n      assert.deepEqual(query.options.sort, { score : { $meta : \"textScore\" } });\n    });\n\n    it('array syntax', function(){\n      var query = mquery();\n      query.sort([['field', 1], ['test', -1]]);\n      assert.deepEqual(query.options.sort, [['field', 1], ['test', -1]]);\n    });\n\n    it('throws with mixed array/object syntax', function(){\n      var query = mquery();\n      assert.throws(function() {\n        query.sort({ field: 1 }).sort([['test', -1]]);\n      }, /Can't mix sort syntaxes/);\n      assert.throws(function() {\n        query.sort([['field', 1]]).sort({ test: 1 });\n      }, /Can't mix sort syntaxes/);\n    });\n\n    it('works with maps', function() {\n      if (typeof Map === 'undefined') {\n        return this.skip();\n      }\n      var query = mquery();\n      query.sort(new Map().set('field', 1).set('test', -1));\n      assert.deepEqual(query.options.sort, new Map().set('field', 1).set('test', -1));\n    });\n  })\n\n  function simpleOption (type, options) {\n    describe(type, function(){\n      it('sets the ' + type + ' option', function(){\n        var m = mquery()[type](2);\n        var optionName = options.name || type;\n        assert.equal(2, m.options[optionName]);\n      })\n      it('is chainable', function(){\n        var m = mquery();\n        assert.equal(m[type](3), m);\n      })\n\n      if (!options.distinct) noDistinct(type);\n      if (!options.count) no('count', type);\n    })\n  }\n\n  var negated = {\n      limit: {distinct: false, count: true}\n    , skip: {distinct: false, count: true}\n    , maxScan: {distinct: false, count: false}\n    , batchSize: {distinct: false, count: false}\n    , maxTime: {distinct: true, count: true, name: 'maxTimeMS' }\n    , comment: {distinct: false, count: false}\n  };\n  Object.keys(negated).forEach(function (key) {\n    simpleOption(key, negated[key]);\n  })\n\n  describe('snapshot', function(){\n    it('works', function(){\n      var query = mquery();\n      query.snapshot();\n      assert.equal(true, query.options.snapshot);\n\n      var query = mquery()\n      query.snapshot(true);\n      assert.equal(true, query.options.snapshot);\n\n      var query = mquery()\n      query.snapshot(false);\n      assert.equal(false, query.options.snapshot);\n    })\n    noDistinct('snapshot');\n    no('count', 'snapshot');\n  })\n\n  describe('hint', function(){\n    it('accepts an object', function(){\n      var query2 = mquery();\n      query2.hint({'a': 1, 'b': -1});\n      assert.deepEqual(query2.options.hint, {'a': 1, 'b': -1});\n    })\n\n    it('accepts a string', function(){\n      var query2 = mquery();\n      query2.hint('a');\n      assert.deepEqual(query2.options.hint, 'a');\n    })\n\n    it('rejects everything else', function(){\n      assert.throws(function(){\n        mquery().hint(['c']);\n      }, /Invalid hint./);\n      assert.throws(function(){\n        mquery().hint(1);\n      }, /Invalid hint./);\n    })\n\n    describe('does not have side affects', function(){\n      it('on invalid arg', function(){\n        var m = mquery();\n        try {\n          m.hint(1);\n        } catch (err) {\n          // ignore\n        }\n        assert.equal(undefined, m.options.hint);\n      })\n      it('on missing arg', function(){\n        var m = mquery().hint();\n        assert.equal(undefined, m.options.hint);\n      })\n    })\n\n    noDistinct('hint');\n  })\n\n  describe('slaveOk', function(){\n    it('works', function(){\n      var query = mquery();\n      query.slaveOk();\n      assert.equal(true, query.options.slaveOk);\n\n      var query = mquery()\n      query.slaveOk(true);\n      assert.equal(true, query.options.slaveOk);\n\n      var query = mquery()\n      query.slaveOk(false);\n      assert.equal(false, query.options.slaveOk);\n    })\n  })\n\n  describe('read', function(){\n    it('sets associated readPreference option', function(){\n      var m = mquery();\n      m.read('p');\n      assert.equal('primary', m.options.readPreference);\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      assert.equal(m, m.read('sp'));\n    })\n  })\n\n  describe('tailable', function(){\n    it('works', function(){\n      var query = mquery();\n      query.tailable();\n      assert.equal(true, query.options.tailable);\n\n      var query = mquery()\n      query.tailable(true);\n      assert.equal(true, query.options.tailable);\n\n      var query = mquery()\n      query.tailable(false);\n      assert.equal(false, query.options.tailable);\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      assert.equal(m, m.tailable());\n    })\n    noDistinct('tailable');\n    no('count', 'tailable');\n  })\n\n  // query utilities\n\n  describe('merge', function(){\n    describe('with falsy arg', function(){\n      it('returns itself', function(){\n        var m = mquery();\n        assert.equal(m, m.merge());\n        assert.equal(m, m.merge(null));\n        assert.equal(m, m.merge(0));\n      })\n    })\n    describe('with an argument', function(){\n      describe('that is not a query or plain object', function(){\n        it('throws', function(){\n          assert.throws(function () {\n            mquery().merge([]);\n          }, /Invalid argument/);\n          assert.throws(function () {\n            mquery().merge('merge');\n          }, /Invalid argument/);\n          assert.doesNotThrow(function () {\n            mquery().merge({});\n          }, /Invalid argument/);\n        })\n      })\n\n      describe('that is a query', function(){\n        it('merges conditions, field selection, and options', function(){\n          var m = mquery({ x: 'hi' }, { select: 'x y', another: true })\n          var n = mquery().merge(m);\n          assert.deepEqual(n._conditions, m._conditions);\n          assert.deepEqual(n._fields, m._fields);\n          assert.deepEqual(n.options, m.options);\n        })\n        it('clones update arguments', function(done){\n          var original = { $set: { iTerm: true }}\n          var m = mquery().update(original);\n          var n = mquery().merge(m);\n          m.update({ $set: { x: 2 }})\n          assert.notDeepEqual(m._update, n._update);\n          done();\n        })\n        it('is chainable', function(){\n          var m = mquery({ x: 'hi' });\n          var n = mquery();\n          assert.equal(n, n.merge(m));\n        })\n      })\n\n      describe('that is an object', function(){\n        it('merges', function(){\n          var m = { x: 'hi' };\n          var n = mquery().merge(m);\n          assert.deepEqual(n._conditions, { x: 'hi' });\n        })\n        it('clones update arguments', function(done){\n          var original = { $set: { iTerm: true }}\n          var m = mquery().update(original);\n          var n = mquery().merge(original);\n          m.update({ $set: { x: 2 }})\n          assert.notDeepEqual(m._update, n._update);\n          done();\n        })\n        it('is chainable', function(){\n          var m = { x: 'hi' };\n          var n = mquery();\n          assert.equal(n, n.merge(m));\n        })\n      })\n    })\n  })\n\n  // queries\n\n  describe('find', function(){\n    describe('with no callback', function(){\n      it('does not execute', function(){\n        var m = mquery();\n        assert.doesNotThrow(function () {\n          m.find()\n        })\n        assert.doesNotThrow(function () {\n          m.find({ x: 1 })\n        })\n      })\n    })\n\n    it('is chainable', function(){\n      var m = mquery().find({ x: 1 }).find().find({ y: 2 });\n      assert.deepEqual(m._conditions, {x:1,y:2});\n    })\n\n    it('merges other queries', function(){\n      var m = mquery({ name: 'mquery' });\n      m.tailable();\n      m.select('_id');\n      var a = mquery().find(m);\n      assert.deepEqual(a._conditions, m._conditions);\n      assert.deepEqual(a.options, m.options);\n      assert.deepEqual(a._fields, m._fields);\n    })\n\n    describe('executes', function(){\n      before(function (done) {\n        col.insert({ name: 'mquery' }, { safe: true }, done);\n      });\n\n      after(function(done){\n        col.remove({ name: 'mquery' }, done);\n      })\n\n      it('when criteria is passed with a callback', function(done){\n        mquery(col).find({ name: 'mquery' }, function (err, docs) {\n          assert.ifError(err);\n          assert.equal(1, docs.length);\n          done();\n        })\n      })\n      it('when Query is passed with a callback', function(done){\n        var m = mquery({ name: 'mquery' });\n        mquery(col).find(m, function (err, docs) {\n          assert.ifError(err);\n          assert.equal(1, docs.length);\n          done();\n        })\n      })\n      it('when just a callback is passed', function(done){\n        mquery({ name: 'mquery' }).collection(col).find(function (err, docs) {\n          assert.ifError(err);\n          assert.equal(1, docs.length);\n          done();\n        });\n      })\n    })\n  })\n\n  describe('findOne', function(){\n    describe('with no callback', function(){\n      it('does not execute', function(){\n        var m = mquery();\n        assert.doesNotThrow(function () {\n          m.findOne()\n        })\n        assert.doesNotThrow(function () {\n          m.findOne({ x: 1 })\n        })\n      })\n    })\n\n    it('is chainable', function(){\n      var m = mquery();\n      var n = m.findOne({ x: 1 }).findOne().findOne({ y: 2 });\n      assert.equal(m, n);\n      assert.deepEqual(m._conditions, {x:1,y:2});\n      assert.equal('findOne', m.op);\n    })\n\n    it('merges other queries', function(){\n      var m = mquery({ name: 'mquery' });\n      m.read('nearest');\n      m.select('_id');\n      var a = mquery().findOne(m);\n      assert.deepEqual(a._conditions, m._conditions);\n      assert.deepEqual(a.options, m.options);\n      assert.deepEqual(a._fields, m._fields);\n    })\n\n    describe('executes', function(){\n      before(function (done) {\n        col.insert({ name: 'mquery findone' }, { safe: true }, done);\n      });\n\n      after(function(done){\n        col.remove({ name: 'mquery findone' }, done);\n      })\n\n      it('when criteria is passed with a callback', function(done){\n        mquery(col).findOne({ name: 'mquery findone' }, function (err, doc) {\n          assert.ifError(err);\n          assert.ok(doc);\n          assert.equal('mquery findone', doc.name);\n          done();\n        })\n      })\n      it('when Query is passed with a callback', function(done){\n        var m = mquery(col).where({ name: 'mquery findone' });\n        mquery(col).findOne(m, function (err, doc) {\n          assert.ifError(err);\n          assert.ok(doc);\n          assert.equal('mquery findone', doc.name);\n          done();\n        })\n      })\n      it('when just a callback is passed', function(done){\n        mquery({ name: 'mquery findone' }).collection(col).findOne(function (err, doc) {\n          assert.ifError(err);\n          assert.ok(doc);\n          assert.equal('mquery findone', doc.name);\n          done();\n        });\n      })\n    })\n  })\n\n  describe('count', function(){\n    describe('with no callback', function(){\n      it('does not execute', function(){\n        var m = mquery();\n        assert.doesNotThrow(function () {\n          m.count()\n        })\n        assert.doesNotThrow(function () {\n          m.count({ x: 1 })\n        })\n      })\n    })\n\n    it('is chainable', function(){\n      var m = mquery();\n      var n = m.count({ x: 1 }).count().count({ y: 2 });\n      assert.equal(m, n);\n      assert.deepEqual(m._conditions, {x:1,y:2});\n      assert.equal('count', m.op);\n    })\n\n    it('merges other queries', function(){\n      var m = mquery({ name: 'mquery' });\n      m.read('nearest');\n      m.select('_id');\n      var a = mquery().count(m);\n      assert.deepEqual(a._conditions, m._conditions);\n      assert.deepEqual(a.options, m.options);\n      assert.deepEqual(a._fields, m._fields);\n    })\n\n    describe('executes', function(){\n      before(function (done) {\n        col.insert({ name: 'mquery count' }, { safe: true }, done);\n      });\n\n      after(function(done){\n        col.remove({ name: 'mquery count' }, done);\n      })\n\n      it('when criteria is passed with a callback', function(done){\n        mquery(col).count({ name: 'mquery count' }, function (err, count) {\n          assert.ifError(err);\n          assert.ok(count);\n          assert.ok(1 === count);\n          done();\n        })\n      })\n      it('when Query is passed with a callback', function(done){\n        var m = mquery({ name: 'mquery count' });\n        mquery(col).count(m, function (err, count) {\n          assert.ifError(err);\n          assert.ok(count);\n          assert.ok(1 === count);\n          done();\n        })\n      })\n      it('when just a callback is passed', function(done){\n        mquery({ name: 'mquery count' }).collection(col).count(function (err, count) {\n          assert.ifError(err);\n          assert.ok(1 === count);\n          done();\n        });\n      })\n    })\n\n    describe('validates its option', function(){\n      it('sort', function(done){\n        assert.doesNotThrow(function(){\n          var m = mquery().sort('x').count();\n        });\n        done();\n      })\n\n      it('select', function(done){\n        assert.throws(function(){\n          var m = mquery().select('x').count();\n        }, /field selection and slice cannot be used with count/);\n        done();\n      })\n\n      it('slice', function(done){\n        assert.throws(function(){\n          var m = mquery().where('x').slice(-3).count();\n        }, /field selection and slice cannot be used with count/);\n        done();\n      })\n\n      it('limit', function(done){\n        assert.doesNotThrow(function(){\n          var m = mquery().limit(3).count();\n        })\n        done();\n      })\n\n      it('skip', function(done){\n        assert.doesNotThrow(function(){\n          var m = mquery().skip(3).count();\n        })\n        done();\n      })\n\n      it('batchSize', function(done){\n        assert.throws(function(){\n          var m = mquery({}, { batchSize: 3 }).count();\n        }, /batchSize cannot be used with count/);\n        done();\n      })\n\n      it('comment', function(done){\n        assert.throws(function(){\n          var m = mquery().comment('mquery').count();\n        }, /comment cannot be used with count/);\n        done();\n      })\n\n      it('maxScan', function(done){\n        assert.throws(function(){\n          var m = mquery().maxScan(300).count();\n        }, /maxScan cannot be used with count/);\n        done();\n      })\n\n      it('snapshot', function(done){\n        assert.throws(function(){\n          var m = mquery().snapshot().count();\n        }, /snapshot cannot be used with count/);\n        done();\n      })\n\n      it('tailable', function(done){\n        assert.throws(function(){\n          var m = mquery().tailable().count();\n        }, /tailable cannot be used with count/);\n        done();\n      })\n    })\n  })\n\n  describe('distinct', function(){\n    describe('with no callback', function(){\n      it('does not execute', function(){\n        var m = mquery();\n        assert.doesNotThrow(function () {\n          m.distinct()\n        })\n        assert.doesNotThrow(function () {\n          m.distinct('name')\n        })\n        assert.doesNotThrow(function () {\n          m.distinct({ name: 'mquery distinct' })\n        })\n        assert.doesNotThrow(function () {\n          m.distinct({ name: 'mquery distinct' }, 'name')\n        })\n      })\n    })\n\n    it('is chainable', function(){\n      var m = mquery({x:1}).distinct('name');\n      var n = m.distinct({y:2});\n      assert.equal(m, n);\n      assert.deepEqual(n._conditions, {x:1, y:2});\n      assert.equal('name', n._distinct);\n      assert.equal('distinct', n.op);\n    });\n\n    it('overwrites field', function(){\n      var m = mquery({ name: 'mquery' }).distinct('name');\n      m.distinct('rename');\n      assert.equal(m._distinct, 'rename');\n      m.distinct({x:1}, 'renamed');\n      assert.equal(m._distinct, 'renamed');\n    })\n\n    it('merges other queries', function(){\n      var m = mquery().distinct({ name: 'mquery' }, 'age')\n      m.read('nearest');\n      var a = mquery().distinct(m);\n      assert.deepEqual(a._conditions, m._conditions);\n      assert.deepEqual(a.options, m.options);\n      assert.deepEqual(a._fields, m._fields);\n      assert.deepEqual(a._distinct, m._distinct);\n    })\n\n    describe('executes', function(){\n      before(function (done) {\n        col.insert({ name: 'mquery distinct', age: 1 }, { safe: true }, done);\n      });\n\n      after(function(done){\n        col.remove({ name: 'mquery distinct' }, done);\n      })\n\n      it('when distinct arg is passed with a callback', function(done){\n        mquery(col).distinct('distinct', function (err, doc) {\n          assert.ifError(err);\n          assert.ok(doc);\n          done();\n        })\n      })\n      describe('when criteria is passed with a callback', function(){\n        it('if distinct arg was declared', function(done){\n          mquery(col).distinct('age').distinct({ name: 'mquery distinct' }, function (err, doc) {\n            assert.ifError(err);\n            assert.ok(doc);\n            done();\n          })\n        })\n        it('but not if distinct arg was not declared', function(){\n          assert.throws(function(){\n            mquery(col).distinct({ name: 'mquery distinct' }, function(){})\n          }, /No value for `distinct`/)\n        })\n      })\n      describe('when Query is passed with a callback', function(){\n        var m = mquery({ name: 'mquery distinct' });\n        it('if distinct arg was declared', function(done){\n          mquery(col).distinct('age').distinct(m, function (err, doc) {\n            assert.ifError(err);\n            assert.ok(doc);\n            done();\n          })\n        })\n        it('but not if distinct arg was not declared', function(){\n          assert.throws(function(){\n            mquery(col).distinct(m, function(){})\n          }, /No value for `distinct`/)\n        })\n      })\n      describe('when just a callback is passed', function(done){\n        it('if distinct arg was declared', function(done){\n          var m = mquery({ name: 'mquery distinct' });\n          m.collection(col);\n          m.distinct('age');\n          m.distinct(function (err, doc) {\n            assert.ifError(err);\n            assert.ok(doc);\n            done();\n          });\n        })\n        it('but not if no distinct arg was declared', function(){\n          var m = mquery();\n          m.collection(col);\n          assert.throws(function () {\n            m.distinct(function(){});\n          }, /No value for `distinct`/);\n        })\n      })\n    })\n\n    describe('validates its option', function(){\n      it('sort', function(done){\n        assert.throws(function(){\n          var m = mquery().sort('x').distinct();\n        }, /sort cannot be used with distinct/);\n        done();\n      })\n\n      it('select', function(done){\n        assert.throws(function(){\n          var m = mquery().select('x').distinct();\n        }, /field selection and slice cannot be used with distinct/);\n        done();\n      })\n\n      it('slice', function(done){\n        assert.throws(function(){\n          var m = mquery().where('x').slice(-3).distinct();\n        }, /field selection and slice cannot be used with distinct/);\n        done();\n      })\n\n      it('limit', function(done){\n        assert.throws(function(){\n          var m = mquery().limit(3).distinct();\n        }, /limit cannot be used with distinct/);\n        done();\n      })\n\n      it('skip', function(done){\n        assert.throws(function(){\n          var m = mquery().skip(3).distinct();\n        }, /skip cannot be used with distinct/);\n        done();\n      })\n\n      it('batchSize', function(done){\n        assert.throws(function(){\n          var m = mquery({}, { batchSize: 3 }).distinct();\n        }, /batchSize cannot be used with distinct/);\n        done();\n      })\n\n      it('comment', function(done){\n        assert.throws(function(){\n          var m = mquery().comment('mquery').distinct();\n        }, /comment cannot be used with distinct/);\n        done();\n      })\n\n      it('maxScan', function(done){\n        assert.throws(function(){\n          var m = mquery().maxScan(300).distinct();\n        }, /maxScan cannot be used with distinct/);\n        done();\n      })\n\n      it('snapshot', function(done){\n        assert.throws(function(){\n          var m = mquery().snapshot().distinct();\n        }, /snapshot cannot be used with distinct/);\n        done();\n      })\n\n      it('hint', function(done){\n        assert.throws(function(){\n          var m = mquery().hint({ x: 1 }).distinct();\n        }, /hint cannot be used with distinct/);\n        done();\n      })\n\n      it('tailable', function(done){\n        assert.throws(function(){\n          var m = mquery().tailable().distinct();\n        }, /tailable cannot be used with distinct/);\n        done();\n      })\n    })\n  })\n\n  describe('update', function(){\n    describe('with no callback', function(){\n      it('does not execute', function(){\n        var m = mquery();\n        assert.doesNotThrow(function () {\n          m.update({ name: 'old' }, { name: 'updated' }, { multi: true })\n        })\n        assert.doesNotThrow(function () {\n          m.update({ name: 'old' }, { name: 'updated' })\n        })\n        assert.doesNotThrow(function () {\n          m.update({ name: 'updated' })\n        })\n        assert.doesNotThrow(function () {\n          m.update()\n        })\n      })\n    })\n\n    it('is chainable', function(){\n      var m = mquery({x:1}).update({ y: 2 });\n      var n = m.where({y:2});\n      assert.equal(m, n);\n      assert.deepEqual(n._conditions, {x:1, y:2});\n      assert.deepEqual({ y: 2 }, n._update);\n      assert.equal('update', n.op);\n    });\n\n    it('merges update doc arg', function(){\n      var a = [1,2];\n      var m = mquery().where({ name: 'mquery' }).update({ x: 'stuff', a: a });\n      m.update({ z: 'stuff' });\n      assert.deepEqual(m._update, { z: 'stuff', x: 'stuff', a: a });\n      assert.deepEqual(m._conditions, { name: 'mquery' });\n      assert.ok(!m.options.overwrite);\n      m.update({}, { z: 'renamed' }, { overwrite: true });\n      assert.ok(m.options.overwrite === true);\n      assert.deepEqual(m._conditions, { name: 'mquery' });\n      assert.deepEqual(m._update, { z: 'renamed', x: 'stuff', a: a });\n      a.push(3);\n      assert.notDeepEqual(m._update, { z: 'renamed', x: 'stuff', a: a });\n    })\n\n    it('merges other options', function(){\n      var m = mquery();\n      m.setOptions({ overwrite: true });\n      m.update({ age: 77 }, { name: 'pagemill' }, { multi: true })\n      assert.deepEqual({ age: 77 }, m._conditions);\n      assert.deepEqual({ name: 'pagemill' }, m._update);\n      assert.deepEqual({ overwrite: true, multi: true }, m.options);\n    })\n\n    describe('executes', function(){\n      var id;\n      before(function (done) {\n        col.insert({ name: 'mquery update', age: 1 }, { safe: true }, function (err, res) {\n          id = res.insertedIds[0];\n          done();\n        });\n      });\n\n      after(function(done){\n        col.remove({ _id: id }, done);\n      })\n\n      describe('when conds + doc + opts + callback passed', function(){\n        it('works', function(done){\n          var m = mquery(col).where({ _id: id })\n          m.update({}, { name: 'Sparky' }, { safe: true }, function (err, res) {\n            assert.ifError(err);\n            assert.equal(res.result.n, 1);\n            m.findOne(function (err, doc) {\n              assert.ifError(err);\n              assert.equal(doc.name, 'Sparky');\n              done();\n            })\n          })\n        })\n      })\n\n      describe('when conds + doc + callback passed', function(){\n        it('works', function (done) {\n          var m = mquery(col).update({ _id: id }, { name: 'fairgrounds' }, function (err, num, doc) {\n            assert.ifError(err);\n            assert.ok(1, num);\n            m.findOne(function (err, doc) {\n              assert.ifError(err);\n              assert.equal(doc.name, 'fairgrounds');\n              done();\n            })\n          })\n        })\n      })\n\n      describe('when doc + callback passed', function(){\n        it('works', function (done) {\n          var m = mquery(col).where({ _id: id }).update({ name: 'changed' }, function (err, num, doc) {\n            assert.ifError(err);\n            assert.ok(1, num);\n            m.findOne(function (err, doc) {\n              assert.ifError(err);\n              assert.equal(doc.name, 'changed');\n              done();\n            })\n          })\n        })\n      })\n\n      describe('when just callback passed', function(){\n        it('works', function (done) {\n          var m = mquery(col).where({ _id: id });\n          m.setOptions({ safe: true });\n          m.update({ name: 'Frankenweenie' });\n          m.update(function (err, res) {\n            assert.ifError(err);\n            assert.equal(res.result.n, 1);\n            m.findOne(function (err, doc) {\n              assert.ifError(err);\n              assert.equal(doc.name, 'Frankenweenie');\n              done();\n            })\n          })\n        })\n      })\n\n      describe('without a callback', function(){\n        it('when forced by exec()', function(done){\n          var m = mquery(col).where({ _id: id });\n          m.setOptions({ safe: true, multi: true });\n          m.update({ name: 'forced' });\n\n          var update = m._collection.update;\n          m._collection.update = function (conds, doc, opts, cb) {\n            m._collection.update = update;\n\n            assert.ok(opts.safe);\n            assert.ok(true === opts.multi);\n            assert.equal('forced', doc.$set.name);\n            done();\n          }\n\n          m.exec()\n        })\n      })\n\n      describe('except when update doc is empty and missing overwrite flag', function(){\n        it('works', function (done) {\n          var m = mquery(col).where({ _id: id });\n          m.setOptions({ safe: true });\n          m.update({ }, function (err, num) {\n            assert.ifError(err);\n            assert.ok(0 === num);\n            setTimeout(function(){\n              m.findOne(function (err, doc) {\n                assert.ifError(err);\n                assert.equal(3, mquery.utils.keys(doc).length);\n                assert.equal(id, doc._id.toString());\n                assert.equal('Frankenweenie', doc.name);\n                done();\n              })\n            }, 300);\n          })\n        })\n      });\n\n      describe('when update doc is set with overwrite flag', function(){\n        it('works', function (done) {\n          var m = mquery(col).where({ _id: id });\n          m.setOptions({ safe: true, overwrite: true });\n          m.update({ all: 'yep', two: 2 }, function (err, res) {\n            assert.ifError(err);\n            assert.equal(res.result.n, 1);\n            m.findOne(function (err, doc) {\n              assert.ifError(err);\n              assert.equal(3, mquery.utils.keys(doc).length);\n              assert.equal('yep', doc.all);\n              assert.equal(2, doc.two);\n              assert.equal(id, doc._id.toString());\n              done();\n            })\n          })\n        })\n      })\n\n      describe('when update doc is empty with overwrite flag', function(){\n        it('works', function (done) {\n          var m = mquery(col).where({ _id: id });\n          m.setOptions({ safe: true, overwrite: true });\n          m.update({ }, function (err, res) {\n            assert.ifError(err);\n            assert.equal(res.result.n, 1);\n            m.findOne(function (err, doc) {\n              assert.ifError(err);\n              assert.equal(1, mquery.utils.keys(doc).length);\n              assert.equal(id, doc._id.toString());\n              done();\n            })\n          })\n        })\n      })\n\n      describe('when boolean (true) - exec()', function(){\n        it('works', function(done){\n          var m = mquery(col).where({ _id: id });\n          m.update({ name: 'bool' }).update(true);\n          setTimeout(function () {\n            m.findOne(function (err, doc) {\n              assert.ifError(err);\n              assert.ok(doc);\n              assert.equal('bool', doc.name);\n              done();\n            })\n          }, 300)\n        })\n      })\n    })\n  })\n\n  describe('remove', function(){\n    describe('with 0 args', function(){\n      var name = 'remove: no args test'\n      before(function(done){\n        col.insert({ name: name }, { safe: true }, done)\n      })\n      after(function(done){\n        col.remove({ name: name }, { safe: true }, done)\n      })\n\n      it('does not execute', function(done){\n        var remove = col.remove;\n        col.remove = function () {\n          col.remove = remove;\n          done(new Error('remove executed!'));\n        }\n\n        var m = mquery(col).where({ name: name }).remove()\n        setTimeout(function () {\n          col.remove = remove;\n          done();\n        }, 10);\n      })\n\n      it('chains', function(){\n        var m = mquery();\n        assert.equal(m, m.remove());\n      })\n    })\n\n    describe('with 1 argument', function(){\n      var name = 'remove: 1 arg test'\n      before(function(done){\n        col.insert({ name: name }, { safe: true }, done)\n      })\n      after(function(done){\n        col.remove({ name: name }, { safe: true }, done)\n      })\n\n      describe('that is a', function(){\n        it('plain object', function(){\n          var m = mquery(col).remove({ name: 'Whiskers' });\n          m.remove({ color: '#fff' })\n          assert.deepEqual({ name: 'Whiskers', color: '#fff' }, m._conditions);\n        })\n\n        it('query', function(){\n          var q = mquery({ color: '#fff' });\n          var m = mquery(col).remove({ name: 'Whiskers' });\n          m.remove(q)\n          assert.deepEqual({ name: 'Whiskers', color: '#fff' }, m._conditions);\n        })\n\n        it('function', function(done){\n          mquery(col, { safe: true }).where({name: name}).remove(function (err) {\n            assert.ifError(err);\n            mquery(col).findOne({ name: name }, function (err, doc) {\n              assert.ifError(err);\n              assert.equal(null, doc);\n              done();\n            })\n          });\n        })\n\n        it('boolean (true) - execute', function(done){\n          col.insert({ name: name }, { safe: true }, function (err) {\n            assert.ifError(err);\n            mquery(col).findOne({ name: name }, function (err, doc) {\n              assert.ifError(err);\n              assert.ok(doc);\n              mquery(col).remove(true);\n              setTimeout(function () {\n                mquery(col).find(function (err, docs) {\n                  assert.ifError(err);\n                  assert.ok(docs);\n                  assert.equal(0, docs.length);\n                  done();\n                })\n              }, 300)\n            })\n          })\n        })\n      })\n    })\n\n    describe('with 2 arguments', function(){\n      var name = 'remove: 2 arg test'\n      beforeEach(function(done){\n        col.remove({}, { safe: true }, function (err) {\n          assert.ifError(err);\n          col.insert([{ name: 'shelly' }, { name: name }], { safe: true }, function (err) {\n            assert.ifError(err);\n            mquery(col).find(function (err, docs) {\n              assert.ifError(err);\n              assert.equal(2, docs.length);\n              done();\n            })\n          })\n        })\n      })\n\n      describe('plain object + callback', function(){\n        it('works', function(done){\n          mquery(col).remove({ name: name }, function (err) {\n            assert.ifError(err);\n            mquery(col).find(function (err, docs) {\n              assert.ifError(err);\n              assert.ok(docs);\n              assert.equal(1, docs.length);\n              assert.equal('shelly', docs[0].name);\n              done();\n            })\n          });\n        })\n      })\n\n      describe('mquery + callback', function(){\n        it('works', function(done){\n          var m = mquery({ name: name });\n          mquery(col).remove(m, function (err) {\n            assert.ifError(err);\n            mquery(col).find(function (err, docs) {\n              assert.ifError(err);\n              assert.ok(docs);\n              assert.equal(1, docs.length);\n              assert.equal('shelly', docs[0].name);\n              done();\n            })\n          });\n        })\n      })\n    })\n  })\n\n  function validateFindAndModifyOptions (method) {\n    describe('validates its option', function(){\n      it('sort', function(done){\n        assert.doesNotThrow(function(){\n          var m = mquery().sort('x')[method]();\n        })\n        done();\n      })\n\n      it('select', function(done){\n        assert.doesNotThrow(function(){\n          var m = mquery().select('x')[method]();\n        })\n        done();\n      })\n\n      it('limit', function(done){\n        assert.throws(function(){\n          var m = mquery().limit(3)[method]();\n        }, new RegExp('limit cannot be used with ' + method));\n        done();\n      })\n\n      it('skip', function(done){\n        assert.throws(function(){\n          var m = mquery().skip(3)[method]();\n        }, new RegExp('skip cannot be used with ' + method));\n        done();\n      })\n\n      it('batchSize', function(done){\n        assert.throws(function(){\n          var m = mquery({}, { batchSize: 3 })[method]();\n        }, new RegExp('batchSize cannot be used with ' + method));\n        done();\n      })\n\n      it('maxScan', function(done){\n        assert.throws(function(){\n          var m = mquery().maxScan(300)[method]();\n        }, new RegExp('maxScan cannot be used with ' + method));\n        done();\n      })\n\n      it('snapshot', function(done){\n        assert.throws(function(){\n          var m = mquery().snapshot()[method]();\n        }, new RegExp('snapshot cannot be used with ' + method));\n        done();\n      })\n\n      it('hint', function(done){\n        assert.throws(function(){\n          var m = mquery().hint({ x: 1 })[method]();\n        }, new RegExp('hint cannot be used with ' + method));\n        done();\n      })\n\n      it('tailable', function(done){\n        assert.throws(function(){\n          var m = mquery().tailable()[method]();\n        }, new RegExp('tailable cannot be used with ' + method));\n        done();\n      })\n\n      it('comment', function(done){\n        assert.throws(function(){\n          var m = mquery().comment('mquery')[method]();\n        }, new RegExp('comment cannot be used with ' + method));\n        done();\n      })\n    })\n  }\n\n  describe('findOneAndUpdate', function(){\n    var name = 'findOneAndUpdate + fn'\n\n    validateFindAndModifyOptions('findOneAndUpdate');\n\n    describe('with 0 args', function(){\n      it('makes no changes', function(){\n        var m = mquery();\n        var n = m.findOneAndUpdate();\n        assert.deepEqual(m, n);\n      })\n    })\n    describe('with 1 arg', function(){\n      describe('that is an object', function(){\n        it('updates the doc', function(){\n          var m = mquery();\n          var n = m.findOneAndUpdate({ $set: { name: '1 arg' }});\n          assert.deepEqual(n._update, { $set: { name: '1 arg' }});\n        })\n      })\n      describe('that is a query', function(){\n        it('updates the doc', function(){\n          var m = mquery({ name: name }).update({ x: 1 });\n          var n = mquery().findOneAndUpdate(m);\n          assert.deepEqual(n._update, { x: 1 });\n        })\n      })\n      it('that is a function', function(done){\n        col.insert({ name: name }, { safe: true }, function (err) {\n          assert.ifError(err);\n          var m = mquery({ name: name }).collection(col);\n          name = '1 arg';\n          var n = m.update({ $set: { name: name }});\n          n.findOneAndUpdate(function (err, res) {\n            assert.ifError(err);\n            assert.ok(res.value);\n            assert.equal(name, res.value.name);\n            done();\n          });\n        })\n      })\n    })\n    describe('with 2 args', function(){\n      it('conditions + update', function(){\n        var m = mquery(col);\n        m.findOneAndUpdate({ name: name }, { age: 100 });\n        assert.deepEqual({ name: name }, m._conditions);\n        assert.deepEqual({ age: 100 }, m._update);\n      })\n      it('query + update', function(){\n        var n = mquery({ name: name });\n        var m = mquery(col);\n        m.findOneAndUpdate(n, { age: 100 });\n        assert.deepEqual({ name: name }, m._conditions);\n        assert.deepEqual({ age: 100 }, m._update);\n      })\n      it('update + callback', function(done){\n        var m = mquery(col).where({ name: name });\n        m.findOneAndUpdate({}, { $inc: { age: 10 }}, { new: true }, function (err, res) {\n          assert.ifError(err);\n          assert.equal(10, res.value.age);\n          done();\n        });\n      })\n    })\n    describe('with 3 args', function(){\n      it('conditions + update + options', function(){\n        var m = mquery();\n        var n = m.findOneAndUpdate({ name: name }, { works: true }, { new: false });\n        assert.deepEqual({ name: name}, n._conditions);\n        assert.deepEqual({ works: true }, n._update);\n        assert.deepEqual({ new: false }, n.options);\n      })\n      it('conditions + update + callback', function(done){\n        var m = mquery(col);\n        m.findOneAndUpdate({ name: name }, { works: true }, { new: true }, function (err, res) {\n          assert.ifError(err);\n          assert.ok(res.value);\n          assert.equal(name, res.value.name);\n          assert.ok(true === res.value.works);\n          done();\n        });\n      })\n    })\n    describe('with 4 args', function(){\n      it('conditions + update + options + callback', function(done){\n        var m = mquery(col);\n        m.findOneAndUpdate({ name: name }, { works: false }, { new: false },  function (err, res) {\n          assert.ifError(err);\n          assert.ok(res.value);\n          assert.equal(name, res.value.name);\n          assert.ok(true === res.value.works);\n          done();\n        });\n      })\n    })\n  })\n\n  describe('findOneAndRemove', function(){\n    var name = 'findOneAndRemove'\n\n    validateFindAndModifyOptions('findOneAndRemove');\n\n    describe('with 0 args', function(){\n      it('makes no changes', function(){\n        var m = mquery();\n        var n = m.findOneAndRemove();\n        assert.deepEqual(m, n);\n      })\n    })\n    describe('with 1 arg', function(){\n      describe('that is an object', function(){\n        it('updates the doc', function(){\n          var m = mquery();\n          var n = m.findOneAndRemove({ name: '1 arg' });\n          assert.deepEqual(n._conditions, { name: '1 arg' });\n        })\n      })\n      describe('that is a query', function(){\n        it('updates the doc', function(){\n          var m = mquery({ name: name });\n          var n = m.findOneAndRemove(m);\n          assert.deepEqual(n._conditions, { name: name });\n        })\n      })\n      it('that is a function', function(done){\n        col.insert({ name: name }, { safe: true }, function (err) {\n          assert.ifError(err);\n          var m = mquery({ name: name }).collection(col);\n          m.findOneAndRemove(function (err, res) {\n            assert.ifError(err);\n            assert.ok(res.value);\n            assert.equal(name, res.value.name);\n            done();\n          });\n        })\n      })\n    })\n    describe('with 2 args', function(){\n      it('conditions + options', function(){\n        var m = mquery(col);\n        m.findOneAndRemove({ name: name }, { new: false });\n        assert.deepEqual({ name: name }, m._conditions);\n        assert.deepEqual({ new: false }, m.options);\n      })\n      it('query + options', function(){\n        var n = mquery({ name: name });\n        var m = mquery(col);\n        m.findOneAndRemove(n, { sort: { x: 1 }});\n        assert.deepEqual({ name: name }, m._conditions);\n        assert.deepEqual({ sort: { 'x': 1 }}, m.options);\n      })\n      it('conditions + callback', function(done){\n        col.insert({ name: name }, { safe: true }, function (err) {\n          assert.ifError(err);\n          var m = mquery(col);\n          m.findOneAndRemove({ name: name }, function (err, res) {\n            assert.ifError(err);\n            assert.equal(name, res.value.name);\n            done();\n          });\n        });\n      })\n      it('query + callback', function(done){\n        col.insert({ name: name }, { safe: true }, function (err) {\n          assert.ifError(err);\n          var n = mquery({ name: name })\n          var m = mquery(col);\n          m.findOneAndRemove(n, function (err, res) {\n            assert.ifError(err);\n            assert.equal(name, res.value.name);\n            done();\n          });\n        });\n      })\n    })\n    describe('with 3 args', function(){\n      it('conditions + options + callback', function(done){\n        name = 'findOneAndRemove + conds + options + cb';\n        col.insert([{ name: name }, { name: 'a' }], { safe: true }, function (err) {\n          assert.ifError(err);\n          var m = mquery(col);\n          m.findOneAndRemove({ name: name }, { sort: { name: 1 }}, function (err, res) {\n            assert.ifError(err);\n            assert.ok(res.value);\n            assert.equal(name, res.value.name);\n            done();\n          });\n        })\n      })\n    })\n  })\n\n  describe('exec', function(){\n    beforeEach(function(done){\n      col.insert([{ name: 'exec', age: 1 }, { name: 'exec', age: 2 }], done);\n    })\n\n    afterEach(function(done){\n      mquery(col).remove(done);\n    })\n\n    it('requires an op', function(){\n      assert.throws(function () {\n        mquery().exec()\n      }, /Missing query type/);\n    })\n\n    describe('find', function() {\n      it('works', function(done){\n        var m = mquery(col).find({ name: 'exec' });\n        m.exec(function (err, docs) {\n          assert.ifError(err);\n          assert.equal(2, docs.length);\n          done();\n        })\n      })\n\n      it('works with readPreferences', function (done) {\n        var m = mquery(col).find({ name: 'exec' });\n        try {\n          var rp = new require('mongodb').ReadPreference('primary');\n          m.read(rp);\n        } catch (e) {\n          if (e.code === 'MODULE_NOT_FOUND')\n            e = null;\n          done(e);\n          return;\n        }\n        m.exec(function (err, docs) {\n          assert.ifError(err);\n          assert.equal(2, docs.length);\n          done();\n        })\n      })\n    });\n\n    it('findOne', function(done){\n      var m = mquery(col).findOne({ age: 2 });\n      m.exec(function (err, doc) {\n        assert.ifError(err);\n        assert.equal(2, doc.age);\n        done();\n      })\n    })\n\n    it('count', function(done){\n      var m = mquery(col).count({ name: 'exec' });\n      m.exec(function (err, count) {\n        assert.ifError(err);\n        assert.equal(2, count);\n        done();\n      })\n    })\n\n    it('distinct', function(done){\n      var m = mquery({ name: 'exec' });\n      m.collection(col);\n      m.distinct('age');\n      m.exec(function (err, array) {\n        assert.ifError(err);\n        assert.ok(Array.isArray(array));\n        assert.equal(2, array.length);\n        assert(~array.indexOf(1));\n        assert(~array.indexOf(2));\n        done();\n      });\n    })\n\n    describe('update', function(){\n      var num;\n\n      it('with a callback', function(done){\n        var m = mquery(col);\n        m.where({ name: 'exec' })\n\n        m.count(function (err, _num) {\n          assert.ifError(err);\n          num = _num;\n          m.setOptions({ multi: true })\n          m.update({ name: 'exec + update' });\n          m.exec(function (err, res) {\n            assert.ifError(err);\n            assert.equal(num, res.result.n);\n            mquery(col).find({ name: 'exec + update' }, function (err, docs) {\n              assert.ifError(err);\n              assert.equal(num, docs.length);\n              done();\n            })\n          })\n        })\n      })\n\n      describe('updateMany', function() {\n        it('works', function(done) {\n          mquery(col).updateMany({ name: 'exec' }, { name: 'test' }).\n            exec(function(error) {\n              assert.ifError(error);\n              mquery(col).count({ name: 'test' }).exec(function(error, res) {\n                assert.ifError(error);\n                assert.equal(res, 2);\n                done();\n              });\n            });\n        });\n      });\n\n      describe('updateOne', function() {\n        it('works', function(done) {\n          mquery(col).updateOne({ name: 'exec' }, { name: 'test' }).\n            exec(function(error) {\n              assert.ifError(error);\n              mquery(col).count({ name: 'test' }).exec(function(error, res) {\n                assert.ifError(error);\n                assert.equal(res, 1);\n                done();\n              });\n            });\n        });\n      });\n\n      describe('replaceOne', function() {\n        it('works', function(done) {\n          mquery(col).replaceOne({ name: 'exec' }, { name: 'test' }).\n            exec(function(error) {\n              assert.ifError(error);\n              mquery(col).findOne({ name: 'test' }).exec(function(error, res) {\n                assert.ifError(error);\n                assert.equal(res.name, 'test');\n                assert.ok(res.age == null);\n                done();\n              });\n            });\n        });\n      });\n\n      it('without a callback', function(done){\n        var m = mquery(col)\n        m.where({ name: 'exec + update' }).setOptions({ multi: true })\n        m.update({ name: 'exec' });\n\n        // unsafe write\n        m.exec();\n\n        setTimeout(function () {\n          mquery(col).find({ name: 'exec' }, function (err, docs) {\n            assert.ifError(err);\n            assert.equal(2, docs.length);\n            done();\n          })\n        }, 200)\n      })\n      it('preserves key ordering', function(done) {\n        var m = mquery(col);\n\n        var m2 = m.update({ _id : 'something' }, { '1' : 1, '2' : 2, '3' : 3});\n        var doc = m2._updateForExec().$set;\n        var count = 0;\n        for (var i in doc) {\n          if (count == 0) {\n            assert.equal('1', i);\n          } else if (count == 1) {\n            assert.equal('2', i);\n          } else if (count ==2) {\n            assert.equal('3', i);\n          }\n          count++;\n        }\n        done();\n      });\n    })\n\n    describe('remove', function(){\n      it('with a callback', function(done){\n        var m = mquery(col).where({ age: 2 }).remove();\n        m.exec(function (err, res) {\n          assert.ifError(err);\n          assert.equal(1, res.result.n);\n          done();\n        })\n      })\n\n      it('without a callback', function(done){\n        var m = mquery(col).where({ age: 1 }).remove();\n        m.exec();\n\n        setTimeout(function () {\n          mquery(col).where('name', 'exec').count(function(err, num) {\n            assert.equal(1, num);\n            done();\n          })\n        }, 200)\n      })\n    })\n\n    describe('deleteOne', function(){\n      it('with a callback', function(done){\n        var m = mquery(col).where({ age: { $gte: 0 } }).deleteOne();\n        m.exec(function (err, res) {\n          assert.ifError(err);\n          assert.equal(res.result.n, 1);\n          done();\n        })\n      })\n\n      it('with justOne set', function(done){\n        var m = mquery(col).where({ age: { $gte: 0 } }).\n          // Should ignore `justOne`\n          setOptions({ justOne: false }).\n          deleteOne();\n        m.exec(function (err, res) {\n          assert.ifError(err);\n          assert.equal(res.result.n, 1);\n          done();\n        })\n      })\n    })\n\n    describe('deleteMany', function(){\n      it('with a callback', function(done){\n        var m = mquery(col).where({ age: { $gte: 0 } }).deleteMany();\n        m.exec(function (err, res) {\n          assert.ifError(err);\n          assert.equal(res.result.n, 2);\n          done();\n        })\n      })\n    })\n\n    describe('findOneAndUpdate', function(){\n      it('with a callback', function(done){\n        var m = mquery(col);\n        m.findOneAndUpdate({ name: 'exec', age: 1 }, { $set: { name: 'findOneAndUpdate' }});\n        m.exec(function (err, res) {\n          assert.ifError(err);\n          assert.equal('findOneAndUpdate', res.value.name);\n          done();\n        });\n      })\n    })\n\n    describe('findOneAndRemove', function(){\n      it('with a callback', function(done){\n        var m = mquery(col);\n        m.findOneAndRemove({ name: 'exec', age: 2 });\n        m.exec(function (err, res) {\n          assert.ifError(err);\n          assert.equal('exec', res.value.name);\n          assert.equal(2, res.value.age);\n          mquery(col).count({ name: 'exec' }, function (err, num) {\n            assert.ifError(err);\n            assert.equal(1, num);\n            done();\n          });\n        });\n      })\n    })\n  })\n\n  describe('setTraceFunction', function() {\n    beforeEach(function(done){\n      col.insert([{ name: 'trace', age: 93 }], done);\n    })\n\n    it('calls trace function when executing query', function(done) {\n      var m = mquery(col);\n\n      var resultTraceCalled;\n\n      m.setTraceFunction(function (method, queryInfo) {\n        try {\n          assert.equal('findOne', method);\n          assert.equal('trace', queryInfo.conditions.name);\n        } catch (e) {\n          done(e);\n        }\n\n        return function(err, result, millis) {\n          try {\n            assert.equal(93, result.age);\n          } catch (e) {\n            done(e);\n          }\n          resultTraceCalled = true;\n        };\n      });\n\n      m.findOne({name: 'trace'}, function (err, doc) {\n        assert.ifError(err);\n        assert.equal(resultTraceCalled, true);\n        assert.equal(93, doc.age);\n        done();\n      });\n    });\n\n    it('inherits trace function when calling toConstructor', function(done) {\n      function traceFunction () { return function() {} };\n\n      var tracedQuery = mquery().setTraceFunction(traceFunction).toConstructor();\n\n      var query = tracedQuery();\n      assert.equal(traceFunction, query._traceFunction);\n\n      done();\n    });\n  });\n\n  describe('thunk', function() {\n    it('returns a function', function(done) {\n      assert.equal('function', typeof mquery().thunk());\n      done();\n    });\n\n    it('passes the fn arg to `exec`', function(done) {\n      function cb() {}\n      var m = mquery();\n\n      m.exec = function testing(fn) {\n        assert.equal(this, m);\n        assert.equal(cb, fn);\n        done();\n      }\n\n      m.thunk()(cb);\n    });\n  });\n\n  describe('then', function() {\n    before(function(done){\n      col.insert([{ name: 'then', age: 1 }, { name: 'then', age: 2 }], done);\n    })\n\n    after(function(done){\n      mquery(col).remove({ name: 'then' }).exec(done);\n    })\n\n    it('returns a promise A+ compat object', function(done) {\n      var m = mquery(col).find();\n      assert.equal('function', typeof m.then);\n      done();\n    });\n\n    it('creates a promise that is resolved on success', function(done) {\n      var promise = mquery(col).count({ name: 'then' }).then();\n      promise.then(function(count){\n        assert.equal(2, count);\n        done();\n      }, done);\n    });\n\n    it('supports exec() cb being called synchronously #66', function(done) {\n      var query = mquery(col).count({ name: 'then' });\n      query.exec = function(cb) {\n        cb(null, 66);\n      }\n\n      query.then(success, done);\n      function success(count){\n        assert.equal(66, count);\n        done();\n      }\n    });\n\n    it('supports other Promise libs', function(done) {\n      var bluebird = mquery.Promise;\n\n      // hack for testing\n      mquery.Promise = function P() {\n        mquery.Promise = bluebird;\n        this.then = function(x, y) {\n          return x + y;\n        }\n      }\n\n      var val = mquery(col).count({ name: 'exec' }).then(1, 2);\n      assert.equal(val, 3);\n      done();\n    });\n  });\n\n  describe('stream', function() {\n    before(function(done){\n      col.insert([{ name: 'stream', age: 1 }, { name: 'stream', age: 2 }], done);\n    })\n\n    after(function(done){\n      mquery(col).remove({ name: 'stream' }).exec(done);\n    })\n\n    describe('throws', function() {\n      describe('if used with non-find operations', function() {\n        var ops = ['update', 'findOneAndUpdate', 'remove', 'count', 'distinct'];\n\n        ops.forEach(function(op) {\n          assert.throws(function(){\n            mquery(col)[op]().stream();\n          });\n        });\n      });\n    });\n\n    it('returns a stream', function(done) {\n      var stream = mquery(col).find({ name: 'stream' }).stream();\n      var count = 0;\n      var err;\n\n      stream.on('data', function(doc){\n        assert.equal('stream', doc.name);\n        ++count;\n      });\n\n      stream.on('error', function(er) {\n        err = er;\n      });\n\n      stream.on('end', function(){\n        if (err) return done(err);\n        assert.equal(2, count);\n        done();\n      });\n    });\n  });\n\n  function noDistinct (type) {\n    it('cannot be used with distinct()', function(done){\n      assert.throws(function () {\n        mquery().distinct('name')[type](4);\n      }, new RegExp(type + ' cannot be used with distinct'));\n      done();\n    })\n  }\n\n  function no (method, type) {\n    it('cannot be used with ' + method + '()', function(done){\n      assert.throws(function () {\n        mquery()[method]()[type](4);\n      }, new RegExp(type + ' cannot be used with ' + method));\n      done();\n    })\n  }\n\n  // query internal\n\n  describe('_updateForExec', function(){\n    it('returns a clone of the update object with same key order #19', function(done){\n      var update = {};\n      update.$push = { n: { $each: [{x:10}], $slice: -1, $sort: {x:1}}};\n\n      var q = mquery().update({ x: 1 }, update);\n\n      // capture original key order\n      var order = [];\n      for (var key in q._update.$push.n) {\n        order.push(key);\n      }\n\n      // compare output\n      var doc = q._updateForExec();\n      var i = 0;\n      for (var key in doc.$push.n) {\n        assert.equal(key, order[i]);\n        i++;\n      }\n\n      done();\n    })\n  })\n})\n"]}