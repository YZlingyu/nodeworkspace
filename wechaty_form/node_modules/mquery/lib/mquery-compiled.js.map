{"version":3,"sources":["mquery.js"],"names":[],"mappings":"AAAA;;AAEA;;;;AAIA,IAAI,QAAQ,QAAQ,QAAR,CAAZ;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,QAAQ,QAAQ,SAAR,CAAZ;AACA,IAAI,QAAQ,QAAQ,OAAR,EAAiB,QAAjB,CAAZ;;AAEA;;;;;;;;;;;;;;AAcA,SAAS,KAAT,CAAgB,QAAhB,EAA0B,OAA1B,EAAmC;AACjC,MAAI,EAAE,gBAAgB,KAAlB,CAAJ,EACE,OAAO,IAAI,KAAJ,CAAU,QAAV,EAAoB,OAApB,CAAP;;AAEF,MAAI,QAAQ,KAAK,WAAL,CAAiB,SAA7B;;AAEA,OAAK,EAAL,GAAU,MAAM,EAAN,IAAY,SAAtB;;AAEA,OAAK,OAAL,GAAe,EAAf;AACA,OAAK,UAAL,CAAgB,MAAM,OAAtB;;AAEA,OAAK,WAAL,GAAmB,MAAM,WAAN,GACf,MAAM,KAAN,CAAY,MAAM,WAAlB,EAA+B,EAAE,gBAAgB,KAAK,OAAL,CAAa,cAA/B,EAA/B,CADe,GAEf,EAFJ;;AAIA,OAAK,OAAL,GAAe,MAAM,OAAN,GACX,MAAM,KAAN,CAAY,MAAM,OAAlB,EAA2B,EAAE,gBAAgB,KAAK,OAAL,CAAa,cAA/B,EAA3B,CADW,GAEX,SAFJ;;AAIA,OAAK,OAAL,GAAe,MAAM,OAAN,GACX,MAAM,KAAN,CAAY,MAAM,OAAlB,EAA2B,EAAE,gBAAgB,KAAK,OAAL,CAAa,cAA/B,EAA3B,CADW,GAEX,SAFJ;;AAIA,OAAK,KAAL,GAAa,MAAM,KAAN,IAAe,SAA5B;AACA,OAAK,SAAL,GAAiB,MAAM,SAAN,IAAmB,SAApC;AACA,OAAK,WAAL,GAAmB,MAAM,WAAN,IAAqB,SAAxC;AACA,OAAK,cAAL,GAAsB,MAAM,cAAN,IAAwB,SAA9C;;AAEA,MAAI,OAAJ,EAAa;AACX,SAAK,UAAL,CAAgB,OAAhB;AACD;;AAED,MAAI,QAAJ,EAAc;AACZ,QAAI,SAAS,IAAT,IAAiB,SAAS,MAA1B,IAAoC,SAAS,MAAjD,EAAyD;AACvD;AACA,WAAK,UAAL,CAAgB,QAAhB;AACD,KAHD,MAGO;AACL,WAAK,IAAL,CAAU,QAAV;AACD;AACF;AACF;;AAED;;;;;;;;;;AAUA,IAAI,aAAa,YAAjB;AACA,OAAO,cAAP,CAAsB,KAAtB,EAA6B,eAA7B,EAA8C;AAC1C,OAAK,YAAa;AAAE,WAAO,cAAc,YAArB;AAAmC,GADb;AAE1C,OAAK,UAAU,CAAV,EAAa;AAChB,QAAI,SAAS,CAAb,EAAgB;AACd;AACA,mBAAa,YAAb;AACD,KAHD,MAGO;AACL,mBAAa,SAAb;AACD;AACF;AATyC,CAA9C;;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,MAAM,SAAN,CAAgB,aAAhB,GAAgC,SAAS,aAAT,GAA0B;AACxD,WAAS,WAAT,CAAsB,QAAtB,EAAgC,OAAhC,EAAyC;AACvC,QAAI,EAAE,gBAAgB,WAAlB,CAAJ,EACE,OAAO,IAAI,WAAJ,CAAgB,QAAhB,EAA0B,OAA1B,CAAP;AACF,UAAM,IAAN,CAAW,IAAX,EAAiB,QAAjB,EAA2B,OAA3B;AACD;;AAED,QAAM,QAAN,CAAe,WAAf,EAA4B,KAA5B;;AAEA;AACA,MAAI,IAAI,YAAY,SAApB;;AAEA,IAAE,OAAF,GAAY,EAAZ;AACA,IAAE,UAAF,CAAa,KAAK,OAAlB;;AAEA,IAAE,EAAF,GAAO,KAAK,EAAZ;AACA,IAAE,WAAF,GAAgB,MAAM,KAAN,CAAY,KAAK,WAAjB,EAA8B,EAAE,gBAAgB,KAAK,OAAL,CAAa,cAA/B,EAA9B,CAAhB;AACA,IAAE,OAAF,GAAY,MAAM,KAAN,CAAY,KAAK,OAAjB,EAA0B,EAAE,gBAAgB,KAAK,OAAL,CAAa,cAA/B,EAA1B,CAAZ;AACA,IAAE,OAAF,GAAY,MAAM,KAAN,CAAY,KAAK,OAAjB,EAA0B,EAAE,gBAAgB,KAAK,OAAL,CAAa,cAA/B,EAA1B,CAAZ;AACA,IAAE,KAAF,GAAU,KAAK,KAAf;AACA,IAAE,SAAF,GAAc,KAAK,SAAnB;AACA,IAAE,WAAF,GAAgB,KAAK,WAArB;AACA,IAAE,cAAF,GAAmB,KAAK,cAAxB;;AAEA,SAAO,WAAP;AACD,CAzBD;;AA2BA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,MAAM,SAAN,CAAgB,UAAhB,GAA6B,UAAU,OAAV,EAAmB;AAC9C,MAAI,EAAE,WAAW,MAAM,QAAN,CAAe,OAAf,CAAb,CAAJ,EACE,OAAO,IAAP;;AAEF;AACA,MAAI,UAAU,MAAM,IAAN,CAAW,OAAX,CAAd;AAAA,MACI,MADJ;;AAGA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,QAAQ,MAA5B,EAAoC,EAAE,CAAtC,EAAyC;AACvC,aAAS,QAAQ,CAAR,CAAT;;AAEA;AACA,QAAI,cAAc,OAAO,KAAK,MAAL,CAAzB,EAAuC;AACrC,UAAI,OAAO,MAAM,OAAN,CAAc,QAAQ,MAAR,CAAd,IACP,QAAQ,MAAR,CADO,GAEP,CAAC,QAAQ,MAAR,CAAD,CAFJ;AAGA,WAAK,MAAL,EAAa,KAAb,CAAmB,IAAnB,EAAyB,IAAzB;AACD,KALD,MAKO;AACL,WAAK,OAAL,CAAa,MAAb,IAAuB,QAAQ,MAAR,CAAvB;AACD;AACF;;AAED,SAAO,IAAP;AACD,CAvBD;;AAyBA;;;;;;;AAOA,MAAM,SAAN,CAAgB,UAAhB,GAA6B,SAAS,UAAT,CAAqB,IAArB,EAA2B;AACtD,OAAK,WAAL,GAAmB,IAAI,MAAM,UAAV,CAAqB,IAArB,CAAnB;;AAEA,SAAO,IAAP;AACD,CAJD;;AAMA;;;;;;;;;;;;;;;;;;;;AAoBA,MAAM,SAAN,CAAgB,MAAhB,GAAyB,UAAU,EAAV,EAAc;AACrC,OAAK,WAAL,CAAiB,MAAjB,GAA0B,EAA1B;AACA,SAAO,IAAP;AACD,CAHD;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,MAAM,SAAN,CAAgB,KAAhB,GAAwB,YAAY;AAClC,MAAI,CAAC,UAAU,MAAf,EAAuB,OAAO,IAAP;AACvB,MAAI,CAAC,KAAK,EAAV,EAAc,KAAK,EAAL,GAAU,MAAV;;AAEd,MAAI,OAAO,OAAO,UAAU,CAAV,CAAlB;;AAEA,MAAI,YAAY,IAAhB,EAAsB;AACpB,SAAK,KAAL,GAAa,UAAU,CAAV,CAAb;;AAEA,QAAI,MAAM,UAAU,MAApB,EAA4B;AAC1B,WAAK,WAAL,CAAiB,KAAK,KAAtB,IAA+B,UAAU,CAAV,CAA/B;AACD;;AAED,WAAO,IAAP;AACD;;AAED,MAAI,YAAY,IAAZ,IAAoB,CAAC,MAAM,OAAN,CAAc,UAAU,CAAV,CAAd,CAAzB,EAAsD;AACpD,WAAO,KAAK,KAAL,CAAW,UAAU,CAAV,CAAX,CAAP;AACD;;AAED,QAAM,IAAI,SAAJ,CAAc,iCAAd,CAAN;AACD,CArBD;;AAuBA;;;;;;;;;;;;;;;;AAgBA,MAAM,SAAN,CAAgB,MAAhB,GAAyB,SAAS,MAAT,CAAiB,GAAjB,EAAsB;AAC7C,OAAK,WAAL,CAAiB,QAAjB;AACA,MAAI,OAAO,KAAK,KAAhB;AACA,OAAK,WAAL,CAAiB,IAAjB,IAAyB,GAAzB;AACA,SAAO,IAAP;AACD,CALD;;AAOA;;;;;;;;;;;;;;;;;;;;;AAqBA,MAAM,SAAN,CAAgB,EAAhB,GAAqB,SAAS,EAAT,CAAa,GAAb,EAAkB;AACrC,OAAK,WAAL,CAAiB,IAAjB;AACA,MAAI,OAAO,KAAK,KAAhB;AACA,OAAK,WAAL,CAAiB,IAAjB,IAAyB,GAAzB;AACA,SAAO,IAAP;AACD,CALD;;AAOA;;;;;;;;;;;;AAYA,MAAM,SAAN,CAAgB,EAAhB,GAAqB,SAAS,EAAT,CAAa,KAAb,EAAoB;AACvC,MAAI,KAAK,KAAK,WAAL,CAAiB,GAAjB,KAAyB,KAAK,WAAL,CAAiB,GAAjB,GAAuB,EAAhD,CAAT;AACA,MAAI,CAAC,MAAM,OAAN,CAAc,KAAd,CAAL,EAA2B,QAAQ,CAAC,KAAD,CAAR;AAC3B,KAAG,IAAH,CAAQ,KAAR,CAAc,EAAd,EAAkB,KAAlB;AACA,SAAO,IAAP;AACD,CALD;;AAOA;;;;;;;;;;;;AAYA,MAAM,SAAN,CAAgB,GAAhB,GAAsB,SAAS,GAAT,CAAc,KAAd,EAAqB;AACzC,MAAI,MAAM,KAAK,WAAL,CAAiB,IAAjB,KAA0B,KAAK,WAAL,CAAiB,IAAjB,GAAwB,EAAlD,CAAV;AACA,MAAI,CAAC,MAAM,OAAN,CAAc,KAAd,CAAL,EAA2B,QAAQ,CAAC,KAAD,CAAR;AAC3B,MAAI,IAAJ,CAAS,KAAT,CAAe,GAAf,EAAoB,KAApB;AACA,SAAO,IAAP;AACD,CALD;;AAOA;;;;;;;;;;;;;AAaA,MAAM,SAAN,CAAgB,GAAhB,GAAsB,SAAS,GAAT,CAAc,KAAd,EAAqB;AACzC,MAAI,MAAM,KAAK,WAAL,CAAiB,IAAjB,KAA0B,KAAK,WAAL,CAAiB,IAAjB,GAAwB,EAAlD,CAAV;AACA,MAAI,CAAC,MAAM,OAAN,CAAc,KAAd,CAAL,EAA2B,QAAQ,CAAC,KAAD,CAAR;AAC3B,MAAI,IAAJ,CAAS,KAAT,CAAe,GAAf,EAAoB,KAApB;AACA,SAAO,IAAP;AACD,CALD;;AAOA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;AAYA;;;;;;;;;;;;AAYA;;;;;;;;;;;;AAYA;;;;;;;;;;;;AAYA;;;;;;;;;;;;AAYA;;;;;;;;;;;;AAYA;;;;;;;;;;;;AAYA;;;;;;;;;;;;AAYA;;;;;;;;;;;;AAYA;;;;;;;;;;;;AAYA;;;;;;AAMA,iEAAiE,KAAjE,CAAuE,GAAvE,EAA4E,OAA5E,CAAoF,UAAU,YAAV,EAAwB;AAC1G,QAAM,SAAN,CAAgB,YAAhB,IAAgC,YAAY;AAC1C,QAAI,IAAJ,EAAU,GAAV;;AAEA,QAAI,MAAM,UAAU,MAApB,EAA4B;AAC1B,WAAK,WAAL,CAAiB,YAAjB;AACA,YAAM,UAAU,CAAV,CAAN;AACA,aAAO,KAAK,KAAZ;AACD,KAJD,MAIO;AACL,YAAM,UAAU,CAAV,CAAN;AACA,aAAO,UAAU,CAAV,CAAP;AACD;;AAED,QAAI,QAAQ,KAAK,WAAL,CAAiB,IAAjB,MAA2B,IAA3B,IAAmC,OAAO,KAAK,WAAL,CAAiB,IAAjB,CAAP,KAAkC,QAArE,GACV,KAAK,WAAL,CAAiB,IAAjB,CADU,GAET,KAAK,WAAL,CAAiB,IAAjB,IAAyB,EAF5B;AAGA,UAAM,MAAM,YAAZ,IAA4B,GAA5B;AACA,WAAO,IAAP;AACD,GAjBD;AAkBD,CAnBD;;AAqBA;;;;;;;;;AASA,MAAM,SAAN,CAAgB,GAAhB,GAAsB,YAAY;AAChC,MAAI,GAAJ,EAAS,IAAT;;AAEA,MAAI,MAAM,UAAU,MAApB,EAA4B;AAC1B,SAAK,WAAL,CAAiB,KAAjB;AACA,UAAM,UAAU,CAAV,CAAN;AACA,WAAO,KAAK,KAAZ;AACD,GAJD,MAIO,IAAI,MAAM,UAAU,MAAhB,IAA0B,CAAC,MAAM,OAAN,CAAc,UAAU,CAAV,CAAd,CAA/B,EAA4D;AACjE,SAAK,WAAL,CAAiB,KAAjB;AACA,UAAM,MAAM,SAAN,CAAN;AACA,WAAO,KAAK,KAAZ;AACD,GAJM,MAIA,IAAI,MAAM,UAAU,MAApB,EAA4B;AACjC,UAAM,MAAM,SAAN,EAAiB,CAAjB,CAAN;AACA,WAAO,UAAU,CAAV,CAAP;AACD,GAHM,MAGA;AACL,UAAM,UAAU,CAAV,CAAN;AACA,WAAO,UAAU,CAAV,CAAP;AACD;;AAED,MAAI,QAAQ,KAAK,WAAL,CAAiB,IAAjB,MAA2B,KAAK,WAAL,CAAiB,IAAjB,IAAyB,EAApD,CAAZ;AACA,QAAM,IAAN,GAAa,GAAb;AACA,SAAO,IAAP;AACD,CAtBD;;AAwBA;;;;;;;;;;;;;;;;;;;;AAoBA,MAAM,SAAN,CAAgB,MAAhB,GAAyB,YAAY;AACnC,MAAI,IAAJ,EAAU,GAAV;;AAEA,MAAI,MAAM,UAAU,MAApB,EAA4B;AAC1B,SAAK,WAAL,CAAiB,QAAjB;AACA,WAAO,KAAK,KAAZ;AACA,UAAM,IAAN;AACD,GAJD,MAIO,IAAI,MAAM,UAAU,MAApB,EAA4B;AACjC,QAAI,cAAc,OAAO,UAAU,CAAV,CAAzB,EAAuC;AACrC,WAAK,WAAL,CAAiB,QAAjB;AACA,aAAO,KAAK,KAAZ;AACA,YAAM,UAAU,CAAV,CAAN;AACD,KAJD,MAIO;AACL,aAAO,UAAU,CAAV,CAAP;AACA,YAAM,IAAN;AACD;AACF,GATM,MASA,IAAI,MAAM,UAAU,MAApB,EAA4B;AACjC,WAAO,UAAU,CAAV,CAAP;AACA,UAAM,UAAU,CAAV,CAAN;AACD;;AAED,MAAI,QAAQ,KAAK,WAAL,CAAiB,IAAjB,MAA2B,KAAK,WAAL,CAAiB,IAAjB,IAAyB,EAApD,CAAZ;AACA,QAAM,OAAN,GAAgB,GAAhB;AACA,SAAO,IAAP;AACD,CAxBD;;AA0BA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,MAAM,SAAN,CAAgB,SAAhB,GAA4B,YAAY;AACtC,MAAI,QAAQ,UAAU,CAAV,CAAZ,EACE,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;;AAEF,MAAI,EAAJ,EAAQ,IAAR,EAAc,QAAd;;AAEA,MAAI,eAAe,OAAO,UAAU,CAAV,CAA1B,EAAwC;AACtC,SAAK,WAAL,CAAiB,WAAjB;AACA,WAAO,KAAK,KAAZ;AACA,SAAK,UAAU,CAAV,CAAL;AACD,GAJD,MAIO,IAAI,MAAM,QAAN,CAAe,UAAU,CAAV,CAAf,CAAJ,EAAkC;AACvC,SAAK,WAAL,CAAiB,WAAjB;AACA,WAAO,KAAK,KAAZ;AACA,eAAW,UAAU,CAAV,CAAX;AACD,GAJM,MAIA,IAAI,eAAe,OAAO,UAAU,CAAV,CAA1B,EAAwC;AAC7C,WAAO,UAAU,CAAV,CAAP;AACA,SAAK,UAAU,CAAV,CAAL;AACD,GAHM,MAGA,IAAI,UAAU,CAAV,KAAgB,MAAM,QAAN,CAAe,UAAU,CAAV,CAAf,CAApB,EAAkD;AACvD,WAAO,UAAU,CAAV,CAAP;AACA,eAAW,UAAU,CAAV,CAAX;AACD,GAHM,MAGA;AACL,UAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;AACD;;AAED,MAAI,EAAJ,EAAQ;AACN,eAAW,IAAI,KAAJ,EAAX;AACA,OAAG,QAAH;AACA,eAAW,SAAS,WAApB;AACD;;AAED,MAAI,QAAQ,KAAK,WAAL,CAAiB,IAAjB,MAA2B,KAAK,WAAL,CAAiB,IAAjB,IAAyB,EAApD,CAAZ;AACA,QAAM,UAAN,GAAmB,QAAnB;AACA,SAAO,IAAP;AACD,CAjCD;;AAmCA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,MAAM,SAAN,CAAgB,MAAhB,GAAyB,SAAS,MAAT,GAAmB;AAC1C;AACA,OAAK,WAAL,CAAiB,QAAjB;AACA,OAAK,cAAL,GAAsB,UAAtB;;AAEA,MAAI,MAAM,UAAU,MAApB,EAA4B;AAC1B,WAAO,IAAP;AACD;;AAED,MAAI,MAAM,UAAU,MAApB,EAA4B;AAC1B,WAAO,KAAK,GAAL,CAAS,KAAT,CAAe,IAAf,EAAqB,SAArB,CAAP;AACD,GAFD,MAEO,IAAI,IAAI,UAAU,MAAlB,EAA0B;AAC/B,WAAO,KAAK,OAAL,CAAa,KAAb,CAAmB,IAAnB,EAAyB,SAAzB,CAAP;AACD;;AAED,MAAI,OAAO,UAAU,CAAV,CAAX;;AAEA,MAAI,CAAC,IAAL,EACE,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;;AAEF,MAAI,KAAK,MAAT,EACE,OAAO,KAAK,MAAL,CAAY,IAAZ,CAAP;;AAEF,MAAI,KAAK,GAAT,EACE,OAAO,KAAK,GAAL,CAAS,KAAT,CAAe,IAAf,EAAqB,KAAK,GAA1B,CAAP;;AAEF,MAAI,KAAK,OAAT,EACE,OAAO,KAAK,OAAL,CAAa,KAAb,CAAmB,IAAnB,EAAyB,KAAK,OAA9B,CAAP;;AAEF,MAAI,KAAK,IAAL,IAAa,KAAK,WAAtB,EACE,OAAO,KAAK,QAAL,CAAc,IAAd,CAAP;;AAEF,QAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;AACD,CAjCD;;AAmCA;;;;;;;;;;;;;;;;;;;AAmBA,MAAM,SAAN,CAAgB,GAAhB,GAAsB,YAAY;AAChC,MAAI,IAAJ,EAAU,GAAV;;AAEA,MAAI,MAAM,UAAU,MAApB,EAA4B;AAC1B;AACA,WAAO,UAAU,CAAV,CAAP;AACA,UAAM,CAAC,UAAU,CAAV,CAAD,EAAe,UAAU,CAAV,CAAf,CAAN;AACD,GAJD,MAIO,IAAI,MAAM,UAAU,MAApB,EAA4B;AACjC;AACA,SAAK,WAAL,CAAiB,KAAjB;AACA,WAAO,KAAK,KAAZ;AACA,UAAM,CAAC,UAAU,CAAV,CAAD,EAAe,UAAU,CAAV,CAAf,CAAN;AACD,GALM,MAKA;AACL,UAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;AACD;;AAED,MAAI,QAAQ,KAAK,WAAL,CAAiB,IAAjB,MAA2B,KAAK,WAAL,CAAiB,IAAjB,IAAyB,EAApD,CAAZ;AACA,QAAM,KAAK,cAAL,IAAuB,UAA7B,IAA2C,EAAE,QAAQ,GAAV,EAA3C;AACA,SAAO,IAAP;AACD,CAnBD;;AAqBA;;;;;;;;;;;;;;;AAeA,MAAM,SAAN,CAAgB,OAAhB,GAA0B,YAAY;AACpC,MAAI,GAAJ,EAAS,IAAT;;AAEA,MAAI,YAAY,OAAO,UAAU,CAAV,CAAvB,EAAqC;AACnC;AACA,WAAO,UAAU,CAAV,CAAP;AACA,UAAM,MAAM,SAAN,EAAiB,CAAjB,CAAN;AACD,GAJD,MAIO;AACL;AACA,SAAK,WAAL,CAAiB,SAAjB;AACA,WAAO,KAAK,KAAZ;AACA,UAAM,MAAM,SAAN,CAAN;AACD;;AAED,MAAI,QAAQ,KAAK,WAAL,CAAiB,IAAjB,MAA2B,KAAK,WAAL,CAAiB,IAAjB,IAAyB,EAApD,CAAZ;AACA,QAAM,KAAK,cAAL,IAAuB,UAA7B,IAA2C,EAAE,YAAY,GAAd,EAA3C;AACA,SAAO,IAAP;AACD,CAjBD;;AAmBA;;;;;;;;;;;;;;;;;;;;;AAqBA,MAAM,SAAN,CAAgB,MAAhB,GAAyB,YAAY;AACnC,MAAI,IAAJ,EAAU,GAAV;;AAEA,MAAI,MAAM,UAAU,MAApB,EAA4B;AAC1B,SAAK,WAAL,CAAiB,QAAjB;AACA,WAAO,KAAK,KAAZ;AACA,UAAM,UAAU,CAAV,CAAN;AACD,GAJD,MAIO,IAAI,MAAM,UAAU,MAApB,EAA4B;AACjC,WAAO,UAAU,CAAV,CAAP;AACA,UAAM,UAAU,CAAV,CAAN;AACD,GAHM,MAGA;AACL,UAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;AACD;;AAED,MAAI,EAAE,YAAY,GAAZ,IAAmB,IAAI,MAAzB,CAAJ,EACE,MAAM,IAAI,KAAJ,CAAU,gCAAV,CAAN;;AAEF,MAAI,QAAQ,KAAK,WAAL,CAAiB,IAAjB,MAA2B,KAAK,WAAL,CAAiB,IAAjB,IAAyB,EAApD,CAAZ;;AAEA,MAAI,OAAO,IAAI,SAAJ,GACP,eADO,GAEP,SAFJ;;AAIA,MAAI,OAAO,KAAK,cAAL,IAAuB,UAAlC;AACA,QAAM,IAAN,IAAc,EAAd;AACA,QAAM,IAAN,EAAY,IAAZ,IAAoB,CAAC,IAAI,MAAL,EAAa,IAAI,MAAjB,CAApB;;AAEA,MAAI,YAAY,GAAhB,EACE,MAAM,IAAN,EAAY,WAAZ,GAA0B,CAAC,CAAE,IAAI,MAAjC;;AAEF,SAAO,IAAP;AACD,CA/BD;;AAiCA;;;;;;;;;;;;;;;;;;;;;AAqBA,MAAM,SAAN,CAAgB,IAAhB,GAAuB,SAAS,IAAT,GAAiB;AACtC,MAAI,IAAJ,EAAU,GAAV;;AAEA,OAAK,cAAL,GAAsB,OAAtB;;AAEA,MAAI,MAAM,UAAU,MAApB,EAA4B;AAC1B,WAAO,IAAP;AACD,GAFD,MAEO,IAAI,MAAM,UAAU,MAApB,EAA4B;AACjC,SAAK,WAAL,CAAiB,MAAjB;AACA,WAAO,KAAK,KAAZ;AACA,UAAM,UAAU,CAAV,CAAN;AACD,GAJM,MAIA,IAAI,MAAM,UAAU,MAApB,EAA4B;AACjC,WAAO,UAAU,CAAV,CAAP;AACA,UAAM,UAAU,CAAV,CAAN;AACD,GAHM,MAGA;AACL,UAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;AACD;;AAED,MAAI,CAAC,IAAI,MAAT,EAAiB;AACf,UAAM,IAAI,KAAJ,CAAU,oBAAV,CAAN;AACD;;AAED,MAAI,QAAQ,KAAK,WAAL,CAAiB,IAAjB,MAA2B,KAAK,WAAL,CAAiB,IAAjB,IAAyB,EAApD,CAAZ;;AAEA,MAAI,OAAO,IAAI,SAAJ,GACP,aADO,GAEP,OAFJ;;AAIA;AACA,MAAI,MAAM,OAAN,CAAc,IAAI,MAAlB,CAAJ,EAA+B;AAC7B,UAAM,IAAN,IAAc,IAAI,MAAlB;;AAEA,QAAI,SAAS,iBAAiB,GAAjB,GACT,IAAI,WADK,GAET,IAFJ;;AAIA,QAAI,QAAQ,MAAZ,EAAoB;AAClB,YAAM,YAAN,GAAqB,MAArB;AACD;AACD,QAAI,QAAQ,IAAI,WAAhB,EAA6B;AAC3B,YAAM,YAAN,GAAqB,IAAI,WAAzB;AACD;AACF,GAbD,MAaO;AACL;AACA,QAAI,IAAI,MAAJ,CAAW,IAAX,IAAmB,OAAnB,IAA8B,CAAC,MAAM,OAAN,CAAc,IAAI,MAAJ,CAAW,WAAzB,CAAnC,EAA0E;AACxE,YAAM,IAAI,KAAJ,CAAU,KAAK,MAAL,CAAY,kCAAZ,EAAgD,IAAhD,CAAV,CAAN;AACD;AACD,UAAM,IAAN,IAAc,EAAE,WAAY,IAAI,MAAlB,EAAd;;AAEA;AACA,QAAI,iBAAiB,GAArB,EAA0B;AACxB,YAAM,IAAN,EAAY,cAAZ,IAA8B,IAAI,WAAlC;AACD;AACD,QAAI,iBAAiB,GAArB,EAA0B;AACxB,YAAM,IAAN,EAAY,cAAZ,IAA8B,IAAI,WAAlC;AACD;AACF;;AAED,SAAO,IAAP;AACD,CA3DD;;AA6DA;;;;;;;;;;;;;;;;;;;;AAoBA,MAAM,SAAN,CAAgB,UAAhB,GAA6B,SAAS,UAAT,GAAuB;AAClD;AACA,OAAK,WAAL,CAAiB,YAAjB;;AAEA,OAAK,cAAL,GAAsB,gBAAtB;;AAEA,MAAI,MAAM,UAAU,MAApB,EAA4B;AAC1B,WAAO,IAAP;AACD;;AAED,MAAI,OAAO,UAAU,CAAV,CAAX;;AAEA,MAAI,QAAQ,IAAR,IAAgB,KAAK,IAArB,IAA6B,KAAK,WAAtC,EACE,OAAO,KAAK,QAAL,CAAc,IAAd,CAAP;;AAEF,QAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;AACD,CAhBD;;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,MAAM,SAAN,CAAgB,QAAhB,GAA2B,SAAS,QAAT,GAAqB;AAC9C,MAAI,EAAE,aAAa,KAAK,cAAlB,IACA,gBAAgB,KAAK,cADrB,IAEA,WAAW,KAAK,cAFhB,IAGA,oBAAoB,KAAK,cAH3B,CAAJ,EAGgD;AAC9C,UAAM,IAAI,KAAJ,CAAU,mEAAV,CAAN;AACD;;AAED,MAAI,GAAJ,EAAS,IAAT;;AAEA,MAAI,MAAM,UAAU,MAApB,EAA4B;AAC1B,SAAK,WAAL,CAAiB,UAAjB;AACA,WAAO,KAAK,KAAZ;AACA,UAAM,UAAU,CAAV,CAAN;AACD,GAJD,MAIO;AACL,UAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;AACD;;AAED,MAAI,EAAE,IAAI,IAAJ,IAAY,MAAM,OAAN,CAAc,IAAI,WAAlB,CAAd,CAAJ,EAAmD;AACjD,UAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;AACD;;AAED,MAAI,QAAQ,KAAK,WAAL,CAAiB,IAAjB,MAA2B,KAAK,WAAL,CAAiB,IAAjB,IAAyB,EAApD,CAAZ;AACA,QAAM,KAAK,cAAX,IAA6B,EAAE,WAAW,GAAb,EAA7B;;AAEA,SAAO,IAAP;AACD,CA1BD;;AA4BA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,MAAM,SAAN,CAAgB,MAAhB,GAAyB,SAAS,MAAT,GAAmB;AAC1C,MAAI,MAAM,UAAU,CAAV,CAAV;AACA,MAAI,CAAC,GAAL,EAAU,OAAO,IAAP;;AAEV,MAAI,UAAU,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,UAAM,IAAI,KAAJ,CAAU,8CAAV,CAAN;AACD;;AAED,OAAK,SAAL,CAAe,QAAf;;AAEA,MAAI,SAAS,KAAK,OAAL,KAAiB,KAAK,OAAL,GAAe,EAAhC,CAAb;AACA,MAAI,OAAO,OAAO,GAAlB;;AAEA,MAAI,CAAC,YAAY,IAAZ,IAAoB,MAAM,iBAAN,CAAwB,GAAxB,CAArB,KACF,YAAY,OAAO,IAAI,MADrB,IAC+B,MAAM,OAAN,CAAc,GAAd,CADnC,EACuD;AACrD,QAAI,YAAY,IAAhB,EACE,MAAM,IAAI,KAAJ,CAAU,KAAV,CAAN;;AAEF,SAAK,IAAI,IAAI,CAAR,EAAW,MAAM,IAAI,MAA1B,EAAkC,IAAI,GAAtC,EAA2C,EAAE,CAA7C,EAAgD;AAC9C,UAAI,QAAQ,IAAI,CAAJ,CAAZ;AACA,UAAI,CAAC,KAAL,EAAY;AACZ,UAAI,UAAU,OAAO,MAAM,CAAN,CAAP,GAAkB,CAAlB,GAAsB,CAApC;AACA,UAAI,YAAY,CAAhB,EAAmB,QAAQ,MAAM,SAAN,CAAgB,CAAhB,CAAR;AACnB,aAAO,KAAP,IAAgB,OAAhB;AACD;;AAED,WAAO,IAAP;AACD;;AAED,MAAI,MAAM,QAAN,CAAe,GAAf,CAAJ,EAAyB;AACvB,QAAI,OAAO,MAAM,IAAN,CAAW,GAAX,CAAX;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,MAAzB,EAAiC,EAAE,CAAnC,EAAsC;AACpC,aAAO,KAAK,CAAL,CAAP,IAAkB,IAAI,KAAK,CAAL,CAAJ,CAAlB;AACD;AACD,WAAO,IAAP;AACD;;AAED,QAAM,IAAI,SAAJ,CAAc,sDAAd,CAAN;AACD,CAtCD;;AAwCA;;;;;;;;;;;;;;;;;;AAkBA,MAAM,SAAN,CAAgB,KAAhB,GAAwB,YAAY;AAClC,MAAI,MAAM,UAAU,MAApB,EACE,OAAO,IAAP;;AAEF,OAAK,SAAL,CAAe,OAAf;;AAEA,MAAI,IAAJ,EAAU,GAAV;;AAEA,MAAI,MAAM,UAAU,MAApB,EAA4B;AAC1B,QAAI,MAAM,UAAU,CAAV,CAAV;AACA,QAAI,OAAO,GAAP,KAAe,QAAf,IAA2B,CAAC,MAAM,OAAN,CAAc,GAAd,CAAhC,EAAoD;AAClD,UAAI,OAAO,OAAO,IAAP,CAAY,GAAZ,CAAX;AACA,UAAI,UAAU,KAAK,MAAnB;AACA,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,OAApB,EAA6B,EAAE,CAA/B,EAAkC;AAChC,aAAK,KAAL,CAAW,KAAK,CAAL,CAAX,EAAoB,IAAI,KAAK,CAAL,CAAJ,CAApB;AACD;AACD,aAAO,IAAP;AACD;AACD,SAAK,WAAL,CAAiB,OAAjB;AACA,WAAO,KAAK,KAAZ;AACA,UAAM,UAAU,CAAV,CAAN;AACD,GAbD,MAaO,IAAI,MAAM,UAAU,MAApB,EAA4B;AACjC,QAAI,aAAa,OAAO,UAAU,CAAV,CAAxB,EAAsC;AACpC,WAAK,WAAL,CAAiB,OAAjB;AACA,aAAO,KAAK,KAAZ;AACA,YAAM,MAAM,SAAN,CAAN;AACD,KAJD,MAIO;AACL,aAAO,UAAU,CAAV,CAAP;AACA,YAAM,UAAU,CAAV,CAAN;AACD;AACF,GATM,MASA,IAAI,MAAM,UAAU,MAApB,EAA4B;AACjC,WAAO,UAAU,CAAV,CAAP;AACA,UAAM,MAAM,SAAN,EAAiB,CAAjB,CAAN;AACD;;AAED,MAAI,WAAW,KAAK,OAAL,KAAiB,KAAK,OAAL,GAAe,EAAhC,CAAf;AACA,WAAS,IAAT,IAAiB,EAAE,UAAU,GAAZ,EAAjB;AACA,SAAO,IAAP;AACD,CAtCD;;AAwCA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,MAAM,SAAN,CAAgB,IAAhB,GAAuB,UAAU,GAAV,EAAe;AACpC,MAAI,CAAC,GAAL,EAAU,OAAO,IAAP;AACV,MAAI,GAAJ;;AAEA,OAAK,SAAL,CAAe,MAAf;;AAEA,MAAI,OAAO,OAAO,GAAlB;;AAEA;AACA,MAAI,MAAM,OAAN,CAAc,GAAd,CAAJ,EAAwB;AACtB,UAAM,IAAI,MAAV;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,IAAI,MAAxB,EAAgC,EAAE,CAAlC,EAAqC;AACnC,UAAI,CAAC,MAAM,OAAN,CAAc,IAAI,CAAJ,CAAd,CAAL,EAA4B;AAC1B,cAAM,IAAI,KAAJ,CAAU,kDAAV,CAAN;AACD;AACD,eAAS,KAAK,OAAd,EAAuB,IAAI,CAAJ,EAAO,CAAP,CAAvB,EAAkC,IAAI,CAAJ,EAAO,CAAP,CAAlC;AACD;AACD,WAAO,IAAP;AACD;;AAED;AACA,MAAI,MAAM,UAAU,MAAhB,IAA0B,YAAY,IAA1C,EAAgD;AAC9C,UAAM,IAAI,KAAJ,CAAU,KAAV,CAAN;AACA,UAAM,IAAI,MAAV;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,GAApB,EAAyB,EAAE,CAA3B,EAA8B;AAC5B,UAAI,QAAQ,IAAI,CAAJ,CAAZ;AACA,UAAI,CAAC,KAAL,EAAY;AACZ,UAAI,SAAS,OAAO,MAAM,CAAN,CAAP,GAAkB,CAAC,CAAnB,GAAuB,CAApC;AACA,UAAI,WAAW,CAAC,CAAhB,EAAmB,QAAQ,MAAM,SAAN,CAAgB,CAAhB,CAAR;AACnB,WAAK,KAAK,OAAV,EAAmB,KAAnB,EAA0B,MAA1B;AACD;;AAED,WAAO,IAAP;AACD;;AAED;AACA,MAAI,MAAM,QAAN,CAAe,GAAf,CAAJ,EAAyB;AACvB,QAAI,OAAO,MAAM,IAAN,CAAW,GAAX,CAAX;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,MAAzB,EAAiC,EAAE,CAAnC,EAAsC;AACpC,UAAI,QAAQ,KAAK,CAAL,CAAZ;AACA,WAAK,KAAK,OAAV,EAAmB,KAAnB,EAA0B,IAAI,KAAJ,CAA1B;AACD;;AAED,WAAO,IAAP;AACD;;AAED,MAAI,OAAO,GAAP,KAAe,WAAf,IAA8B,eAAe,GAAjD,EAAsD;AACpD,aAAS,KAAK,OAAd,EAAuB,GAAvB;AACA,WAAO,IAAP;AACD;;AAED,QAAM,IAAI,SAAJ,CAAc,8DAAd,CAAN;AACD,CApDD;;AAsDA;;;;AAIA,SAAS,IAAT,CAAe,IAAf,EAAqB,KAArB,EAA4B,KAA5B,EAAmC;AACjC,MAAI,MAAM,OAAN,CAAc,KAAK,IAAnB,CAAJ,EAA8B;AAC5B,UAAM,IAAI,SAAJ,CAAc,yDAClB,2CADkB,GAElB,qCAFI,CAAN;AAGD;;AAED,MAAI,SAAS,MAAM,KAAnB,EAA0B;AACxB,QAAI,IAAI,KAAK,IAAL,KAAc,KAAK,IAAL,GAAY,EAA1B,CAAR;AACA,MAAE,KAAF,IAAW,EAAE,OAAQ,MAAM,KAAhB,EAAX;AACA;AACD;;AAED,MAAI,MAAM,OAAO,SAAS,CAAhB,EAAmB,WAAnB,EAAV;AACA,MAAI,CAAC,2CAA2C,IAA3C,CAAgD,GAAhD,CAAL,EAA2D;AACzD,QAAI,MAAM,OAAN,CAAc,KAAd,CAAJ,EAA0B,QAAQ,MAAI,KAAJ,GAAU,GAAlB;AAC1B,UAAM,IAAI,SAAJ,CAAc,0BAA0B,KAA1B,GAAkC,IAAlC,GAAyC,KAAzC,GAAiD,IAA/D,CAAN;AACD;AACD;AACA,MAAI,IAAI,KAAK,IAAL,KAAc,KAAK,IAAL,GAAY,EAA1B,CAAR;AACA,MAAI,WAAW,MAAM,QAAN,GACE,OADF,CACU,KADV,EACiB,GADjB,EAEE,OAFF,CAEU,WAFV,EAEuB,GAFvB,EAGE,OAHF,CAGU,MAHV,EAGkB,IAHlB,EAIE,OAJF,CAIU,YAJV,EAIwB,IAJxB,CAAf;AAKA,IAAE,KAAF,IAAW,SAAS,QAAT,EAAmB,EAAnB,CAAX;AACD;;AAED,SAAS,QAAT,CAAmB,IAAnB,EAAyB,KAAzB,EAAgC,KAAhC,EAAuC;AACrC,OAAK,IAAL,GAAY,KAAK,IAAL,IAAa,EAAzB;AACA,MAAI,CAAC,MAAM,OAAN,CAAc,KAAK,IAAnB,CAAL,EAA+B;AAC7B,UAAM,IAAI,SAAJ,CAAc,yDAClB,2CADkB,GAElB,qCAFI,CAAN;AAGD;AACD,MAAI,WAAW,MAAM,QAAN,GACZ,OADY,CACJ,KADI,EACG,GADH,EAEZ,OAFY,CAEJ,WAFI,EAES,GAFT,EAGZ,OAHY,CAGJ,MAHI,EAGI,IAHJ,EAIZ,OAJY,CAIJ,YAJI,EAIU,IAJV,CAAf;AAKA,OAAK,IAAL,CAAU,IAAV,CAAe,CAAC,KAAD,EAAQ,KAAR,CAAf;AACD;;AAED,SAAS,QAAT,CAAmB,IAAnB,EAAyB,GAAzB,EAA8B;AAC5B,OAAK,IAAL,GAAY,KAAK,IAAL,IAAa,IAAI,GAAJ,EAAzB;AACA,MAAI,EAAE,KAAK,IAAL,YAAqB,GAAvB,CAAJ,EAAiC;AAC/B,UAAM,IAAI,SAAJ,CAAc,kDAClB,4BADI,CAAN;AAED;AACD,MAAI,OAAJ,CAAY,UAAS,KAAT,EAAgB,GAAhB,EAAqB;AAC/B,QAAI,WAAW,MAAM,QAAN,GACZ,OADY,CACJ,KADI,EACG,GADH,EAEZ,OAFY,CAEJ,WAFI,EAES,GAFT,EAGZ,OAHY,CAGJ,MAHI,EAGI,IAHJ,EAIZ,OAJY,CAIJ,YAJI,EAIU,IAJV,CAAf;AAKA,SAAK,IAAL,CAAU,GAAV,CAAc,GAAd,EAAmB,QAAnB;AACD,GAPD;AAQD;;AAED;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;AAQA,CAAC,CAAC,OAAD,EAAU,MAAV,EAAkB,SAAlB,EAA6B,WAA7B,EAA0C,SAA1C,EAAqD,OAArD,CAA6D,UAAU,MAAV,EAAkB;AAC9E,QAAM,SAAN,CAAgB,MAAhB,IAA0B,UAAU,CAAV,EAAa;AACrC,SAAK,SAAL,CAAe,MAAf;AACA,SAAK,OAAL,CAAa,MAAb,IAAuB,CAAvB;AACA,WAAO,IAAP;AACD,GAJD;AAKD,CANA;;AAQD;;;;;;;;;;;;;;AAcA,MAAM,SAAN,CAAgB,OAAhB,GAA0B,UAAU,CAAV,EAAa;AACrC,OAAK,SAAL,CAAe,SAAf;AACA,OAAK,OAAL,CAAa,SAAb,GAAyB,CAAzB;AACA,SAAO,IAAP;AACD,CAJD;;AAMA;;;;;;;;;;;;;;;;;;AAkBA,MAAM,SAAN,CAAgB,QAAhB,GAA2B,YAAY;AACrC,OAAK,SAAL,CAAe,UAAf;;AAEA,OAAK,OAAL,CAAa,QAAb,GAAwB,UAAU,MAAV,GACpB,CAAC,CAAE,UAAU,CAAV,CADiB,GAEpB,IAFJ;;AAIA,SAAO,IAAP;AACD,CARD;;AAUA;;;;;;;;;;;;;;;;;;AAkBA,MAAM,SAAN,CAAgB,IAAhB,GAAuB,YAAY;AACjC,MAAI,MAAM,UAAU,MAApB,EAA4B,OAAO,IAAP;;AAE5B,OAAK,SAAL,CAAe,MAAf;;AAEA,MAAI,MAAM,UAAU,CAAV,CAAV;AACA,MAAI,MAAM,QAAN,CAAe,GAAf,CAAJ,EAAyB;AACvB,QAAI,OAAO,KAAK,OAAL,CAAa,IAAb,KAAsB,KAAK,OAAL,CAAa,IAAb,GAAoB,EAA1C,CAAX;;AAEA;AACA,SAAK,IAAI,CAAT,IAAc,GAAd,EAAmB;AACjB,WAAK,CAAL,IAAU,IAAI,CAAJ,CAAV;AACD;;AAED,WAAO,IAAP;AACD;AACD,MAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AAC3B,SAAK,OAAL,CAAa,IAAb,GAAoB,GAApB;AACA,WAAO,IAAP;AACD;;AAED,QAAM,IAAI,SAAJ,CAAc,mBAAmB,GAAjC,CAAN;AACD,CAtBD;;AAwBA;;;;;;;;;;;;;;;;;AAiBA,MAAM,SAAN,CAAgB,OAAhB,GAA0B,UAAU,CAAV,EAAa;AACrC,OAAK,OAAL,CAAa,OAAb,GAAuB,UAAU,MAAV,GAAmB,CAAC,CAAC,CAArB,GAAyB,IAAhD;AACA,SAAO,IAAP;AACD,CAHD;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,MAAM,SAAN,CAAgB,IAAhB,GAAuB,UAAU,IAAV,EAAgB;AACrC,MAAI,UAAU,MAAV,GAAmB,CAAnB,IAAwB,CAAC,MAAM,SAAN,CAAgB,IAAhB,CAAqB,wBAAlD,EAA4E;AAC1E,YAAQ,KAAR,CAAc,yIAAd;AACA,UAAM,SAAN,CAAgB,IAAhB,CAAqB,wBAArB,GAAgD,IAAhD;AACD;AACD,OAAK,OAAL,CAAa,cAAb,GAA8B,MAAM,QAAN,CAAe,IAAf,CAA9B;AACA,SAAO,IAAP;AACD,CAPD;;AASA;;;;;;;;;;;;;;;;;;AAkBA,MAAM,SAAN,CAAgB,QAAhB,GAA2B,YAAY;AACrC,OAAK,SAAL,CAAe,UAAf;;AAEA,OAAK,OAAL,CAAa,QAAb,GAAwB,UAAU,MAAV,GACpB,CAAC,CAAE,UAAU,CAAV,CADiB,GAEpB,IAFJ;;AAIA,SAAO,IAAP;AACD,CARD;;AAUA;;;;;;;;;AASA,MAAM,SAAN,CAAgB,KAAhB,GAAwB,UAAU,MAAV,EAAkB;AACxC,MAAI,CAAC,MAAL,EACE,OAAO,IAAP;;AAEF,MAAI,CAAC,MAAM,QAAN,CAAe,MAAf,CAAL,EACE,MAAM,IAAI,SAAJ,CAAc,8DAAd,CAAN;;AAEF,MAAI,kBAAkB,KAAtB,EAA6B;AAC3B;;AAEA,QAAI,OAAO,WAAX,EAAwB;AACtB,YAAM,KAAN,CAAY,KAAK,WAAjB,EAA8B,OAAO,WAArC;AACD;;AAED,QAAI,OAAO,OAAX,EAAoB;AAClB,WAAK,OAAL,KAAiB,KAAK,OAAL,GAAe,EAAhC;AACA,YAAM,KAAN,CAAY,KAAK,OAAjB,EAA0B,OAAO,OAAjC;AACD;;AAED,QAAI,OAAO,OAAX,EAAoB;AAClB,WAAK,OAAL,KAAiB,KAAK,OAAL,GAAe,EAAhC;AACA,YAAM,KAAN,CAAY,KAAK,OAAjB,EAA0B,OAAO,OAAjC;AACD;;AAED,QAAI,OAAO,OAAX,EAAoB;AAClB,WAAK,OAAL,KAAiB,KAAK,OAAL,GAAe,EAAhC;AACA,YAAM,UAAN,CAAiB,KAAK,OAAtB,EAA+B,OAAO,OAAtC;AACD;;AAED,QAAI,OAAO,SAAX,EAAsB;AACpB,WAAK,SAAL,GAAiB,OAAO,SAAxB;AACD;;AAED,WAAO,IAAP;AACD;;AAED;AACA,QAAM,KAAN,CAAY,KAAK,WAAjB,EAA8B,MAA9B;;AAEA,SAAO,IAAP;AACD,CAxCD;;AA0CA;;;;;;;;;;;;;;;;;AAiBA,MAAM,SAAN,CAAgB,IAAhB,GAAuB,UAAU,QAAV,EAAoB,QAApB,EAA8B;AACnD,OAAK,EAAL,GAAU,MAAV;;AAEA,MAAI,eAAe,OAAO,QAA1B,EAAoC;AAClC,eAAW,QAAX;AACA,eAAW,SAAX;AACD,GAHD,MAGO,IAAI,MAAM,QAAN,CAAe,QAAf,CAAJ,EAA8B;AACnC,SAAK,KAAL,CAAW,QAAX;AACD;;AAED,MAAI,CAAC,QAAL,EAAe,OAAO,IAAP;;AAEf,MAAI,OAAO,IAAX;AAAA,MACI,QAAQ,KAAK,WADjB;AAAA,MAEI,UAAU,KAAK,eAAL,EAFd;;AAIA,UAAQ,MAAR,GAAiB,KAAK,cAAL,EAAjB;;AAEA,QAAM,MAAN,EAAc,KAAK,WAAL,CAAiB,cAA/B,EAA+C,KAA/C,EAAsD,OAAtD;AACA,aAAW,KAAK,aAAL,CAAmB,MAAnB,EAA2B,QAA3B,EAAqC;AAC9C,gBAAY,KADkC;AAE9C,aAAS;AAFqC,GAArC,CAAX;;AAKA,OAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAtB,EAA6B,OAA7B,EAAsC,MAAM,IAAN,CAAW,QAAX,CAAtC;AACA,SAAO,IAAP;AACD,CA1BD;;AA4BA;;;;;;;;;;;;;AAaA,MAAM,SAAN,CAAgB,MAAhB,GAAyB,SAAS,MAAT,CAAiB,QAAjB,EAA2B;AAClD,MAAI,KAAK,EAAT,EAAa;AACX,QAAI,KAAK,EAAL,KAAY,MAAhB,EAAwB;AACtB,YAAM,IAAI,SAAJ,CAAc,mCAAd,CAAN;AACD;AACF,GAJD,MAIO;AACL,SAAK,IAAL,CAAU,QAAV;AACD;;AAED,MAAI,QAAQ,KAAK,WAAjB;AAAA,MACI,UAAU,KAAK,eAAL,EADd;;AAGA,UAAQ,MAAR,GAAiB,KAAK,cAAL,EAAjB;;AAEA,QAAM,YAAN,EAAoB,KAAK,WAAL,CAAiB,cAArC,EAAqD,KAArD,EAA4D,OAA5D;AACA,SAAO,KAAK,WAAL,CAAiB,UAAjB,CAA4B,KAA5B,EAAmC,OAAnC,CAAP;AACD,CAhBD;;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,MAAM,SAAN,CAAgB,OAAhB,GAA0B,UAAU,QAAV,EAAoB,QAApB,EAA8B;AACtD,OAAK,EAAL,GAAU,SAAV;;AAEA,MAAI,eAAe,OAAO,QAA1B,EAAoC;AAClC,eAAW,QAAX;AACA,eAAW,SAAX;AACD,GAHD,MAGO,IAAI,MAAM,QAAN,CAAe,QAAf,CAAJ,EAA8B;AACnC,SAAK,KAAL,CAAW,QAAX;AACD;;AAED,MAAI,CAAC,QAAL,EAAe,OAAO,IAAP;;AAEf,MAAI,OAAO,IAAX;AAAA,MACI,QAAQ,KAAK,WADjB;AAAA,MAEI,UAAU,KAAK,eAAL,EAFd;;AAIA,UAAQ,MAAR,GAAiB,KAAK,cAAL,EAAjB;;AAEA,QAAM,SAAN,EAAiB,KAAK,WAAL,CAAiB,cAAlC,EAAkD,KAAlD,EAAyD,OAAzD;AACA,aAAW,KAAK,aAAL,CAAmB,SAAnB,EAA8B,QAA9B,EAAwC;AACjD,gBAAY,KADqC;AAEjD,aAAS;AAFwC,GAAxC,CAAX;;AAKA,OAAK,WAAL,CAAiB,OAAjB,CAAyB,KAAzB,EAAgC,OAAhC,EAAyC,MAAM,IAAN,CAAW,QAAX,CAAzC;;AAEA,SAAO,IAAP;AACD,CA3BD;;AA6BA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,MAAM,SAAN,CAAgB,KAAhB,GAAwB,UAAU,QAAV,EAAoB,QAApB,EAA8B;AACpD,OAAK,EAAL,GAAU,OAAV;AACA,OAAK,SAAL;;AAEA,MAAI,eAAe,OAAO,QAA1B,EAAoC;AAClC,eAAW,QAAX;AACA,eAAW,SAAX;AACD,GAHD,MAGO,IAAI,MAAM,QAAN,CAAe,QAAf,CAAJ,EAA8B;AACnC,SAAK,KAAL,CAAW,QAAX;AACD;;AAED,MAAI,CAAC,QAAL,EAAe,OAAO,IAAP;;AAEf,MAAI,QAAQ,KAAK,WAAjB;AAAA,MACI,UAAU,KAAK,eAAL,EADd;;AAGA,QAAM,OAAN,EAAe,KAAK,WAAL,CAAiB,cAAhC,EAAgD,KAAhD,EAAuD,OAAvD;AACA,aAAW,KAAK,aAAL,CAAmB,OAAnB,EAA4B,QAA5B,EAAsC;AAC/C,gBAAY,KADmC;AAE/C,aAAS;AAFsC,GAAtC,CAAX;;AAKA,OAAK,WAAL,CAAiB,KAAjB,CAAuB,KAAvB,EAA8B,OAA9B,EAAuC,MAAM,IAAN,CAAW,QAAX,CAAvC;AACA,SAAO,IAAP;AACD,CAxBD;;AA0BA;;;;;;;;;;;;;;;;;;;;;;AAsBA,MAAM,SAAN,CAAgB,QAAhB,GAA2B,UAAU,QAAV,EAAoB,KAApB,EAA2B,QAA3B,EAAqC;AAC9D,OAAK,EAAL,GAAU,UAAV;AACA,OAAK,SAAL;;AAEA,MAAI,CAAC,QAAL,EAAe;AACb,YAAQ,OAAO,KAAf;AACE,WAAK,UAAL;AACE,mBAAW,KAAX;AACA,YAAI,YAAY,OAAO,QAAvB,EAAiC;AAC/B,kBAAQ,QAAR;AACA,qBAAW,SAAX;AACD;AACD;AACF,WAAK,WAAL;AACA,WAAK,QAAL;AACE;AACF;AACE,cAAM,IAAI,SAAJ,CAAc,sDAAd,CAAN;AACA;AAbJ;;AAgBA,YAAQ,OAAO,QAAf;AACE,WAAK,UAAL;AACE,mBAAW,QAAX;AACA,mBAAW,QAAQ,SAAnB;AACA;AACF,WAAK,QAAL;AACE,gBAAQ,QAAR;AACA,mBAAW,SAAX;AACA;AARJ;AAUD;;AAED,MAAI,YAAY,OAAO,KAAvB,EAA8B;AAC5B,SAAK,SAAL,GAAiB,KAAjB;AACD;;AAED,MAAI,MAAM,QAAN,CAAe,QAAf,CAAJ,EAA8B;AAC5B,SAAK,KAAL,CAAW,QAAX;AACD;;AAED,MAAI,CAAC,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AAED,MAAI,CAAC,KAAK,SAAV,EAAqB;AACnB,UAAM,IAAI,KAAJ,CAAU,2CAAV,CAAN;AACD;;AAED,MAAI,QAAQ,KAAK,WAAjB;AAAA,MACI,UAAU,KAAK,eAAL,EADd;;AAGA,QAAM,UAAN,EAAkB,KAAK,WAAL,CAAiB,cAAnC,EAAmD,KAAnD,EAA0D,OAA1D;AACA,aAAW,KAAK,aAAL,CAAmB,UAAnB,EAA+B,QAA/B,EAAyC;AAClD,gBAAY,KADsC;AAElD,aAAS;AAFyC,GAAzC,CAAX;;AAKA,OAAK,WAAL,CAAiB,QAAjB,CAA0B,KAAK,SAA/B,EAA0C,KAA1C,EAAiD,OAAjD,EAA0D,MAAM,IAAN,CAAW,QAAX,CAA1D;;AAEA,SAAO,IAAP;AACD,CA7DD;;AA+DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA,MAAM,SAAN,CAAgB,MAAhB,GAAyB,SAAS,MAAT,CAAiB,QAAjB,EAA2B,GAA3B,EAAgC,OAAhC,EAAyC,QAAzC,EAAmD;AAC1E,MAAI,KAAJ;;AAEA,UAAQ,UAAU,MAAlB;AACE,SAAK,CAAL;AACE,UAAI,cAAc,OAAO,OAAzB,EAAkC;AAChC,mBAAW,OAAX;AACA,kBAAU,SAAV;AACD;AACD;AACF,SAAK,CAAL;AACE,UAAI,cAAc,OAAO,GAAzB,EAA8B;AAC5B,mBAAW,GAAX;AACA,cAAM,QAAN;AACA,mBAAW,SAAX;AACD;AACD;AACF,SAAK,CAAL;AACE,cAAQ,OAAO,QAAf;AACE,aAAK,UAAL;AACE,qBAAW,QAAX;AACA,qBAAW,UAAU,MAAM,SAA3B;AACA;AACF,aAAK,SAAL;AACE;AACA,kBAAQ,QAAR;AACA,qBAAW,SAAX;AACA;AACF;AACE,gBAAM,QAAN;AACA,qBAAW,UAAU,SAArB;AACA;AAbJ;AAfJ;;AAgCA,SAAO,QAAQ,IAAR,EAAc,QAAd,EAAwB,QAAxB,EAAkC,GAAlC,EAAuC,OAAvC,EAAgD,KAAhD,EAAuD,QAAvD,CAAP;AACD,CApCD;;AAsCA;;;;;;;;;;;;;;;;;;;;AAoBA,MAAM,SAAN,CAAgB,UAAhB,GAA6B,SAAS,UAAT,CAAqB,QAArB,EAA+B,GAA/B,EAAoC,OAApC,EAA6C,QAA7C,EAAuD;AAClF,MAAI,KAAJ;;AAEA,UAAQ,UAAU,MAAlB;AACE,SAAK,CAAL;AACE,UAAI,cAAc,OAAO,OAAzB,EAAkC;AAChC,mBAAW,OAAX;AACA,kBAAU,SAAV;AACD;AACD;AACF,SAAK,CAAL;AACE,UAAI,cAAc,OAAO,GAAzB,EAA8B;AAC5B,mBAAW,GAAX;AACA,cAAM,QAAN;AACA,mBAAW,SAAX;AACD;AACD;AACF,SAAK,CAAL;AACE,cAAQ,OAAO,QAAf;AACE,aAAK,UAAL;AACE,qBAAW,QAAX;AACA,qBAAW,UAAU,MAAM,SAA3B;AACA;AACF,aAAK,SAAL;AACE;AACA,kBAAQ,QAAR;AACA,qBAAW,SAAX;AACA;AACF;AACE,gBAAM,QAAN;AACA,qBAAW,UAAU,SAArB;AACA;AAbJ;AAfJ;;AAgCA,SAAO,QAAQ,IAAR,EAAc,YAAd,EAA4B,QAA5B,EAAsC,GAAtC,EAA2C,OAA3C,EAAoD,KAApD,EAA2D,QAA3D,CAAP;AACD,CApCD;;AAsCA;;;;;;;;;;;;;;;;;;;;AAoBA,MAAM,SAAN,CAAgB,SAAhB,GAA4B,SAAS,SAAT,CAAoB,QAApB,EAA8B,GAA9B,EAAmC,OAAnC,EAA4C,QAA5C,EAAsD;AAChF,MAAI,KAAJ;;AAEA,UAAQ,UAAU,MAAlB;AACE,SAAK,CAAL;AACE,UAAI,cAAc,OAAO,OAAzB,EAAkC;AAChC,mBAAW,OAAX;AACA,kBAAU,SAAV;AACD;AACD;AACF,SAAK,CAAL;AACE,UAAI,cAAc,OAAO,GAAzB,EAA8B;AAC5B,mBAAW,GAAX;AACA,cAAM,QAAN;AACA,mBAAW,SAAX;AACD;AACD;AACF,SAAK,CAAL;AACE,cAAQ,OAAO,QAAf;AACE,aAAK,UAAL;AACE,qBAAW,QAAX;AACA,qBAAW,UAAU,MAAM,SAA3B;AACA;AACF,aAAK,SAAL;AACE;AACA,kBAAQ,QAAR;AACA,qBAAW,SAAX;AACA;AACF;AACE,gBAAM,QAAN;AACA,qBAAW,UAAU,SAArB;AACA;AAbJ;AAfJ;;AAgCA,SAAO,QAAQ,IAAR,EAAc,WAAd,EAA2B,QAA3B,EAAqC,GAArC,EAA0C,OAA1C,EAAmD,KAAnD,EAA0D,QAA1D,CAAP;AACD,CApCD;;AAsCA;;;;;;;;;;;;;;;;;;;AAmBA,MAAM,SAAN,CAAgB,UAAhB,GAA6B,SAAS,UAAT,CAAqB,QAArB,EAA+B,GAA/B,EAAoC,OAApC,EAA6C,QAA7C,EAAuD;AAClF,MAAI,KAAJ;;AAEA,UAAQ,UAAU,MAAlB;AACE,SAAK,CAAL;AACE,UAAI,cAAc,OAAO,OAAzB,EAAkC;AAChC,mBAAW,OAAX;AACA,kBAAU,SAAV;AACD;AACD;AACF,SAAK,CAAL;AACE,UAAI,cAAc,OAAO,GAAzB,EAA8B;AAC5B,mBAAW,GAAX;AACA,cAAM,QAAN;AACA,mBAAW,SAAX;AACD;AACD;AACF,SAAK,CAAL;AACE,cAAQ,OAAO,QAAf;AACE,aAAK,UAAL;AACE,qBAAW,QAAX;AACA,qBAAW,UAAU,MAAM,SAA3B;AACA;AACF,aAAK,SAAL;AACE;AACA,kBAAQ,QAAR;AACA,qBAAW,SAAX;AACA;AACF;AACE,gBAAM,QAAN;AACA,qBAAW,UAAU,SAArB;AACA;AAbJ;AAfJ;;AAgCA,OAAK,UAAL,CAAgB,EAAE,WAAW,IAAb,EAAhB;AACA,SAAO,QAAQ,IAAR,EAAc,YAAd,EAA4B,QAA5B,EAAsC,GAAtC,EAA2C,OAA3C,EAAoD,KAApD,EAA2D,QAA3D,CAAP;AACD,CArCD;;AAwCA;;;;AAIA,SAAS,OAAT,CAAkB,KAAlB,EAAyB,EAAzB,EAA6B,QAA7B,EAAuC,GAAvC,EAA4C,OAA5C,EAAqD,KAArD,EAA4D,QAA5D,EAAsE;AACpE,QAAM,EAAN,GAAW,EAAX;;AAEA,MAAI,MAAM,QAAN,CAAe,QAAf,CAAJ,EAA8B;AAC5B,UAAM,KAAN,CAAY,QAAZ;AACD;;AAED,MAAI,GAAJ,EAAS;AACP,UAAM,YAAN,CAAmB,GAAnB;AACD;;AAED,MAAI,MAAM,QAAN,CAAe,OAAf,CAAJ,EAA6B;AAC3B;AACA,UAAM,UAAN,CAAiB,OAAjB;AACD;;AAED;AACA;AACA,MAAI,EAAE,SAAS,QAAX,CAAJ,EAA0B;AACxB,WAAO,KAAP;AACD;;AAED,MAAI,CAAC,MAAM,OAAP,IACA,CAAC,MAAM,OAAN,CAAc,SAAf,IAA4B,MAAM,MAAM,IAAN,CAAW,MAAM,OAAjB,EAA0B,MADhE,EACwE;AACtE,gBAAY,MAAM,IAAN,CAAW,SAAS,IAAT,CAAc,IAAd,EAAoB,IAApB,EAA0B,CAA1B,CAAX,CAAZ;AACA,WAAO,KAAP;AACD;;AAED,YAAU,MAAM,eAAN,EAAV;AACA,MAAI,CAAC,QAAL,EAAe,QAAQ,IAAR,GAAe,KAAf;;AAEf,MAAI,WAAW,MAAM,WAArB;AACA,QAAM,MAAM,cAAN,EAAN;;AAEA,QAAM,QAAN,EAAgB,MAAM,WAAN,CAAkB,cAAlC,EAAkD,QAAlD,EAA4D,GAA5D,EAAiE,OAAjE;AACA,aAAW,MAAM,aAAN,CAAoB,EAApB,EAAwB,QAAxB,EAAkC;AAC3C,gBAAY,QAD+B;AAE3C,SAAK,GAFsC;AAG3C,aAAS;AAHkC,GAAlC,CAAX;;AAMA,QAAM,WAAN,CAAkB,EAAlB,EAAsB,QAAtB,EAAgC,GAAhC,EAAqC,OAArC,EAA8C,MAAM,IAAN,CAAW,QAAX,CAA9C;;AAEA,SAAO,KAAP;AACD;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,MAAM,SAAN,CAAgB,MAAhB,GAAyB,UAAU,QAAV,EAAoB,QAApB,EAA8B;AACrD,OAAK,EAAL,GAAU,QAAV;AACA,MAAI,KAAJ;;AAEA,MAAI,eAAe,OAAO,QAA1B,EAAoC;AAClC,eAAW,QAAX;AACA,eAAW,SAAX;AACD,GAHD,MAGO,IAAI,MAAM,QAAN,CAAe,QAAf,CAAJ,EAA8B;AACnC,SAAK,KAAL,CAAW,QAAX;AACD,GAFM,MAEA,IAAI,SAAS,QAAb,EAAuB;AAC5B,YAAQ,QAAR;AACA,eAAW,SAAX;AACD;;AAED,MAAI,EAAE,SAAS,QAAX,CAAJ,EACE,OAAO,IAAP;;AAEF,MAAI,UAAU,KAAK,eAAL,EAAd;AACA,MAAI,CAAC,QAAL,EAAe,QAAQ,IAAR,GAAe,KAAf;;AAEf,MAAI,QAAQ,KAAK,WAAjB;;AAEA,QAAM,QAAN,EAAgB,KAAK,WAAL,CAAiB,cAAjC,EAAiD,KAAjD,EAAwD,OAAxD;AACA,aAAW,KAAK,aAAL,CAAmB,QAAnB,EAA6B,QAA7B,EAAuC;AAChD,gBAAY,KADoC;AAEhD,aAAS;AAFuC,GAAvC,CAAX;;AAKA,OAAK,WAAL,CAAiB,MAAjB,CAAwB,KAAxB,EAA+B,OAA/B,EAAwC,MAAM,IAAN,CAAW,QAAX,CAAxC;;AAEA,SAAO,IAAP;AACD,CA/BD;;AAiCA;;;;;;;;;;;;;;;AAeA,MAAM,SAAN,CAAgB,SAAhB,GAA4B,UAAU,QAAV,EAAoB,QAApB,EAA8B;AACxD,OAAK,EAAL,GAAU,WAAV;AACA,MAAI,KAAJ;;AAEA,MAAI,eAAe,OAAO,QAA1B,EAAoC;AAClC,eAAW,QAAX;AACA,eAAW,SAAX;AACD,GAHD,MAGO,IAAI,MAAM,QAAN,CAAe,QAAf,CAAJ,EAA8B;AACnC,SAAK,KAAL,CAAW,QAAX;AACD,GAFM,MAEA,IAAI,SAAS,QAAb,EAAuB;AAC5B,YAAQ,QAAR;AACA,eAAW,SAAX;AACD;;AAED,MAAI,EAAE,SAAS,QAAX,CAAJ,EACE,OAAO,IAAP;;AAEF,MAAI,UAAU,KAAK,eAAL,EAAd;AACA,MAAI,CAAC,QAAL,EAAe,QAAQ,IAAR,GAAe,KAAf;AACf,SAAO,QAAQ,OAAf;;AAEA,MAAI,QAAQ,KAAK,WAAjB;;AAEA,QAAM,WAAN,EAAmB,KAAK,WAAL,CAAiB,cAApC,EAAoD,KAApD,EAA2D,OAA3D;AACA,aAAW,KAAK,aAAL,CAAmB,WAAnB,EAAgC,QAAhC,EAA0C;AACnD,gBAAY,KADuC;AAEnD,aAAS;AAF0C,GAA1C,CAAX;;AAKA,OAAK,WAAL,CAAiB,SAAjB,CAA2B,KAA3B,EAAkC,OAAlC,EAA2C,MAAM,IAAN,CAAW,QAAX,CAA3C;;AAEA,SAAO,IAAP;AACD,CAhCD;;AAkCA;;;;;;;;;;;;;;;AAeA,MAAM,SAAN,CAAgB,UAAhB,GAA6B,UAAU,QAAV,EAAoB,QAApB,EAA8B;AACzD,OAAK,EAAL,GAAU,YAAV;AACA,MAAI,KAAJ;;AAEA,MAAI,eAAe,OAAO,QAA1B,EAAoC;AAClC,eAAW,QAAX;AACA,eAAW,SAAX;AACD,GAHD,MAGO,IAAI,MAAM,QAAN,CAAe,QAAf,CAAJ,EAA8B;AACnC,SAAK,KAAL,CAAW,QAAX;AACD,GAFM,MAEA,IAAI,SAAS,QAAb,EAAuB;AAC5B,YAAQ,QAAR;AACA,eAAW,SAAX;AACD;;AAED,MAAI,EAAE,SAAS,QAAX,CAAJ,EACE,OAAO,IAAP;;AAEF,MAAI,UAAU,KAAK,eAAL,EAAd;AACA,MAAI,CAAC,QAAL,EAAe,QAAQ,IAAR,GAAe,KAAf;AACf,SAAO,QAAQ,OAAf;;AAEA,MAAI,QAAQ,KAAK,WAAjB;;AAEA,QAAM,WAAN,EAAmB,KAAK,WAAL,CAAiB,cAApC,EAAoD,KAApD,EAA2D,OAA3D;AACA,aAAW,KAAK,aAAL,CAAmB,WAAnB,EAAgC,QAAhC,EAA0C;AACnD,gBAAY,KADuC;AAEnD,aAAS;AAF0C,GAA1C,CAAX;;AAKA,OAAK,WAAL,CAAiB,UAAjB,CAA4B,KAA5B,EAAmC,OAAnC,EAA4C,MAAM,IAAN,CAAW,QAAX,CAA5C;;AAEA,SAAO,IAAP;AACD,CAhCD;;AAkCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,MAAM,SAAN,CAAgB,gBAAhB,GAAmC,UAAU,QAAV,EAAoB,GAApB,EAAyB,OAAzB,EAAkC,QAAlC,EAA4C;AAC7E,OAAK,EAAL,GAAU,kBAAV;AACA,OAAK,SAAL;;AAEA,UAAQ,UAAU,MAAlB;AACE,SAAK,CAAL;AACE,UAAI,cAAc,OAAO,OAAzB,EAAkC;AAChC,mBAAW,OAAX;AACA,kBAAU,EAAV;AACD;AACD;AACF,SAAK,CAAL;AACE,UAAI,cAAc,OAAO,GAAzB,EAA8B;AAC5B,mBAAW,GAAX;AACA,cAAM,QAAN;AACA,mBAAW,SAAX;AACD;AACD,gBAAU,SAAV;AACA;AACF,SAAK,CAAL;AACE,UAAI,cAAc,OAAO,QAAzB,EAAmC;AACjC,mBAAW,QAAX;AACA,mBAAW,UAAU,MAAM,SAA3B;AACD,OAHD,MAGO;AACL,cAAM,QAAN;AACA,mBAAW,UAAU,SAArB;AACD;AAtBL;;AAyBA,MAAI,MAAM,QAAN,CAAe,QAAf,CAAJ,EAA8B;AAC5B,SAAK,KAAL,CAAW,QAAX;AACD;;AAED;AACA,MAAI,GAAJ,EAAS;AACP,SAAK,YAAL,CAAkB,GAAlB;AACD;;AAED,aAAW,KAAK,UAAL,CAAgB,OAAhB,CAAX;;AAEA,MAAI,CAAC,QAAL,EAAe,OAAO,IAAP;AACf,SAAO,KAAK,cAAL,CAAoB,QAApB,EAA8B,QAA9B,CAAP;AACD,CA1CD;;AA4CA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,MAAM,SAAN,CAAgB,gBAAhB,GAAmC,UAAU,UAAV,EAAsB,OAAtB,EAA+B,QAA/B,EAAyC;AAC1E,OAAK,EAAL,GAAU,kBAAV;AACA,OAAK,SAAL;;AAEA,MAAI,cAAc,OAAO,OAAzB,EAAkC;AAChC,eAAW,OAAX;AACA,cAAU,SAAV;AACD,GAHD,MAGO,IAAI,cAAc,OAAO,UAAzB,EAAqC;AAC1C,eAAW,UAAX;AACA,iBAAa,SAAb;AACD;;AAED;AACA,MAAI,MAAM,QAAN,CAAe,UAAf,CAAJ,EAAgC;AAC9B,SAAK,KAAL,CAAW,UAAX;AACD;;AAED;AACA,aAAW,KAAK,UAAL,CAAgB,OAAhB,CAAX;;AAEA,MAAI,CAAC,QAAL,EAAe,OAAO,IAAP;;AAEf,SAAO,KAAK,cAAL,CAAoB,QAApB,EAA8B,QAA9B,CAAP;AACD,CAvBD;;AAyBA;;;;;;;;AAQA,MAAM,SAAN,CAAgB,cAAhB,GAAiC,UAAU,IAAV,EAAgB,QAAhB,EAA0B;AACzD,SAAO,KAAP,CAAa,UAAb,EAAyB,OAAO,QAAhC;;AAEA,MAAI,OAAO,KAAK,eAAL,EAAX;AAAA,MACI,OAAO,IADX;AAAA,MAEI,MAFJ;AAAA,MAGI,IAHJ;AAAA,MAII,GAJJ;;AAMA,MAAI,YAAY,IAAhB,EAAsB;AACpB,SAAK,MAAL,GAAc,IAAd;AACD,GAFD,MAEO;AACL,QAAI,EAAE,SAAS,IAAX,CAAJ,EAAsB,KAAK,GAAL,GAAW,IAAX;AACtB,QAAI,EAAE,YAAY,IAAd,CAAJ,EAAyB,KAAK,MAAL,GAAc,KAAd;;AAEzB,UAAM,KAAK,cAAL,EAAN;AACA,QAAI,CAAC,GAAL,EAAU;AACR,UAAI,KAAK,MAAT,EAAiB;AACf;AACA,cAAM,EAAE,MAAM,EAAR,EAAN;AACD,OAHD,MAGO;AACL,eAAO,KAAK,OAAL,CAAa,QAAb,CAAP;AACD;AACF;AACF;;AAED,MAAI,SAAS,KAAK,cAAL,EAAb;AACA,MAAI,MAAJ,EAAY;AACV,SAAK,MAAL,GAAc,MAAd;AACD;;AAED,MAAI,QAAQ,KAAK,WAAjB;;AAEA,QAAM,eAAN,EAAuB,KAAK,WAAL,CAAiB,cAAxC,EAAwD,KAAxD,EAA+D,GAA/D,EAAoE,IAApE;AACA,aAAW,KAAK,aAAL,CAAmB,eAAnB,EAAoC,QAApC,EAA8C;AACvD,gBAAY,KAD2C;AAEvD,SAAK,GAFkD;AAGvD,aAAS;AAH8C,GAA9C,CAAX;;AAMA,OAAK,WAAL,CACC,aADD,CACe,KADf,EACsB,GADtB,EAC2B,IAD3B,EACiC,MAAM,IAAN,CAAW,QAAX,CADjC;;AAGA,SAAO,IAAP;AACD,CA5CD;;AA8CA;;;;;;;AAOA,MAAM,SAAN,CAAgB,aAAhB,GAAgC,UAAU,MAAV,EAAkB,QAAlB,EAA4B,SAA5B,EAAuC;AACrE,MAAI,gBAAgB,KAAK,cAAL,IAAuB,MAAM,aAAjD;;AAEA,MAAI,aAAJ,EAAmB;AACjB,cAAU,cAAV,GAA2B,KAAK,WAAL,CAAiB,cAA5C;;AAEA,QAAI,gBAAgB,iBAClB,cAAc,IAAd,CAAmB,IAAnB,EAAyB,MAAzB,EAAiC,SAAjC,EAA4C,IAA5C,CADF;;AAGA,QAAI,YAAY,IAAI,IAAJ,GAAW,OAAX,EAAhB;;AAEA,WAAO,SAAS,eAAT,CAA0B,GAA1B,EAA+B,MAA/B,EAAuC;AAC5C,UAAI,aAAJ,EAAmB;AACjB,YAAI,SAAS,IAAI,IAAJ,GAAW,OAAX,KAAuB,SAApC;AACA,sBAAc,IAAd,CAAmB,IAAnB,EAAyB,GAAzB,EAA8B,MAA9B,EAAsC,MAAtC;AACD;;AAED,UAAI,QAAJ,EAAc;AACZ,iBAAS,KAAT,CAAe,IAAf,EAAqB,SAArB;AACD;AACF,KATD;AAUD;;AAED,SAAO,QAAP;AACD,CAxBD;;AA0BA;;;;;;;;;;;;;;;;;;;AAmBA,MAAM,SAAN,CAAgB,gBAAhB,GAAmC,UAAU,aAAV,EAAyB;AAC1D,OAAK,cAAL,GAAsB,aAAtB;AACA,SAAO,IAAP;AACD,CAHD;;AAKA;;;;;;;;;;;;;;;AAeA,MAAM,SAAN,CAAgB,IAAhB,GAAuB,SAAS,IAAT,CAAe,EAAf,EAAmB,QAAnB,EAA6B;AAClD,UAAQ,OAAO,EAAf;AACE,SAAK,UAAL;AACE,iBAAW,EAAX;AACA,WAAK,IAAL;AACA;AACF,SAAK,QAAL;AACE,WAAK,EAAL,GAAU,EAAV;AACA;AAPJ;;AAUA,SAAO,EAAP,CAAU,KAAK,EAAf,EAAmB,yCAAnB;;AAEA,MAAI,YAAY,KAAK,EAAjB,IAAuB,YAAY,KAAK,EAA5C,EAAgD;AAC9C,iBAAa,WAAW,IAAxB;AACD;;AAED,MAAI,OAAO,IAAX;;AAEA,MAAI,cAAc,OAAO,QAAzB,EAAmC;AACjC,SAAK,KAAK,EAAV,EAAc,QAAd;AACD,GAFD,MAEO;AACL,WAAO,IAAI,MAAM,OAAV,CAAkB,UAAS,OAAT,EAAkB,KAAlB,EAAyB;AAChD,WAAK,KAAK,EAAV,EAAc,UAAS,GAAT,EAAc,GAAd,EAAmB;AAC/B,YAAI,GAAJ,EAAS,MAAM,GAAN,EAAT,KACK,QAAQ,GAAR;AACL,eAAO,UAAU,QAAQ,IAAzB;AACD,OAJD;AAKD,KANM,CAAP;AAOD;AACF,CA9BD;;AAgCA;;;;;;;;;;AAUA,MAAM,SAAN,CAAgB,KAAhB,GAAwB,YAAW;AACjC,MAAI,OAAO,IAAX;AACA,SAAO,UAAS,EAAT,EAAa;AAClB,SAAK,IAAL,CAAU,EAAV;AACD,GAFD;AAGD,CALD;;AAOA;;;;;;;;;;AAUA,MAAM,SAAN,CAAgB,IAAhB,GAAuB,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AAC/C,MAAI,OAAO,IAAX;AACA,MAAI,UAAU,IAAI,MAAM,OAAV,CAAkB,UAAS,OAAT,EAAkB,KAAlB,EAAyB;AACvD,SAAK,IAAL,CAAU,UAAS,GAAT,EAAc,GAAd,EAAmB;AAC3B,UAAI,GAAJ,EAAS,MAAM,GAAN,EAAT,KACK,QAAQ,GAAR;AACL,aAAO,UAAU,QAAQ,IAAzB;AACD,KAJD;AAKD,GANa,CAAd;AAOA,SAAO,QAAQ,IAAR,CAAa,OAAb,EAAsB,MAAtB,CAAP;AACD,CAVD;;AAYA;;;;;;;AAOA,MAAM,SAAN,CAAgB,MAAhB,GAAyB,UAAS,aAAT,EAAwB;AAC/C,MAAI,UAAU,KAAK,EAAnB,EACE,MAAM,IAAI,KAAJ,CAAU,qCAAV,CAAN;;AAEF,MAAI,QAAQ,KAAK,WAAjB;;AAEA,MAAI,UAAU,KAAK,eAAL,EAAd;AACA,UAAQ,MAAR,GAAiB,KAAK,cAAL,EAAjB;;AAEA,QAAM,QAAN,EAAgB,KAAK,WAAL,CAAiB,cAAjC,EAAiD,KAAjD,EAAwD,OAAxD,EAAiE,aAAjE;;AAEA,SAAO,KAAK,WAAL,CAAiB,UAAjB,CAA4B,KAA5B,EAAmC,OAAnC,EAA4C,aAA5C,CAAP;AACD,CAZD;;AAcA;;;;;;;AAOA,MAAM,SAAN,CAAgB,QAAhB,GAA2B,SAAS,QAAT,GAAqB;AAC9C,SAAO,CAAC,EAAG,KAAK,OAAL,IAAgB,OAAO,IAAP,CAAY,KAAK,OAAjB,EAA0B,MAA1B,GAAmC,CAAtD,CAAR;AACD,CAFD;;AAIA;;;;;;;;;;;AAWA,MAAM,SAAN,CAAgB,mBAAhB,GAAsC,SAAS,mBAAT,GAAgC;AACpE,MAAI,CAAC,KAAK,OAAV,EAAmB,OAAO,KAAP;;AAEnB,MAAI,OAAO,OAAO,IAAP,CAAY,KAAK,OAAjB,CAAX;AACA,MAAI,MAAM,KAAK,MAAf,EAAuB,OAAO,KAAP;;AAEvB,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,MAAzB,EAAiC,EAAE,CAAnC,EAAsC;AACpC,QAAI,MAAM,KAAK,CAAL,CAAV;AACA,QAAI,MAAM,KAAK,OAAL,CAAa,GAAb,CAAV,EAA6B,OAAO,KAAP;AAC7B,QAAI,KAAK,OAAL,CAAa,GAAb,KACA,OAAO,KAAK,OAAL,CAAa,GAAb,CAAP,KAA6B,QAD7B,IAEA,KAAK,OAAL,CAAa,GAAb,EAAkB,KAFtB,EAE6B;AAC3B,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD,CAjBD;;AAmBA;;;;;;;;;;;AAWA,MAAM,SAAN,CAAgB,mBAAhB,GAAsC,SAAS,mBAAT,GAAgC;AACpE,MAAI,CAAC,KAAK,OAAV,EAAmB,OAAO,KAAP;;AAEnB,MAAI,OAAO,OAAO,IAAP,CAAY,KAAK,OAAjB,CAAX;AACA,MAAI,MAAM,KAAK,MAAf,EAAuB,OAAO,KAAP;;AAEvB,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,MAAzB,EAAiC,EAAE,CAAnC,EAAsC;AACpC,QAAI,MAAM,KAAK,CAAL,CAAV;AACA,QAAI,MAAM,KAAK,OAAL,CAAa,GAAb,CAAV,EAA6B,OAAO,IAAP;AAC9B;;AAED,SAAO,KAAP;AACD,CAZD;;AAcA;;;;;;AAMA,MAAM,SAAN,CAAgB,YAAhB,GAA+B,UAAU,GAAV,EAAe;AAC5C,MAAI,CAAC,KAAK,OAAV,EAAmB,KAAK,OAAL,GAAe,EAAf;AACnB,MAAI,eAAe,KAAnB,EAA0B;AACxB,QAAI,IAAI,OAAR,EAAiB;AACf,YAAM,UAAN,CAAiB,KAAK,OAAtB,EAA+B,IAAI,OAAnC;AACD;AACF,GAJD,MAIO;AACL,UAAM,UAAN,CAAiB,KAAK,OAAtB,EAA+B,GAA/B;AACD;AACF,CATD;;AAWA;;;;;;;AAOA,MAAM,SAAN,CAAgB,eAAhB,GAAkC,YAAY;AAC5C,MAAI,UAAU,MAAM,KAAN,CAAY,KAAK,OAAjB,EAA0B,EAAE,gBAAgB,IAAlB,EAA1B,CAAd;AACA,SAAO,OAAP;AACD,CAHD;;AAKA;;;;;;;AAOA,MAAM,SAAN,CAAgB,cAAhB,GAAiC,YAAY;AAC3C,SAAO,MAAM,KAAN,CAAY,KAAK,OAAjB,EAA0B,EAAE,gBAAgB,IAAlB,EAA1B,CAAP;AACD,CAFD;;AAIA;;;;;;AAMA,MAAM,SAAN,CAAgB,cAAhB,GAAiC,YAAY;AAC3C,MAAI,SAAS,MAAM,KAAN,CAAY,KAAK,OAAjB,EAA0B,EAAE,gBAAgB,IAAlB,EAA1B,CAAb;AAAA,MACI,MAAM,MAAM,IAAN,CAAW,MAAX,CADV;AAAA,MAEI,IAAI,IAAI,MAFZ;AAAA,MAGI,MAAM,EAHV;AAAA,MAII,OAJJ;AAAA,MAKI,GALJ;;AAOA,SAAO,GAAP,EAAY;AACV,QAAI,KAAK,IAAI,CAAJ,CAAT;;AAEA,QAAI,KAAK,OAAL,CAAa,SAAjB,EAA4B;AAC1B,UAAI,EAAJ,IAAU,OAAO,EAAP,CAAV;AACA;AACD;;AAED,QAAI,QAAQ,GAAG,CAAH,CAAZ,EAAmB;AACjB;AACA,UAAI,CAAC,IAAI,IAAT,EAAe;AACb,YAAI,OAAO,IAAX,EAAiB;AACf,cAAI,IAAJ,GAAW,OAAO,IAAlB;AACD,SAFD,MAEO;AACL,cAAI,IAAJ,GAAW,EAAX;AACD;AACF;AACD,UAAI,IAAJ,CAAS,EAAT,IAAe,OAAO,EAAP,CAAf;AACA,UAAI,MAAJ,CAAW,CAAX,EAAc,CAAd;AACA,UAAI,CAAC,CAAC,IAAI,OAAJ,CAAY,MAAZ,CAAN,EAA2B,IAAI,IAAJ,CAAS,MAAT;AAC5B,KAZD,MAYO,IAAI,WAAW,EAAf,EAAmB;AACxB,UAAI,CAAC,IAAI,IAAT,EAAe;AACb,YAAI,EAAJ,IAAU,OAAO,EAAP,CAAV;AACD;AACF,KAJM,MAIA;AACL,UAAI,EAAJ,IAAU,OAAO,EAAP,CAAV;AACD;AACF;;AAED,OAAK,eAAL,GAAuB,GAAvB;AACA,SAAO,GAAP;AACD,CAvCD;;AAyCA;;;;;;AAMA,MAAM,SAAN,CAAgB,WAAhB,GAA8B,UAAU,MAAV,EAAkB;AAC9C,MAAI,CAAC,KAAK,KAAV,EAAiB;AACf,QAAI,MAAM,SAAS,gCAAT,GACS,kCADnB;AAEA,UAAM,IAAI,KAAJ,CAAU,GAAV,CAAN;AACD;AACF,CAND;;AAQA;;;;AAIA,MAAM,WAAN,GAAoB,QAAQ,eAAR,CAApB;;AAEA,MAAM,YAAN,GAAqB,UAAU,CAAV,EAAa,CAAb,EAAgB;AACnC,MAAI,SAAS,MAAM,WAAN,CAAkB,CAAlB,CAAb;AACA,MAAI,CAAC,MAAL,EAAa,OAAO,IAAP;AACb,SAAO,SAAS,OAAO,CAAP,CAAhB;AACD,CAJD;;AAMA,MAAM,SAAN,CAAgB,SAAhB,GAA4B,UAAU,MAAV,EAAkB;AAC5C,MAAI,IAAJ;AACA,MAAI,SAAJ;;AAEA,MAAI,cAAc,MAAlB,EAA0B;;AAExB,gBAAY,MAAM,WAAN,CAAkB,KAAK,EAAvB,CAAZ;AACA,QAAI,cAAc,OAAO,SAAzB,EAAoC,OAAO,IAAP;;AAEpC,WAAO,UAAU,IAAV,CAAP;AAED,GAPD,MAOO,IAAI,CAAC,MAAM,YAAN,CAAmB,MAAnB,EAA2B,KAAK,EAAhC,CAAL,EAA0C;AAC/C,WAAO,MAAP;AACD;;AAED,MAAI,IAAJ,EAAU;AACR,UAAM,IAAI,KAAJ,CAAU,OAAO,uBAAP,GAAiC,KAAK,EAAhD,CAAN;AACD;AACF,CAlBD;;AAoBA;;;;;;;AAOA,MAAM,QAAN,GAAiB,UAAU,KAAV,EAAiB;AAChC,SAAO,iBAAiB,KAAjB,IAA0B,MAAM,QAAN,CAAe,KAAf,CAAjC;AACD,CAFD;;AAIA;;;;;;;;;AASA,MAAM,sBAAN,GAA+B,UAAU,aAAV,EAAyB;AACtD,QAAM,aAAN,GAAsB,aAAtB;AACD,CAFD;;AAIA;;;;AAIA,MAAM,KAAN,GAAc,KAAd;AACA,MAAM,GAAN,GAAY,QAAQ,OAAR,CAAZ;AACA,MAAM,UAAN,GAAmB,QAAQ,cAAR,CAAnB;AACA,MAAM,cAAN,GAAuB,QAAQ,yBAAR,CAAvB;AACA,MAAM,OAAN,GAAgB,QAAQ,UAAR,CAAhB;AACA,OAAO,OAAP,GAAiB,UAAU,KAA3B;;AAEA;AACA","file":"mquery-compiled.js","sourcesContent":["'use strict';\n\n/**\n * Dependencies\n */\n\nvar slice = require('sliced')\nvar assert = require('assert')\nvar util = require('util')\nvar utils = require('./utils')\nvar debug = require('debug')('mquery');\n\n/**\n * Query constructor used for building queries.\n *\n * ####Example:\n *\n *     var query = new Query({ name: 'mquery' });\n *     query.setOptions({ collection: moduleCollection })\n *     query.where('age').gte(21).exec(callback);\n *\n * @param {Object} [criteria]\n * @param {Object} [options]\n * @api public\n */\n\nfunction Query (criteria, options) {\n  if (!(this instanceof Query))\n    return new Query(criteria, options);\n\n  var proto = this.constructor.prototype;\n\n  this.op = proto.op || undefined;\n\n  this.options = {};\n  this.setOptions(proto.options);\n\n  this._conditions = proto._conditions\n    ? utils.clone(proto._conditions, { retainKeyOrder: this.options.retainKeyOrder })\n    : {};\n\n  this._fields = proto._fields\n    ? utils.clone(proto._fields, { retainKeyOrder: this.options.retainKeyOrder })\n    : undefined;\n\n  this._update = proto._update\n    ? utils.clone(proto._update, { retainKeyOrder: this.options.retainKeyOrder })\n    : undefined;\n\n  this._path = proto._path || undefined;\n  this._distinct = proto._distinct || undefined;\n  this._collection = proto._collection || undefined;\n  this._traceFunction = proto._traceFunction || undefined;\n\n  if (options) {\n    this.setOptions(options);\n  }\n\n  if (criteria) {\n    if (criteria.find && criteria.remove && criteria.update) {\n      // quack quack!\n      this.collection(criteria);\n    } else {\n      this.find(criteria);\n    }\n  }\n}\n\n/**\n * This is a parameter that the user can set which determines if mquery\n * uses $within or $geoWithin for queries. It defaults to true which\n * means $geoWithin will be used. If using MongoDB < 2.4 you should\n * set this to false.\n *\n * @api public\n * @property use$geoWithin\n */\n\nvar $withinCmd = '$geoWithin';\nObject.defineProperty(Query, 'use$geoWithin', {\n    get: function ( ) { return $withinCmd == '$geoWithin' }\n  , set: function (v) {\n      if (true === v) {\n        // mongodb >= 2.4\n        $withinCmd = '$geoWithin';\n      } else {\n        $withinCmd = '$within';\n      }\n    }\n});\n\n/**\n * Converts this query to a constructor function with all arguments and options retained.\n *\n * ####Example\n *\n *     // Create a query that will read documents with a \"video\" category from\n *     // `aCollection` on the primary node in the replica-set unless it is down,\n *     // in which case we'll read from a secondary node.\n *     var query = mquery({ category: 'video' })\n *     query.setOptions({ collection: aCollection, read: 'primaryPreferred' });\n *\n *     // create a constructor based off these settings\n *     var Video = query.toConstructor();\n *\n *     // Video is now a subclass of mquery() and works the same way but with the\n *     // default query parameters and options set.\n *\n *     // run a query with the previous settings but filter for movies with names\n *     // that start with \"Life\".\n *     Video().where({ name: /^Life/ }).exec(cb);\n *\n * @return {Query} new Query\n * @api public\n */\n\nQuery.prototype.toConstructor = function toConstructor () {\n  function CustomQuery (criteria, options) {\n    if (!(this instanceof CustomQuery))\n      return new CustomQuery(criteria, options);\n    Query.call(this, criteria, options);\n  }\n\n  utils.inherits(CustomQuery, Query);\n\n  // set inherited defaults\n  var p = CustomQuery.prototype;\n\n  p.options = {};\n  p.setOptions(this.options);\n\n  p.op = this.op;\n  p._conditions = utils.clone(this._conditions, { retainKeyOrder: this.options.retainKeyOrder });\n  p._fields = utils.clone(this._fields, { retainKeyOrder: this.options.retainKeyOrder });\n  p._update = utils.clone(this._update, { retainKeyOrder: this.options.retainKeyOrder });\n  p._path = this._path;\n  p._distinct = this._distinct;\n  p._collection = this._collection;\n  p._traceFunction = this._traceFunction;\n\n  return CustomQuery;\n}\n\n/**\n * Sets query options.\n *\n * ####Options:\n *\n * - [tailable](http://www.mongodb.org/display/DOCS/Tailable+Cursors) *\n * - [sort](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsort(\\)%7D%7D) *\n * - [limit](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Blimit%28%29%7D%7D) *\n * - [skip](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bskip%28%29%7D%7D) *\n * - [maxScan](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24maxScan) *\n * - [maxTime](http://docs.mongodb.org/manual/reference/operator/meta/maxTimeMS/#op._S_maxTimeMS) *\n * - [batchSize](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7BbatchSize%28%29%7D%7D) *\n * - [comment](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24comment) *\n * - [snapshot](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsnapshot%28%29%7D%7D) *\n * - [hint](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24hint) *\n * - [slaveOk](http://docs.mongodb.org/manual/applications/replication/#read-preference) *\n * - [safe](http://www.mongodb.org/display/DOCS/getLastError+Command)\n * - collection the collection to query against\n *\n * _* denotes a query helper method is also available_\n *\n * @param {Object} options\n * @api public\n */\n\nQuery.prototype.setOptions = function (options) {\n  if (!(options && utils.isObject(options)))\n    return this;\n\n  // set arbitrary options\n  var methods = utils.keys(options)\n    , method\n\n  for (var i = 0; i < methods.length; ++i) {\n    method = methods[i];\n\n    // use methods if exist (safer option manipulation)\n    if ('function' == typeof this[method]) {\n      var args = utils.isArray(options[method])\n        ? options[method]\n        : [options[method]];\n      this[method].apply(this, args)\n    } else {\n      this.options[method] = options[method];\n    }\n  }\n\n  return this;\n}\n\n/**\n * Sets this Querys collection.\n *\n * @param {Collection} coll\n * @return {Query} this\n */\n\nQuery.prototype.collection = function collection (coll) {\n  this._collection = new Query.Collection(coll);\n\n  return this;\n}\n\n/**\n * Specifies a `$where` condition\n *\n * Use `$where` when you need to select documents using a JavaScript expression.\n *\n * ####Example\n *\n *     query.$where('this.comments.length > 10 || this.name.length > 5')\n *\n *     query.$where(function () {\n *       return this.comments.length > 10 || this.name.length > 5;\n *     })\n *\n * @param {String|Function} js javascript string or function\n * @return {Query} this\n * @memberOf Query\n * @method $where\n * @api public\n */\n\nQuery.prototype.$where = function (js) {\n  this._conditions.$where = js;\n  return this;\n}\n\n/**\n * Specifies a `path` for use with chaining.\n *\n * ####Example\n *\n *     // instead of writing:\n *     User.find({age: {$gte: 21, $lte: 65}}, callback);\n *\n *     // we can instead write:\n *     User.where('age').gte(21).lte(65);\n *\n *     // passing query conditions is permitted\n *     User.find().where({ name: 'vonderful' })\n *\n *     // chaining\n *     User\n *     .where('age').gte(21).lte(65)\n *     .where('name', /^vonderful/i)\n *     .where('friends').slice(10)\n *     .exec(callback)\n *\n * @param {String} [path]\n * @param {Object} [val]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.where = function () {\n  if (!arguments.length) return this;\n  if (!this.op) this.op = 'find';\n\n  var type = typeof arguments[0];\n\n  if ('string' == type) {\n    this._path = arguments[0];\n\n    if (2 === arguments.length) {\n      this._conditions[this._path] = arguments[1];\n    }\n\n    return this;\n  }\n\n  if ('object' == type && !Array.isArray(arguments[0])) {\n    return this.merge(arguments[0]);\n  }\n\n  throw new TypeError('path must be a string or object');\n}\n\n/**\n * Specifies the complementary comparison value for paths specified with `where()`\n *\n * ####Example\n *\n *     User.where('age').equals(49);\n *\n *     // is the same as\n *\n *     User.where('age', 49);\n *\n * @param {Object} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.equals = function equals (val) {\n  this._ensurePath('equals');\n  var path = this._path;\n  this._conditions[path] = val;\n  return this;\n}\n\n/**\n * Specifies the complementary comparison value for paths specified with `where()`\n * This is alias of `equals`\n *\n * ####Example\n *\n *     User.where('age').eq(49);\n *\n *     // is the same as\n *\n *     User.shere('age').equals(49);\n *\n *     // is the same as\n *\n *     User.where('age', 49);\n *\n * @param {Object} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.eq = function eq (val) {\n  this._ensurePath('eq');\n  var path = this._path;\n  this._conditions[path] = val;\n  return this;\n}\n\n/**\n * Specifies arguments for an `$or` condition.\n *\n * ####Example\n *\n *     query.or([{ color: 'red' }, { status: 'emergency' }])\n *\n * @param {Array} array array of conditions\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.or = function or (array) {\n  var or = this._conditions.$or || (this._conditions.$or = []);\n  if (!utils.isArray(array)) array = [array];\n  or.push.apply(or, array);\n  return this;\n}\n\n/**\n * Specifies arguments for a `$nor` condition.\n *\n * ####Example\n *\n *     query.nor([{ color: 'green' }, { status: 'ok' }])\n *\n * @param {Array} array array of conditions\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.nor = function nor (array) {\n  var nor = this._conditions.$nor || (this._conditions.$nor = []);\n  if (!utils.isArray(array)) array = [array];\n  nor.push.apply(nor, array);\n  return this;\n}\n\n/**\n * Specifies arguments for a `$and` condition.\n *\n * ####Example\n *\n *     query.and([{ color: 'green' }, { status: 'ok' }])\n *\n * @see $and http://docs.mongodb.org/manual/reference/operator/and/\n * @param {Array} array array of conditions\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.and = function and (array) {\n  var and = this._conditions.$and || (this._conditions.$and = []);\n  if (!Array.isArray(array)) array = [array];\n  and.push.apply(and, array);\n  return this;\n}\n\n/**\n * Specifies a $gt query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * ####Example\n *\n *     Thing.find().where('age').gt(21)\n *\n *     // or\n *     Thing.find().gt('age', 21)\n *\n * @method gt\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $gte query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method gte\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $lt query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method lt\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $lte query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method lte\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $ne query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method ne\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies an $in query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method in\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies an $nin query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method nin\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies an $all query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method all\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $size query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method size\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $regex query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method regex\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $maxDistance query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method maxDistance\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/*!\n * gt, gte, lt, lte, ne, in, nin, all, regex, size, maxDistance\n *\n *     Thing.where('type').nin(array)\n */\n\n'gt gte lt lte ne in nin all regex size maxDistance minDistance'.split(' ').forEach(function ($conditional) {\n  Query.prototype[$conditional] = function () {\n    var path, val;\n\n    if (1 === arguments.length) {\n      this._ensurePath($conditional);\n      val = arguments[0];\n      path = this._path;\n    } else {\n      val = arguments[1];\n      path = arguments[0];\n    }\n\n    var conds = this._conditions[path] === null || typeof this._conditions[path] === 'object' ?\n      this._conditions[path] :\n      (this._conditions[path] = {});\n    conds['$' + $conditional] = val;\n    return this;\n  };\n})\n\n/**\n * Specifies a `$mod` condition\n *\n * @param {String} [path]\n * @param {Number} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.mod = function () {\n  var val, path;\n\n  if (1 === arguments.length) {\n    this._ensurePath('mod')\n    val = arguments[0];\n    path = this._path;\n  } else if (2 === arguments.length && !utils.isArray(arguments[1])) {\n    this._ensurePath('mod')\n    val = slice(arguments);\n    path = this._path;\n  } else if (3 === arguments.length) {\n    val = slice(arguments, 1);\n    path = arguments[0];\n  } else {\n    val = arguments[1];\n    path = arguments[0];\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds.$mod = val;\n  return this;\n}\n\n/**\n * Specifies an `$exists` condition\n *\n * ####Example\n *\n *     // { name: { $exists: true }}\n *     Thing.where('name').exists()\n *     Thing.where('name').exists(true)\n *     Thing.find().exists('name')\n *\n *     // { name: { $exists: false }}\n *     Thing.where('name').exists(false);\n *     Thing.find().exists('name', false);\n *\n * @param {String} [path]\n * @param {Number} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.exists = function () {\n  var path, val;\n\n  if (0 === arguments.length) {\n    this._ensurePath('exists');\n    path = this._path;\n    val = true;\n  } else if (1 === arguments.length) {\n    if ('boolean' === typeof arguments[0]) {\n      this._ensurePath('exists');\n      path = this._path;\n      val = arguments[0];\n    } else {\n      path = arguments[0];\n      val = true;\n    }\n  } else if (2 === arguments.length) {\n    path = arguments[0];\n    val = arguments[1];\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds.$exists = val;\n  return this;\n}\n\n/**\n * Specifies an `$elemMatch` condition\n *\n * ####Example\n *\n *     query.elemMatch('comment', { author: 'autobot', votes: {$gte: 5}})\n *\n *     query.where('comment').elemMatch({ author: 'autobot', votes: {$gte: 5}})\n *\n *     query.elemMatch('comment', function (elem) {\n *       elem.where('author').equals('autobot');\n *       elem.where('votes').gte(5);\n *     })\n *\n *     query.where('comment').elemMatch(function (elem) {\n *       elem.where({ author: 'autobot' });\n *       elem.where('votes').gte(5);\n *     })\n *\n * @param {String|Object|Function} path\n * @param {Object|Function} criteria\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.elemMatch = function () {\n  if (null == arguments[0])\n    throw new TypeError(\"Invalid argument\");\n\n  var fn, path, criteria;\n\n  if ('function' === typeof arguments[0]) {\n    this._ensurePath('elemMatch');\n    path = this._path;\n    fn = arguments[0];\n  } else if (utils.isObject(arguments[0])) {\n    this._ensurePath('elemMatch');\n    path = this._path;\n    criteria = arguments[0];\n  } else if ('function' === typeof arguments[1]) {\n    path = arguments[0];\n    fn = arguments[1];\n  } else if (arguments[1] && utils.isObject(arguments[1])) {\n    path = arguments[0];\n    criteria = arguments[1];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  if (fn) {\n    criteria = new Query;\n    fn(criteria);\n    criteria = criteria._conditions;\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds.$elemMatch = criteria;\n  return this;\n}\n\n// Spatial queries\n\n/**\n * Sugar for geo-spatial queries.\n *\n * ####Example\n *\n *     query.within().box()\n *     query.within().circle()\n *     query.within().geometry()\n *\n *     query.where('loc').within({ center: [50,50], radius: 10, unique: true, spherical: true });\n *     query.where('loc').within({ box: [[40.73, -73.9], [40.7, -73.988]] });\n *     query.where('loc').within({ polygon: [[],[],[],[]] });\n *\n *     query.where('loc').within([], [], []) // polygon\n *     query.where('loc').within([], []) // box\n *     query.where('loc').within({ type: 'LineString', coordinates: [...] }); // geometry\n *\n * ####NOTE:\n *\n * Must be used after `where()`.\n *\n * @memberOf Query\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.within = function within () {\n  // opinionated, must be used after where\n  this._ensurePath('within');\n  this._geoComparison = $withinCmd;\n\n  if (0 === arguments.length) {\n    return this;\n  }\n\n  if (2 === arguments.length) {\n    return this.box.apply(this, arguments);\n  } else if (2 < arguments.length) {\n    return this.polygon.apply(this, arguments);\n  }\n\n  var area = arguments[0];\n\n  if (!area)\n    throw new TypeError('Invalid argument');\n\n  if (area.center)\n    return this.circle(area);\n\n  if (area.box)\n    return this.box.apply(this, area.box);\n\n  if (area.polygon)\n    return this.polygon.apply(this, area.polygon);\n\n  if (area.type && area.coordinates)\n    return this.geometry(area);\n\n  throw new TypeError('Invalid argument');\n}\n\n/**\n * Specifies a $box condition\n *\n * ####Example\n *\n *     var lowerLeft = [40.73083, -73.99756]\n *     var upperRight= [40.741404,  -73.988135]\n *\n *     query.where('loc').within().box(lowerLeft, upperRight)\n *     query.box('loc', lowerLeft, upperRight )\n *\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @see Query#within #query_Query-within\n * @param {String} path\n * @param {Object} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.box = function () {\n  var path, box;\n\n  if (3 === arguments.length) {\n    // box('loc', [], [])\n    path = arguments[0];\n    box = [arguments[1], arguments[2]];\n  } else if (2 === arguments.length) {\n    // box([], [])\n    this._ensurePath('box');\n    path = this._path;\n    box = [arguments[0], arguments[1]];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds[this._geoComparison || $withinCmd] = { '$box': box  };\n  return this;\n}\n\n/**\n * Specifies a $polygon condition\n *\n * ####Example\n *\n *     query.where('loc').within().polygon([10,20], [13, 25], [7,15])\n *     query.polygon('loc', [10,20], [13, 25], [7,15])\n *\n * @param {String|Array} [path]\n * @param {Array|Object} [val]\n * @return {Query} this\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @api public\n */\n\nQuery.prototype.polygon = function () {\n  var val, path;\n\n  if ('string' == typeof arguments[0]) {\n    // polygon('loc', [],[],[])\n    path = arguments[0];\n    val = slice(arguments, 1);\n  } else {\n    // polygon([],[],[])\n    this._ensurePath('polygon');\n    path = this._path;\n    val = slice(arguments);\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds[this._geoComparison || $withinCmd] = { '$polygon': val };\n  return this;\n}\n\n/**\n * Specifies a $center or $centerSphere condition.\n *\n * ####Example\n *\n *     var area = { center: [50, 50], radius: 10, unique: true }\n *     query.where('loc').within().circle(area)\n *     query.center('loc', area);\n *\n *     // for spherical calculations\n *     var area = { center: [50, 50], radius: 10, unique: true, spherical: true }\n *     query.where('loc').within().circle(area)\n *     query.center('loc', area);\n *\n * @param {String} [path]\n * @param {Object} area\n * @return {Query} this\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @api public\n */\n\nQuery.prototype.circle = function () {\n  var path, val;\n\n  if (1 === arguments.length) {\n    this._ensurePath('circle');\n    path = this._path;\n    val = arguments[0];\n  } else if (2 === arguments.length) {\n    path = arguments[0];\n    val = arguments[1];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  if (!('radius' in val && val.center))\n    throw new Error('center and radius are required');\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n\n  var type = val.spherical\n    ? '$centerSphere'\n    : '$center';\n\n  var wKey = this._geoComparison || $withinCmd;\n  conds[wKey] = {};\n  conds[wKey][type] = [val.center, val.radius];\n\n  if ('unique' in val)\n    conds[wKey].$uniqueDocs = !! val.unique;\n\n  return this;\n}\n\n/**\n * Specifies a `$near` or `$nearSphere` condition\n *\n * These operators return documents sorted by distance.\n *\n * ####Example\n *\n *     query.where('loc').near({ center: [10, 10] });\n *     query.where('loc').near({ center: [10, 10], maxDistance: 5 });\n *     query.where('loc').near({ center: [10, 10], maxDistance: 5, spherical: true });\n *     query.near('loc', { center: [10, 10], maxDistance: 5 });\n *     query.near({ center: { type: 'Point', coordinates: [..] }})\n *     query.near().geometry({ type: 'Point', coordinates: [..] })\n *\n * @param {String} [path]\n * @param {Object} val\n * @return {Query} this\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @api public\n */\n\nQuery.prototype.near = function near () {\n  var path, val;\n\n  this._geoComparison = '$near';\n\n  if (0 === arguments.length) {\n    return this;\n  } else if (1 === arguments.length) {\n    this._ensurePath('near');\n    path = this._path;\n    val = arguments[0];\n  } else if (2 === arguments.length) {\n    path = arguments[0];\n    val = arguments[1];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  if (!val.center) {\n    throw new Error('center is required');\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n\n  var type = val.spherical\n    ? '$nearSphere'\n    : '$near';\n\n  // center could be a GeoJSON object or an Array\n  if (Array.isArray(val.center)) {\n    conds[type] = val.center;\n\n    var radius = 'maxDistance' in val\n      ? val.maxDistance\n      : null;\n\n    if (null != radius) {\n      conds.$maxDistance = radius;\n    }\n    if (null != val.minDistance) {\n      conds.$minDistance = val.minDistance;\n    }\n  } else {\n    // GeoJSON?\n    if (val.center.type != 'Point' || !Array.isArray(val.center.coordinates)) {\n      throw new Error(util.format(\"Invalid GeoJSON specified for %s\", type));\n    }\n    conds[type] = { $geometry : val.center };\n\n    // MongoDB 2.6 insists on maxDistance being in $near / $nearSphere\n    if ('maxDistance' in val) {\n      conds[type]['$maxDistance'] = val.maxDistance;\n    }\n    if ('minDistance' in val) {\n      conds[type]['$minDistance'] = val.minDistance;\n    }\n  }\n\n  return this;\n}\n\n/**\n * Declares an intersects query for `geometry()`.\n *\n * ####Example\n *\n *     query.where('path').intersects().geometry({\n *         type: 'LineString'\n *       , coordinates: [[180.0, 11.0], [180, 9.0]]\n *     })\n *\n *     query.where('path').intersects({\n *         type: 'LineString'\n *       , coordinates: [[180.0, 11.0], [180, 9.0]]\n *     })\n *\n * @param {Object} [arg]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.intersects = function intersects () {\n  // opinionated, must be used after where\n  this._ensurePath('intersects');\n\n  this._geoComparison = '$geoIntersects';\n\n  if (0 === arguments.length) {\n    return this;\n  }\n\n  var area = arguments[0];\n\n  if (null != area && area.type && area.coordinates)\n    return this.geometry(area);\n\n  throw new TypeError('Invalid argument');\n}\n\n/**\n * Specifies a `$geometry` condition\n *\n * ####Example\n *\n *     var polyA = [[[ 10, 20 ], [ 10, 40 ], [ 30, 40 ], [ 30, 20 ]]]\n *     query.where('loc').within().geometry({ type: 'Polygon', coordinates: polyA })\n *\n *     // or\n *     var polyB = [[ 0, 0 ], [ 1, 1 ]]\n *     query.where('loc').within().geometry({ type: 'LineString', coordinates: polyB })\n *\n *     // or\n *     var polyC = [ 0, 0 ]\n *     query.where('loc').within().geometry({ type: 'Point', coordinates: polyC })\n *\n *     // or\n *     query.where('loc').intersects().geometry({ type: 'Point', coordinates: polyC })\n *\n * ####NOTE:\n *\n * `geometry()` **must** come after either `intersects()` or `within()`.\n *\n * The `object` argument must contain `type` and `coordinates` properties.\n * - type {String}\n * - coordinates {Array}\n *\n * The most recent path passed to `where()` is used.\n *\n * @param {Object} object Must contain a `type` property which is a String and a `coordinates` property which is an Array. See the examples.\n * @return {Query} this\n * @see http://docs.mongodb.org/manual/release-notes/2.4/#new-geospatial-indexes-with-geojson-and-improved-spherical-geometry\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @see $geometry http://docs.mongodb.org/manual/reference/operator/geometry/\n * @api public\n */\n\nQuery.prototype.geometry = function geometry () {\n  if (!('$within' == this._geoComparison ||\n        '$geoWithin' == this._geoComparison ||\n        '$near' == this._geoComparison ||\n        '$geoIntersects' == this._geoComparison)) {\n    throw new Error('geometry() must come after `within()`, `intersects()`, or `near()');\n  }\n\n  var val, path;\n\n  if (1 === arguments.length) {\n    this._ensurePath('geometry');\n    path = this._path;\n    val = arguments[0];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  if (!(val.type && Array.isArray(val.coordinates))) {\n    throw new TypeError('Invalid argument');\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds[this._geoComparison] = { $geometry: val };\n\n  return this;\n}\n\n// end spatial\n\n/**\n * Specifies which document fields to include or exclude\n *\n * ####String syntax\n *\n * When passing a string, prefixing a path with `-` will flag that path as excluded. When a path does not have the `-` prefix, it is included.\n *\n * ####Example\n *\n *     // include a and b, exclude c\n *     query.select('a b -c');\n *\n *     // or you may use object notation, useful when\n *     // you have keys already prefixed with a \"-\"\n *     query.select({a: 1, b: 1, c: 0});\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @param {Object|String} arg\n * @return {Query} this\n * @see SchemaType\n * @api public\n */\n\nQuery.prototype.select = function select () {\n  var arg = arguments[0];\n  if (!arg) return this;\n\n  if (arguments.length !== 1) {\n    throw new Error(\"Invalid select: select only takes 1 argument\");\n  }\n\n  this._validate('select');\n\n  var fields = this._fields || (this._fields = {});\n  var type = typeof arg;\n\n  if (('string' == type || utils.isArgumentsObject(arg)) &&\n    'number' == typeof arg.length || Array.isArray(arg)) {\n    if ('string' == type)\n      arg = arg.split(/\\s+/);\n\n    for (var i = 0, len = arg.length; i < len; ++i) {\n      var field = arg[i];\n      if (!field) continue;\n      var include = '-' == field[0] ? 0 : 1;\n      if (include === 0) field = field.substring(1);\n      fields[field] = include;\n    }\n\n    return this;\n  }\n\n  if (utils.isObject(arg)) {\n    var keys = utils.keys(arg);\n    for (var i = 0; i < keys.length; ++i) {\n      fields[keys[i]] = arg[keys[i]];\n    }\n    return this;\n  }\n\n  throw new TypeError('Invalid select() argument. Must be string or object.');\n}\n\n/**\n * Specifies a $slice condition for a `path`\n *\n * ####Example\n *\n *     query.slice('comments', 5)\n *     query.slice('comments', -5)\n *     query.slice('comments', [10, 5])\n *     query.where('comments').slice(5)\n *     query.where('comments').slice([-10, 5])\n *\n * @param {String} [path]\n * @param {Number} val number/range of elements to slice\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Retrieving+a+Subset+of+Fields#RetrievingaSubsetofFields-RetrievingaSubrangeofArrayElements\n * @api public\n */\n\nQuery.prototype.slice = function () {\n  if (0 === arguments.length)\n    return this;\n\n  this._validate('slice');\n\n  var path, val;\n\n  if (1 === arguments.length) {\n    var arg = arguments[0];\n    if (typeof arg === 'object' && !Array.isArray(arg)) {\n      var keys = Object.keys(arg);\n      var numKeys = keys.length;\n      for (var i = 0; i < numKeys; ++i) {\n        this.slice(keys[i], arg[keys[i]]);\n      }\n      return this;\n    }\n    this._ensurePath('slice');\n    path = this._path;\n    val = arguments[0];\n  } else if (2 === arguments.length) {\n    if ('number' === typeof arguments[0]) {\n      this._ensurePath('slice');\n      path = this._path;\n      val = slice(arguments);\n    } else {\n      path = arguments[0];\n      val = arguments[1];\n    }\n  } else if (3 === arguments.length) {\n    path = arguments[0];\n    val = slice(arguments, 1);\n  }\n\n  var myFields = this._fields || (this._fields = {});\n  myFields[path] = { '$slice': val };\n  return this;\n}\n\n/**\n * Sets the sort order\n *\n * If an object is passed, values allowed are 'asc', 'desc', 'ascending', 'descending', 1, and -1.\n *\n * If a string is passed, it must be a space delimited list of path names. The sort order of each path is ascending unless the path name is prefixed with `-` which will be treated as descending.\n *\n * ####Example\n *\n *     // these are equivalent\n *     query.sort({ field: 'asc', test: -1 });\n *     query.sort('field -test');\n *     query.sort([['field', 1], ['test', -1]]);\n *\n * ####Note\n *\n *  - The array syntax `.sort([['field', 1], ['test', -1]])` can only be used with [mongodb driver >= 2.0.46](https://github.com/mongodb/node-mongodb-native/blob/2.1/HISTORY.md#2046-2015-10-15).\n *  - Cannot be used with `distinct()`\n *\n * @param {Object|String|Array} arg\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.sort = function (arg) {\n  if (!arg) return this;\n  var len;\n\n  this._validate('sort');\n\n  var type = typeof arg;\n\n  // .sort([['field', 1], ['test', -1]])\n  if (Array.isArray(arg)) {\n    len = arg.length;\n    for (var i = 0; i < arg.length; ++i) {\n      if (!Array.isArray(arg[i])) {\n        throw new Error('Invalid sort() argument, must be array of arrays');\n      }\n      _pushArr(this.options, arg[i][0], arg[i][1]);\n    }\n    return this;\n  }\n\n  // .sort('field -test')\n  if (1 === arguments.length && 'string' == type) {\n    arg = arg.split(/\\s+/);\n    len = arg.length;\n    for (var i = 0; i < len; ++i) {\n      var field = arg[i];\n      if (!field) continue;\n      var ascend = '-' == field[0] ? -1 : 1;\n      if (ascend === -1) field = field.substring(1);\n      push(this.options, field, ascend);\n    }\n\n    return this;\n  }\n\n  // .sort({ field: 1, test: -1 })\n  if (utils.isObject(arg)) {\n    var keys = utils.keys(arg);\n    for (var i = 0; i < keys.length; ++i) {\n      var field = keys[i];\n      push(this.options, field, arg[field]);\n    }\n\n    return this;\n  }\n\n  if (typeof Map !== 'undefined' && arg instanceof Map) {\n    _pushMap(this.options, arg);\n    return this;\n  }\n\n  throw new TypeError('Invalid sort() argument. Must be a string, object, or array.');\n}\n\n/*!\n * @ignore\n */\n\nfunction push (opts, field, value) {\n  if (Array.isArray(opts.sort)) {\n    throw new TypeError(\"Can't mix sort syntaxes. Use either array or object:\" +\n      \"\\n- `.sort([['field', 1], ['test', -1]])`\" +\n      \"\\n- `.sort({ field: 1, test: -1 })`\");\n  }\n\n  if (value && value.$meta) {\n    var s = opts.sort || (opts.sort = {});\n    s[field] = { $meta : value.$meta };\n    return;\n  }\n\n  var val = String(value || 1).toLowerCase();\n  if (!/^(?:ascending|asc|descending|desc|1|-1)$/.test(val)) {\n    if (utils.isArray(value)) value = '['+value+']';\n    throw new TypeError('Invalid sort value: {' + field + ': ' + value + ' }');\n  }\n  // store `sort` in a sane format\n  var s = opts.sort || (opts.sort = {});\n  var valueStr = value.toString()\n                  .replace(\"asc\", \"1\")\n                  .replace(\"ascending\", \"1\")\n                  .replace(\"desc\", \"-1\")\n                  .replace(\"descending\", \"-1\");\n  s[field] = parseInt(valueStr, 10);\n}\n\nfunction _pushArr (opts, field, value) {\n  opts.sort = opts.sort || [];\n  if (!Array.isArray(opts.sort)) {\n    throw new TypeError(\"Can't mix sort syntaxes. Use either array or object:\" +\n      \"\\n- `.sort([['field', 1], ['test', -1]])`\" +\n      \"\\n- `.sort({ field: 1, test: -1 })`\");\n  }\n  var valueStr = value.toString()\n    .replace(\"asc\", \"1\")\n    .replace(\"ascending\", \"1\")\n    .replace(\"desc\", \"-1\")\n    .replace(\"descending\", \"-1\");\n  opts.sort.push([field, value]);\n}\n\nfunction _pushMap (opts, map) {\n  opts.sort = opts.sort || new Map();\n  if (!(opts.sort instanceof Map)) {\n    throw new TypeError(\"Can't mix sort syntaxes. Use either array or \" +\n      \"object or map consistently\");\n  }\n  map.forEach(function(value, key) {\n    var valueStr = value.toString()\n      .replace(\"asc\", \"1\")\n      .replace(\"ascending\", \"1\")\n      .replace(\"desc\", \"-1\")\n      .replace(\"descending\", \"-1\");\n    opts.sort.set(key, valueStr);\n  });\n}\n\n/**\n * Specifies the limit option.\n *\n * ####Example\n *\n *     query.limit(20)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method limit\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Blimit%28%29%7D%7D\n * @api public\n */\n/**\n * Specifies the skip option.\n *\n * ####Example\n *\n *     query.skip(100).limit(20)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method skip\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bskip%28%29%7D%7D\n * @api public\n */\n/**\n * Specifies the maxScan option.\n *\n * ####Example\n *\n *     query.maxScan(100)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method maxScan\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24maxScan\n * @api public\n */\n/**\n * Specifies the batchSize option.\n *\n * ####Example\n *\n *     query.batchSize(100)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method batchSize\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7BbatchSize%28%29%7D%7D\n * @api public\n */\n/**\n * Specifies the `comment` option.\n *\n * ####Example\n *\n *     query.comment('login query')\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method comment\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24comment\n * @api public\n */\n\n/*!\n * limit, skip, maxScan, batchSize, comment\n *\n * Sets these associated options.\n *\n *     query.comment('feed query');\n */\n\n;['limit', 'skip', 'maxScan', 'batchSize', 'comment'].forEach(function (method) {\n  Query.prototype[method] = function (v) {\n    this._validate(method);\n    this.options[method] = v;\n    return this;\n  };\n})\n\n/**\n * Specifies the maxTimeMS option.\n *\n * ####Example\n *\n *     query.maxTime(100)\n *\n * @method maxTime\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://docs.mongodb.org/manual/reference/operator/meta/maxTimeMS/#op._S_maxTimeMS\n * @api public\n */\n\nQuery.prototype.maxTime = function (v) {\n  this._validate('maxTime');\n  this.options.maxTimeMS = v;\n  return this;\n};\n\n/**\n * Specifies this query as a `snapshot` query.\n *\n * ####Example\n *\n *     mquery().snapshot() // true\n *     mquery().snapshot(true)\n *     mquery().snapshot(false)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsnapshot%28%29%7D%7D\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.snapshot = function () {\n  this._validate('snapshot');\n\n  this.options.snapshot = arguments.length\n    ? !! arguments[0]\n    : true\n\n  return this;\n}\n\n/**\n * Sets query hints.\n *\n * ####Example\n *\n *     query.hint({ indexA: 1, indexB: -1});\n *     query.hint('indexA_1_indexB_1');\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @param {Object|string} val a hint object or the index name\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24hint\n * @api public\n */\n\nQuery.prototype.hint = function () {\n  if (0 === arguments.length) return this;\n\n  this._validate('hint');\n\n  var arg = arguments[0];\n  if (utils.isObject(arg)) {\n    var hint = this.options.hint || (this.options.hint = {});\n\n    // must keep object keys in order so don't use Object.keys()\n    for (var k in arg) {\n      hint[k] = arg[k];\n    }\n\n    return this;\n  }\n  if (typeof arg === 'string') {\n    this.options.hint = arg;\n    return this;\n  }\n\n  throw new TypeError('Invalid hint. ' + arg);\n}\n\n/**\n * Sets the slaveOk option. _Deprecated_ in MongoDB 2.2 in favor of read preferences.\n *\n * ####Example:\n *\n *     query.slaveOk() // true\n *     query.slaveOk(true)\n *     query.slaveOk(false)\n *\n * @deprecated use read() preferences instead if on mongodb >= 2.2\n * @param {Boolean} v defaults to true\n * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference\n * @see read()\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.slaveOk = function (v) {\n  this.options.slaveOk = arguments.length ? !!v : true;\n  return this;\n}\n\n/**\n * Sets the readPreference option for the query.\n *\n * ####Example:\n *\n *     new Query().read('primary')\n *     new Query().read('p')  // same as primary\n *\n *     new Query().read('primaryPreferred')\n *     new Query().read('pp') // same as primaryPreferred\n *\n *     new Query().read('secondary')\n *     new Query().read('s')  // same as secondary\n *\n *     new Query().read('secondaryPreferred')\n *     new Query().read('sp') // same as secondaryPreferred\n *\n *     new Query().read('nearest')\n *     new Query().read('n')  // same as nearest\n *\n *     // you can also use mongodb.ReadPreference class to also specify tags\n *     new Query().read(mongodb.ReadPreference('secondary', [{ dc:'sf', s: 1 },{ dc:'ma', s: 2 }]))\n *\n * ####Preferences:\n *\n *     primary - (default)  Read from primary only. Operations will produce an error if primary is unavailable. Cannot be combined with tags.\n *     secondary            Read from secondary if available, otherwise error.\n *     primaryPreferred     Read from primary if available, otherwise a secondary.\n *     secondaryPreferred   Read from a secondary if available, otherwise read from the primary.\n *     nearest              All operations read from among the nearest candidates, but unlike other modes, this option will include both the primary and all secondaries in the random selection.\n *\n * Aliases\n *\n *     p   primary\n *     pp  primaryPreferred\n *     s   secondary\n *     sp  secondaryPreferred\n *     n   nearest\n *\n * Read more about how to use read preferences [here](http://docs.mongodb.org/manual/applications/replication/#read-preference) and [here](http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences).\n *\n * @param {String|ReadPreference} pref one of the listed preference options or their aliases\n * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference\n * @see driver http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.read = function (pref) {\n  if (arguments.length > 1 && !Query.prototype.read.deprecationWarningIssued) {\n    console.error(\"Deprecation warning: 'tags' argument is not supported anymore in Query.read() method. Please use mongodb.ReadPreference object instead.\");\n    Query.prototype.read.deprecationWarningIssued = true;\n  }\n  this.options.readPreference = utils.readPref(pref);\n  return this;\n}\n\n/**\n * Sets tailable option.\n *\n * ####Example\n *\n *     query.tailable() <== true\n *     query.tailable(true)\n *     query.tailable(false)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @param {Boolean} v defaults to true\n * @see mongodb http://www.mongodb.org/display/DOCS/Tailable+Cursors\n * @api public\n */\n\nQuery.prototype.tailable = function () {\n  this._validate('tailable');\n\n  this.options.tailable = arguments.length\n    ? !! arguments[0]\n    : true;\n\n  return this;\n}\n\n/**\n * Merges another Query or conditions object into this one.\n *\n * When a Query is passed, conditions, field selection and options are merged.\n *\n * @param {Query|Object} source\n * @return {Query} this\n */\n\nQuery.prototype.merge = function (source) {\n  if (!source)\n    return this;\n\n  if (!Query.canMerge(source))\n    throw new TypeError('Invalid argument. Expected instanceof mquery or plain object');\n\n  if (source instanceof Query) {\n    // if source has a feature, apply it to ourselves\n\n    if (source._conditions) {\n      utils.merge(this._conditions, source._conditions);\n    }\n\n    if (source._fields) {\n      this._fields || (this._fields = {});\n      utils.merge(this._fields, source._fields);\n    }\n\n    if (source.options) {\n      this.options || (this.options = {});\n      utils.merge(this.options, source.options);\n    }\n\n    if (source._update) {\n      this._update || (this._update = {});\n      utils.mergeClone(this._update, source._update);\n    }\n\n    if (source._distinct) {\n      this._distinct = source._distinct;\n    }\n\n    return this;\n  }\n\n  // plain object\n  utils.merge(this._conditions, source);\n\n  return this;\n}\n\n/**\n * Finds documents.\n *\n * Passing a `callback` executes the query.\n *\n * ####Example\n *\n *     query.find()\n *     query.find(callback)\n *     query.find({ name: 'Burning Lights' }, callback)\n *\n * @param {Object} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.find = function (criteria, callback) {\n  this.op = 'find';\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  if (!callback) return this;\n\n  var self = this\n    , conds = this._conditions\n    , options = this._optionsForExec()\n\n  options.fields = this._fieldsForExec()\n\n  debug('find', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('find', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.find(conds, options, utils.tick(callback));\n  return this;\n}\n\n/**\n * Returns the query cursor\n *\n * ####Examples\n *\n *     query.find().cursor();\n *     query.cursor({ name: 'Burning Lights' });\n *\n * @param {Object} [criteria] mongodb selector\n * @return {Object} cursor\n * @api public\n */\n\nQuery.prototype.cursor = function cursor (criteria) {\n  if (this.op) {\n    if (this.op !== 'find') {\n      throw new TypeError(\".cursor only support .find method\");\n    }\n  } else {\n    this.find(criteria);\n  }\n\n  var conds = this._conditions\n    , options = this._optionsForExec()\n\n  options.fields = this._fieldsForExec()\n\n  debug('findCursor', this._collection.collectionName, conds, options);\n  return this._collection.findCursor(conds, options);\n}\n\n/**\n * Executes the query as a findOne() operation.\n *\n * Passing a `callback` executes the query.\n *\n * ####Example\n *\n *     query.findOne().where('name', /^Burning/);\n *\n *     query.findOne({ name: /^Burning/ })\n *\n *     query.findOne({ name: /^Burning/ }, callback); // executes\n *\n *     query.findOne(function (err, doc) {\n *       if (err) return handleError(err);\n *       if (doc) {\n *         // doc may be null if no document matched\n *\n *       }\n *     });\n *\n * @param {Object|Query} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.findOne = function (criteria, callback) {\n  this.op = 'findOne';\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  if (!callback) return this;\n\n  var self = this\n    , conds = this._conditions\n    , options = this._optionsForExec()\n\n  options.fields = this._fieldsForExec();\n\n  debug('findOne', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('findOne', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.findOne(conds, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Exectues the query as a count() operation.\n *\n * Passing a `callback` executes the query.\n *\n * ####Example\n *\n *     query.count().where('color', 'black').exec(callback);\n *\n *     query.count({ color: 'black' }).count(callback)\n *\n *     query.count({ color: 'black' }, callback)\n *\n *     query.where('color', 'black').count(function (err, count) {\n *       if (err) return handleError(err);\n *       console.log('there are %d kittens', count);\n *     })\n *\n * @param {Object} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Aggregation#Aggregation-Count\n * @api public\n */\n\nQuery.prototype.count = function (criteria, callback) {\n  this.op = 'count';\n  this._validate();\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  if (!callback) return this;\n\n  var conds = this._conditions\n    , options = this._optionsForExec()\n\n  debug('count', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('count', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.count(conds, options, utils.tick(callback));\n  return this;\n}\n\n/**\n * Declares or executes a distinct() operation.\n *\n * Passing a `callback` executes the query.\n *\n * ####Example\n *\n *     distinct(criteria, field, fn)\n *     distinct(criteria, field)\n *     distinct(field, fn)\n *     distinct(field)\n *     distinct(fn)\n *     distinct()\n *\n * @param {Object|Query} [criteria]\n * @param {String} [field]\n * @param {Function} [callback]\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Aggregation#Aggregation-Distinct\n * @api public\n */\n\nQuery.prototype.distinct = function (criteria, field, callback) {\n  this.op = 'distinct';\n  this._validate();\n\n  if (!callback) {\n    switch (typeof field) {\n      case 'function':\n        callback = field;\n        if ('string' == typeof criteria) {\n          field = criteria;\n          criteria = undefined;\n        }\n        break;\n      case 'undefined':\n      case 'string':\n        break;\n      default:\n        throw new TypeError('Invalid `field` argument. Must be string or function')\n        break;\n    }\n\n    switch (typeof criteria) {\n      case 'function':\n        callback = criteria;\n        criteria = field = undefined;\n        break;\n      case 'string':\n        field = criteria;\n        criteria = undefined;\n        break;\n    }\n  }\n\n  if ('string' == typeof field) {\n    this._distinct = field;\n  }\n\n  if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  if (!callback) {\n    return this;\n  }\n\n  if (!this._distinct) {\n    throw new Error('No value for `distinct` has been declared');\n  }\n\n  var conds = this._conditions\n    , options = this._optionsForExec()\n\n  debug('distinct', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('distinct', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.distinct(this._distinct, conds, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Declare and/or execute this query as an update() operation. By default,\n * `update()` only modifies the _first_ document that matches `criteria`.\n *\n * _All paths passed that are not $atomic operations will become $set ops._\n *\n * ####Example\n *\n *     mquery({ _id: id }).update({ title: 'words' }, ...)\n *\n * becomes\n *\n *     collection.update({ _id: id }, { $set: { title: 'words' }}, ...)\n *\n * ####Note\n *\n * Passing an empty object `{}` as the doc will result in a no-op unless the `overwrite` option is passed. Without the `overwrite` option set, the update operation will be ignored and the callback executed without sending the command to MongoDB so as to prevent accidently overwritting documents in the collection.\n *\n * ####Note\n *\n * The operation is only executed when a callback is passed. To force execution without a callback (which would be an unsafe write), we must first call update() and then execute it by using the `exec()` method.\n *\n *     var q = mquery(collection).where({ _id: id });\n *     q.update({ $set: { name: 'bob' }}).update(); // not executed\n *\n *     var q = mquery(collection).where({ _id: id });\n *     q.update({ $set: { name: 'bob' }}).exec(); // executed as unsafe\n *\n *     // keys that are not $atomic ops become $set.\n *     // this executes the same command as the previous example.\n *     q.update({ name: 'bob' }).where({ _id: id }).exec();\n *\n *     var q = mquery(collection).update(); // not executed\n *\n *     // overwriting with empty docs\n *     var q.where({ _id: id }).setOptions({ overwrite: true })\n *     q.update({ }, callback); // executes\n *\n *     // multi update with overwrite to empty doc\n *     var q = mquery(collection).where({ _id: id });\n *     q.setOptions({ multi: true, overwrite: true })\n *     q.update({ });\n *     q.update(callback); // executed\n *\n *     // multi updates\n *     mquery()\n *       .collection(coll)\n *       .update({ name: /^match/ }, { $set: { arr: [] }}, { multi: true }, callback)\n *     // more multi updates\n *     mquery({ })\n *       .collection(coll)\n *       .setOptions({ multi: true })\n *       .update({ $set: { arr: [] }}, callback)\n *\n *     // single update by default\n *     mquery({ email: 'address@example.com' })\n *      .collection(coll)\n *      .update({ $inc: { counter: 1 }}, callback)\n *\n *     // summary\n *     update(criteria, doc, opts, cb) // executes\n *     update(criteria, doc, opts)\n *     update(criteria, doc, cb) // executes\n *     update(criteria, doc)\n *     update(doc, cb) // executes\n *     update(doc)\n *     update(cb) // executes\n *     update(true) // executes (unsafe write)\n *     update()\n *\n * @param {Object} [criteria]\n * @param {Object} [doc] the update command\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.update = function update (criteria, doc, options, callback) {\n  var force;\n\n  switch (arguments.length) {\n    case 3:\n      if ('function' == typeof options) {\n        callback = options;\n        options = undefined;\n      }\n      break;\n    case 2:\n      if ('function' == typeof doc) {\n        callback = doc;\n        doc = criteria;\n        criteria = undefined;\n      }\n      break;\n    case 1:\n      switch (typeof criteria) {\n        case 'function':\n          callback = criteria;\n          criteria = options = doc = undefined;\n          break;\n        case 'boolean':\n          // execution with no callback (unsafe write)\n          force = criteria;\n          criteria = undefined;\n          break;\n        default:\n          doc = criteria;\n          criteria = options = undefined;\n          break;\n      }\n  }\n\n  return _update(this, 'update', criteria, doc, options, force, callback);\n}\n\n/**\n * Declare and/or execute this query as an `updateMany()` operation. Identical\n * to `update()` except `updateMany()` will update _all_ documents that match\n * `criteria`, rather than just the first one.\n *\n * _All paths passed that are not $atomic operations will become $set ops._\n *\n * ####Example\n *\n *     // Update every document whose `title` contains 'test'\n *     mquery().updateMany({ title: /test/ }, { year: 2017 })\n *\n * @param {Object} [criteria]\n * @param {Object} [doc] the update command\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.updateMany = function updateMany (criteria, doc, options, callback) {\n  var force;\n\n  switch (arguments.length) {\n    case 3:\n      if ('function' == typeof options) {\n        callback = options;\n        options = undefined;\n      }\n      break;\n    case 2:\n      if ('function' == typeof doc) {\n        callback = doc;\n        doc = criteria;\n        criteria = undefined;\n      }\n      break;\n    case 1:\n      switch (typeof criteria) {\n        case 'function':\n          callback = criteria;\n          criteria = options = doc = undefined;\n          break;\n        case 'boolean':\n          // execution with no callback (unsafe write)\n          force = criteria;\n          criteria = undefined;\n          break;\n        default:\n          doc = criteria;\n          criteria = options = undefined;\n          break;\n      }\n  }\n\n  return _update(this, 'updateMany', criteria, doc, options, force, callback);\n}\n\n/**\n * Declare and/or execute this query as an `updateOne()` operation. Identical\n * to `update()` except `updateOne()` will _always_ update just one document,\n * regardless of the `multi` option.\n *\n * _All paths passed that are not $atomic operations will become $set ops._\n *\n * ####Example\n *\n *     // Update the first document whose `title` contains 'test'\n *     mquery().updateMany({ title: /test/ }, { year: 2017 })\n *\n * @param {Object} [criteria]\n * @param {Object} [doc] the update command\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.updateOne = function updateOne (criteria, doc, options, callback) {\n  var force;\n\n  switch (arguments.length) {\n    case 3:\n      if ('function' == typeof options) {\n        callback = options;\n        options = undefined;\n      }\n      break;\n    case 2:\n      if ('function' == typeof doc) {\n        callback = doc;\n        doc = criteria;\n        criteria = undefined;\n      }\n      break;\n    case 1:\n      switch (typeof criteria) {\n        case 'function':\n          callback = criteria;\n          criteria = options = doc = undefined;\n          break;\n        case 'boolean':\n          // execution with no callback (unsafe write)\n          force = criteria;\n          criteria = undefined;\n          break;\n        default:\n          doc = criteria;\n          criteria = options = undefined;\n          break;\n      }\n  }\n\n  return _update(this, 'updateOne', criteria, doc, options, force, callback);\n}\n\n/**\n * Declare and/or execute this query as an `replaceOne()` operation. Similar\n * to `updateOne()`, except `replaceOne()` is not allowed to use atomic\n * modifiers (`$set`, `$push`, etc.). Calling `replaceOne()` will always\n * replace the existing doc.\n *\n * ####Example\n *\n *     // Replace the document with `_id` 1 with `{ _id: 1, year: 2017 }`\n *     mquery().replaceOne({ _id: 1 }, { year: 2017 })\n *\n * @param {Object} [criteria]\n * @param {Object} [doc] the update command\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.replaceOne = function replaceOne (criteria, doc, options, callback) {\n  var force;\n\n  switch (arguments.length) {\n    case 3:\n      if ('function' == typeof options) {\n        callback = options;\n        options = undefined;\n      }\n      break;\n    case 2:\n      if ('function' == typeof doc) {\n        callback = doc;\n        doc = criteria;\n        criteria = undefined;\n      }\n      break;\n    case 1:\n      switch (typeof criteria) {\n        case 'function':\n          callback = criteria;\n          criteria = options = doc = undefined;\n          break;\n        case 'boolean':\n          // execution with no callback (unsafe write)\n          force = criteria;\n          criteria = undefined;\n          break;\n        default:\n          doc = criteria;\n          criteria = options = undefined;\n          break;\n      }\n  }\n\n  this.setOptions({ overwrite: true });\n  return _update(this, 'replaceOne', criteria, doc, options, force, callback);\n}\n\n\n/*!\n * Internal helper for update, updateMany, updateOne\n */\n\nfunction _update (query, op, criteria, doc, options, force, callback) {\n  query.op = op;\n\n  if (Query.canMerge(criteria)) {\n    query.merge(criteria);\n  }\n\n  if (doc) {\n    query._mergeUpdate(doc);\n  }\n\n  if (utils.isObject(options)) {\n    // { overwrite: true }\n    query.setOptions(options);\n  }\n\n  // we are done if we don't have callback and they are\n  // not forcing an unsafe write.\n  if (!(force || callback)) {\n    return query;\n  }\n\n  if (!query._update ||\n      !query.options.overwrite && 0 === utils.keys(query._update).length) {\n    callback && utils.soon(callback.bind(null, null, 0));\n    return query;\n  }\n\n  options = query._optionsForExec();\n  if (!callback) options.safe = false;\n\n  var criteria = query._conditions;\n  doc = query._updateForExec();\n\n  debug('update', query._collection.collectionName, criteria, doc, options);\n  callback = query._wrapCallback(op, callback, {\n    conditions: criteria\n  , doc: doc\n  , options: options\n  });\n\n  query._collection[op](criteria, doc, options, utils.tick(callback));\n\n  return query;\n}\n\n/**\n * Declare and/or execute this query as a remove() operation.\n *\n * ####Example\n *\n *     mquery(collection).remove({ artist: 'Anne Murray' }, callback)\n *\n * ####Note\n *\n * The operation is only executed when a callback is passed. To force execution without a callback (which would be an unsafe write), we must first call remove() and then execute it by using the `exec()` method.\n *\n *     // not executed\n *     var query = mquery(collection).remove({ name: 'Anne Murray' })\n *\n *     // executed\n *     mquery(collection).remove({ name: 'Anne Murray' }, callback)\n *     mquery(collection).remove({ name: 'Anne Murray' }).remove(callback)\n *\n *     // executed without a callback (unsafe write)\n *     query.exec()\n *\n *     // summary\n *     query.remove(conds, fn); // executes\n *     query.remove(conds)\n *     query.remove(fn) // executes\n *     query.remove()\n *\n * @param {Object|Query} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.remove = function (criteria, callback) {\n  this.op = 'remove';\n  var force;\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  } else if (true === criteria) {\n    force = criteria;\n    criteria = undefined;\n  }\n\n  if (!(force || callback))\n    return this;\n\n  var options = this._optionsForExec()\n  if (!callback) options.safe = false;\n\n  var conds = this._conditions;\n\n  debug('remove', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('remove', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.remove(conds, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Declare and/or execute this query as a `deleteOne()` operation. Behaves like\n * `remove()`, except for ignores the `justOne` option and always deletes at\n * most one document.\n *\n * ####Example\n *\n *     mquery(collection).deleteOne({ artist: 'Anne Murray' }, callback)\n *\n * @param {Object|Query} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.deleteOne = function (criteria, callback) {\n  this.op = 'deleteOne';\n  var force;\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  } else if (true === criteria) {\n    force = criteria;\n    criteria = undefined;\n  }\n\n  if (!(force || callback))\n    return this;\n\n  var options = this._optionsForExec()\n  if (!callback) options.safe = false;\n  delete options.justOne;\n\n  var conds = this._conditions;\n\n  debug('deleteOne', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('deleteOne', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.deleteOne(conds, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Declare and/or execute this query as a `deleteMany()` operation. Behaves like\n * `remove()`, except for ignores the `justOne` option and always deletes\n * _every_ document that matches `criteria`.\n *\n * ####Example\n *\n *     mquery(collection).deleteMany({ artist: 'Anne Murray' }, callback)\n *\n * @param {Object|Query} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.deleteMany = function (criteria, callback) {\n  this.op = 'deleteMany';\n  var force;\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  } else if (true === criteria) {\n    force = criteria;\n    criteria = undefined;\n  }\n\n  if (!(force || callback))\n    return this;\n\n  var options = this._optionsForExec()\n  if (!callback) options.safe = false;\n  delete options.justOne;\n\n  var conds = this._conditions;\n\n  debug('deleteOne', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('deleteOne', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.deleteMany(conds, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Issues a mongodb [findAndModify](http://www.mongodb.org/display/DOCS/findAndModify+Command) update command.\n *\n * Finds a matching document, updates it according to the `update` arg, passing any `options`, and returns the found document (if any) to the callback. The query executes immediately if `callback` is passed.\n *\n * ####Available options\n *\n * - `new`: bool - true to return the modified document rather than the original. defaults to true\n * - `upsert`: bool - creates the object if it doesn't exist. defaults to false.\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n *\n * ####Examples\n *\n *     query.findOneAndUpdate(conditions, update, options, callback) // executes\n *     query.findOneAndUpdate(conditions, update, options)  // returns Query\n *     query.findOneAndUpdate(conditions, update, callback) // executes\n *     query.findOneAndUpdate(conditions, update)           // returns Query\n *     query.findOneAndUpdate(update, callback)             // returns Query\n *     query.findOneAndUpdate(update)                       // returns Query\n *     query.findOneAndUpdate(callback)                     // executes\n *     query.findOneAndUpdate()                             // returns Query\n *\n * @param {Object|Query} [query]\n * @param {Object} [doc]\n * @param {Object} [options]\n * @param {Function} [callback]\n * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.findOneAndUpdate = function (criteria, doc, options, callback) {\n  this.op = 'findOneAndUpdate';\n  this._validate();\n\n  switch (arguments.length) {\n    case 3:\n      if ('function' == typeof options) {\n        callback = options;\n        options = {};\n      }\n      break;\n    case 2:\n      if ('function' == typeof doc) {\n        callback = doc;\n        doc = criteria;\n        criteria = undefined;\n      }\n      options = undefined;\n      break;\n    case 1:\n      if ('function' == typeof criteria) {\n        callback = criteria;\n        criteria = options = doc = undefined;\n      } else {\n        doc = criteria;\n        criteria = options = undefined;\n      }\n  }\n\n  if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  // apply doc\n  if (doc) {\n    this._mergeUpdate(doc);\n  }\n\n  options && this.setOptions(options);\n\n  if (!callback) return this;\n  return this._findAndModify('update', callback);\n}\n\n/**\n * Issues a mongodb [findAndModify](http://www.mongodb.org/display/DOCS/findAndModify+Command) remove command.\n *\n * Finds a matching document, removes it, passing the found document (if any) to the callback. Executes immediately if `callback` is passed.\n *\n * ####Available options\n *\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n *\n * ####Examples\n *\n *     A.where().findOneAndRemove(conditions, options, callback) // executes\n *     A.where().findOneAndRemove(conditions, options)  // return Query\n *     A.where().findOneAndRemove(conditions, callback) // executes\n *     A.where().findOneAndRemove(conditions) // returns Query\n *     A.where().findOneAndRemove(callback)   // executes\n *     A.where().findOneAndRemove()           // returns Query\n *\n * @param {Object} [conditions]\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command\n * @api public\n */\n\nQuery.prototype.findOneAndRemove = function (conditions, options, callback) {\n  this.op = 'findOneAndRemove';\n  this._validate();\n\n  if ('function' == typeof options) {\n    callback = options;\n    options = undefined;\n  } else if ('function' == typeof conditions) {\n    callback = conditions;\n    conditions = undefined;\n  }\n\n  // apply conditions\n  if (Query.canMerge(conditions)) {\n    this.merge(conditions);\n  }\n\n  // apply options\n  options && this.setOptions(options);\n\n  if (!callback) return this;\n\n  return this._findAndModify('remove', callback);\n}\n\n/**\n * _findAndModify\n *\n * @param {String} type - either \"remove\" or \"update\"\n * @param {Function} callback\n * @api private\n */\n\nQuery.prototype._findAndModify = function (type, callback) {\n  assert.equal('function', typeof callback);\n\n  var opts = this._optionsForExec()\n    , self = this\n    , fields\n    , sort\n    , doc\n\n  if ('remove' == type) {\n    opts.remove = true;\n  } else {\n    if (!('new' in opts)) opts.new = true;\n    if (!('upsert' in opts)) opts.upsert = false;\n\n    doc = this._updateForExec()\n    if (!doc) {\n      if (opts.upsert) {\n        // still need to do the upsert to empty doc\n        doc = { $set: {} };\n      } else {\n        return this.findOne(callback);\n      }\n    }\n  }\n\n  var fields = this._fieldsForExec();\n  if (fields) {\n    opts.fields = fields;\n  }\n\n  var conds = this._conditions;\n\n  debug('findAndModify', this._collection.collectionName, conds, doc, opts);\n  callback = this._wrapCallback('findAndModify', callback, {\n    conditions: conds\n  , doc: doc\n  , options: opts\n  });\n\n  this._collection\n  .findAndModify(conds, doc, opts, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Wrap callback to add tracing\n *\n * @param {Function} callback\n * @param {Object} [queryInfo]\n * @api private\n */\nQuery.prototype._wrapCallback = function (method, callback, queryInfo) {\n  var traceFunction = this._traceFunction || Query.traceFunction;\n\n  if (traceFunction) {\n    queryInfo.collectionName = this._collection.collectionName;\n\n    var traceCallback = traceFunction &&\n      traceFunction.call(null, method, queryInfo, this);\n\n    var startTime = new Date().getTime();\n\n    return function wrapperCallback (err, result) {\n      if (traceCallback) {\n        var millis = new Date().getTime() - startTime;\n        traceCallback.call(null, err, result, millis);\n      }\n\n      if (callback) {\n        callback.apply(null, arguments);\n      }\n    };\n  }\n\n  return callback;\n}\n\n/**\n * Add trace function that gets called when the query is executed.\n * The function will be called with (method, queryInfo, query) and\n * should return a callback function which will be called\n * with (err, result, millis) when the query is complete.\n *\n * queryInfo is an object containing: {\n *   collectionName: <name of the collection>,\n *   conditions: <query criteria>,\n *   options: <comment, fields, readPreference, etc>,\n *   doc: [document to update, if applicable]\n * }\n *\n * NOTE: Does not trace stream queries.\n *\n * @param {Function} traceFunction\n * @return {Query} this\n * @api public\n */\nQuery.prototype.setTraceFunction = function (traceFunction) {\n  this._traceFunction = traceFunction;\n  return this;\n}\n\n/**\n * Executes the query\n *\n * ####Examples\n *\n *     query.exec();\n *     query.exec(callback);\n *     query.exec('update');\n *     query.exec('find', callback);\n *\n * @param {String|Function} [operation]\n * @param {Function} [callback]\n * @api public\n */\n\nQuery.prototype.exec = function exec (op, callback) {\n  switch (typeof op) {\n    case 'function':\n      callback = op;\n      op = null;\n      break;\n    case 'string':\n      this.op = op;\n      break;\n  }\n\n  assert.ok(this.op, \"Missing query type: (find, update, etc)\");\n\n  if ('update' == this.op || 'remove' == this.op) {\n    callback || (callback = true);\n  }\n\n  var self = this;\n\n  if ('function' == typeof callback) {\n    this[this.op](callback);\n  } else {\n    return new Query.Promise(function(success, error) {\n      self[self.op](function(err, val) {\n        if (err) error(err);\n        else success(val);\n        self = success = error = null;\n      });\n    });\n  }\n}\n\n/**\n * Returns a thunk which when called runs this.exec()\n *\n * The thunk receives a callback function which will be\n * passed to `this.exec()`\n *\n * @return {Function}\n * @api public\n */\n\nQuery.prototype.thunk = function() {\n  var self = this;\n  return function(cb) {\n    self.exec(cb);\n  }\n}\n\n/**\n * Executes the query returning a `Promise` which will be\n * resolved with either the doc(s) or rejected with the error.\n *\n * @param {Function} [resolve]\n * @param {Function} [reject]\n * @return {Promise}\n * @api public\n */\n\nQuery.prototype.then = function(resolve, reject) {\n  var self = this;\n  var promise = new Query.Promise(function(success, error) {\n    self.exec(function(err, val) {\n      if (err) error(err);\n      else success(val);\n      self = success = error = null;\n    });\n  });\n  return promise.then(resolve, reject);\n}\n\n/**\n * Returns a stream for the given find query.\n *\n * @throws Error if operation is not a find\n * @returns {Stream} Node 0.8 style\n */\n\nQuery.prototype.stream = function(streamOptions) {\n  if ('find' != this.op)\n    throw new Error('stream() is only available for find');\n\n  var conds = this._conditions;\n\n  var options = this._optionsForExec()\n  options.fields = this._fieldsForExec()\n\n  debug('stream', this._collection.collectionName, conds, options, streamOptions);\n\n  return this._collection.findStream(conds, options, streamOptions);\n}\n\n/**\n * Determines if field selection has been made.\n *\n * @return {Boolean}\n * @api public\n */\n\nQuery.prototype.selected = function selected () {\n  return !! (this._fields && Object.keys(this._fields).length > 0);\n}\n\n/**\n * Determines if inclusive field selection has been made.\n *\n *     query.selectedInclusively() // false\n *     query.select('name')\n *     query.selectedInclusively() // true\n *     query.selectedExlusively() // false\n *\n * @returns {Boolean}\n */\n\nQuery.prototype.selectedInclusively = function selectedInclusively () {\n  if (!this._fields) return false;\n\n  var keys = Object.keys(this._fields);\n  if (0 === keys.length) return false;\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n    if (0 === this._fields[key]) return false;\n    if (this._fields[key] &&\n        typeof this._fields[key] === 'object' &&\n        this._fields[key].$meta) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines if exclusive field selection has been made.\n *\n *     query.selectedExlusively() // false\n *     query.select('-name')\n *     query.selectedExlusively() // true\n *     query.selectedInclusively() // false\n *\n * @returns {Boolean}\n */\n\nQuery.prototype.selectedExclusively = function selectedExclusively () {\n  if (!this._fields) return false;\n\n  var keys = Object.keys(this._fields);\n  if (0 === keys.length) return false;\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n    if (0 === this._fields[key]) return true;\n  }\n\n  return false;\n}\n\n/**\n * Merges `doc` with the current update object.\n *\n * @param {Object} doc\n */\n\nQuery.prototype._mergeUpdate = function (doc) {\n  if (!this._update) this._update = {};\n  if (doc instanceof Query) {\n    if (doc._update) {\n      utils.mergeClone(this._update, doc._update);\n    }\n  } else {\n    utils.mergeClone(this._update, doc);\n  }\n}\n\n/**\n * Returns default options.\n *\n * @return {Object}\n * @api private\n */\n\nQuery.prototype._optionsForExec = function () {\n  var options = utils.clone(this.options, { retainKeyOrder: true });\n  return options;\n}\n\n/**\n * Returns fields selection for this query.\n *\n * @return {Object}\n * @api private\n */\n\nQuery.prototype._fieldsForExec = function () {\n  return utils.clone(this._fields, { retainKeyOrder: true });\n}\n\n/**\n * Return an update document with corrected $set operations.\n *\n * @api private\n */\n\nQuery.prototype._updateForExec = function () {\n  var update = utils.clone(this._update, { retainKeyOrder: true })\n    , ops = utils.keys(update)\n    , i = ops.length\n    , ret = {}\n    , hasKeys\n    , val\n\n  while (i--) {\n    var op = ops[i];\n\n    if (this.options.overwrite) {\n      ret[op] = update[op];\n      continue;\n    }\n\n    if ('$' !== op[0]) {\n      // fix up $set sugar\n      if (!ret.$set) {\n        if (update.$set) {\n          ret.$set = update.$set;\n        } else {\n          ret.$set = {};\n        }\n      }\n      ret.$set[op] = update[op];\n      ops.splice(i, 1);\n      if (!~ops.indexOf('$set')) ops.push('$set');\n    } else if ('$set' === op) {\n      if (!ret.$set) {\n        ret[op] = update[op];\n      }\n    } else {\n      ret[op] = update[op];\n    }\n  }\n\n  this._compiledUpdate = ret;\n  return ret;\n}\n\n/**\n * Make sure _path is set.\n *\n * @parmam {String} method\n */\n\nQuery.prototype._ensurePath = function (method) {\n  if (!this._path) {\n    var msg = method + '() must be used after where() '\n                     + 'when called with these arguments'\n    throw new Error(msg);\n  }\n}\n\n/*!\n * Permissions\n */\n\nQuery.permissions = require('./permissions');\n\nQuery._isPermitted = function (a, b) {\n  var denied = Query.permissions[b];\n  if (!denied) return true;\n  return true !== denied[a];\n}\n\nQuery.prototype._validate = function (action) {\n  var fail;\n  var validator;\n\n  if (undefined === action) {\n\n    validator = Query.permissions[this.op];\n    if ('function' != typeof validator) return true;\n\n    fail = validator(this);\n\n  } else if (!Query._isPermitted(action, this.op)) {\n    fail = action;\n  }\n\n  if (fail) {\n    throw new Error(fail + ' cannot be used with ' + this.op);\n  }\n}\n\n/**\n * Determines if `conds` can be merged using `mquery().merge()`\n *\n * @param {Object} conds\n * @return {Boolean}\n */\n\nQuery.canMerge = function (conds) {\n  return conds instanceof Query || utils.isObject(conds);\n}\n\n/**\n * Set a trace function that will get called whenever a\n * query is executed.\n *\n * See `setTraceFunction()` for details.\n *\n * @param {Object} conds\n * @return {Boolean}\n */\nQuery.setGlobalTraceFunction = function (traceFunction) {\n  Query.traceFunction = traceFunction;\n}\n\n/*!\n * Exports.\n */\n\nQuery.utils = utils;\nQuery.env = require('./env')\nQuery.Collection = require('./collection');\nQuery.BaseCollection = require('./collection/collection');\nQuery.Promise = require('bluebird');\nmodule.exports = exports = Query;\n\n// TODO\n// test utils\n"]}