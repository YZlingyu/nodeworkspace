{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\nvar sliced = require('../')\nvar assert = require('assert')\n\ndescribe('sliced', function(){\n  it('exports a function', function(){\n    assert.equal('function', typeof sliced);\n  })\n  describe('with 1 arg', function(){\n    it('returns an array of the arg', function(){\n      var o = [3, \"4\", {}];\n      var r = sliced(o);\n      assert.equal(3, r.length);\n      assert.equal(o[0], r[0]);\n      assert.equal(o[1], r[1]);\n      assert.equal(o[1], r[1]);\n    })\n  })\n  describe('with 2 args', function(){\n    it('returns an array of the arg starting at the 2nd arg', function(){\n      var o = [3, \"4\", 5, null];\n      var r = sliced(o, 2);\n      assert.equal(2, r.length);\n      assert.equal(o[2], r[0]);\n      assert.equal(o[3], r[1]);\n    })\n  })\n  describe('with 3 args', function(){\n    it('returns an array of the arg from the 2nd to the 3rd arg', function(){\n      var o = [3, \"4\", 5, null];\n      var r = sliced(o, 1, 2);\n      assert.equal(1, r.length);\n      assert.equal(o[1], r[0]);\n    })\n  })\n  describe('with negative start and no end', function(){\n    it('begins at an offset from the end and includes all following elements', function(){\n      var o = [3, \"4\", 5, null];\n      var r = sliced(o, -2);\n      assert.equal(2, r.length);\n      assert.equal(o[2], r[0]);\n      assert.equal(o[3], r[1]);\n\n      var r = sliced(o, -12);\n      assert.equal(4, r.length);\n      assert.equal(o[0], r[0]);\n      assert.equal(o[1], r[1]);\n    })\n  })\n  describe('with negative start and positive end', function(){\n    it('begins at an offset from the end and includes `end` elements', function(){\n      var o = [3, \"4\", {x:1}, null];\n\n      var r = sliced(o, -2, 1);\n      assert.equal(0, r.length);\n\n      var r = sliced(o, -2, 2);\n      assert.equal(0, r.length);\n\n      var r = sliced(o, -2, 3);\n      assert.equal(1, r.length);\n      assert.equal(o[2], r[0]);\n    })\n  })\n  describe('with negative start and negative end', function(){\n    it('begins at `start` offset from the end and includes all elements up to `end` offset from the end', function(){\n      var o = [3, \"4\", {x:1}, null];\n      var r = sliced(o, -3, -1);\n      assert.equal(2, r.length);\n      assert.equal(o[1], r[0]);\n      assert.equal(o[2], r[1]);\n\n      var r = sliced(o, -3, -3);\n      assert.equal(0, r.length);\n\n      var r = sliced(o, -3, -4);\n      assert.equal(0, r.length);\n    })\n  })\n})\n"]}