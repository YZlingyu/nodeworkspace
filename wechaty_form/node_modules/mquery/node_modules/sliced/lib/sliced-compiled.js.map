{"version":3,"sources":["sliced.js"],"names":[],"mappings":";AACA;;;;;;;;;AASA,OAAO,OAAP,GAAiB,UAAU,IAAV,EAAgB,KAAhB,EAAuB,QAAvB,EAAiC;AAChD,MAAI,MAAM,EAAV;AACA,MAAI,MAAM,KAAK,MAAf;;AAEA,MAAI,MAAM,GAAV,EAAe,OAAO,GAAP;;AAEf,MAAI,QAAQ,QAAQ,CAAR,GACR,KAAK,GAAL,CAAS,CAAT,EAAY,QAAQ,GAApB,CADQ,GAER,SAAS,CAFb;;AAIA,MAAI,aAAa,SAAjB,EAA4B;AAC1B,UAAM,WAAW,CAAX,GACF,WAAW,GADT,GAEF,QAFJ;AAGD;;AAED,SAAO,QAAQ,KAAf,EAAsB;AACpB,QAAI,MAAM,KAAV,IAAmB,KAAK,GAAL,CAAnB;AACD;;AAED,SAAO,GAAP;AACD,CArBD","file":"sliced-compiled.js","sourcesContent":["\n/**\n * An Array.prototype.slice.call(arguments) alternative\n *\n * @param {Object} args something with a length\n * @param {Number} slice\n * @param {Number} sliceEnd\n * @api public\n */\n\nmodule.exports = function (args, slice, sliceEnd) {\n  var ret = [];\n  var len = args.length;\n\n  if (0 === len) return ret;\n\n  var start = slice < 0\n    ? Math.max(0, slice + len)\n    : slice || 0;\n\n  if (sliceEnd !== undefined) {\n    len = sliceEnd < 0\n      ? sliceEnd + len\n      : sliceEnd\n  }\n\n  while (len-- > start) {\n    ret[len - start] = args[len];\n  }\n\n  return ret;\n}\n\n"]}