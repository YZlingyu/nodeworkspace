{"version":3,"sources":["mainHeader.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,QAAQ,SAAR,CAAZ;AAAA,IACI,YAAY,MAAM,SADtB;;AAGA;AACA,OAAO,OAAP,GAAiB,YAAY;AACzB,QAAI,iBAAiB,CAArB;AAAA,QACI,gBAAgB,CADpB;AAAA,QAEI,QAAQ,CAFZ;AAAA,QAGI,UAAU,CAHd;AAAA,QAII,iBAAiB,CAJrB;;AAMA,WAAO;AACH,YAAI,WAAJ,GAAmB;AAAE,mBAAO,cAAP;AAAuB,SADzC;AAEH,YAAI,WAAJ,EAAiB,UAAU,GAA3B,EAAgC;AAAE,6BAAiB,gBAAgB,GAAjC;AAAuC,SAFtE;;AAIH,YAAI,YAAJ,GAAoB;AAAE,mBAAO,aAAP;AAAsB,SAJzC;AAKH,YAAI,YAAJ,EAAkB,UAAU,GAA5B,EAAiC;AAAE,4BAAgB,iBAAiB,GAAjC;AAAuC,SALvE;;AAOH,YAAI,IAAJ,GAAY;AAAE,mBAAO,KAAP;AAAc,SAPzB;AAQH,YAAI,IAAJ,EAAU,UAAU,GAApB,EAAyB;AAAE,oBAAQ,GAAR;AAAc,SARtC;;AAUH,YAAI,MAAJ,GAAc;AAAE,mBAAO,OAAP;AAAgB,SAV7B;AAWH,YAAI,MAAJ,EAAY,UAAU,GAAtB,EAA2B;AAAE,sBAAU,GAAV;AAAgB,SAX1C;;AAaH,YAAI,aAAJ,GAAqB;AAAE,mBAAO,cAAP;AAAuB,SAb3C;AAcH,YAAI,aAAJ,EAAmB,UAAU,GAA7B,EAAkC;AAAE,6BAAiB,GAAjB;AAAuB,SAdxD;;AAgBH,YAAI,cAAJ,GAAsB;AAClB,mBAAO,UAAU,MAAV,GAAmB,cAA1B;AACH,SAlBE;;AAoBH,wBAAiB,WAAS,UAAU,IAAnB,EAAyB;AACtC;AACA,gBAAI,KAAK,MAAL,IAAe,UAAU,MAAzB,IAAmC,KAAK,YAAL,CAAkB,CAAlB,KAAwB,UAAU,MAAzE,EACI,MAAM,MAAM,MAAN,CAAa,WAAnB;;AAEJ;AACA,6BAAiB,KAAK,YAAL,CAAkB,UAAU,MAA5B,CAAjB;AACA;AACA,4BAAgB,KAAK,YAAL,CAAkB,UAAU,MAA5B,CAAhB;AACA;AACA,oBAAQ,KAAK,YAAL,CAAkB,UAAU,MAA5B,CAAR;AACA;AACA,sBAAU,KAAK,YAAL,CAAkB,UAAU,MAA5B,CAAV;AACA;AACA,6BAAiB,KAAK,YAAL,CAAkB,UAAU,MAA5B,CAAjB;AACH,SAnCE;;AAqCH,kBAAW,YAAW;AACnB,gBAAI,IAAI,IAAI,MAAJ,CAAW,UAAU,MAAV,GAAmB,cAA9B,CAAR;AACC;AACA,cAAE,aAAF,CAAgB,UAAU,MAA1B,EAAkC,CAAlC;AACA,cAAE,aAAF,CAAgB,CAAhB,EAAmB,CAAnB;AACA;AACA,cAAE,aAAF,CAAgB,cAAhB,EAAgC,UAAU,MAA1C;AACA;AACA,cAAE,aAAF,CAAgB,aAAhB,EAA+B,UAAU,MAAzC;AACA;AACA,cAAE,aAAF,CAAgB,KAAhB,EAAuB,UAAU,MAAjC;AACA;AACA,cAAE,aAAF,CAAgB,OAAhB,EAAyB,UAAU,MAAnC;AACA;AACA,cAAE,aAAF,CAAgB,cAAhB,EAAgC,UAAU,MAA1C;AACA;AACA,cAAE,IAAF,CAAO,GAAP,EAAY,UAAU,MAAtB;;AAEA,mBAAO,CAAP;AACH,SAxDE;;AA0DH,kBAAW,YAAW;AAClB,mBAAO,QACH,oBADG,GACoB,cADpB,GACqC,KADrC,GAEH,qBAFG,GAEqB,aAFrB,GAEqC,KAFrC,GAGH,aAHG,GAGa,KAHb,GAGqB,WAHrB,GAIH,iBAJG,GAIiB,QAAQ,QAAR,CAAiB,EAAjB,EAAqB,WAArB,EAJjB,GAIsD,KAJtD,GAKH,wBALG,GAKwB,cALxB,GAKyC,IALzC,GAMP,GANA;AAOH;AAlEE,KAAP;AAoEH,CA3ED","file":"mainHeader-compiled.js","sourcesContent":["var Utils = require(\"../util\"),\r\n    Constants = Utils.Constants;\r\n\r\n/* The entries in the end of central directory */\r\nmodule.exports = function () {\r\n    var _volumeEntries = 0,\r\n        _totalEntries = 0,\r\n        _size = 0,\r\n        _offset = 0,\r\n        _commentLength = 0;\r\n\r\n    return {\r\n        get diskEntries () { return _volumeEntries },\r\n        set diskEntries (/*Number*/val) { _volumeEntries = _totalEntries = val; },\r\n\r\n        get totalEntries () { return _totalEntries },\r\n        set totalEntries (/*Number*/val) { _totalEntries = _volumeEntries = val; },\r\n\r\n        get size () { return _size },\r\n        set size (/*Number*/val) { _size = val; },\r\n\r\n        get offset () { return _offset },\r\n        set offset (/*Number*/val) { _offset = val; },\r\n\r\n        get commentLength () { return _commentLength },\r\n        set commentLength (/*Number*/val) { _commentLength = val; },\r\n\r\n        get mainHeaderSize () {\r\n            return Constants.ENDHDR + _commentLength;\r\n        },\r\n\r\n        loadFromBinary : function(/*Buffer*/data) {\r\n            // data should be 22 bytes and start with \"PK 05 06\"\r\n            if (data.length != Constants.ENDHDR || data.readUInt32LE(0) != Constants.ENDSIG)\r\n                throw Utils.Errors.INVALID_END;\r\n\r\n            // number of entries on this volume\r\n            _volumeEntries = data.readUInt16LE(Constants.ENDSUB);\r\n            // total number of entries\r\n            _totalEntries = data.readUInt16LE(Constants.ENDTOT);\r\n            // central directory size in bytes\r\n            _size = data.readUInt32LE(Constants.ENDSIZ);\r\n            // offset of first CEN header\r\n            _offset = data.readUInt32LE(Constants.ENDOFF);\r\n            // zip file comment length\r\n            _commentLength = data.readUInt16LE(Constants.ENDCOM);\r\n        },\r\n\r\n        toBinary : function() {\r\n           var b = new Buffer(Constants.ENDHDR + _commentLength);\r\n            // \"PK 05 06\" signature\r\n            b.writeUInt32LE(Constants.ENDSIG, 0);\r\n            b.writeUInt32LE(0, 4);\r\n            // number of entries on this volume\r\n            b.writeUInt16LE(_volumeEntries, Constants.ENDSUB);\r\n            // total number of entries\r\n            b.writeUInt16LE(_totalEntries, Constants.ENDTOT);\r\n            // central directory size in bytes\r\n            b.writeUInt32LE(_size, Constants.ENDSIZ);\r\n            // offset of first CEN header\r\n            b.writeUInt32LE(_offset, Constants.ENDOFF);\r\n            // zip file comment length\r\n            b.writeUInt16LE(_commentLength, Constants.ENDCOM);\r\n            // fill comment memory with spaces so no garbage is left there\r\n            b.fill(\" \", Constants.ENDHDR);\r\n\r\n            return b;\r\n        },\r\n\r\n        toString : function() {\r\n            return '{\\n' +\r\n                '\\t\"diskEntries\" : ' + _volumeEntries + \",\\n\" +\r\n                '\\t\"totalEntries\" : ' + _totalEntries + \",\\n\" +\r\n                '\\t\"size\" : ' + _size + \" bytes,\\n\" +\r\n                '\\t\"offset\" : 0x' + _offset.toString(16).toUpperCase() + \",\\n\" +\r\n                '\\t\"commentLength\" : 0x' + _commentLength + \"\\n\" +\r\n            '}';\r\n        }\r\n    }\r\n};"]}