{"version":3,"sources":["utils.js"],"names":[],"mappings":"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","file":"utils-compiled.js","sourcesContent":["var fs = require(\"fs\"),\r\n    pth = require('path');\r\n\r\nfs.existsSync = fs.existsSync || pth.existsSync;\r\n\r\nmodule.exports = (function() {\r\n\r\n    var crcTable = [],\r\n        Constants = require('./constants'),\r\n        Errors = require('./errors'),\r\n\r\n        PATH_SEPARATOR = pth.normalize(\"/\");\r\n\r\n\r\n    function mkdirSync(/*String*/path) {\r\n        var resolvedPath = path.split(PATH_SEPARATOR)[0];\r\n        path.split(PATH_SEPARATOR).forEach(function(name) {\r\n            if (!name || name.substr(-1,1) == \":\") return;\r\n            resolvedPath += PATH_SEPARATOR + name;\r\n            var stat;\r\n            try {\r\n                stat = fs.statSync(resolvedPath);\r\n            } catch (e) {\r\n                fs.mkdirSync(resolvedPath);\r\n            }\r\n            if (stat && stat.isFile())\r\n                throw Errors.FILE_IN_THE_WAY.replace(\"%s\", resolvedPath);\r\n        });\r\n    }\r\n\r\n    function findSync(/*String*/root, /*RegExp*/pattern, /*Boolean*/recoursive) {\r\n        if (typeof pattern === 'boolean') {\r\n            recoursive = pattern;\r\n            pattern = undefined;\r\n        }\r\n        var files = [];\r\n        fs.readdirSync(root).forEach(function(file) {\r\n            var path = pth.join(root, file);\r\n\r\n            if (fs.statSync(path).isDirectory() && recoursive)\r\n                files = files.concat(findSync(path, pattern, recoursive));\r\n\r\n            if (!pattern || pattern.test(path)) {\r\n                files.push(pth.normalize(path) + (fs.statSync(path).isDirectory() ? PATH_SEPARATOR : \"\"));\r\n            }\r\n\r\n        });\r\n        return files;\r\n    }\r\n\r\n    return {\r\n        makeDir : function(/*String*/path) {\r\n            mkdirSync(path);\r\n        },\r\n\r\n        crc32 : function(buf) {\r\n            var b = new Buffer(4);\r\n            if (!crcTable.length) {\r\n                for (var n = 0; n < 256; n++) {\r\n                    var c = n;\r\n                    for (var k = 8; --k >= 0;)  //\r\n                        if ((c & 1) != 0)  { c = 0xedb88320 ^ (c >>> 1); } else { c = c >>> 1; }\r\n                    if (c < 0) {\r\n                        b.writeInt32LE(c, 0);\r\n                        c = b.readUInt32LE(0);\r\n                    }\r\n                    crcTable[n] = c;\r\n                }\r\n            }\r\n            var crc = 0, off = 0, len = buf.length, c1 = ~crc;\r\n            while(--len >= 0) c1 = crcTable[(c1 ^ buf[off++]) & 0xff] ^ (c1 >>> 8);\r\n            crc = ~c1;\r\n            b.writeInt32LE(crc & 0xffffffff, 0);\r\n            return b.readUInt32LE(0);\r\n        },\r\n\r\n        methodToString : function(/*Number*/method) {\r\n            switch (method) {\r\n                case Constants.STORED:\r\n                    return 'STORED (' + method + ')';\r\n                case Constants.DEFLATED:\r\n                    return 'DEFLATED (' + method + ')';\r\n                default:\r\n                    return 'UNSUPPORTED (' + method + ')';\r\n            }\r\n\r\n        },\r\n\r\n        writeFileTo : function(/*String*/path, /*Buffer*/content, /*Boolean*/overwrite, /*Number*/attr) {\r\n            if (fs.existsSync(path)) {\r\n                if (!overwrite)\r\n                    return false; // cannot overwite\r\n\r\n                var stat = fs.statSync(path);\r\n                if (stat.isDirectory()) {\r\n                    return false;\r\n                }\r\n            }\r\n            var folder = pth.dirname(path);\r\n            if (!fs.existsSync(folder)) {\r\n                mkdirSync(folder);\r\n            }\r\n\r\n            var fd;\r\n            try {\r\n                fd = fs.openSync(path, 'w', 438); // 0666\r\n            } catch(e) {\r\n                fs.chmodSync(path, 438);\r\n                fd = fs.openSync(path, 'w', 438);\r\n            }\r\n            if (fd) {\r\n                fs.writeSync(fd, content, 0, content.length, 0);\r\n                fs.closeSync(fd);\r\n            }\r\n            fs.chmodSync(path, attr || 438);\r\n            return true;\r\n        },\r\n\r\n        writeFileToAsync : function(/*String*/path, /*Buffer*/content, /*Boolean*/overwrite, /*Number*/attr, /*Function*/callback) {\r\n            if(typeof attr === 'function') {\r\n                callback = attr;\r\n                attr = undefined;\r\n            }\r\n\r\n            fs.exists(path, function(exists) {\r\n                if(exists && !overwrite)\r\n                    return callback(false);\r\n\r\n                fs.stat(path, function(err, stat) {\r\n                    if(exists &&stat.isDirectory()) {\r\n                        return callback(false);\r\n                    }\r\n\r\n                    var folder = pth.dirname(path);\r\n                    fs.exists(folder, function(exists) {\r\n                        if(!exists)\r\n                            mkdirSync(folder);\r\n                        \r\n                        fs.open(path, 'w', 438, function(err, fd) {\r\n                            if(err) {\r\n                                fs.chmod(path, 438, function(err) {\r\n                                    fs.open(path, 'w', 438, function(err, fd) {\r\n                                        fs.write(fd, content, 0, content.length, 0, function(err, written, buffer) {\r\n                                            fs.close(fd, function(err) {\r\n                                                fs.chmod(path, attr || 438, function() {\r\n                                                    callback(true);\r\n                                                })\r\n                                            });\r\n                                        });\r\n                                    });\r\n                                })\r\n                            } else {\r\n                                if(fd) {\r\n                                    fs.write(fd, content, 0, content.length, 0, function(err, written, buffer) {\r\n                                        fs.close(fd, function(err) {\r\n                                            fs.chmod(path, attr || 438, function() {\r\n                                                callback(true);\r\n                                            })\r\n                                        });\r\n                                    });\r\n                                } else {\r\n                                    fs.chmod(path, attr || 438, function() {\r\n                                        callback(true);\r\n                                    })\r\n                                }\r\n                            }\r\n                        });\r\n                    })\r\n                })\r\n            })\r\n        },\r\n\r\n        findFiles : function(/*String*/path) {\r\n            return findSync(path, true);\r\n        },\r\n\r\n        getAttributes : function(/*String*/path) {\r\n\r\n        },\r\n\r\n        setAttributes : function(/*String*/path) {\r\n\r\n        },\r\n\r\n        toBuffer : function(input) {\r\n            if (Buffer.isBuffer(input)) {\r\n                return input;\r\n            } else {\r\n                if (input.length == 0) {\r\n                    return new Buffer(0)\r\n                }\r\n                return new Buffer(input, 'utf8');\r\n            }\r\n        },\r\n\r\n        Constants : Constants,\r\n        Errors : Errors\r\n    }\r\n})();\r\n"]}