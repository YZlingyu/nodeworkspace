{"version":3,"sources":["index.js"],"names":[],"mappings":";AACA;;;;AAIA,IAAI,MAAM,OAAO,SAAP,CAAiB,cAA3B;;AAEA;;;;;;;;AAQA,QAAQ,IAAR,GAAe,OAAO,IAAP,IAAe,UAAS,GAAT,EAAa;AACzC,MAAI,OAAO,EAAX;AACA,OAAK,IAAI,GAAT,IAAgB,GAAhB,EAAqB;AACnB,QAAI,IAAI,IAAJ,CAAS,GAAT,EAAc,GAAd,CAAJ,EAAwB;AACtB,WAAK,IAAL,CAAU,GAAV;AACD;AACF;AACD,SAAO,IAAP;AACD,CARD;;AAUA;;;;;;;;AAQA,QAAQ,MAAR,GAAiB,UAAS,GAAT,EAAa;AAC5B,MAAI,OAAO,EAAX;AACA,OAAK,IAAI,GAAT,IAAgB,GAAhB,EAAqB;AACnB,QAAI,IAAI,IAAJ,CAAS,GAAT,EAAc,GAAd,CAAJ,EAAwB;AACtB,WAAK,IAAL,CAAU,IAAI,GAAJ,CAAV;AACD;AACF;AACD,SAAO,IAAP;AACD,CARD;;AAUA;;;;;;;;;AASA,QAAQ,KAAR,GAAgB,UAAS,CAAT,EAAY,CAAZ,EAAc;AAC5B,OAAK,IAAI,GAAT,IAAgB,CAAhB,EAAmB;AACjB,QAAI,IAAI,IAAJ,CAAS,CAAT,EAAY,GAAZ,CAAJ,EAAsB;AACpB,QAAE,GAAF,IAAS,EAAE,GAAF,CAAT;AACD;AACF;AACD,SAAO,CAAP;AACD,CAPD;;AASA;;;;;;;;AAQA,QAAQ,MAAR,GAAiB,UAAS,GAAT,EAAa;AAC5B,SAAO,QAAQ,IAAR,CAAa,GAAb,EAAkB,MAAzB;AACD,CAFD;;AAIA;;;;;;;;AAQA,QAAQ,OAAR,GAAkB,UAAS,GAAT,EAAa;AAC7B,SAAO,KAAK,QAAQ,MAAR,CAAe,GAAf,CAAZ;AACD,CAFD","file":"index-compiled.js","sourcesContent":["\n/**\n * HOP ref.\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Return own keys in `obj`.\n *\n * @param {Object} obj\n * @return {Array}\n * @api public\n */\n\nexports.keys = Object.keys || function(obj){\n  var keys = [];\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n/**\n * Return own values in `obj`.\n *\n * @param {Object} obj\n * @return {Array}\n * @api public\n */\n\nexports.values = function(obj){\n  var vals = [];\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      vals.push(obj[key]);\n    }\n  }\n  return vals;\n};\n\n/**\n * Merge `b` into `a`.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n * @api public\n */\n\nexports.merge = function(a, b){\n  for (var key in b) {\n    if (has.call(b, key)) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n\n/**\n * Return length of `obj`.\n *\n * @param {Object} obj\n * @return {Number}\n * @api public\n */\n\nexports.length = function(obj){\n  return exports.keys(obj).length;\n};\n\n/**\n * Check if `obj` is empty.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api public\n */\n\nexports.isEmpty = function(obj){\n  return 0 == exports.length(obj);\n};"]}