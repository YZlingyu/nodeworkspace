{"version":3,"sources":["object.js"],"names":[],"mappings":";AACA;;;;AAIA,IAAI,SAAS,QAAQ,IAAR,CAAb;;AAEA,SAAS,YAAT,EAAuB,YAAU;AAC/B,KAAG,qCAAH,EAA0C,YAAU;AAClD,QAAI,MAAM,EAAE,MAAM,MAAR,EAAgB,KAAK,CAArB,EAAV;AACA,WAAO,IAAP,CAAY,GAAZ,EAAiB,MAAjB,CAAwB,GAAxB,CAA4B,CAAC,MAAD,EAAS,KAAT,CAA5B;AACD,GAHD;AAID,CALD;;AAOA,SAAS,cAAT,EAAyB,YAAU;AACjC,KAAG,uCAAH,EAA4C,YAAU;AACpD,QAAI,MAAM,EAAE,MAAM,MAAR,EAAgB,KAAK,CAArB,EAAV;AACA,WAAO,MAAP,CAAc,GAAd,EAAmB,MAAnB,CAA0B,GAA1B,CAA8B,CAAC,MAAD,EAAS,CAAT,CAA9B;AACD,GAHD;AAID,CALD;;AAOA,SAAS,cAAT,EAAyB,YAAU;AACjC,KAAG,yBAAH,EAA8B,YAAU;AACtC,QAAI,MAAM,EAAE,MAAM,MAAR,EAAgB,KAAK,CAArB,EAAV;AACA,WAAO,MAAP,CAAc,GAAd,EAAmB,MAAnB,CAA0B,KAA1B,CAAgC,CAAhC;AACD,GAHD;AAID,CALD;;AAOA,SAAS,cAAT,EAAyB,YAAU;AACjC,KAAG,0BAAH,EAA+B,YAAU;AACvC,QAAI,IAAI,EAAE,KAAK,KAAP,EAAR;AACA,QAAI,IAAI,EAAE,KAAK,KAAP,EAAR;AACA,WAAO,KAAP,CAAa,CAAb,EAAgB,CAAhB,EAAmB,MAAnB,CAA0B,GAA1B,CAA8B,EAAE,KAAK,KAAP,EAAc,KAAK,KAAnB,EAA9B;AACD,GAJD;;AAMA,KAAG,6BAAH,EAAkC,YAAU;AAC1C,QAAI,IAAI,EAAE,KAAK,KAAP,EAAR;AACA,QAAI,IAAI,EAAE,KAAK,KAAP,EAAR;AACA,WAAO,KAAP,CAAa,CAAb,EAAgB,CAAhB,EAAmB,MAAnB,CAA0B,GAA1B,CAA8B,EAAE,KAAK,KAAP,EAA9B;AACD,GAJD;AAKD,CAZD;;AAcA,SAAS,YAAT,EAAuB,YAAU;AAC/B,KAAG,qCAAH,EAA0C,YAAU;AAClD,WAAO,OAAP,CAAe,EAAf,EAAmB,MAAnB,CAA0B,EAA1B,CAA6B,IAA7B;AACA,WAAO,OAAP,CAAe,EAAE,KAAK,KAAP,EAAf,EAA+B,MAA/B,CAAsC,EAAtC,CAAyC,KAAzC;AACD,GAHD;AAID,CALD","file":"object-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar object = require('..');\n\ndescribe('.keys(obj)', function(){\n  it('should return the keys of an object', function(){\n    var obj = { name: 'tobi', age: 1 };\n    object.keys(obj).should.eql(['name', 'age']);\n  })\n})\n\ndescribe('.values(obj)', function(){\n  it('should return the values of an object', function(){\n    var obj = { name: 'tobi', age: 1 };\n    object.values(obj).should.eql(['tobi', 1]);\n  })\n})\n\ndescribe('.length(obj)', function(){\n  it('should return key count', function(){\n    var obj = { name: 'tobi', age: 1 };\n    object.length(obj).should.equal(2);\n  })\n})\n\ndescribe('.merge(a, b)', function(){\n  it('should merge two objects', function(){\n    var a = { foo: 'bar' };\n    var b = { bar: 'baz' };\n    object.merge(a, b).should.eql({ foo: 'bar', bar: 'baz' });\n  })\n\n  it('should give precedence to b', function(){\n    var a = { foo: 'bar' };\n    var b = { foo: 'baz' };\n    object.merge(a, b).should.eql({ foo: 'baz' });\n  })\n})\n\ndescribe('.isEmpty()', function(){\n  it('should check if the object is empty', function(){\n    object.isEmpty({}).should.be.true;\n    object.isEmpty({ foo: 'bar' }).should.be.false;\n  })\n})"]}