{"version":3,"sources":["post.test.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,SAAS,QAAQ,KAAR,CAAb;;AAEA,SAAS,UAAT,EAAqB,YAAW;AAC9B,MAAI,KAAJ;;AAEA,aAAW,YAAW;AACpB,YAAQ,IAAI,MAAJ,EAAR;AACD,GAFD;;AAIA,KAAG,gBAAH,EAAqB,UAAS,IAAT,EAAe;AAClC,UAAM,IAAN,CAAW,MAAX,EAAmB,UAAS,IAAT,EAAe,QAAf,EAAyB;AAC1C,eAAS,QAAT;AACD,KAFD;;AAIA,UAAM,QAAN,CAAe,MAAf,EAAuB,IAAvB,EAA6B,CAAC,CAAD,CAA7B,EAAkC,UAAS,KAAT,EAAgB,IAAhB,EAAsB;AACtD,aAAO,KAAP,CAAa,QAAb,EAAuB,KAAvB;AACA,aAAO,EAAP,CAAU,CAAC,IAAX;AACA;AACD,KAJD;AAKD,GAVD;;AAYA,KAAG,gBAAH,EAAqB,UAAS,IAAT,EAAe;AAClC,UAAM,IAAN,CAAW,MAAX,EAAmB,UAAS,IAAT,EAAe,QAAf,EAAyB;AAC1C,iBACE,YAAW;AACT;AACD,OAHH,EAIE,CAJF;AAKD,KAND;;AAQA,UAAM,IAAN,CAAW,MAAX,EAAmB,UAAS,IAAT,EAAe,QAAf,EAAyB;AAC1C,iBACE,YAAW;AACT;AACD,OAHH,EAIE,CAJF;AAKD,KAND;;AAQA,UAAM,QAAN,CAAe,MAAf,EAAuB,IAAvB,EAA6B,CAAC,CAAD,CAA7B,EAAkC,UAAS,KAAT,EAAgB,IAAhB,EAAsB;AACtD,aAAO,OAAP,CAAe,KAAf;AACA,aAAO,KAAP,CAAa,CAAb,EAAgB,IAAhB;AACA;AACD,KAJD;AAKD,GAtBD;;AAwBA,KAAG,aAAH,EAAkB,UAAS,IAAT,EAAe;AAC/B,QAAI,SAAS,EAAb;AACA,UAAM,IAAN,CAAW,MAAX,EAAmB,UAAS,IAAT,EAAe,QAAf,EAAyB;AAC1C,aAAO,KAAP,GAAe,IAAf;AACA;AACD,KAHD;;AAKA,UAAM,IAAN,CAAW,MAAX,EAAmB,UAAS,IAAT,EAAe,QAAf,EAAyB;AAC1C,aAAO,MAAP,GAAgB,IAAhB;AACA,eAAS,IAAI,KAAJ,CAAU,MAAV,CAAT;AACD,KAHD;;AAKA,UAAM,IAAN,CAAW,MAAX,EAAmB,UAAS,IAAT,EAAe,QAAf,EAAyB;AAC1C,aAAO,EAAP,CAAU,KAAV;AACD,KAFD;;AAIA,UAAM,IAAN,CAAW,MAAX,EAAmB,UAAS,KAAT,EAAgB,IAAhB,EAAsB,QAAtB,EAAgC;AACjD,aAAO,MAAP,GAAgB,IAAhB;AACA,aAAO,KAAP,CAAa,MAAM,OAAnB,EAA4B,MAA5B;AACA,eAAS,IAAI,KAAJ,CAAU,QAAV,CAAT;AACD,KAJD;;AAMA,UAAM,IAAN,CAAW,MAAX,EAAmB,UAAS,KAAT,EAAgB,IAAhB,EAAsB,QAAtB,EAAgC;AACjD,aAAO,KAAP,GAAe,IAAf;AACA,aAAO,KAAP,CAAa,MAAM,OAAnB,EAA4B,QAA5B;AACA,eAAS,IAAI,KAAJ,CAAU,OAAV,CAAT;AACD,KAJD;;AAMA,UAAM,QAAN,CAAe,MAAf,EAAuB,IAAvB,EAA6B,CAAC,CAAD,CAA7B,EAAkC,UAAS,KAAT,EAAgB,IAAhB,EAAsB;AACtD,aAAO,EAAP,CAAU,KAAV;AACA,aAAO,KAAP,CAAa,MAAM,OAAnB,EAA4B,OAA5B;AACA,aAAO,SAAP,CAAiB,MAAjB,EAAyB;AACvB,eAAO,IADgB;AAEvB,gBAAQ,IAFe;AAGvB,gBAAQ,IAHe;AAIvB,eAAO;AAJgB,OAAzB;AAMA;AACD,KAVD;AAWD,GAvCD;;AAyCA,KAAG,gCAAH,EAAqC,UAAS,IAAT,EAAe;AAClD,QAAI,SAAS,EAAb;;AAEA,UAAM,IAAN,CAAW,MAAX,EAAmB,UAAS,IAAT,EAAe,QAAf,EAAyB;AAC1C,aAAO,EAAP,CAAU,KAAV;AACD,KAFD;;AAIA,UAAM,IAAN,CAAW,MAAX,EAAmB,UAAS,KAAT,EAAgB,IAAhB,EAAsB,QAAtB,EAAgC;AACjD,aAAO,MAAP,GAAgB,IAAhB;AACA,aAAO,KAAP,CAAa,MAAM,OAAnB,EAA4B,MAA5B;AACA,eAAS,IAAI,KAAJ,CAAU,QAAV,CAAT;AACD,KAJD;;AAMA,UAAM,IAAN,CAAW,MAAX,EAAmB,UAAS,KAAT,EAAgB,IAAhB,EAAsB,QAAtB,EAAgC;AACjD,aAAO,KAAP,GAAe,IAAf;AACA,aAAO,KAAP,CAAa,MAAM,OAAnB,EAA4B,QAA5B;AACA,eAAS,IAAI,KAAJ,CAAU,OAAV,CAAT;AACD,KAJD;;AAMA,UAAM,IAAN,CAAW,MAAX,EAAmB,UAAS,KAAT,EAAgB,IAAhB,EAAsB,QAAtB,EAAgC;AACjD,aAAO,MAAP,GAAgB,IAAhB;AACA,aAAO,KAAP,CAAa,MAAM,OAAnB,EAA4B,OAA5B;AACA;AACD,KAJD;;AAMA,QAAI,UAAU,EAAE,OAAO,IAAI,KAAJ,CAAU,MAAV,CAAT,EAAd;AACA,UAAM,QAAN,CAAe,MAAf,EAAuB,IAAvB,EAA6B,CAAC,CAAD,CAA7B,EAAkC,OAAlC,EAA2C,UAAS,KAAT,EAAgB,IAAhB,EAAsB;AAC/D,aAAO,EAAP,CAAU,KAAV;AACA,aAAO,KAAP,CAAa,MAAM,OAAnB,EAA4B,OAA5B;AACA,aAAO,SAAP,CAAiB,MAAjB,EAAyB;AACvB,gBAAQ,IADe;AAEvB,eAAO,IAFgB;AAGvB,gBAAQ;AAHe,OAAzB;AAKA;AACD,KATD;AAUD,GApCD;AAqCD,CAzHD;;AA2HA,SAAS,cAAT,EAAyB,YAAW;AAClC,MAAI,KAAJ;;AAEA,aAAW,YAAW;AACpB,YAAQ,IAAI,MAAJ,EAAR;AACD,GAFD;;AAIA,KAAG,8BAAH,EAAmC,YAAW;AAC5C,QAAI,SAAS,EAAb;;AAEA,UAAM,IAAN,CAAW,MAAX,EAAmB,YAAW;AAC5B,aAAO,KAAP,GAAe,IAAf;AACD,KAFD;;AAIA,UAAM,IAAN,CAAW,MAAX,EAAmB,YAAW;AAC5B,aAAO,MAAP,GAAgB,IAAhB;AACD,KAFD;;AAIA,UAAM,YAAN,CAAmB,MAAnB,EAA2B,IAA3B;AACA,WAAO,EAAP,CAAU,OAAO,KAAjB;AACA,WAAO,EAAP,CAAU,OAAO,MAAjB;AACD,GAdD;;AAgBA,KAAG,+BAAH,EAAoC,YAAW;AAC7C,WAAO,YAAP,CAAoB,YAAW;AAC7B,YAAM,YAAN,CAAmB,MAAnB,EAA2B,IAA3B;AACD,KAFD;AAGD,GAJD;AAKD,CA5BD","file":"post.test-compiled.js","sourcesContent":["var assert = require('assert');\nvar Kareem = require('../');\n\ndescribe('execPost', function() {\n  var hooks;\n\n  beforeEach(function() {\n    hooks = new Kareem();\n  });\n\n  it('handles errors', function(done) {\n    hooks.post('cook', function(eggs, callback) {\n      callback('error!');\n    });\n\n    hooks.execPost('cook', null, [4], function(error, eggs) {\n      assert.equal('error!', error);\n      assert.ok(!eggs);\n      done();\n    });\n  });\n\n  it('multiple posts', function(done) {\n    hooks.post('cook', function(eggs, callback) {\n      setTimeout(\n        function() {\n          callback();\n        },\n        5);\n    });\n\n    hooks.post('cook', function(eggs, callback) {\n      setTimeout(\n        function() {\n          callback();\n        },\n        5);\n    });\n\n    hooks.execPost('cook', null, [4], function(error, eggs) {\n      assert.ifError(error);\n      assert.equal(4, eggs);\n      done();\n    });\n  });\n\n  it('error posts', function(done) {\n    var called = {};\n    hooks.post('cook', function(eggs, callback) {\n      called.first = true;\n      callback();\n    });\n\n    hooks.post('cook', function(eggs, callback) {\n      called.second = true;\n      callback(new Error('fail'));\n    });\n\n    hooks.post('cook', function(eggs, callback) {\n      assert.ok(false);\n    });\n\n    hooks.post('cook', function(error, eggs, callback) {\n      called.fourth = true;\n      assert.equal(error.message, 'fail');\n      callback(new Error('fourth'));\n    });\n\n    hooks.post('cook', function(error, eggs, callback) {\n      called.fifth = true;\n      assert.equal(error.message, 'fourth');\n      callback(new Error('fifth'));\n    });\n\n    hooks.execPost('cook', null, [4], function(error, eggs) {\n      assert.ok(error);\n      assert.equal(error.message, 'fifth');\n      assert.deepEqual(called, {\n        first: true,\n        second: true,\n        fourth: true,\n        fifth: true\n      });\n      done();\n    });\n  });\n\n  it('error posts with initial error', function(done) {\n    var called = {};\n\n    hooks.post('cook', function(eggs, callback) {\n      assert.ok(false);\n    });\n\n    hooks.post('cook', function(error, eggs, callback) {\n      called.second = true;\n      assert.equal(error.message, 'fail');\n      callback(new Error('second'));\n    });\n\n    hooks.post('cook', function(error, eggs, callback) {\n      called.third = true;\n      assert.equal(error.message, 'second');\n      callback(new Error('third'));\n    });\n\n    hooks.post('cook', function(error, eggs, callback) {\n      called.fourth = true;\n      assert.equal(error.message, 'third');\n      callback();\n    });\n\n    var options = { error: new Error('fail') };\n    hooks.execPost('cook', null, [4], options, function(error, eggs) {\n      assert.ok(error);\n      assert.equal(error.message, 'third');\n      assert.deepEqual(called, {\n        second: true,\n        third: true,\n        fourth: true\n      });\n      done();\n    });\n  });\n});\n\ndescribe('execPostSync', function() {\n  var hooks;\n\n  beforeEach(function() {\n    hooks = new Kareem();\n  });\n\n  it('executes hooks synchronously', function() {\n    var execed = {};\n\n    hooks.post('cook', function() {\n      execed.first = true;\n    });\n\n    hooks.post('cook', function() {\n      execed.second = true;\n    });\n\n    hooks.execPostSync('cook', null);\n    assert.ok(execed.first);\n    assert.ok(execed.second);\n  });\n\n  it('works with no hooks specified', function() {\n    assert.doesNotThrow(function() {\n      hooks.execPostSync('cook', null);\n    });\n  });\n});\n"]}